{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "329e7f9d-6d0a-4f77-be70-6fa26e7c55a3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e3622953-446f-4c01-86a6-a76f8ce964f7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad1e0791-95a1-4cb4-a8b0-3598ef24b101",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4c96abf4-380a-49e2-b0f8-8a43bad7a03d"
                }
              }
            ]
          },
          {
            "id": "4535e96f-0c31-4235-bca7-1dbff0c79a42",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4aa5944-7226-40ac-9f89-4a63b5717476",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e14f866-160f-4c35-89d9-ccfda3e07d8e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "649635db-53af-4e57-9128-971c2199b14b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a94b994b-9135-4a6b-af25-4d3873444441",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2cc43a3-5e13-4087-b9a3-dfcde757f572",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e71a08-3189-4ade-9ad3-8bf35ab52bf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fc744bf-b0f0-4d90-bf01-c447318a2bff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d260daec-4276-4548-80e5-dfe18d9944bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1910306-eff2-4615-adf2-9378f03d8eba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8090c5e7-90e9-4e02-8a5e-f9785e4030e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f041658-4295-4b78-aff8-d6e90974e285"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c073d6a-08b5-489d-9a37-0854e619c9b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe634094-c7b0-4722-a76d-5067cc908ff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "063ed2a1-4884-449a-8ae1-ffd2f305a513",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b65c23b-07ce-432e-a867-7868228c325a"
            }
          }
        ]
      },
      {
        "id": "99b5250e-d678-4daf-b03d-469acbbd127c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd05e4bb-c7bc-4e25-aeb0-a828a307d413",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f934eb09-a9a7-48c0-86ad-6a66cd4d6212",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85386656-bd48-45fe-b90a-2fc5c460b1d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8d41fa-a025-4e9e-a505-b968cf7fd938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0471320e-f21c-4f60-98f6-c71c2aafd4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6d138f-b23e-4d83-a901-f8a498b7ebbb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dc9fa8-4144-4213-ae94-ab9907cfabec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96592cb2-bf4f-46c1-8c71-c111229d33a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a14c513-4ae8-4476-a4d6-33d0c1d2113f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45f0670-fd9c-4102-854c-3baa4d9bcd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "283ad0e1-cef5-4589-875d-cc05b8eb31dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5453b8da-7886-4a6a-b26e-170db24f7806",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c43ddb45-cdf0-4746-8ffc-24ea2cd217ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e745d5-26fd-44b5-a0aa-56baa6f92ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09a44009-f9f3-4452-baaf-f6cda3f6c9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28fb070-69e0-46c9-8632-3d13258ca88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5f2edc-03be-4eaf-a9a0-dd993b3afc9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e57d368-dcc3-468e-94d7-d18d58f955eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "321afc07-041b-405f-ae0c-1549843d2922",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "add7def7-733d-45bb-bba0-02d3424d0be7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4ec7423d-dad5-49f3-8ef9-e2e16e7857b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b9320c7-0a0b-48b3-8d8f-2b73986f7527",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cc125d9c-b702-4f11-b774-c616d9e22b75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9727089f-e80a-48dd-880b-8f8cee7f29f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1272ebfd-c76c-4a11-9d77-70d156078889"
            }
          }
        ]
      },
      {
        "id": "d43eb7ae-6861-480e-8ac5-d9e613392452",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ed18113e-ba75-4712-aee6-2734b1e96625",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13e2755e-5901-415c-9969-77b0838fa706",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e07e5301-9917-4a4f-8c1c-458df9b8e283",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99949370-ba4b-4945-b5af-757f6288ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4aca36-ab35-47b8-b558-88385fd5ff09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a21700-0241-4440-836b-ba4567a3f76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b5c6453-e65e-437b-8896-4d7b4bf17e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f711b634-55c7-46bc-8c20-4b5d2c4302d8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88902abc-9770-4b92-bbf8-21f9688ffdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3fe82f-385d-485a-bf9e-4240dd027f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a746050-6c22-4bba-8790-471943867b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd83f6f8-e763-4385-825b-82c710628a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291f8882-3adb-4aac-abd3-b9aa72bca8a2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2854d1f-6e5f-4464-8f4c-b29b77ef81e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa83a14-0b46-4601-af08-6b3d7cf903ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8cc283-7269-4012-b645-2623acbd9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "266fb29a-d0ac-424f-83dd-3efc664af9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd5e3c6-4ebd-452a-98aa-7755e5a9c26a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f60e0ce-858f-4e48-ae3d-3bebf22a6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b487e35c-c704-4ee2-a9b9-1d2aa9cf7a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40796260-836f-40e2-8e60-fbe8db950ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1166afd7-5826-44d3-901a-189fc60aaae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02a5a9c-9778-4e2c-94cb-3db9e8b601d3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9761253-2c2d-4823-b0f0-45bd2a9cb40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fdd684-4b1b-4f32-b7fb-f824300db543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c85885-03d5-4fc4-bcb6-06c3ee6c203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19626926-cef9-4bef-a5ab-e2c982937334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f4470-310e-472f-a9d9-b4ddb6cbe154",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70be382a-684b-4693-8a05-693db2c9d592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16140ad0-c8e6-498a-b17c-aa85ef0339bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197f3d7f-2eb3-4278-b552-b13a55c70e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2df156b4-2ac4-4c4b-8bfe-56aa859f2b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a606029-1712-4587-baad-f0120436f340",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7028f50e-3cea-4b8d-ab1c-aa13235faaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909dfdd3-2976-4818-a0e6-7422ea63849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af58d6bd-cccd-4a3f-9fc2-ea856f4270fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f6807a6-1729-4c63-8cf5-cad77a90ab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19913d13-eba3-4dce-b26a-8412138f09b0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d04fc7-f392-4bbe-8671-b315a3167c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830eb578-7737-4779-a49b-2f6492e5ba9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bbb958-98f4-4fe2-8e39-f3c16d046489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9dad7ea-7903-42f7-a284-1ae9e9c25060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f289734-b36a-44db-b5e5-dd6ccf98be15",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab0a56-013d-46e0-87bf-7da32733ed23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c892efd5-f35b-4525-aad1-1850add793e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021aca16-d995-4db6-8235-9df71ee09639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84c405d1-1e75-4ce5-bb97-225bf7d37740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8a701b-b0ac-4706-9ed5-ce6c7475db03",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47bc9b7-c184-4689-a240-7f190048ff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce40665-1b3f-4175-81bd-45eb57a89871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7718a24-ca87-45aa-93b0-d8edaea1b292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8508f5af-bb4d-459c-a1b7-b486658c6197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be1a046-4950-4dbe-a283-bf46a6cad5fd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba49e942-8e24-4b3d-8a38-e9b0ebe1871c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b30163b-f6c7-459e-94c8-547fee70eae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19af244d-b699-4cd5-a209-3eaa7ac4e806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21dc73b6-13fe-43cc-ad2e-352aa6688d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057adff2-8463-4106-9b7f-683f0639803d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e7fa6-d6fe-4f11-9c45-b70ba56978e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9c10d0-10d4-460b-93d0-27373ddfeb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb68d06-b11c-488a-b3c2-4e46574f61fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f01fd092-4b74-42fc-9ef4-1bab3d14709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8986be-7c8f-403d-84ff-d994902f478a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e719846a-998a-4929-b29c-a49e061e458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30a0711-4b5e-42cd-8294-6491b055ee1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7fe787-c311-4d02-b8a2-ead916a5ea3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7e8ac1f-25b9-4351-9c60-90a2aba1214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56599d92-7af8-4092-9b0b-fb0cd36a06a6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db69335-e163-471f-b237-64ac3ade3ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf588220-ac6c-4a62-bb32-15fe6c9dede5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974e5d5b-c556-44f8-9cb3-51cbfcae1095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d1b2d3e-c14b-4df7-857d-140be9a315ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0f38d7-f8e5-447e-90de-af43c6eb695f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894e8155-b2d8-4099-9e37-799af3fcad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d1098c-9a12-4417-8d35-a7c31b521295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93c4201-f4ee-452b-b602-c2c6d3123cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f9e58de-8206-4d9c-a2ef-0e3f9e9b7c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30f8eff-94c8-487e-ad0b-5a3992246e37",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c625201a-eec4-4707-93ed-569881b006b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a7d024-1ba1-4bdc-aac0-dbf87f2872a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116d09b9-14d8-42bf-b1bc-d4e6bcc41643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63987ecb-3ba8-4069-af65-670610d1e965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0280f7cb-1ea3-46f3-9340-49ad53567514",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c84ccd-cb89-40d7-b328-7ad1e3583fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a0176a-5fa3-4a48-b02a-0c2af94fadb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28df0ca0-e1ad-40cd-9b4d-cc8bdfdf4cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b16e8406-77bd-4efc-9a6b-8a60c3bf454d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2abeb64-23e8-464a-bc54-2f5cb34fd750",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2232acc-284a-42ed-af12-a42e495e9077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f96fc6f-f9cf-43f6-9523-bb7d0042dafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452dd29a-0da2-4c40-b737-40817611f6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ca6063-e71f-4276-a569-e397fa4f6b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9caa89-c984-4c6a-9f63-6bceef738e74",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0b4944-bb31-4f7c-81d4-106d51c14a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e420af18-7efb-4614-818a-046b2ee5c774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241438b3-7126-44c8-8e79-07848f58936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b3f8b2-2d3c-4068-bc40-d9145e1767bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1532a86b-c30f-4ede-9527-12a807374cbb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e719b52-8f39-4f7d-9279-e98575e003ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9f1302-ca39-4550-bde5-46c56e097e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a84014-29b8-41b7-bddf-55c3c15fa120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb975f32-9f17-4154-98ab-9740a26c245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727e6c97-dd34-4d61-a605-3021afa055b9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eb8395-1962-4a84-80b2-4a865c1cc55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aab1d63-6e49-4f7d-aa60-e943c8050530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785e6c5b-cbc7-4070-9b3b-e692f349c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "784943b5-76aa-42d3-9401-a66879b7a62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45451ac-dbef-4d61-b520-a2a8ae4225dc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cf32c9-16fb-47d7-ba8d-fd18461d60e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8adb4c-41c6-463c-a61b-d8252370379f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e50c8e-228b-44f1-88aa-a5d653a4f168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39c046bf-076e-4fa3-bff7-9fd3c882f596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cde69b2-105f-475a-b3d0-a6670affe10d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f4d20f-24c4-454a-b8b6-614a43323535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caa0a2d-95c8-4c71-907d-2539314e17dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97df6b79-f296-40bb-a77e-535e488352b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9b6f1a-8ef5-4f46-b1ac-b1da8bb15d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e515b4-2837-4756-aa53-598cd34ea36c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ebc332-db19-4d15-a5a6-2e2adad96944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7688ca16-e3bd-44dd-85f1-d148e2f08b18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408d6dad-3ffc-4e32-894b-fdeeaee5277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81cf2c5d-29cf-4cbc-94e0-411d78aec9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3d7f7b-ed82-4f11-b8b7-abf39b45d7b8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbee642-0dac-41ae-90bd-6bcb513433a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f2ee4c-e4e8-4f0c-8063-cc01c1c724dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894d769a-9116-4d40-86c6-7f0f6bd1b63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "121339f4-5daa-4abc-8038-81741bb9e1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39165479-2468-40ac-a2bb-0eae8bf78499",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fdd6db-fa02-4c47-9cf3-b765927892e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91595f8-760d-445f-afde-9c6ff13b2d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e623c9ef-da78-4e6e-920c-952264c62b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9709d36-d8d1-40a9-8e69-842e6b37dc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c4a7a5-6509-4e9a-84f9-deb84cd8a945",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fd3f3f-de24-4fd3-8f97-c9e78d29676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824fd4fb-7c14-433e-a188-e00020547a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d6199d-f02a-4dd4-8c7e-ee41db89ad90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f636be66-36d8-4f13-ada1-33a796db64a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8141f7d1-77e5-4e65-b86c-bd559297a2e5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad20093-778a-41af-8b36-0640f1152cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291634de-40be-4aef-9fa2-0fab833aad25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b960daa-50bc-4d0b-a38d-98e96e28497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41140772-5da2-474f-8fae-334ada2573e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715a945c-c640-4a4d-98b1-1f9de5d39e87",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c5fb5-ffe8-4a08-83bd-98cd5d2248fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87abbf33-0b00-4ee3-a602-36b32065765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a89ea-ca56-4ce5-b999-3dfcb74dc21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad8edfe-6835-40e1-bdce-dcb30c487443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22dbbb7-16cc-4f17-8679-bc416ad4bf70",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40072243-87ee-4390-872f-71dfe5683d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14f8775-52d8-47cc-8522-3c4fd5169000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464cd9a3-986c-4be1-8a0a-71c67d48734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bff5a7-c4eb-43d6-83a0-fda19935822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b75c94e-6fc9-4599-939b-cb793aae96b5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3249ec93-72c7-4285-a151-ccac1e1bf779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9f46e4-bd91-4d39-84f2-23ae8ee7571d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e4825-5a9b-404f-933e-e0e81164f446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5486d99a-2a25-4879-bb7a-cb01af2d1756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f0b64c-7f95-418b-8a30-b177bb71d268",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e72fd4-8020-4d62-800f-266a827af0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b04349-b88b-4125-af6e-156bd67a4433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2871e3f-3c91-4464-a2fc-96e8628e14ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46745a9-8c0b-4e9a-82e1-1846896fdbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86d41a0-6dc3-4b0c-9db5-c566781a5d9e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18536889-d4a0-47c1-b520-a16329e2aa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d76ff8-ea3e-45a9-b097-11012d5aa9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f485259-7216-4905-ac03-c210141caa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa69669-a418-4d9e-ba8e-83824f375ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992a9dfc-c230-4e2d-a5bd-eaa5783f6888",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbc1916-b07d-40cb-8471-459fd4ecd545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d376db44-88dc-45d1-8c96-c50838d5b658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc4f9e9-7080-4eac-a0df-bea25de90227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b7344b-c80d-4f7c-91f7-cd9234f75cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab902f25-9ead-47a5-a55b-80255d779553",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dd724c-18fe-476f-ab1e-2bd135d85838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f06105e-d49f-40b8-9843-36db07557e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c3492-e05f-4c18-990f-4097398f0380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f5cf88-9d48-423f-a301-b08fece15b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe79b53-1bc3-4587-bb1a-fc72ace7f4e4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017b7083-1c80-4f1d-8469-b704d9ee230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c216bea-5dc1-4941-91a4-d3067662ebdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2885ffd1-3349-40a7-ba57-50c256c02f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd50c09b-51b8-44be-81c5-edd7c52c71c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baa73d2-f804-4c75-8bf8-717abaf8bf11",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49dfab-8455-4b0d-bcdf-b969cae51d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d6dbc1-ef6b-4410-b585-6e8c95e30c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3cbc04-d227-47de-a2a2-8efd1fe5b410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eadd06cb-e101-4e20-902e-9678107417d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726d010-1161-4d82-86ca-d71ca088635e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5089a12-1d2c-4a9d-adb4-df63d6cf8cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939acbb9-684f-4974-b638-a521238ecabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e611a9-1d4b-4882-b47c-5d476c167abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c07d9d9-dab3-497a-b853-7a51be71342f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d387f6-8b4e-4924-9db3-98dcec9b64d8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06707e7-2152-42f0-b525-68bc5365a5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4890a6d9-640e-4363-8b1c-92c294c67d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff859d01-852b-4e44-8f52-1c3bc96b2205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4054dca3-43a7-4e50-908b-d4e33a7bcb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd193b-af72-4115-b95e-4cb5f85ab686",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab68e1b2-f164-4842-bb29-397ab43bc665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f52052-2555-46ec-b181-298101c67095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991ffc9d-cf9e-45c4-bc52-96b34edcca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "35169393-dc2f-495a-824d-d61405918a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3572f7f0-9a32-4d8f-b078-7e5ad364017d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5985ff-0128-4791-9ea3-bf38f9f32ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0070321-0050-4188-ba87-3c619ccebc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0e3f8a-713a-4ffc-a471-1a515a82ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10c5ba1b-a253-4c25-98ce-a93c13e1519c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b424087-7a9e-4131-a74d-db4de6aef9bf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f64888-11f3-4581-8dbf-2d93f2aea4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980dac15-01d4-4ffa-9556-4d9139f3f154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e05ac81-eed1-4396-9009-2d91564d052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9c246d96-d3ff-4e55-9570-bd0663ce1fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a765a2-935a-4d9b-a743-9bebac9f7409",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a347f4-39de-4c21-97b4-85295c929af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425ad4e9-74a6-416d-b0c0-dd54ca25bf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7d663e-31e0-4e02-a89c-fd7da26de3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "08002d28-ef81-4c1a-a2b3-eb2d906a28fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4970001-c03d-4dec-b9d5-30e59ff8ab7c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e6b7a4-dd96-4eaf-96a6-b915faf0a312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9b307d-9359-422c-979c-bdabd8c2fb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f07ccd5-532d-43dc-8f8f-beed2eac021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fea6641-1614-4b36-83bc-6fd04ec805a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a50da01-9bfe-4612-adfb-c0c2d59b190d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd5b63b-18b9-472a-b1ec-384297ebcd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1172a89a-afb4-4129-ae10-8e4770c08201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e49e85-3e5b-48e7-92c8-0c1805b37d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c347fd-b30d-421e-abe1-126bd6ab4936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8cfc3d-4877-4031-b9e7-60663d7bc3d5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a9b65-e0ec-4b00-acf1-85f2488c9cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b483bda8-e2e8-482a-ac28-4fa6ecc1f16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0647c2-9fc6-4720-8c88-de279ef663cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c535a78-9217-43cf-8dec-bde660b55119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bb6451-b45f-4926-9756-d412b9283905",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9b2286-74a9-457b-92bc-3f60a3ad7a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264c838d-c690-49a9-9690-6f9667827877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56a7df8-383f-4e41-a66b-c6f9ef6a1260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "657e028e-88e7-4c2a-9cad-4c832d025b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaf929e-2dbf-4455-8b01-71fed303ad0f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305805b6-c674-498b-aa85-12f895aaba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bf1120-f8e3-4dcc-9efc-b88d0252744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c8172e-b2ac-4fa8-91ec-39493592584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7403f9a-2fde-45c1-8926-ba39641b6d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d91e9-1a75-429a-ab33-dde4ab6ce27a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dd821a-abb8-443e-a935-fbe8a0cfab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1358f8dd-d789-4f5f-9918-73f606a892e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8ffbc2-c44d-4ea6-9d81-4af609aa7ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ba4e57-3d1e-40e9-8ea2-d6b484d72645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25845a11-be24-4ee0-9d69-bd5794b58df4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c042abed-e4b6-4774-9bda-66738f00ff3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91937078-296d-4e9d-8728-3bfded1cc239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b6aa4d-0895-486d-b14d-05188d8954a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7f8eb0-d59c-4a8f-8ee8-c4bb67f05106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f72087f-c879-486c-84ee-b1b763423947",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bd4685-20ca-4c99-a6ba-b566171c992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2104c2-6448-4c99-b201-313c0c5974d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f310d1bb-ca9a-4abc-a085-847f15ca1f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c41a969-fe66-40a3-b2fe-3b93b8b304af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb1d6f9-4d63-45b8-abd0-0462d038a10e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de615669-0db9-45d9-8bbc-7e122645d74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5627fdb-6bb0-4a6b-b89b-7eebe4d31e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d847f2f0-eb35-4af1-a928-918f58a01150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a59cabc0-809a-4e17-90d7-9428cea620fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7984ac14-958a-4c26-997c-688c80ae382f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49772628-a670-4e4d-a04c-f31193ddda56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee6dc7c-fe0a-4295-aa99-19630148886d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaae7f10-3b26-477a-b675-4b8c98ff4f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf64451b-cb87-4286-9bf6-c99cb3797cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc65539f-866b-44cf-bdb1-8884c6ee674d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b04c43-83e5-4620-9160-a4093af3830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea3522b-bd57-4b28-8bd1-268bf5ea8659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecbc017-55c8-4ed9-a7e2-d3348193d768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e3a1c7-3d6e-404c-abc0-c8ad71cb4d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b95e169-616b-49c0-8766-f5e6aafb1cae",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32b42bd-2b5e-46ac-afc0-60769e8c521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadae1ba-c5d7-4e4b-90ec-b7b4de500674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec1869c-9da4-41b8-a80a-f2649ff2f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e90a4d0-de86-4ad1-bf82-6776a6899303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be66748-4bc4-451c-9d03-8dd080716fc9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab4c4b9-8c2f-4c9b-8a6d-762c80c6296a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c846bd-82dc-4bb2-80ca-eca28dfd8967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad3cb4-f06e-4bb4-becf-58b749dfe25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc47d70-f5bf-4671-87ef-22e6f2b4fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3c06d1-26d0-4d38-92ca-4d4cbba6fa34",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93e3f91-9d17-4bd6-939b-0be73ff9af57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e505e38-d578-49c9-81aa-d22c093ba73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bb4940-6b59-43c5-b34a-262ae99c9f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b39b18-1929-48b4-a252-c6345c42dd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea7357-5e6b-44c1-9900-6922fd12af27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e36831-a51f-47ff-9461-973cd422e509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8f91a2-b3a0-4e92-8705-03eff92cae09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649da88b-106a-4cbf-b92e-c53cd26b945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a316ba6f-b77f-4fbf-ad93-3db681de6268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acde592-cf4b-4691-9ae0-244a6860bda3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b9ded3-0255-49e1-a2f7-527b541ac3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09169b1-64ee-42ff-acfc-4eee455452f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01efd21-815c-4340-a8ef-75978f0ae044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d49789-40dc-4495-9337-803103f37922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21274f5d-aefe-45c2-91dc-986a074434de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e564e107-ccea-4727-9d9a-1e8a1d30a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf30ca0a-de8e-4df5-ad95-3b90c4b8e16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6fef23-3711-4525-afd8-6c8ecc911ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c534c0-0964-4ef0-a811-fd59befabb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb58e0dc-49e1-44eb-a0f6-f8d27e9cbf8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c906ab-c1a9-4981-8f6b-fd18720d9a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42fb8fb-3858-49cf-b2ba-ea90b5479c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73db2c6b-828f-4356-9c0b-9ca5ed044697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6fadde-ed51-44e4-a636-0602d3af47f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d634c6a-cc5e-4f31-aaf1-cce0fa35c2b9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda21f9-b00d-4b48-bcaa-69cfdf21f632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a109923e-a253-4fdd-b7b8-6f7e4acaa323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02e7419-7af9-4904-a201-b62a55af355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc318ed-633f-46e5-95d6-ea7078c1ddc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ffa009-fc20-435a-8fe6-392fb9a33dbe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbddad73-86be-47af-bfd8-0749a59a2c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239655dd-7dd5-4ed7-be6a-3748facfb78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e778a21a-a636-45fa-bbe6-8c7d8d48079d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a69cc5-cd01-4b22-bb25-4b3cd3445897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b048e217-ff92-488a-960d-ec62ec8039e7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30520d65-fcb6-4fee-b120-acc24e8acb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5c8615-24c9-4aae-9062-6c6e7433143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fd7ce-b47c-44af-ad29-28d84712a07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c8b17f-58ed-46e2-a57f-1859aa1dce94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8900eb0e-ee1c-434a-bd82-c62265faadfa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b0e0c0-5a5d-4617-b685-aaff3e74db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49393d06-fbf5-4f4f-a04b-dd0b103d7c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8a9395-3fc8-4f4d-9283-e15ee0890245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d59ea6ce-52f4-40bd-bce1-3284d149eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1347343b-3b2c-4015-b18a-c8a063648fa4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132be9f6-c128-42ef-8e40-cc2476fdbfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e0618a-1a75-454d-9cd0-80a4fcb3dde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30be3c3e-a840-4db2-bcdf-313042372670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df2a3ad-fb2d-4344-96bc-67792e0d7766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8997d0d-8981-4848-b5d5-a8e9778354ab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b74b54-2fde-4b34-a05b-6d5b930ffe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069e3ce4-38d8-4819-b6cf-adde7f91cbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a819641-428c-48e1-9468-dc991ca750fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "180d614e-0319-4d8d-bb2c-91537d735bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db299a1-8da6-47df-81d1-b1f9e649cb65",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8587a14-7105-43a5-a14e-f1126f00fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16c9f42-c2d6-4787-80d3-9fab75e9a738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa28dc13-48f8-482a-8d3e-a9068c2f854e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "123faad6-8ebb-4dbe-8a86-36f7d318c357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658647e5-0977-44cf-aab1-1816df567ce7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7a383d-2b5d-4763-a98d-bda337c2e53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae387252-045e-4fff-92ce-7f8496e93eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335e3bff-cd74-479b-8ead-85d2b76732b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa0b68b-786c-4291-9c7b-8ad525140ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9854808d-f02e-4d78-802d-84915fe1d37e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ea9ea0-6ac8-40da-a84f-9ae1a6164526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6878c14f-effd-4884-bff2-1a6775fd2bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253d1614-6d9a-4d66-b9da-92561c58ceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecd1093-10f6-4f29-962a-1ba9793d7891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9bcf99-1189-41b3-b79f-fb044a955f4c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5135e964-7f60-41b7-a331-8f023ada78c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f015d22-69b3-4c06-9fcd-2f8cbc83e266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4a90cf-bf0f-442e-83d7-43ec459543f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "915e549b-a340-43a1-b260-7a2f3afd14a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e6714-2359-4c8d-9dd6-d4030a45f478",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da394907-c813-493c-99fd-9d63ea6f9897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddb4072-fdcc-4fbd-87e6-79d001be7447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6371f781-ed7c-42bd-bbc9-e54306468090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8faedf2a-0b27-4480-8eb6-4e4f91fc1a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4217db68-a0b4-4b7f-84d3-8f44b086af13",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a52c4d9-3da9-4d89-b5e0-39273811e515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8c5f73-84e9-4f4a-9fc4-0f9cb94749a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bde719e-840a-4e5e-a4d9-69123cce33a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dae3481-8bd1-4e42-af84-936b779701a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c81f48f-00cc-4390-a0e7-3cf76abcb052",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b31b68-f70a-4194-978a-4922878da4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0412db8-8c53-4afc-9ece-295ec2bfd1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ddd9c-958b-4ace-9055-dc36c93b8ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "622dad02-f710-4600-9092-705db1c6e6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e911f7-c2ab-4e42-8cec-ae597e704ed3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38d732b-fa68-4c3f-b42a-3df3f56de3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91298739-1684-4e3d-b0a5-30b3fa07fb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d901c1e9-acf6-443a-bd24-b647e5e62a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3579398a-2152-4528-8054-e60207ae054d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c34fe-bd29-4663-a78d-ccf7c5f7d5ac",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1e14bb-413e-4689-8870-4a66db6a7bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe01f84-f5e7-4f6f-b65f-acd607fce4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79343bcd-e636-4d9d-aa4d-3639b42b646e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f802c56c-d69a-452d-8ba7-a40197031956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6c64f3-4083-498c-b8fe-840cbfc6a782",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71206ba1-10af-400d-b577-db8eb8215f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749f7502-87f4-4c80-a2c8-db2f4e41a4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf354f8c-16b0-49c1-8365-20db442dc023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8016904-84bc-4e74-8f90-c4340e8b5ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6851bf2f-bad9-4770-b4ea-de9be4f33b4b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496500ea-fab1-4525-bf48-b77a324febab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1008495a-8cdc-4f28-954b-13da30f86308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3d0bb3-36e8-4566-8d20-c116f27a9118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "702b57be-2160-49bb-91fd-22bb27299d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1782034-16c7-440b-bb4a-db1527843e09",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cca950a-5c5c-4007-869c-4576fee5d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3fbe39-6835-4686-93a4-3bb8299ef5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7719d62b-43b8-44af-b774-3a27e8869363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4f6674-e6e0-4ba6-bd7b-f5161f89ee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c486a70d-833f-43fc-80ec-8d67e50c0e9e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fdb765-34f6-424f-a0d9-a99aa1b3ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969a7449-439a-478b-abfb-60c9eb0c0bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d861bd15-9d2f-46ae-ae5a-5d515ab130ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "847ab036-85d0-4f9e-82a6-52779517d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d7bd59-240c-48fa-8597-cef9a1fb4574",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7097fed8-2a99-4a89-963c-acd908e45567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93e7756-d2d8-4e60-bff4-7bd5494e7726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3f58fa-2a6a-48cd-bb79-b7e5c99e3324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0c2fcf-dc21-4719-a237-79f22ca0cb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4909df94-9e92-44d2-a613-b1c5020672a0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c4d58-14ed-4868-8bcc-480b2c57a6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b20c1f-8d6b-410f-b2ab-ab3df2b48bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c66b5e-6ef1-4e81-8dd1-56e897124f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c463b26-e83c-45d1-94dd-8f19f2a0588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdfc1ab-4b68-46d6-bdc9-83ba3706630a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32712f3b-02c1-46e8-8440-cd6259c10f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72f246a-649b-444e-a7a0-fa9eef39f718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a0107a-641a-4088-9a92-adfcb2b396fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7ed3e1-b959-4190-be76-6e2a3d2a0721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9207e1bf-6d59-4acf-834d-1fbe08a3f2ac",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd3159c-f0d5-4e24-9d00-752f17b234fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcede5b-6f1e-4767-b4e3-e45d5c16a07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dd311c-d7b4-4dfd-a7a7-55f4395b467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9978c8-adff-4b7d-9960-5abd19822c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0914ce60-b026-414b-a50c-9e5661578f22",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947010bf-107d-4011-a4c3-b1d25bbaebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f21a29d-e2be-4213-9fce-8377e76fe6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c894ee-4efb-406d-94e0-7ca754e812cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72bb10ff-e94c-4a7e-b0ae-2631d2ff3a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8930bbe6-9b89-4e39-8e25-ceb58e8639b6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa400fbe-5482-4180-89ed-348d583f676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a46752c-1337-4636-99dc-dd305c982ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf591d-bcee-433c-b7c8-f35b562bb143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96703da1-4f74-455c-89b9-6366e785217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf4fb3c-b764-4e68-a434-551eadc1f1fa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dbdbc1-ec3f-45d3-8475-d250afa8832f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed82cdf-a677-4972-a351-d69e7cdc7967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503ddde6-8af3-4289-bcc1-96736f38baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23df8381-1df4-4d12-86ca-ce4f8c92154d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5a7a9b-d89d-4235-a2e0-51c89dce8caa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fb04d0-d426-4dc8-8a99-0a1dceb6e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f09412-1a85-456d-917f-dd5aa3a101a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc733a7-37ba-417c-86b4-3659ec88dc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f684f8e-5576-4417-beca-398440b66b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bab636-f226-45d4-847a-d4bc42063e80",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2db5b9-cf6d-4c53-8b70-dc4c51476456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7007ae83-26b4-4186-b895-3670893b5dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d77df2-1060-4f4a-a3d3-064645687891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd6482f-3c9c-4474-b866-e66f82aa56ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf8cb75-1b94-43ee-8938-97573f3b843e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b1338d-9daf-4fba-b9f7-49cedcefb055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e6ce38-7483-4679-9d17-9c63695cad4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8deba5-1886-4eec-8068-dc9ec7094d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f6d0a0-73f7-436d-8690-209886a64044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21679f6c-548d-47ee-9605-d75e56ad9b72",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeab7c0-95b9-4174-9967-1c12badf3505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e86822-955f-42fd-a2e0-8f702f85b090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ab0716-8502-4952-8465-fd1fa01f50ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3df8468f-0385-42a1-b2ea-45793e95516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dd7745-7857-4064-b904-e91d781de15b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148f2240-7849-4d0a-9e97-f83a4f66e796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29f30bf8-0e0c-4d4c-bb54-2712de8544b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b65ab5-ac73-4049-adf7-fa7bec7a5610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8108dd94-1da8-4093-b391-363ede4087a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ada5898-1947-464b-96f1-b56e04449fa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41a67d4a-9ffa-4b43-b960-7fbf6e6a07d5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4177d1-5b66-4d05-8351-b19350ba3d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6641224f-c88a-4918-89e3-dd16d01a29cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0ce82e-c16c-4808-a9d4-0962e6b85ed1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d7f771-9034-46cd-add1-5acc6be96f2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5f9b025-4327-4318-b130-d76377a17486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db8024e2-26cb-4d4b-b2a6-b97d3e0b6be6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbd5cd77-2450-4ebd-b182-a45275422c26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38266e8f-80fd-4fcd-9e21-e2927bcaa16d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa891f72-5a2e-4ab8-9a1b-d3b75526fbd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7150dc9b-813d-4e44-91ec-562e8c8df742"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b9ea7b4-4920-48ba-a2f0-a437ea91b3ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "143814b2-02bc-4118-8adc-5ba8b96edfab"
                }
              }
            ]
          },
          {
            "id": "0bb4c820-0a39-4578-9735-090a67df0bfd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62b7a603-6bb8-4fc7-a3c4-d57c2a1b435a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d9a9ab42-9bf8-4f50-a464-d0f4538d3234",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870e62a2-9ca0-4b16-85fb-71dbc3cd7efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a806b6c2-aa48-41d5-b01d-4ceac669f0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb08dcd6-1171-4ee0-95ab-35711bc0a443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4352101b-78f1-45e9-8be2-fe598634381f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71bf65cc-791d-4066-a83a-0456b3a656d0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31e15427-b26e-4071-b08e-85d988171940",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79502cb8-3ce1-4c03-9e3a-c70bfea90f26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "138065c0-7ffc-4b07-8f32-dfe34e55842e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9dcafb3-263f-4ca4-8fd1-71be87743ba9"
                    }
                  }
                ]
              },
              {
                "id": "eac71791-5376-4a81-a846-e82dc44fc057",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ebb6a94-f867-437c-acd3-2ee8a20a3f8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4666d08c-1318-447b-b643-98a4787d0fbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a53742-2a52-4e64-9345-07a84c6ff02c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d35db397-753b-4249-a20f-80a2564cbcd2"
                    }
                  }
                ]
              },
              {
                "id": "8a4e6b4c-305f-415b-90e5-f3e65097ca2c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca286573-8409-4ed4-8bbb-d949f335089d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a32ebcb2-a976-4896-83db-2716902d73ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eeb4e45-d8b9-4fee-8cd2-5abcf3424299",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ce44e6b-655c-456d-a119-c064402d33a9"
                    }
                  }
                ]
              },
              {
                "id": "95fd0170-3503-4d93-be1c-ec66b23d47d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc29e520-0008-4ddc-86a8-e993e4162dec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0157fe2-f610-4d9d-a934-5bd8355cbb8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b94087f9-9b32-4b3b-840a-9f97ec4309b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eb7d3291-ef28-463a-a201-80287f52ae6d"
                    }
                  }
                ]
              },
              {
                "id": "42bf75f0-000a-411a-85bf-f1b862903dfb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "627b47ad-731e-4300-b85e-f300b46c1bea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "012b9d8c-c293-4b74-8f38-1cd0aa0cbe7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f06b00d0-d178-46e9-aa4e-231f09817e03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7ce2f623-a9e0-41e0-9c20-f4032a5c4589"
                    }
                  }
                ]
              },
              {
                "id": "78e2e68b-ace8-42fe-9b66-3fba220d2ac5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10941b60-b875-4d6e-bb70-363f7dc180a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4101ffd-4885-4bcb-9af6-2dbf30cfd927"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c70c44a5-a0f8-4967-8c77-f200cbb97a11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67393e21-e1c0-4bbd-800f-cfee28a47dd1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37ff2945-1e1e-4c11-aed7-a9fd9f2ffdc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d14e737d-37f6-4fde-9090-4f81717ead13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e95f6ef-6f24-40f8-bdd5-20d97d5b89ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ff3f7b0-08d5-4bf2-9dec-a479bbbe81f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbffa094-bfb5-4f51-bf50-f833d193e18f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d71ac3c6-61c9-4e00-a839-a33dee9a85e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbc2195f-c844-4991-994c-32bb05b5d42a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbcf76d4-5ea1-4578-80ef-ff84eb20f104"
            }
          }
        ]
      },
      {
        "id": "c7d9113c-1ea7-4e24-a442-263bbacd210a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03fa938c-2149-4b17-94c1-f5a80d4e026c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1221161b-0c39-4e9f-9ec7-2c0a52add6de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b0432ac-1cd3-4243-b11a-1f65ed8d8922",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5c741d-6624-4de6-8384-453400b73cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac28fd8b-f05c-4f1b-997c-3cfc4ff7b69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55052048-b78c-43a7-9912-abc378e2ffbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3ce677-0eb1-45c8-8e03-4d094b50b24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef2df99-6350-4c28-b341-c0da406dfd85",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43cf126-3c24-4fb3-9968-81dc4cdda59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447bf83b-3e86-423e-9027-3483c86ace70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b414c202-1b0e-4be0-92ac-8208c6e30a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e082c53-1978-4b6c-bfe1-13a4e5a6d08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f05094-d286-4506-91c2-5e2e1511fe38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6803822-b861-48d4-9808-9cfe46d9c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8307be30-403d-4785-b3e4-457953f69751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d615300c-55bb-49c6-9dd8-91f22f29ef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf08dc81-2085-4754-8fe3-fc5fe2c86fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab2321c-3754-43de-beca-bedccbf5d5c2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544c6346-df67-4f6c-8772-08a464a1a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6b8876-13b2-4735-990f-62078358bb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a82fa7-9b8e-49b5-81b4-552a682cb4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8d5821-c376-4429-8ddc-a3d1346b1736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b526728a-450f-436a-868c-8111b72af31c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b740bc-f402-424c-8810-a82bdde3b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c615c8-6ce8-4e04-bb83-6fb47e110ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac259c0-b714-4f58-a438-2a4c2e712f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49bd9765-bfcf-458d-95f6-e22624d485c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26478377-a2dd-48b7-b6fb-e70e84cdeb73",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c319d39-9ca6-4a1e-a408-9145682bbb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff87c091-0fca-4ea9-9f97-be5d8308e533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6b7ed0-67e7-4d56-9883-1f74febe2814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63afc90-dfde-44dd-8537-6853f0cdb0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ad9db9-f405-49fb-87d0-5e220c14c2ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bf15ce-13d3-4b91-8eeb-d828aa22ce70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e17e44d-5bf2-4d1e-8eb8-e860ddc4a183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83207165-7972-48b1-8d47-075dd0dddfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba3cdda-2cb2-4374-8d81-46ccfa345acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343f5bad-e591-4bde-9a79-6da9e47d3b99",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec9120b-69b1-47fd-95d3-d511ba7ca3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bc67bb-454d-446a-9506-c08a092e8969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01480669-3d4c-40dd-a37b-1c2e881c5eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56847b99-2845-4f91-8ebe-56d1506fd5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e81e5-2b4d-495e-a7db-b4502658ddfe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a3c8bf-5b38-4d70-85a0-d40be67e3287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0464b5-7395-4cf4-a9f1-c9b563936323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a7376b-7e71-4c07-8320-01672a7c9995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c5757a-97e4-4aae-90f5-f9e5375922fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e26de4-22b5-4d7b-a440-d0498445b18d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dfb3fc-df6d-4279-8f9b-6710ffd0461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc5621c-bd57-44e6-b192-1296430058ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391534b5-65be-443b-8e9b-e5b280d67b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "743233b5-9d32-43d0-b16d-7fdcb379c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425d1809-16e8-4787-80fa-cc19f438f73b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62542d9e-43b1-43a7-8721-7b8b5643b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94eebfb4-50a7-4254-9634-595af22d9d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d0d0f2-26cd-4ec0-a3dd-32a555773b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9132aacd-a5c1-422f-b294-a2c03032ff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5952047-4bd0-4d2f-a28b-73772e6ef98d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e339d79-af56-46fd-b6cb-95100e5dbc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0313b6e-d3df-4f9a-9408-c0626bceee25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9b2cde-1b7e-4f89-a6f4-6ab634a78b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed62b13-7b25-4128-82f2-2d5c5b906875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c705e609-70d0-4e95-a460-52734d271e39",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea09395-b4a6-4be7-a8c2-cafd7c30a339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524815bb-ca5e-4a3c-87ad-473afe123df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e411374-8c8c-409a-807f-96b5e0cf01eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35954c9-2c9c-4134-b50c-9fcfdc325caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda4c77f-af7c-44bb-8bbe-7edd8494f04c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6267a896-bc64-49ac-a792-fff771bd8d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cdfeab-70e9-43ae-b2cf-df4fac5675a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a046d817-da2e-4b5f-a6a7-7b834629fe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae99c1d4-04bb-4309-a0a9-45e944c77670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54e06c6-5d85-466c-a12b-18478b563507",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813099a1-44d4-48f3-be08-aefc021a2300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45aff764-0899-4056-8875-f498575c95eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0866d4a4-cc1e-4ef2-839b-c948806ad0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "76aece89-f483-4575-8324-1e084bac1d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bda850-5372-4427-a200-570f87ede24a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a2ca67-4e91-4cff-831c-cee5796fcdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b585c4a-2eb0-4c17-a67e-c3ccdce236f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e183cf25-4f00-4719-a438-0bc2e8d45b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f4c21a-e099-4d1f-b6e2-d45129b8ddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99401e56-1c4a-4a75-8531-3865740e4b9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3642cd-5eb6-44b0-ad60-0e2cae55f245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dc639c-f721-416c-b68d-7ce3e06b99ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943d44c9-c6fb-4866-b58c-28a37a4da0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c2cdf5-4ae3-4a80-bab1-5da6f01ce217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ce9017-8e1c-41db-9f7a-d6316c471e2e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ca4c7d-18da-4582-b936-5cb936684d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7ba68d-268b-4d3a-ba0b-9cb381a00efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f7e678-acbe-4d89-b98d-357b11fcf2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d907bf62-e1b8-4f5f-b96e-e9535ce0d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4277eeca-c406-4099-a34f-17e571f75284",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa365673-91fd-4146-9ee6-e521f5c5b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca290b0d-9b54-483e-a848-0d26be603b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380633a4-5eba-4b11-a0b8-fc47f6e41bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695e01ed-904e-454e-91ab-068f6be72920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9423771-953b-4f94-b6e9-64821b98197a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19aea4b-5551-4537-a762-3fb1edbab093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c3e801-9874-42b1-a4c8-435cb5840aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545bf88e-6a74-4ee7-a617-1ac524910c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03316d7b-c87e-480b-bce2-fc65366e1b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb54b012-6156-4c9c-a07f-10c29fb99b57",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4402afe0-1e46-4f6c-bb49-4a2e2176e599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba791e56-2135-4689-9e5f-183dd7e50d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd173d3-535b-43f4-9b84-3514733f2c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8741e0b8-e541-49b5-b63b-300058d5bb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d497c40-d91a-4d05-8834-ad1fea497314",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09913db-3d84-4371-8030-01438fd44d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435e292f-a798-45b9-91c9-adedf87c3e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca41054f-4f3b-4b70-894d-1dd0e6595172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddb3de2-bb08-4cfd-a86b-5de3a5890dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47994711-d3f7-4733-9720-a68fc6189f81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616375df-0b77-4da8-8882-e56c49d3d639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c0686c-6346-46a6-9aaf-b1b282e63f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a78c69-bfb6-4cb4-9cf5-c96e90e2e73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a21ab7f-de67-4b6f-9b00-284d85a81c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19155059-3493-4040-aa30-765edbd857b8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bf03c5-2d91-4501-8e42-45a39196575e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009d84e6-14dc-4098-a992-1e96c5871ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59e2015-9c36-41ca-869f-b01968ce6417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c08775-fb51-437a-85b6-94b1b7b80d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa366f21-b76d-4358-849c-1b32b3e2e4af",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a2c7b6-4a83-4b6b-a9d5-0a87cb997cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da700dc-3290-4e45-8791-ab7911aaf099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6654513-e866-41ef-a4f8-34fa09ce3c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61d451d-0fab-4217-9760-b2dad2e8c19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452490a5-6408-4f8a-86c2-0f2d32640c74",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cd7c0c-e57f-49a7-8a64-dd1d3e875177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdf708f-6062-4400-99b1-215435ddd3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3710dc-fd02-49be-bd3a-a75704313cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe25df6-82f7-487e-89c2-7a4202aa5995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343def6-3c2e-4564-846e-e96bd37872c9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a104bb83-e50b-4f28-bef7-d2153c9a0960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb95366d-4e8d-436d-b6e6-977af0577229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4da7e71-3057-4aff-a095-1ecb16f91207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4661ecac-a997-4d97-bef6-a4547750317c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e95c78-3af4-4acb-bde8-ef4937f6092f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ee09bb-bddc-42e8-8c64-4b19bf28cdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383fe008-e1e4-4731-9eaa-6f39878f271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f190b573-7f32-41bf-b22a-5ec7bb2536fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64211938-6ea6-46b2-b635-183ab95431a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a1475e-21ae-4aea-88a3-f564f23fbda6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248121f5-6247-46a3-8eec-a584a8c9bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b830bc-1695-4933-aa4f-2996a73e8aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9cf838-62f6-4d42-adc6-3309f2db9484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a249833a-2621-414f-824b-51b0d1941726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aaeee8-aff9-4627-809c-a6e0bfe12df1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff338eef-573f-490a-ae83-a4f39b786ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c63fe45-a3d3-46c0-864e-859b03769f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1252ff6-20cc-45df-b8b4-d613bff962ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da0c2b62-0d07-4df0-ac1b-93817fb8c910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9f2b20-809f-4df1-a558-103a50031c08",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6836dee0-172e-4340-9633-518867b8158a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6626e673-f348-4143-a122-12bfd7d65b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a1aaba-fb7b-40e6-b888-9bf34e30c41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "795ed99b-bf29-4236-bcd8-b602d526d5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5970a554-c26b-4bce-adcb-1d18694b9051",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fdcd32-0577-470c-835b-d68d705ba326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7aa4d5-6eb8-47fe-b102-ac9833636d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4003dad5-d122-449c-ac9a-57d561ff4c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e673d0f-870f-415d-902c-2ae808599fe2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39ba2081-f7bc-4245-9d28-d769ce010949",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47e0da2b-f9a4-4123-a40a-006de182d429",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935d74c-db4f-4148-a96a-83af2f199c47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b782580b-7817-47e2-a135-70647ff8cfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3117bd5d-dbf3-42d9-83b1-b778727f3df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e757246-27d0-4447-ae03-231f8bacdbd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "073cc86b-9f48-485a-bbc4-c746624fbba3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ec89bd9-b725-446c-bd83-722a0dc373fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4c76077-098e-4ac8-b18a-603900c0a55b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab040cad-d9c2-4245-af6f-1af2545b60d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fbb0fab-2d85-41f6-83ae-31fc37e6e295",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77c13412-284c-44f5-a4dd-22307cccb293"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "572dd3c1-6a12-457a-a36f-8fe5345a7efc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64d58fcc-93b2-4fb6-b9fe-159593dca997"
            }
          }
        ]
      },
      {
        "id": "1c872279-afdf-4c12-a47e-136b6c330235",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "45dbce47-ab50-4b3d-811a-653b6c1f17d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9aa9ba39-dc81-469c-b667-bd7cdd0615a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b3d2f2e-b402-46a5-ad09-524d9f16e5f0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd9d0b1-390f-4434-83f6-4ee5ad3639d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b27c03e-2180-4404-be04-4a51464f1668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8aea292-f3ea-4aaa-96a5-c17aa9d982c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbfc163-db5c-4618-9a83-cfa7c838a827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3762593-cb36-4edf-b549-303a9e649f40",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b39dd55-ba40-4f20-b96b-7d56d2116446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07b63ce-d2b0-4fd9-a423-c73b096c9ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e568d5-64ee-411f-9ccc-0cd00f551b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c17e92-b534-4539-b1ec-afc4618de2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349601f1-138c-4e79-92c1-f1c1047777b5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1633e4a2-28a3-46ac-954a-4b89074a739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8552a121-811c-4a2c-9efa-c60b0df57674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17e6309-d2e9-4f12-8db2-6a3f3175b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fecf7de-04e6-4d8a-9366-ade266d020a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a221e325-381a-4b28-8563-60f9e7a6d14c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98c411f-796c-4d71-9a73-3e6fefc0b3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fc95ad-a5f9-402b-9df4-bba95b6a1acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe8afa8-0b80-4f5d-b435-77a08ade58b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6edca44-e13d-4db7-a5e2-8bb6da7adf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c49f2e-58ae-4af0-a283-92a4822df813",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1022f237-e44b-48fa-b48a-229abc14234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd467127-4754-404a-baa3-f2f9547275ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c2a60f-63ae-4906-ba31-26aba0663d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "983cbb53-da3e-4c3a-ae81-8efd4e599c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beb44c3-c2b1-4720-a489-aa46471a5e5a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aadce4b-560e-4777-be25-1d9b9d55c833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5db2ac-9c19-42d1-b6ca-554e51fa2636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d855b85-b159-40aa-a41a-86a30c899f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a4d944-a421-48ce-a041-08e0e5b04be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7dee0e-fca3-4015-8e20-bb735a40af84",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac482d5-a26c-4561-a891-d20fcdaba65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4b1e8f-856f-4da8-bbca-fc8bbca562dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b857a07-c923-47d3-b6d0-7236e8969089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6d299d-2028-42a0-848d-39498c4947a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0489e7c-bde1-4b91-bd97-408e0605e88f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfd9090-e7ac-4516-a77b-ff1a83ff4606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23fe0c9-00d8-444e-9dbc-38cd77dd0b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa202ff2-5206-42f0-be0b-493e346c8b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a678f3-5fbd-44f1-9a19-f05744072ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c23962a-3be3-4f36-ad91-7433fbe4a328",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914e3152-a1d0-4acb-87f7-0bcca280fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b1dc66-9ef4-4bc0-9d5c-9de576307a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652b987d-8cf4-4979-b09c-b1d0f1702308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56164d66-62f7-4c53-8093-db403848bdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01710c2-11b3-4dbd-9183-23856205edca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c370b67-223d-4022-a3c4-7ca45e51647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273cb99a-b850-49c6-908c-1731d11ceb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eb970b-330a-48fc-af80-9d941e48a815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed03cb97-7b3c-4439-817c-a9b12dedef91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d324af-26cf-4395-8754-a9a09d3cebf9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8506ba2d-2396-43f6-90f7-073c13b5af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873451b8-1355-46a3-a6c9-79a54a5c2930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39d680b-e22d-44ae-97a6-7b4875e57e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "800eb4c9-60e8-4752-8716-e3de1d462261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e68224-8528-4f1f-a6c0-9403d83c0d40",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d53932d-642e-4e6a-a19e-a25ceba4e1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c825d797-86e0-4d04-b805-f6ecba438983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87be0172-19b5-4c8c-a9b1-8553769cadeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a47f8524-ad2c-46f8-a6b4-43b79a34685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5252124b-b38a-4cd0-9c2d-9771c3e9b860",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa776c69-d13c-47c9-9421-20a0c7949a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcf6d1c-c5f7-4187-98ff-e9ba262ee775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf18424-6954-43ad-8b50-88167b9c7754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecef85f-a399-4315-b691-be76a51687a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b41c974-125b-4a19-b781-8a36a88b2a41",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb228f4a-e9b2-4bb8-ac41-a9c8d0ab6993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a65681f-2f20-4e2e-b4a6-94839d28b162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad107799-ff44-42a5-a302-4c059807a927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d68ecf4-7ceb-453a-b683-8b6654a00468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb0ac34-d0df-4033-80c6-8ebf6421ac12",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96555b4d-8078-46f8-8350-62da0310e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6433282-46f3-448f-acb9-a9b6c39f2bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df18dfab-09f3-41b1-818c-41f5f56b4786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "20858582-46eb-4eb0-83ae-0cfe3a890bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e040c4db-ce59-4083-99d9-32c86b94386d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211edcb3-2eda-46b0-b0b9-a286f4bfe3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f260824-8c17-4f3b-ac2e-46fcb46267e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010c5903-f9f8-4b50-8e14-d1479e413892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa23868-bf76-4414-8379-db7b0d3a6921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b8e612-b113-49bd-b4b0-7168bd4b7495",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215445df-fee0-4987-8fbc-512f23532e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7eb283-08d6-4693-a5ef-4bd6b3864daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c07fc24-8a6e-4933-96f7-9f797ed91925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "75510b12-3def-4ec4-ad8b-97f8f6f35801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa678bc5-19c5-4bcf-816e-c06110df65fb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a9e7fe-0186-433c-bb4f-21d54ad56fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37ab736-d8ff-4c4a-81cc-168e9a256aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c906c1a-5e11-4098-b9e9-d9027bec43c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9c5fd4-d556-43b2-8146-bab44c99875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf3c432-54ac-44c3-807b-8c8f41ddabe5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccb669a-7ed8-45e6-bfe7-f92d77cce3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f727560-a575-4d0d-b455-3584aa27d8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9499c82e-7013-400a-bdbe-5c1925237257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50b2c46-d55c-4a07-9a10-9473249d542e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de472df7-169e-464d-bcde-710e3ae2901c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae8ee16-d1ea-4d9b-a095-6af1958ff645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7bfa3b-35b0-43a8-8597-750ad0be4436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c77b21d-3b46-4c1b-8c91-e4d266b85f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a023526-3c1e-4caf-b08c-a2b35201f2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5da9554-a511-4125-91c9-0ad0b5cdf001",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2285059-c241-4473-be0e-af66a43eeecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf145c2-591c-4950-b44a-3501a932b33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6ed6e7-ff98-4ad7-932a-6eb47a2c6866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a388efe-db81-4b85-92b6-86673fb604c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1684de3d-096e-4227-b5bc-0a7d9215b447",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0f90c-d152-4f7f-95d5-fc9d25c30c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e48a58-ba4b-475b-86ae-7603558db66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101dbbee-020f-4d91-bd0a-a20e681d6949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05380da-a6b3-450b-8220-6f43d79ffb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f34fa20-6054-466e-87f9-7bf50b65bb71",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97667c8-8bb9-472a-b255-11fac2235532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a6e12b-1f49-4b24-9efe-d49422095e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0956bf-121f-473e-9b85-0cd13df63c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f642e457-c529-4920-b7ad-b19dc50660fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d75d56-2a31-45ad-bf97-f12a799db111",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d7eb0-0396-460d-9350-6ded5bf1c8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e670ea9a-128e-48bf-b5bc-6bc93112d261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9935b4-777e-434f-9443-bc80e5ed54fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab9ce0c-005d-4374-b27c-46bd01e17592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03602b82-68e8-4ff3-8488-59cc14e2cfb9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7128f0-87dc-4134-aa88-fbf475c73653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd5137d-9bbf-474c-bfc2-f52f99cc35b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7bde37-e85f-4aa1-a7be-8d55c1841fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb3a2f3-f0ae-46d6-ba2d-ee9ca05f993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda607b-7032-422b-8893-cbdc847c5d21",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804368e4-883a-4711-8946-caf86db21300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45150ea1-89b0-4d18-88af-6c565efcf5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03817dc-47ce-4ef4-ba75-657c58c8e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b95e7e7-128a-4507-9add-00c97b18c201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a409f-77ae-4768-9347-40a719e17402",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47583f0-6057-4cad-a643-a9b85d08d121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afa4342-0835-4a44-899d-d356ab997cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978591a7-60e5-4664-a9b4-e8394ab81545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c32add39-dfdc-466e-8c62-0f21677f0cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df14be6f-1936-4d18-87f5-71ecfa88bf2b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aab4b2-99f0-4a03-b7bb-a96dfaa6b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b7401b-ef5e-4b86-908e-613aa70f59d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e2e598-eb17-4231-b4b6-2d82bcab3c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00bd985-6e57-4444-a622-779ff6620b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114235f-e1b2-46aa-a113-fd7194e979ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac18019-4d6f-453c-8be9-69462f2800ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2456321-ba01-486d-a904-bfa8bfb97d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2a7c2c-2a99-42f2-8dd3-030c064a8dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86adfec0-b859-4d17-b0a3-984bba573773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0628f58a-8c09-4315-aa67-e7b0a9715378",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377dd708-b2c6-4c0a-9f44-e31472191a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9cfe17-0d3f-401f-8003-ee395d1764b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4319ce2a-9aaa-4e84-9b16-d531663a55b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d100773-58ee-4afb-8621-81308f1517fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b02f735-fcc9-4161-8a0b-35fa1d8b2403",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc736791-ff46-429f-8077-e53ad87963a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3724aae4-e946-4ff2-ac4d-e3a798fb1777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea617799-059d-4053-93bd-fa01f93b85d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b01b0b-f333-4231-89aa-d8c0d33b9694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4dde3a-ef7c-4552-a1d5-1e4f7c91cd51",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f62a1d-fd20-4796-86c9-adfc5e87e6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a47f91-1d51-49e3-b903-6e937013afe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a125fd-59c8-4057-9371-9d36bf091fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05324f9-0239-44dd-bf89-eaf8305aaa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff4d747-8cca-47d1-9109-4057d595f0c2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16ca282-b409-44f6-ae6b-3602e6c0bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae5d86e-43d6-4c25-8a9d-75947011540d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0684e8-e6c2-461d-adec-79a1d50d657b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff21dff-a1c8-4051-8ea2-e764284a23a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e2e28c-a43c-40cd-aa00-2dde04a259a8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1175f532-67c1-4627-b8d9-208880453191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddf8c61-baa7-4c23-b6c1-aa15cc13bf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f356cc-1f6f-4baf-807c-07edd3e47387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3baeeeb-fa77-4864-808b-66bd221fa0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7caba30-3706-46e5-9293-ad50e2d13b8a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555ea8ab-4c43-4fcc-9a6a-b272ac63e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dbfcb2-c98e-4caa-a749-76f76840e271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaca87e-d6d9-4843-a359-5156d21c05aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a710aba-6375-46c5-91ce-0ebe3cf510da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9936be-e975-448b-8841-cf7b10992f0e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4aa1b79-b5d7-4d7e-b0e6-b58ef0b8f4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e326dc5-b769-418e-a992-88b489c06708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf72e7-a0f1-42f5-8573-ef1945d3738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37437110-e0b9-407f-88fb-dbf81212f065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1b266-1238-4971-aaa5-50836290dca2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0c96a2-ea4f-4354-9144-9b1a20eb4bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc12dfda-25ff-4ae4-b99d-f91fc0a0db63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8766d1c-c272-4524-81ae-33d3e62e55d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a63ed0-74a7-4981-baa9-ef3a89c20dbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74d5ac5e-ea19-4f94-9fa1-2ea123f1d44c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e16aa8bf-3408-4ce8-b91c-d786ba5bc6d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd16c4c-63c6-470b-97cb-90d632bac4e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6903d27d-07f5-4685-aaa9-7fcb9ca45b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b77c5-8029-4ab2-8eb7-51f12df7f616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0e0ccbf-4c76-434a-b084-9f425f7c4ea7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "884492f1-d68a-4094-8a29-3b5eb45a7f42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cdae783-07b8-441d-977b-6a4402c7f116"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d3c446-6b6b-4709-94b3-73f43e245f96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2fe983a-70cd-4b6c-b090-435b179ff8e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4c96378-278c-4daf-8db5-cf19fef600db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a6f5661-36f9-4376-95a2-de512d2a4c8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46a0ed7b-83f7-446a-9db2-4e74c4b42e11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc5be927-33f9-4faa-a5b7-daf7be045294"
            }
          }
        ]
      },
      {
        "id": "82bc60df-bf4c-43fe-b0e3-80c25d7ba9d1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0d575c9c-f9af-40c2-9fc5-1fc397997b6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2126f052-a466-43b1-8d12-527e21b47f53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4bcaf99-e401-40e6-a06b-d2e1b4e35601",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408a6930-683d-489d-95fb-57633a7830aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e12efe-a7e0-4dce-98ac-abb23630ec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd81cf6a-a691-4954-b212-82837691ab6f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3fe08f-20a4-44b3-b120-7b4d4b13be71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503ce427-b603-4f8f-a7ae-df45c5904998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35647f60-de37-4425-afa2-d453b82fd8ea",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665fb320-35d3-4034-8e90-ca30d24b82ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28b7c7e-7d80-47d0-8d82-68ed58d0b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245d9e86-818f-40c1-884a-b9f102cb94d9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10aba443-e5af-46d0-a76d-17cabe08250e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82cec24-c398-46d7-b0d1-3059c7b01864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6def0514-aacf-46e1-a23b-3b4bebc1388e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dc4744-4f6c-4806-af2c-3689c658aec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66ca64e-0bd7-4f32-9702-06b7a3d25bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f66e01b-3d5d-45fe-bd7c-8df2aa79ae90",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d73676a-5532-4977-ab6b-35476a19ce5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94be572e-cabd-4a0a-9e25-979ac584cf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7394016-0e2b-487d-9c0d-772162abcda7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee219b-e512-41f7-ba04-67ab01c4d6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86824dbb-579f-4fad-bac5-74291bfa0326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1f7437-b20c-43d8-ac8b-17c07b4e89a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2725d9-7b66-4a0f-8d55-4b0589e4c368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af34ae14-917b-44a4-bae7-e55e92e93051",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd08220-0511-4ce4-960c-10aa4837b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7607519b-bf15-4574-8e41-86cd9a36ca77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e28cc06-a758-49e0-ad9e-265642d2616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb2822d-4b3a-467f-8f63-a836a5601f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6788d7f2-557d-4ff6-9b8e-ec57678cbcb1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c556f257-2a66-414d-a7e8-683c76ca5baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3ff015-73b9-4c40-989a-b7b939b5d639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adad241-5b23-4171-9e47-6ff68bf5942f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626d9ce2-fa9e-4a10-8a36-9bc044e61da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e34e303-5e3f-498b-baab-443d07f9a9ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124f992b-6813-43d9-a1e8-163492126e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0705f7fc-355c-4127-9e2b-6b7ce6b18783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2059a49d-e1fc-4325-8fc1-db8abb4be989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f51f098-34b2-4bf2-b046-72135ef51a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a56cdca-ebe6-4ac8-baa9-b16800addfd7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ade281-927d-4a07-b306-53136102e5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01422daa-2c59-4b99-856e-705071caef99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5561c59-fd42-42b5-b0b5-6c250c20111b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d0cc51-374c-4608-aee2-cdefc3da16d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fe8b9f-110b-4f13-9d04-f573fcdb4366",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578b2d42-8b4f-474c-b510-0a2288585963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6e64a8-2276-432f-8ef1-74f8b232733a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec932c1a-59a8-435b-9259-77009004915e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa04ec3-7de8-4041-8967-ddecb0b813dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa0ce4-88aa-4749-a8a4-9e4b34e01902",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6e35b3-a3d5-4737-b586-8ed857225f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fec1568-7a74-433b-98bf-21e3fdc723a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348c72d7-149c-4d7c-a464-6c5f14e9504b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e62f4a9-84e7-4d41-b8db-97f545821c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dbe72f-3964-4f68-b859-14b890282659",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0492cbc7-bfd5-4ce0-80d9-557afcc7e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e472bf-a0b9-44ba-b5fb-d7857dd926c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b1bd9b-cb29-4fa1-bc3d-c821d4539248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aba34cf-ecd7-4d29-a28d-de4677930085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d00632b-38cb-4ec6-a1ea-a34e84d5627b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c3f707-a1d8-4463-922e-9fc71dd9e9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e43aca-b05f-4e74-9384-22d932df2b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40fb0a5-23f1-4747-bfb2-a3e9cfe0aacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3462e7-1e61-43ed-9ef6-73fd8e225942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c497c-800b-4b70-9d53-020fb56bd771",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11675c2-1f49-4f98-96cb-3f3ac7acb199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6262c87f-086a-4df2-819b-47da6ee79eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765e623d-7e97-446d-9437-2fa72497b3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa529391-c46c-4fde-80f0-c154a7574d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad3a8af-f8a3-452d-9044-abfb7f47506e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b4523-be2d-4273-9cf7-cb013d27c3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fc64e0-8cd8-4514-afc0-31c216e0c78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5523b0f4-b449-4fd1-a2b8-a831276684a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee80782-9c50-4734-b632-96cd64c0a067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf4b31d-e285-4ed4-8c66-0930a26e6dbc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299d96c2-1480-49ef-a0e4-ced1fee57561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcef509-01e0-4437-8d9d-94744e4827e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c19085-5c05-4732-98f2-6bb55614ae5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32529a0f-0c5f-40ab-8ce2-293c0cb4945b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7afde15-3157-4815-884c-3483d4a09536",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2a6fd0-24bf-4ccb-b1db-c0638778b597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbc07d0-5136-4661-b17f-5b11ae52c8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9c8e49-76e7-4060-a1d1-2941c476fec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c334b7fb-f041-48a4-9c7e-ad1a4e0b2c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f2892f-907a-41d9-b832-cc431b87819f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad99869-1297-440c-ab7d-2b79b960a1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bdb53f-b12b-4e07-8511-cac6cd39a49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067737a8-60db-4fa8-a7a7-930b31ed8d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687c67a5-b404-4e6f-9a37-df4af9b9494e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81406d33-73cd-4c7c-bd54-4abd59d9cf22",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85198959-be77-4c6f-a905-e0ac97e597f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a2fbd3-adf2-451c-872c-0ede1cd95b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b3713b-ac73-4ab3-ab67-5e2a8548131e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4315945-5eb8-4257-908d-f782b6edb7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba78b2f-eb57-412d-a8a3-c0be458d0294",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b54784-75e8-4e91-89e8-e31717aac242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85416ac2-d235-4680-8d59-f5d1eb38253f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830e6c62-fc69-48fc-a778-4e9103ba48f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bb2258-e5a8-4dc8-acc9-1199108cd63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811bbd50-46e4-41f3-9168-45fb79872366",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fa75c0-63ff-4a2e-8b77-47af3c227b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37694943-08d7-4f9a-835b-2dee54804ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216bc79-8c94-4230-bf38-69b9a95024a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a2db8e-6ddd-4e72-ba8b-8da56ac6dca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3f5970-9c47-4e37-a24a-657bb4eb5da8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6175393a-50e6-4277-be39-e0e82ce8d4ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb36b47-3632-4b91-8062-7f4015bed4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4c9984-3b3a-4b05-b0e4-4a98673b2cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda71aea-9c3b-4432-b287-abc6daec83d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de39c42-06cb-49e9-8c0a-a8ea2909bc64",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6c220f-bedb-4ffd-9414-a23b761c2255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1647958-ce91-40d3-b8d9-e2d52268f196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f06ef3-7e24-4af0-9592-1c749ece0d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2808ed-affb-4e82-8930-73831b95da8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2b9332-7b4a-4ecc-af9c-de0f1e219df5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd2640d-fed1-4d91-8267-085d0c04df7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c08cc9a-a54f-40fc-9f18-0e5bebc87e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090ace03-b999-4999-9daf-70e0f2b7f1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf7d22b-4d8f-4136-95d7-a08ff24333f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c9fa4d-ca0e-4ac2-8a9f-c2f767e46db1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacd8c61-fc87-487b-beae-ab38733d0d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8b96cc-d235-4d93-b3d8-97da45602476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51823eed-0e78-4c08-9bbf-3b44603e4587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b374c4e-abee-4bf0-b08f-379ae3a09ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a230d02e-cc7a-44ed-883a-49a44528304a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035ba7e2-77fe-4530-9161-379c7b75c6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f42b46-5994-421e-8d78-871a4f48d9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c1490-7733-481f-9e86-164edc768f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07507cf-f522-4b3e-9d8c-6d2112f07dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b99bf9-527f-490c-8bfa-c029fd9f4795",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef8d6db-a92b-4433-b37e-c71e87ad3bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81857b8f-187a-4b3b-ae33-df2c39ef09fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76575e50-bb6c-4264-9b0f-05eff9d389b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e2f54e-f43d-4986-9a82-dea90658bc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c462bda-d7c6-426a-8808-cd78b96888dd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef73b9e7-fa96-4714-ab5d-7c46f1fe5282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d322c87b-3816-4f57-8c22-008dcb5d81ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e89df2-3d0d-49fb-8b17-b724927ff55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c39f654-7ff2-417a-8105-d6044d5743ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefba210-6d55-43a1-b727-1619ec5a66fe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c299f3b3-0ab4-423b-a60d-41a7974a39d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b4764f0-c5c8-4552-9365-365fb613ebff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e880596b-5564-4509-91a7-a2e78292cb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee575ac0-470f-42a9-b57d-60ec7ddd7453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22c9ada-6948-4550-9b0d-b018184a0c1e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da1b840-e12a-429b-b59d-7b506f269ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed90ab4-5e01-4a54-a487-4712efaf8539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19832429-93dd-4df0-8606-1a81ae81092a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df49fa2-0a1a-4187-a3ba-03cda8f65e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db79cb6f-467e-47ac-8ce5-037b45cfdcf5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aeb6b5-512d-4643-bdf0-6a06f9692063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab902ddf-5226-4a86-badb-360187e43e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a155f279-fa02-4341-b0a9-3e0d80d6dd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8b32a3-4758-489a-a3d3-b771df041afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ab7460-9959-44c3-89d0-169c6b3d64fd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb05580f-8351-468c-9200-2d2b53828547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56448139-d5cc-44b4-b6bf-8045db6b512d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edc2571-5eb8-46ac-a41d-b23b70276563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b9a5e9-024d-4b31-bf18-295cf8efd7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030f7073-ea5e-4474-95dc-4e74885e5a68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e9b187-3f36-4cf1-8c09-c5835719a409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b5e6ac-4941-4ede-869d-b5d7b5d4fb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0f1da2-78f8-4c83-aa1f-fa9422cf7c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2681a73-2302-4a42-afca-2e8e24c317ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8c9a47-b06a-4287-8f7a-3b13b7b256bf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccdff30-30ae-4688-8e39-fc052521ee96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2aad569-5f4a-413f-9902-72590d280269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109ea7ed-86a5-46f3-8ab4-ae9e13d898bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6175a508-7b1b-4d2b-9187-360a583abda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e7f52-7f5d-4fef-983d-fcd5697471e2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd7bcae-93bd-4c7a-9bf4-cbfdf933a339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a0f8e9-2c22-4c2d-b056-20c05026aeba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50085031-000d-4684-97c4-c547e899b541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef7540-c113-4b2d-a6ef-6d3e6173e93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1601ed-6e69-474d-bd76-55ec67cf8c1f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8adff4-8909-450c-93d4-51e3c81f44f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905b15e2-31c7-410e-a474-41912238fbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50a4074-6964-4f71-85b9-2169a576e4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0d7275-b4c7-4029-bbb3-8b388380821d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aadbcfa-97f0-4a7b-bea1-c0bde94c3c13",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa27d8a-bb09-4445-8b50-5f6877e96195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84757350-1143-4ed0-8e25-b9d85776e85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c499ad-0cae-49df-b13f-b98f0be31c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc761a55-59b8-4dc7-bec9-88006626d1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac57dde-4516-4c91-bf5d-8cde3b3d0a96",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6d3263-35cd-49ef-b71c-0f9a0a0b0199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4fc29c-ead3-410b-8b4d-d41d3df7d4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf8055-aeda-4a8d-81dd-4c9234710bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d192ac1-99cf-4849-b385-3939a10e1f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6b998e-fef9-49e6-8949-7e9a6219dcb8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aacc49-7f98-44ce-b419-6cf32710adc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc71daa3-1f40-48b0-ba24-2dba1b9cb535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260047c2-d9ef-4326-a30d-74f2344f05c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c15626-7f1a-4666-a62a-e346b8b3c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4da4f8-5b30-4d25-b44b-49c58d461ebd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab7a959-3729-4efc-8046-27beda2054b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d148ee6-be8c-4953-ac79-325470d6f732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bcea34-3206-420e-a2a1-df1dbcc073f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba4f40a-be4e-47dc-98bf-8fb17f404607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee06dc44-e0d1-449d-904f-d1c15707d911",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6956ce3-af52-46d8-9cc1-06489f2b38c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7704fd05-877f-4219-ac57-e264e096b463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f13c07-f578-479b-96c4-ee58a3f5505b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34421dab-eeee-43e9-8c7b-acdf54548542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2812b931-d236-4d26-9dc9-905f14b266bc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f7259-209d-40de-b313-54c7291680d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e388f1-e5ab-4683-943e-97de2078a863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7fab96-510a-4087-8254-61c1820ff68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcd764f-a537-476a-8597-9cf91bc48631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7844452-62c1-458c-8414-310a69419ff3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd435973-ccff-4276-a913-6e975afd01c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b14c32-ac66-4b62-bf37-e92423e49840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf069eb0-561b-4da5-88ab-d0bcaeaa726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c19f414-8f92-4dfd-b803-fbdd1e1e3a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c8fcf0-150b-4dd6-be26-bdf3a0bfc84a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cd80e-aded-4b2e-8bc2-2f5109fcc3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbc0044-65f6-43d6-a138-ba152f90641f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e8112a-5ae3-4508-a75d-7fed953d88c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab899266-3adc-4841-b407-58e4b6c4b094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c64682f-fe7f-4639-85b0-f52058503c37",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c0c48c-601d-482d-b892-09159b0066c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ba1e0b-6cda-420a-b35f-175a0bb51868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a3038c-3247-4ee6-8edd-f1d34dd60c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4252f402-d912-49a1-ba6b-24118e90ed31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57822392-5c1d-4d57-b003-efe98ba927b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7d717c-e54e-4244-a8a5-4edf17d8b571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c203f19f-3ad1-40a7-90cc-750dfd007f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6522bfd0-6ae4-4599-8983-a851a44bb880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782d2a93-54e8-469a-b20c-70d4e6888ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae462e1d-a164-4a10-8714-c2ca084a7181",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea8308c-98a3-46fe-ba21-048c6d866150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6011de3c-d4bd-4120-9079-005795c86306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8b17d2-cf9e-45cb-8a75-7ff01dff31ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4de43c-2c85-41bd-8000-86fe40595693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2223b3b0-cb3b-489e-95b2-b442351cd0c1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4faaca-8001-42eb-8a57-24db9435461a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df36de9b-7542-4277-862f-830243490480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0f1d56-7cce-43c2-be26-c3930d4a92a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aff900-15b1-4f12-bbe6-fe07da71705a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70ad802-fd16-4bb8-8732-9be89db68c64",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd63ddc-05d6-4553-aa74-4667ef4ef9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cfb251-92cc-4fde-a06b-3f513b3e07c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b95dc14-764e-4904-8c08-c530f9e2a395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6a7e7e-c371-4aac-85ba-bee8b0220927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e524b8c3-52f0-4564-b746-18dc91d9d0dd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc057a18-76eb-4487-a680-5b47a08b2cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdf5a41-584c-49e1-9e62-d0091b4efef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6625a5-264a-471b-b243-2c88d8cc96ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f286c65-09ac-4a84-8736-f4e7f45ff666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cc7309-cd6c-4e97-b899-0ca10703a8a5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1ef530-d654-40a8-9e3f-b0983b736d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bfc778-5825-4e2d-82c0-307831692212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ce0623-ebdd-4dc8-a263-f73be3d503cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce8ff7d-74f3-4f93-90d9-d130669643c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e684c-5a44-4302-989e-201cf8d22835",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbeb2e08-4b2f-48be-ae67-4cf7cb54c1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff8c119-1a17-40bf-871a-212920861bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb907e-c3e7-4235-821b-67d467de1a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8a57e5-db06-4b0a-a087-2b3b1272bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0de509-7c98-4bc3-a12e-3b87c2aeea93",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5d9aa1-ae18-43a9-93bd-3e100bc0783e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482b3247-4aac-49b5-ae4f-feb1abf66827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b78be0d-b931-49f0-938d-d191cf8fc8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda66400-fd74-4ba0-8e49-91f5575e2b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7436b5-886d-40ef-950c-91c3f74101bd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d5ce75-8229-40c2-ac4e-a064e9c51bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501320d4-3eda-4a1d-88c0-d43ddf35ca3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72c3da-0dc5-43d9-bc94-e6e4c5043dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8514b1-4975-42a0-9742-1e62ce3846a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8f9e4e-8879-4728-96c2-703aa9c05ff2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd87d09-4005-4f9d-a0cc-1e921f68e363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2bc11f-fddf-4bbf-9f61-22bad1d05fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10066a5b-8a02-4ec3-9a52-49afbba66c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d33aa03-19e4-48d8-a5c2-a56c4fa63082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e445ba0-574e-47e8-84a8-a0e12d7c19f7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a4d906-6359-4dbf-b35b-bd0edc6ae5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bea85c3-86a8-4fcb-95fa-3871624cd13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101716fd-427e-406d-85c0-721b1bbfe14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc754b2-0034-49c4-975b-522e74a33e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c54ee2f-bc12-4999-b487-7a7f18651777",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98cbb4a-d18a-4ab0-b908-63a585b8b07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3948e1-0e16-4700-b80b-f29a948d6af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e89bb6-14c3-483c-876f-4431e99ae335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28f094b-1b1c-4447-8739-de0bae3bd433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61e33f1-3c7d-4aef-880b-55636f946aa6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc77a71f-d05f-452f-9144-0b74f44be435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eaa7a0-cae6-4add-a555-26eb5839585d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf13bbf0-7ed0-4179-b556-251c2b12d574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afe9281-5a28-4d88-a8fc-3eb01919e14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63098676-e3f4-4d71-8015-9c04f90f366b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d74c66-f921-4dad-adaf-5c7a76b212d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e765e42d-6b85-4c8d-9f2e-0700978dfacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e57d482-c78e-43f9-b24d-d82a1fc05557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490a1a9f-5b44-44f9-9864-c1279f7e505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4869d4-d672-4f34-9a6c-00039fbed5c0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1469d22a-4341-4982-ab7e-79c20816b106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d11f53-4d49-4750-ac95-eaf5d63072ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec138601-075c-4f0d-a8e7-d7ac2a23dbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d5a794-c32d-4f08-a4b1-762c9e34ed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4e0b83-3bd1-4848-beed-aca4e65f776a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c0a17c-5b71-47ca-95b1-eecd607374b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72be10f6-f9ed-443f-8154-cfe38dbd22f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c1202-6242-428a-ad22-1be4d05667a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a82131-0782-4842-aa8c-64fe9620e724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bdf9e1-3239-4d89-83b2-d9a3e751ea34",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afd043a-f358-4f61-8c74-278a4a326d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d38016-5b95-4747-9888-2115a6bd7cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2cdcd3-b32c-4918-93e4-102257376f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb3a9e8-b3ff-47f2-a229-43c48be14c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4e510d-4ef2-43d8-8f58-acefae252235",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6f6eba-182a-4099-b154-39f7834dd6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6ecdd3-6023-4af6-9f77-075d72e06927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0158ac1-3c0a-4bb7-9c9c-d52268f74eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821e2647-8331-4ed3-945e-c178ae5a1339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706d1c81-5d49-4b9f-a883-cfad047f4aff",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a987ed1-8df2-4caf-a033-de274eafa172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43033ab2-0a29-4ac3-9af9-6df4d478d5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e035be61-ea44-45ed-9731-a6c07ca2bb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f56070-29f3-4cc5-9385-d88772aca65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c10338a-6a82-421e-ac90-6cb7fdb0d968",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3900ad34-2d04-40cb-a9db-e5bd1024810f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d940be3-81a3-48bb-a7ae-8c1d33d8580c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a991692-f7bc-4dc6-a296-dbfbaa0e6a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97868353-6e68-4b62-aeba-8ba8d881e5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f95476-64db-40f3-8afd-761fc9eee5da",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7024a1b1-e506-4b8f-9f36-c1cd73b2c78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e116fb04-cbb2-4f9a-9d23-3c39f737894b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e372cd2-1f3a-45f2-bc2f-d25abe95a635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1435ca0a-8828-4c4f-b5c3-16b153d57b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f7ae80-c93b-4e2a-bc46-496ae0b58318",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f00462-bfee-4966-979b-bdbcb90d8949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06349491-fcf2-4738-8f3e-e55c9e29d968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcc963a-8958-4ce5-bce1-886bb2117559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c71acd-626c-4431-9b4d-aebd9c27f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671df510-90a0-412e-bea1-fd5736e8b79b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48f9a15-a90e-436f-8adc-0cace6a90745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf7c992-75e6-408d-8d4e-fc0ebf8aef74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e199c6-e45f-4296-920e-aa009742d677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076213b3-a14b-4adb-af30-d1e9fb570c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93668564-c483-41bb-a772-8b5088974c86",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d5f7d4-c283-4204-a3a5-46ecea7979bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e701a8bf-bd3b-4796-8d34-a0b7a2a0bcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bd7e90-30c1-4c40-8b3e-f4eceb98c4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a554ba8-38c9-44f1-9d0e-dd6f0de18abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87fc75-3af9-49ec-80e6-5219b0da9409",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e87c35-0fd7-496e-8db4-81c9ab10a584",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d87ea5-1c05-4e43-a6ef-1c83d73cb574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b484deae-7a0a-4911-b9ed-769bd228d7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecee8a0-d7dc-470a-a1d7-1cb44520a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83527504-622c-4100-b876-d453a9338795",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8138d08-6745-4546-9fb6-107713fd2a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac328fd-329c-47d9-bf26-c0028e0fce3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afad78c3-7f6b-4e8f-a95c-31f7afc4b8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a599e36-8a0b-46e0-bedc-3eb09a984f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1cbd45-a8b5-4a2d-b8b4-4a7eca2b77d8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214d2719-d6b9-4f29-b5bd-9d19f3244e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534c1004-a553-4d1b-98f8-7c8b8688704b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d964f2ed-8447-4dbd-8092-3c41660fe377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f1b340-07f8-4b5f-8693-ac898e80b908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e3b191-d096-4cc3-8732-b6a543f2f0c5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc59b487-e8d6-43a8-8ec7-2907fa96908b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3362420-0ca4-4048-8641-ca38cd2a5363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398c38a-38aa-4cba-9506-df821d44542a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6710d7-3879-4193-918c-e91b91242e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9c888a-3e26-437b-9b56-a7eb2a29397d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd1e8b4-5564-4bbe-8b42-9898168779c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac6bbfa-994c-491a-974f-2acaa6db1cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c3e250-0421-4505-9874-1df1e7beadbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e5e51a-1164-4d33-b27c-1c17167d8ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91115a8e-74c9-44a2-9962-3fc5d26b51ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2a8ce4-ecaf-45b7-a9e2-4df59beb8e1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1047c414-a234-49dc-9384-a117186caa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a503f5-2716-4103-b451-515da10c21c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c35a58-b88a-46ee-8a01-b6eaf42ef1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bba76d-121f-4d09-8664-815231427750",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f60f9d5-32f1-48c2-9a13-7fa3c75f2bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92749ffa-ebe2-431d-83fa-6923e74957d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aa47de-9475-4aaf-bf57-65ff9c243502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b073be-73a5-441d-bcba-0fa09f7b2e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0aa395-3a0d-4033-a762-3631fda58d6b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93eda79-eca1-4158-aaef-3ed35d5a3c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbe7f58-3259-4e28-8216-86c608245d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4c3a23-c45b-4a21-b732-af88c6a47ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e52ccc-8ebf-405f-b68d-0802058dd08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d0415a-acb1-4280-a9d4-a47c230bcdeb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c92272-a3af-4603-af18-740d2f1a8b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c149f4-6a10-4792-b412-19cb67afe2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee8318a-e0d3-4448-8b18-1c9d75b28080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5bafe8-ef8c-4022-85a8-e1154863e4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2da8cd-365f-4aa8-bf69-76a635ff14d1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343929c4-5cde-432d-bf31-614e780961cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f164573-1314-4969-8828-66da631d4bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96a5a11-a8a5-43b9-b662-22b67ac5814c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd905a2-4825-4caf-af2e-10259505f58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ef24bd-dd29-46f8-9012-d7178ebe65b9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327903f5-8060-47e8-a17d-ce76318cbf41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c405244-7a2f-4bcd-a873-e5fc38c76b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6189ac34-55b8-45ba-9746-020914c86525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04325d16-afc0-440a-9079-d26303cad1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f5ebb3-63c0-4fc7-88fe-ca58a29541e9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7365095-ee28-4016-9cb6-a4ee5ccfb005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da445a9c-83aa-4376-95d7-5a546d6a3252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c641180b-635b-45c7-ae55-eba76327f863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bd6296-8562-4b0e-b013-e6a8ef12d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243e3fce-fec9-4e6d-9724-400f7dfc956e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4521f31-cecd-43a0-8aad-5052069d93a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac379a3-ae6c-40e3-b23e-52c5c4192afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807d362d-a5db-446a-ac23-1a467efe8e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93d8db5-db16-4e0a-b1ea-dc44b768dd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2dd8f-9bdb-4045-b955-207a9bf7e732",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116c3009-72d2-4825-852f-e8656ffa76f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72b97e3-8a8c-442c-ae35-734134263fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd29603b-d0dd-4732-9d1f-a35854150ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf27d8b3-d3fc-49dd-a9a7-b6fb394e2b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441be12d-5451-4fc6-9154-1a87ed75a751",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb1ed11-d823-482d-8e4e-96668d491a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0943549f-cbfe-4ec6-a9ed-db2b212be1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2938c-e01a-44d6-a13b-df5a0ca41c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eda4387-568e-427d-9499-9e2621d2f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bcecac-1cfb-4d28-a421-682b6bbb19c2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d456ff30-2dbe-4ed7-baee-9f76945d44a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b7b710f-8ba2-496f-9fec-886b62e0f51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5e8c69-1696-42e9-ba1e-2845ed521881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1953119-49eb-4487-8116-15af296196fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d357fc23-b9e1-4335-a59e-5fdff6d8c718",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915b8842-9477-4b01-9af9-b31d498e9267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a6e2a1-8006-4b07-8c31-0a9e13d93edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f7f507-0e48-49ad-a947-0d1b8e64a07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540b2e6d-60e3-4280-883e-776d1b00caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7563b0-dcf4-4837-bc2c-8c620ff2ea4c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae76cc1a-29e4-44d4-8cb2-fe998e01de15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f92d6c2-4617-4013-8d08-8beffb2bbdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ad6013-8a5c-4c61-afb2-9e02e25f83c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99faa41-bc43-4892-a42a-a3693ca0a21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ffa66-9176-4ada-ba4e-fdf47e24caea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07b677f-6962-4612-b224-57f8ecad44f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f191f06-f941-4d92-9a8f-bee1b4f4ea6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f436801-2bbd-4892-95d2-f898b15dfc79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663a5040-b276-48af-9842-4f1eb607c8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3e6025-8cf8-43b1-be87-01f82e766c29",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef994b1-60bf-45f5-b0bc-14197839855a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b000770-46e5-4723-bc38-f117dc69e459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e827e98b-73f2-4b4f-9eeb-427b3e5bb670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac9ef45-1415-44e5-98f4-1ed314791294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f878863-29a0-4049-ae74-5a67cd2d195e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b63d54-9fce-43ae-8886-4ae6f5aa9cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09bbb898-eb52-40c6-9259-e522a9a832c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a7a496-4bf8-4a2f-ae3d-f989457ed0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703c8d3a-e206-47b3-9ea6-5d6991549544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6ddba5-cebd-4a46-91cf-8b84abd89cba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2c5b6-5593-43a7-9adc-febf4f62a940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780c5145-ce23-440e-a8fc-192faf324327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ec53ca-e89c-48ce-83c6-9d699805b0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d5c601-d321-4879-88c8-c1d67ce4f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a1c060-3537-49ed-92fb-c0b8054eba41",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9281702-1027-4213-bdf0-1388c4ab89b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11c0b5b-44e7-497b-930f-3f492c979c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce64aca7-38a2-4eab-948a-71580c837060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b7ec4c-686e-4817-9cc8-04ff69bc76ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e8406b-46ae-4a82-a6e6-1c92c0fce8f5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8294d370-90df-4291-b321-fdcafd205a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8171dcd8-120c-4cc4-bb4e-fcc6ff1c1760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3aba43-f334-4d98-b846-913434eb2e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ce47d8-8946-47b4-b471-0a9e461a53ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc70a097-e643-4c09-909b-11264c9e0a97",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036c76e2-5b9b-47ff-98d9-dc6d337c78ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3252aec6-6df9-459a-a863-3b1a6fa6cd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36711de1-040a-4621-9b3e-0eb76d66d040",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0c108a-9c4d-4da7-a372-0f5047452f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2179fd87-b7cb-4262-8989-1c2fdb047988",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f42270c-9d4d-40d8-abf1-e95e140c3c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fad8a32-dcf8-4704-ab91-423705fc540c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c748845-90d3-45bc-ba78-43f2bd81bb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b84c75-07f3-459e-a8a0-fa32bf3408ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdcffb04-90f3-424f-b739-1a066c7f6121",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27573435-094d-4ba1-894d-bcfa218a696d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5daa46d3-edde-4e9f-8ded-133bff4de33e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd02ece4-426e-4533-aab7-a33d3e82cc6e"
                    }
                  }
                ]
              },
              {
                "id": "72f696c5-d7f9-4dc4-ac22-0d60f2e68030",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdece0cc-f95b-4d73-bdf0-579143353694",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ba023a-bb4d-4245-b006-3bf220556197",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ae64b81e-bb6d-4e73-841a-a72d0937ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3b929f-7052-4a4e-8487-2694ab7ea2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d198c35c-e7e8-4fee-b0e0-b53627eacddc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bef1cd3-4902-4cf1-bb96-82a86c386d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "474d69e1-7ef6-4e9c-9461-a4daef9e056e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1df94068-0f2c-4fd4-89f8-47eafed89430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39915db1-eb6e-43b9-b990-79f7985934b0"
                    }
                  }
                ]
              },
              {
                "id": "183d3771-d1a0-4ec4-ad76-cd37d3f2dd80",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8383facc-0047-487e-8669-347f178b2eab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d19859-f780-43a1-936f-911059c4cd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9f1ecdc-16c9-4113-86fb-1e2201992655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d76c017-3a1d-40df-b51d-67300d52bbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d675f3c5-fee7-4acc-802e-698e8662ad31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eef4ba25-9cbc-41ee-84ca-3aa8936eed3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9de4f6a9-984b-4a95-a47f-3626d92998d7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b01ff55-678e-4067-9612-107c23502424",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d9c926dc-2843-4f2d-b6b9-a7da1e925877"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f06020e4-e872-4e9d-ac96-08caa9b5008b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f6474c5-c6fd-46f2-9893-c9830bd13565"
                    }
                  }
                ]
              },
              {
                "id": "3fd5787f-e2be-496f-b271-a9bd23764863",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff8a071f-3a1e-4be2-96b2-b39392a12e5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "169dc15e-3e53-4bc6-8ae9-aaeb712834b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9ba1b2e-70a1-4100-b091-fd6e2f7845ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f83292dd-aa74-48af-9a1e-10e114b3e463"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f0c6127-4b4a-46a7-8e7b-25d1ef1b64e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aea213ee-a05a-44fe-b8e9-925311b70cbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53ef4523-d3da-4d0b-988e-b605834e8c90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45b5a831-196b-48bf-9582-d91c02ef3cb9"
            }
          }
        ]
      },
      {
        "id": "69a2405f-3e6f-48ce-acbd-5cc3291d7fce",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2e5214d8-d3e9-4e96-b766-c9d890a27c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75dbb7ca-a6fa-454f-a6f2-6d9cf23935e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3571783-2d1b-4f1a-91fe-0945a3fe45a9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d99d544-c2e1-4344-8dc5-b8af81103bb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6be384cb-812f-4f94-9fff-59cb8505952b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0424a0-ceb7-4256-9a4a-598b747834ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98017220-4e4c-4c75-a817-d8b8c6ccd7b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1143cc1e-7aa5-49d7-8158-86687f4d3aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a3e385e-12bf-42bc-aa6d-698dadfbfbd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bf4d5cf-8665-4f48-9369-fe448d839e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d9db70e-03a0-467a-bf92-ab2091f05126"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bdbdc5b-3d2a-4760-a7b3-f0e4a57331fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "137aa54e-5e66-4155-9647-54ae9e0e3539"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f645487d-7a08-4cae-96a7-cc0ab0f814aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3622688-84ab-42c6-be7a-a00d4c5e0b8a"
            }
          }
        ]
      },
      {
        "id": "976f5bac-d560-45ca-b308-bd248c2d6b0e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1db5d026-e4d8-48ac-9a9b-f44643ab0303",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d192585d-7fec-43b5-8260-51274b73bde9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09e8a7f3-beb0-475d-85f1-4b4ba7cd571f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a74e5a8-b225-4e19-bb8a-6f128f309d49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec87b385-87aa-4a10-b73e-e0f579e3150f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd560dd9-4647-4697-a4e4-8b4d29049b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8bec3fd-62a3-41ca-a6ab-eb28ec31c52d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c32bd5be-3604-46eb-ac8d-294f6694ee11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2385b664-bbf0-45ea-9f50-0c2403f853dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ffd9c8f-320f-42b6-a7f3-28e1a8a781a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63dc14f1-4509-4bff-aef4-46e3210608c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c103339-6ad4-4176-b443-2837f282ce5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "722e5503-3d62-4b43-990d-4e753ff011f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e18a91a-981d-406e-90de-0b743657a746",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b858e71-5a8e-405a-8b07-faa1fefe8c26"
            }
          }
        ]
      },
      {
        "id": "df746060-71bc-4334-adb8-f2f7d1428f1b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ee29e0fe-440a-49cb-af9e-e71b0cf17e03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac812f00-587f-4693-8dce-1b69a8ff305f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cd5d2ac-0e06-43e1-865f-06ba98ffc8e1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ba2d85-028b-48ac-a9a1-146b26f3282f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "031e39c0-d19b-4475-8a13-d871d04681ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0b3b08-5fa4-4877-bbf5-ff4c2a832dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96a653d7-66b9-4f7a-8c3d-c489699b0057"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8bf5509-44d2-441c-802d-8a9723d29e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4353aa58-76eb-4a10-a227-7a6e2faaa830"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb5ad8a8-91a0-411c-bd38-56d61c28cea9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "496fe1d1-1431-4486-8cc3-d8ead10213d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e53a1b4-aefa-4389-b1eb-ac96f6ec8de5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87e9e806-9647-45a8-8888-baaf942e424e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fcd9db0-bd6d-47b8-97da-09e15af3d1ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40206263-1dfa-4171-a7b2-1ee9449e5658"
            }
          }
        ]
      },
      {
        "id": "20013867-6ceb-43b6-ba43-95dfca87ad54",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62b61ce-0f85-4860-b4db-20e229a0f78f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6afc1d52-efdf-4adf-a0a1-75cacd902c38",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aaa0593f-a539-48cc-a9ba-f9c8e3ed924b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8dc7e09-4b30-4a1c-90f5-f040c56a10e6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12433b75-ca8a-4eb1-9209-b692523f61f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.27368421052631,
      "responseMin": 20,
      "responseMax": 9360,
      "responseSd": 595.5025848858457,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702168733192,
      "completed": 1702168778474
    },
    "executions": [
      {
        "id": "e3622953-446f-4c01-86a6-a76f8ce964f7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3184a74f-4cf1-44ab-b827-6588aa31b3c2",
          "httpRequestId": "afd1b8a6-a96b-4eb2-abd4-34934ed10b1b"
        },
        "item": {
          "id": "e3622953-446f-4c01-86a6-a76f8ce964f7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4bd2761f-d347-4f62-ad25-5e1946ab0ea9",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "4535e96f-0c31-4235-bca7-1dbff0c79a42",
        "cursor": {
          "ref": "12bc29b2-2159-4c39-8cfa-7ebad81f05ad",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6aef66f7-dea0-4b37-b926-df0b099844f6"
        },
        "item": {
          "id": "4535e96f-0c31-4235-bca7-1dbff0c79a42",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "19466a64-3324-450d-80fb-4bc8a5768b01",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "d2cc43a3-5e13-4087-b9a3-dfcde757f572",
        "cursor": {
          "ref": "e6bec870-659d-4962-a652-68e2c98604f4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "02e85268-7564-49db-9f87-506c3f7abcb1"
        },
        "item": {
          "id": "d2cc43a3-5e13-4087-b9a3-dfcde757f572",
          "name": "did_json"
        },
        "response": {
          "id": "62695207-d284-4c7e-b714-9ccfe4411844",
          "status": "OK",
          "code": 200,
          "responseTime": 398,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85386656-bd48-45fe-b90a-2fc5c460b1d5",
        "cursor": {
          "ref": "6b4820b9-8e98-489d-9737-debcf554f0b8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8e36809b-77f3-40f1-bf50-1f8306610057"
        },
        "item": {
          "id": "85386656-bd48-45fe-b90a-2fc5c460b1d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d9a9a17-cb35-49e7-a948-f78640d5069c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85386656-bd48-45fe-b90a-2fc5c460b1d5",
        "cursor": {
          "ref": "6b4820b9-8e98-489d-9737-debcf554f0b8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8e36809b-77f3-40f1-bf50-1f8306610057"
        },
        "item": {
          "id": "85386656-bd48-45fe-b90a-2fc5c460b1d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d9a9a17-cb35-49e7-a948-f78640d5069c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6d138f-b23e-4d83-a901-f8a498b7ebbb",
        "cursor": {
          "ref": "acb574e5-76aa-42ab-8d10-12a5b2444929",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0a17d39b-b4fd-4e23-b780-978b9a06b31b"
        },
        "item": {
          "id": "2b6d138f-b23e-4d83-a901-f8a498b7ebbb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0b67f0c7-5848-4aff-bd31-b87968a538a8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a14c513-4ae8-4476-a4d6-33d0c1d2113f",
        "cursor": {
          "ref": "3312272a-05aa-434a-84cc-cf5122251faf",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e8215934-b8b7-4109-b111-f97f48f30b48"
        },
        "item": {
          "id": "8a14c513-4ae8-4476-a4d6-33d0c1d2113f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e6943aa9-b954-46a6-be2d-6057a737f198",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43ddb45-cdf0-4746-8ffc-24ea2cd217ee",
        "cursor": {
          "ref": "ace72028-68cf-4bdb-926e-32ff44fd0b02",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a4be1d68-65ab-454e-9afd-b63fb4e63037"
        },
        "item": {
          "id": "c43ddb45-cdf0-4746-8ffc-24ea2cd217ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "73d01426-34fc-4679-ab1a-e87ad80d6632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321afc07-041b-405f-ae0c-1549843d2922",
        "cursor": {
          "ref": "4b180d03-eb21-48ad-904b-d8b6f5bb5cd5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e2c2de84-add9-413c-becd-cd0211af77fa"
        },
        "item": {
          "id": "321afc07-041b-405f-ae0c-1549843d2922",
          "name": "identifiers"
        },
        "response": {
          "id": "599928b0-f9c2-42f5-87b8-f9502195de15",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07e5301-9917-4a4f-8c1c-458df9b8e283",
        "cursor": {
          "ref": "1e6c6c51-2cfd-4215-9f73-347520767995",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d0e4be0f-15c8-40ac-84f9-67172665fecd"
        },
        "item": {
          "id": "e07e5301-9917-4a4f-8c1c-458df9b8e283",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64837792-a26c-4a53-947e-cfd43fbe201b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f711b634-55c7-46bc-8c20-4b5d2c4302d8",
        "cursor": {
          "ref": "e2533e9e-23c7-4191-a5b5-5312b733ee7e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2f0dd4c0-27cd-440a-9df9-668fab61b4a5"
        },
        "item": {
          "id": "f711b634-55c7-46bc-8c20-4b5d2c4302d8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "290f40c3-83ba-47f6-8f51-28dd6c049bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f8882-3adb-4aac-abd3-b9aa72bca8a2",
        "cursor": {
          "ref": "589b37da-1e4b-472f-9ade-3e7d9df0464f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ac303ef7-77e8-4865-b746-5c60865756ae"
        },
        "item": {
          "id": "291f8882-3adb-4aac-abd3-b9aa72bca8a2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6ae2aac3-dfa8-4039-a677-07ee661e7c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd5e3c6-4ebd-452a-98aa-7755e5a9c26a",
        "cursor": {
          "ref": "6e240378-1e40-4450-b027-14ab9618196e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "04edd6b5-3ef2-4440-a7c0-9a8147472229"
        },
        "item": {
          "id": "1cd5e3c6-4ebd-452a-98aa-7755e5a9c26a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "697c95cd-154b-437c-8bb3-7815d8273faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02a5a9c-9778-4e2c-94cb-3db9e8b601d3",
        "cursor": {
          "ref": "50254666-e38d-4ba7-a4dd-b71a90e7e5de",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "306fc6c8-93df-430e-9d62-d611c872bf39"
        },
        "item": {
          "id": "e02a5a9c-9778-4e2c-94cb-3db9e8b601d3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8f6a6a03-bc97-4c9f-ab53-9863bbab3cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f4470-310e-472f-a9d9-b4ddb6cbe154",
        "cursor": {
          "ref": "0d4e6ed3-926f-412b-9cf3-3a2f27474d0e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fd8dafed-ac95-469a-aa82-d2cddc77dda0"
        },
        "item": {
          "id": "957f4470-310e-472f-a9d9-b4ddb6cbe154",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "36c5a08d-0b6e-4fb0-9ab2-077af14f0df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a606029-1712-4587-baad-f0120436f340",
        "cursor": {
          "ref": "7f879229-3c60-4aaf-847d-6eac9e2867f2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "703f6a4e-df87-407c-8e5c-2c5593584fad"
        },
        "item": {
          "id": "3a606029-1712-4587-baad-f0120436f340",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "73fdd7de-f881-4bab-b32b-ba117549dbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19913d13-eba3-4dce-b26a-8412138f09b0",
        "cursor": {
          "ref": "5bdbe568-078c-4ac6-a029-4ba24635d137",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "48e547a4-cd75-41bf-b631-017ca7a9e799"
        },
        "item": {
          "id": "19913d13-eba3-4dce-b26a-8412138f09b0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e6b2c5cf-55d4-49ec-8001-2a5bc5bf69d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f289734-b36a-44db-b5e5-dd6ccf98be15",
        "cursor": {
          "ref": "59fd68dd-d4c0-41c0-a4fd-d5c2bc1361eb",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9d33ad00-db65-4fd2-91dc-c57f6f1ec198"
        },
        "item": {
          "id": "7f289734-b36a-44db-b5e5-dd6ccf98be15",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "354da3b1-8219-440a-83da-ed88c43025ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8a701b-b0ac-4706-9ed5-ce6c7475db03",
        "cursor": {
          "ref": "fe031b40-495e-467f-86e7-028bc7bef077",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d2ccf794-b374-415f-af7d-da6c7fdb18a2"
        },
        "item": {
          "id": "da8a701b-b0ac-4706-9ed5-ce6c7475db03",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b53e1c20-73cf-4cde-8e5e-7ace385d8e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be1a046-4950-4dbe-a283-bf46a6cad5fd",
        "cursor": {
          "ref": "bb42f5e0-d2c7-4c4a-9517-aebfd894faf2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9a674bbc-8822-42b7-9bd6-1c40bd4893f4"
        },
        "item": {
          "id": "2be1a046-4950-4dbe-a283-bf46a6cad5fd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "001b8295-ae82-4cbb-8b7a-40afe824e04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057adff2-8463-4106-9b7f-683f0639803d",
        "cursor": {
          "ref": "146b6c3f-9327-4c99-bf4e-c89981a1cc50",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "de4176b9-da55-46f1-a292-21afbcc5aafc"
        },
        "item": {
          "id": "057adff2-8463-4106-9b7f-683f0639803d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "38a1f3cb-6a71-4996-a575-10925d8c2a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8986be-7c8f-403d-84ff-d994902f478a",
        "cursor": {
          "ref": "d625cda2-414e-4854-8d70-6a00d2294806",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2b85a0ea-9657-4ba4-8a2a-570fa6024a7c"
        },
        "item": {
          "id": "dd8986be-7c8f-403d-84ff-d994902f478a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "876a63a9-562d-4296-a45b-2e8fedd4d7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56599d92-7af8-4092-9b0b-fb0cd36a06a6",
        "cursor": {
          "ref": "69fb756d-fea5-4e68-9a00-c93084e7f873",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4894df21-ac5e-4b1f-8d0b-9c13a45f23ae"
        },
        "item": {
          "id": "56599d92-7af8-4092-9b0b-fb0cd36a06a6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b54e2a89-0f3c-4feb-a14d-d2198871f324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0f38d7-f8e5-447e-90de-af43c6eb695f",
        "cursor": {
          "ref": "8ae7f55c-2e9f-4dae-98c5-df92895ed304",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "026500ce-28b4-4635-a332-a4a7099c2057"
        },
        "item": {
          "id": "0a0f38d7-f8e5-447e-90de-af43c6eb695f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f3005428-5f56-45a5-86f8-27e48bc3f319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30f8eff-94c8-487e-ad0b-5a3992246e37",
        "cursor": {
          "ref": "8aaa5022-4c38-47ab-9019-0798f8ef5104",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d2598f1-53aa-45b7-bede-b9a09f42325d"
        },
        "item": {
          "id": "b30f8eff-94c8-487e-ad0b-5a3992246e37",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e27212de-2ba5-41e7-ad4e-e7c5d5582525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0280f7cb-1ea3-46f3-9340-49ad53567514",
        "cursor": {
          "ref": "fac438a4-2234-41c8-bb5b-493e107846ed",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f16ac439-47b7-4615-9e73-2868f8bad024"
        },
        "item": {
          "id": "0280f7cb-1ea3-46f3-9340-49ad53567514",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6f38e0e9-2e2e-4dc1-ae76-dabeacfbda45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2abeb64-23e8-464a-bc54-2f5cb34fd750",
        "cursor": {
          "ref": "7fb92f8a-4788-425f-ae2b-ef00c6d6a1ed",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d335dab2-b6c2-444d-a396-903f94c26482"
        },
        "item": {
          "id": "d2abeb64-23e8-464a-bc54-2f5cb34fd750",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "01268246-dc38-4737-b493-fa6c7b9f48d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9caa89-c984-4c6a-9f63-6bceef738e74",
        "cursor": {
          "ref": "4f7f178a-9680-49b8-b4e5-1c8c33dbd96e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a41f0e6c-0c52-4ef8-8d15-e9da046a02c5"
        },
        "item": {
          "id": "6e9caa89-c984-4c6a-9f63-6bceef738e74",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8e23e871-a7cf-48ad-be64-5fc72deaab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1532a86b-c30f-4ede-9527-12a807374cbb",
        "cursor": {
          "ref": "3e866dba-e3ca-4e81-965c-400370e30ee6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "74ca5f7a-0c94-4765-97fa-98aea7fd4927"
        },
        "item": {
          "id": "1532a86b-c30f-4ede-9527-12a807374cbb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "49f93e9b-0e28-47ce-967c-65ea963f1411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727e6c97-dd34-4d61-a605-3021afa055b9",
        "cursor": {
          "ref": "1ff4ba45-de5e-48aa-ac5a-13029f1a6d0a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d0b153a-7ebf-46ba-811d-501399c6c46b"
        },
        "item": {
          "id": "727e6c97-dd34-4d61-a605-3021afa055b9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "831cf85e-1abd-4c85-8a7f-7dd4d408d9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45451ac-dbef-4d61-b520-a2a8ae4225dc",
        "cursor": {
          "ref": "e6df8e81-2eec-4068-8304-315b87656db2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4e171f5a-74e7-4e1f-a1f5-a91bf956956d"
        },
        "item": {
          "id": "d45451ac-dbef-4d61-b520-a2a8ae4225dc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a6060355-0690-4b76-ad5c-4ef6e19c942c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cde69b2-105f-475a-b3d0-a6670affe10d",
        "cursor": {
          "ref": "bda15ab2-bad2-48d1-b93c-2666c9690cac",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ae43631-f2df-49f1-95ab-8f3d6aa9579f"
        },
        "item": {
          "id": "0cde69b2-105f-475a-b3d0-a6670affe10d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7dd7a0bb-90bf-48ba-92d1-54acf505204f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e515b4-2837-4756-aa53-598cd34ea36c",
        "cursor": {
          "ref": "507ec4ce-a6a9-4a46-bbcb-c811360a6b9a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d566207d-da8a-49bc-8d28-4bb4ed52d966"
        },
        "item": {
          "id": "51e515b4-2837-4756-aa53-598cd34ea36c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "119ecb39-1760-4a71-acba-f57f8191fccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3d7f7b-ed82-4f11-b8b7-abf39b45d7b8",
        "cursor": {
          "ref": "f2d9de0b-1e54-4e6a-841c-732a4cb4a4fa",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "148d43e9-e474-4770-8d10-6ce00f8adc5a"
        },
        "item": {
          "id": "ce3d7f7b-ed82-4f11-b8b7-abf39b45d7b8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "60c95a00-306f-4ab2-9a31-d06f9a5cadd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39165479-2468-40ac-a2bb-0eae8bf78499",
        "cursor": {
          "ref": "ceefa898-fe86-4a71-ae3e-a981ed164922",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e496da0f-5211-4573-8dfa-e77a57fddf2e"
        },
        "item": {
          "id": "39165479-2468-40ac-a2bb-0eae8bf78499",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "990ad107-7f5a-4eae-b869-f0c26130db04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c4a7a5-6509-4e9a-84f9-deb84cd8a945",
        "cursor": {
          "ref": "037ce6f5-de9e-4d8a-a0ba-1f07b36c4802",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0c141c17-3842-4862-88e0-12cb3fca30dc"
        },
        "item": {
          "id": "72c4a7a5-6509-4e9a-84f9-deb84cd8a945",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba90fc0e-4c61-46fa-b6fb-0673f8aea07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8141f7d1-77e5-4e65-b86c-bd559297a2e5",
        "cursor": {
          "ref": "2545bc93-58dc-4402-927a-5c895a746b6d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4b8b3770-2479-4074-a764-09770ab42d6a"
        },
        "item": {
          "id": "8141f7d1-77e5-4e65-b86c-bd559297a2e5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4eb833d6-ff29-4af3-800a-68656a4780b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715a945c-c640-4a4d-98b1-1f9de5d39e87",
        "cursor": {
          "ref": "0b32866a-eec9-4c45-b662-b51ce6cc1af1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "994fc3d9-7452-4024-af77-ff09ebf502c3"
        },
        "item": {
          "id": "715a945c-c640-4a4d-98b1-1f9de5d39e87",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6feb1000-db52-4acc-ae01-6713e50eefe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22dbbb7-16cc-4f17-8679-bc416ad4bf70",
        "cursor": {
          "ref": "74b20d09-72e7-4afd-8f0b-1c28937f1c6d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0add9f27-017c-4f12-9c35-d1ea6bd032d1"
        },
        "item": {
          "id": "e22dbbb7-16cc-4f17-8679-bc416ad4bf70",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c4812fa3-c49c-423d-9e19-2c0723c010ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b75c94e-6fc9-4599-939b-cb793aae96b5",
        "cursor": {
          "ref": "9364998f-d438-471e-8e04-7a60ac3a878c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8f7c610b-e5bb-4006-b9ff-a301252da019"
        },
        "item": {
          "id": "3b75c94e-6fc9-4599-939b-cb793aae96b5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c2bab061-8984-49e6-a260-0154141fe11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f0b64c-7f95-418b-8a30-b177bb71d268",
        "cursor": {
          "ref": "7dabaa66-1aa7-4290-9872-d7de0ff41ec8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4d9a32d4-dac8-451a-84c9-90253d6191da"
        },
        "item": {
          "id": "a4f0b64c-7f95-418b-8a30-b177bb71d268",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "24cb3f07-278b-4fe2-ba20-a31b559716bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86d41a0-6dc3-4b0c-9db5-c566781a5d9e",
        "cursor": {
          "ref": "5f53da60-028a-4cf2-ac89-1a7b03870a64",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d51bae95-f92e-4668-8aa4-8951be9e19cd"
        },
        "item": {
          "id": "f86d41a0-6dc3-4b0c-9db5-c566781a5d9e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c3980e42-673b-433a-9431-13d54fe136b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992a9dfc-c230-4e2d-a5bd-eaa5783f6888",
        "cursor": {
          "ref": "a3fc7d12-d616-4d8c-a645-f7d0de81c0be",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d521c022-2dea-4e22-b5c8-f948bcc0a9e2"
        },
        "item": {
          "id": "992a9dfc-c230-4e2d-a5bd-eaa5783f6888",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f3a7c134-ba7d-461f-bfcb-2a5e00951f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab902f25-9ead-47a5-a55b-80255d779553",
        "cursor": {
          "ref": "e1447908-60f5-4d02-a0c0-f9a15a199458",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3fb9a8c0-8173-415a-a4fa-58701a9d8b38"
        },
        "item": {
          "id": "ab902f25-9ead-47a5-a55b-80255d779553",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3343de66-3dcf-42b2-83ec-5cbcd8a7dc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe79b53-1bc3-4587-bb1a-fc72ace7f4e4",
        "cursor": {
          "ref": "ad457815-d8ff-4f09-8d1d-14eefbc06dad",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "69c20a49-8050-4a9b-8fb7-2652f22a2fdc"
        },
        "item": {
          "id": "dfe79b53-1bc3-4587-bb1a-fc72ace7f4e4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fb23a45d-598f-4dda-9e9a-c9398596870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baa73d2-f804-4c75-8bf8-717abaf8bf11",
        "cursor": {
          "ref": "8ad70072-3f14-4dd7-8834-332629fa8bac",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "11e7b5f2-d7f3-4d9c-8176-da332a45a48c"
        },
        "item": {
          "id": "9baa73d2-f804-4c75-8bf8-717abaf8bf11",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2bd3568b-fcda-48e5-b198-bbabebafd4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726d010-1161-4d82-86ca-d71ca088635e",
        "cursor": {
          "ref": "24f13173-fbfb-4f3e-aa23-75c320299dc2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1ea96aa1-c5e3-4ff1-848f-db72fb6c1992"
        },
        "item": {
          "id": "b726d010-1161-4d82-86ca-d71ca088635e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a077c6ae-91c7-40cb-a5a3-3a6a9e3fcdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d387f6-8b4e-4924-9db3-98dcec9b64d8",
        "cursor": {
          "ref": "f0a0a881-2608-4200-9d91-1cf06c2d8e9e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b3bc0d01-d6ab-482a-9487-d657ae4519db"
        },
        "item": {
          "id": "c5d387f6-8b4e-4924-9db3-98dcec9b64d8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b90fcf77-fc2d-4f26-bbae-ade45d63667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd193b-af72-4115-b95e-4cb5f85ab686",
        "cursor": {
          "ref": "4b25b76b-5c31-4f1b-bd78-dc5ecb60663c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a52b8d4e-7217-47aa-9ebf-d9cd281c677c"
        },
        "item": {
          "id": "84bd193b-af72-4115-b95e-4cb5f85ab686",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d101519d-3fe6-46b6-aa4a-bed98cc021c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3572f7f0-9a32-4d8f-b078-7e5ad364017d",
        "cursor": {
          "ref": "e5995e6f-a685-486d-adc5-345dff5067ec",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c3485b0-2f90-41e0-b7da-099ff3bae5d0"
        },
        "item": {
          "id": "3572f7f0-9a32-4d8f-b078-7e5ad364017d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "02199915-7213-498b-99fc-ac6a5509528b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b424087-7a9e-4131-a74d-db4de6aef9bf",
        "cursor": {
          "ref": "1c497998-1c97-46bf-83ef-1b32a05f98b4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7183300a-7b68-4497-b488-a1bfab96e359"
        },
        "item": {
          "id": "4b424087-7a9e-4131-a74d-db4de6aef9bf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50080184-f5fe-4550-a31d-db5014c35d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a765a2-935a-4d9b-a743-9bebac9f7409",
        "cursor": {
          "ref": "bb716869-956d-4d13-8e32-5fd801dfe5e6",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6e08cdb9-bb28-4bee-8fdf-be4043609ca4"
        },
        "item": {
          "id": "b0a765a2-935a-4d9b-a743-9bebac9f7409",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "22996cec-6231-4f6e-b863-ca5e60dddb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4970001-c03d-4dec-b9d5-30e59ff8ab7c",
        "cursor": {
          "ref": "ad0a969e-643f-4802-9f1a-5edf4ae47c97",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5c0717ca-2fef-4eb2-96bf-07df1042a620"
        },
        "item": {
          "id": "f4970001-c03d-4dec-b9d5-30e59ff8ab7c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "77a2627f-efa1-4eb8-80f8-c25196ec5af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a50da01-9bfe-4612-adfb-c0c2d59b190d",
        "cursor": {
          "ref": "1a12b186-1c62-41ce-9137-cdfb759bed76",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "796539ec-c30f-459f-80a7-2505f3346f17"
        },
        "item": {
          "id": "4a50da01-9bfe-4612-adfb-c0c2d59b190d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e7861a6a-6c50-47d4-9343-6121161203ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8cfc3d-4877-4031-b9e7-60663d7bc3d5",
        "cursor": {
          "ref": "821d60ec-2e59-4914-b27e-44ff9bb87fb5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "48fbfdce-3673-4efa-86f7-a5fe8797186d"
        },
        "item": {
          "id": "ea8cfc3d-4877-4031-b9e7-60663d7bc3d5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4f304f64-ea54-4fd9-bed9-6d455e9b0d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bb6451-b45f-4926-9756-d412b9283905",
        "cursor": {
          "ref": "a78d8a01-9f3e-4860-8263-61c7e005297e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "26a16212-6343-4d9f-96e7-82b9f7db2fc7"
        },
        "item": {
          "id": "19bb6451-b45f-4926-9756-d412b9283905",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "36e7af47-f6cc-4cf8-a764-ac9d062c6bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaf929e-2dbf-4455-8b01-71fed303ad0f",
        "cursor": {
          "ref": "015e1a3a-c655-4e04-978b-4a4e116bb2a5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "815789a8-a7ca-4b63-9d36-cc1451f9610b"
        },
        "item": {
          "id": "dcaf929e-2dbf-4455-8b01-71fed303ad0f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cb3d2211-a36c-4647-ba38-95668b4295d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d91e9-1a75-429a-ab33-dde4ab6ce27a",
        "cursor": {
          "ref": "43057e92-21c3-4e1e-a0fd-3b832837af22",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2a543f98-98f4-47c2-aa42-50817dbc3b08"
        },
        "item": {
          "id": "6b8d91e9-1a75-429a-ab33-dde4ab6ce27a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6b2f3fc6-d96d-407a-b9bc-bd7ca25e61e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25845a11-be24-4ee0-9d69-bd5794b58df4",
        "cursor": {
          "ref": "6171080b-ce1c-4fcb-96dd-078adca2b0ba",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "92f88326-f630-4466-96ed-680732da1ca8"
        },
        "item": {
          "id": "25845a11-be24-4ee0-9d69-bd5794b58df4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c6d0354-72f3-491e-80bc-d3ce08c0edb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f72087f-c879-486c-84ee-b1b763423947",
        "cursor": {
          "ref": "7024adf5-7727-4108-943b-d44c143494be",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "63062fd7-9d1b-4f4a-8b61-4001cb3dbca1"
        },
        "item": {
          "id": "5f72087f-c879-486c-84ee-b1b763423947",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7f0ad442-86fa-498b-8408-3f12a1679efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb1d6f9-4d63-45b8-abd0-0462d038a10e",
        "cursor": {
          "ref": "0f09ae29-63ae-4269-a00d-df871b5ab301",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3de2dcf4-e70a-44f3-badc-702fd6c8ed89"
        },
        "item": {
          "id": "bdb1d6f9-4d63-45b8-abd0-0462d038a10e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "50cbe34e-e985-45cc-8468-d4c0cafbab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7984ac14-958a-4c26-997c-688c80ae382f",
        "cursor": {
          "ref": "e8443e06-1b44-4c78-bc25-8e69809ff387",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "50c47e1e-7791-4d16-9369-66e8c7064bdf"
        },
        "item": {
          "id": "7984ac14-958a-4c26-997c-688c80ae382f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "60971157-ba40-458b-9be3-e63c23c3325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc65539f-866b-44cf-bdb1-8884c6ee674d",
        "cursor": {
          "ref": "323ae9bb-c6b4-4b81-822f-ecd246bba47e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a5b7f922-8a7b-4b56-be44-a04bad3bac8b"
        },
        "item": {
          "id": "dc65539f-866b-44cf-bdb1-8884c6ee674d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fb4fedb8-e704-45aa-abc9-e9bf55658194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b95e169-616b-49c0-8766-f5e6aafb1cae",
        "cursor": {
          "ref": "ff8f0877-bf7b-4c55-a827-e62bc5e7914d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dd514ee1-9850-4691-8b4c-60db4a0638c5"
        },
        "item": {
          "id": "3b95e169-616b-49c0-8766-f5e6aafb1cae",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bc0f6158-5120-443c-83cc-4652ce802b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be66748-4bc4-451c-9d03-8dd080716fc9",
        "cursor": {
          "ref": "dc9617a9-7a09-452b-973f-aaecf2432c00",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a8429bb8-36e6-4891-9772-9d651aec58b5"
        },
        "item": {
          "id": "2be66748-4bc4-451c-9d03-8dd080716fc9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7a68760e-9a7a-47a3-a7cf-c1733735442b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3c06d1-26d0-4d38-92ca-4d4cbba6fa34",
        "cursor": {
          "ref": "21d9da6d-9cc8-4535-97c7-d095a666b2c4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8783ee59-d671-48e6-b764-b8820b867dbb"
        },
        "item": {
          "id": "ec3c06d1-26d0-4d38-92ca-4d4cbba6fa34",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a351f48b-c7f4-45f6-94a8-c8bca6a68233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea7357-5e6b-44c1-9900-6922fd12af27",
        "cursor": {
          "ref": "1989268f-37b4-4e63-99b0-1857054ab959",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cb7ed617-4218-4909-a62b-4b14e8b73b18"
        },
        "item": {
          "id": "93ea7357-5e6b-44c1-9900-6922fd12af27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "75633b05-0dbf-43da-9071-16d5fcdc9c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acde592-cf4b-4691-9ae0-244a6860bda3",
        "cursor": {
          "ref": "3d65c9a9-c491-4f52-b801-44147ab80d0c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1de4920-dd72-41cd-9501-a6df63d487b3"
        },
        "item": {
          "id": "9acde592-cf4b-4691-9ae0-244a6860bda3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "92cc5fbf-874c-4238-9c3f-d743b204238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21274f5d-aefe-45c2-91dc-986a074434de",
        "cursor": {
          "ref": "83c0d86a-8e40-4892-a44a-cbb4c2e048ca",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "554aebfa-d636-40f7-a0ba-69a594d7352e"
        },
        "item": {
          "id": "21274f5d-aefe-45c2-91dc-986a074434de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd124df2-0bdc-472e-8a71-8ac7913bd751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb58e0dc-49e1-44eb-a0f6-f8d27e9cbf8d",
        "cursor": {
          "ref": "daaaa5ee-322f-4133-a9d0-bd6d8e1265dc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a9e1c5fb-5f50-45dd-9b90-222fb34ecac6"
        },
        "item": {
          "id": "bb58e0dc-49e1-44eb-a0f6-f8d27e9cbf8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "858afa90-1f8e-462c-92d4-62a1f080bfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d634c6a-cc5e-4f31-aaf1-cce0fa35c2b9",
        "cursor": {
          "ref": "fab57a48-36a2-44d7-bbbe-fb4beced0c3e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fd82ca05-f7c8-4ad9-a8e3-f512ffdfa406"
        },
        "item": {
          "id": "7d634c6a-cc5e-4f31-aaf1-cce0fa35c2b9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e098d8b8-ac4e-44be-9acd-56f0c8f8634f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ffa009-fc20-435a-8fe6-392fb9a33dbe",
        "cursor": {
          "ref": "9d57c6d4-957e-4527-8c99-5cb6e59f6172",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d94a900-0c08-45b5-9659-2c7ba108c544"
        },
        "item": {
          "id": "67ffa009-fc20-435a-8fe6-392fb9a33dbe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8e8e3864-5a62-4b9f-ab97-900ff16db2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b048e217-ff92-488a-960d-ec62ec8039e7",
        "cursor": {
          "ref": "c06eb82d-52a3-4c64-a489-9d1cb0857744",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "51b2f946-b3fd-4ed1-8b9d-41127f7aee5c"
        },
        "item": {
          "id": "b048e217-ff92-488a-960d-ec62ec8039e7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f5c8e311-a440-4951-8aa2-901d81d15a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8900eb0e-ee1c-434a-bd82-c62265faadfa",
        "cursor": {
          "ref": "2548fd30-3a1e-4d45-ba2b-8eeed495e0f4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "72d6c829-8d42-45f0-b4ab-9be4a1f031f5"
        },
        "item": {
          "id": "8900eb0e-ee1c-434a-bd82-c62265faadfa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e0668157-4537-456d-bd27-9f7e2a9ab88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1347343b-3b2c-4015-b18a-c8a063648fa4",
        "cursor": {
          "ref": "ee83f839-ca95-4401-81fc-22c99987fbfc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ce2406c2-7b36-475a-aa41-4d95af643428"
        },
        "item": {
          "id": "1347343b-3b2c-4015-b18a-c8a063648fa4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a363931c-e74d-4ae4-b04e-daf49a376daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8997d0d-8981-4848-b5d5-a8e9778354ab",
        "cursor": {
          "ref": "5cdbe0a2-8afb-4968-9113-32553a62bcb7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b78ac4ff-8e7e-4900-a8a1-1736a31ae58a"
        },
        "item": {
          "id": "f8997d0d-8981-4848-b5d5-a8e9778354ab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b1aa2054-7d7e-4209-a937-1c1bb44f9771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db299a1-8da6-47df-81d1-b1f9e649cb65",
        "cursor": {
          "ref": "74a92689-3500-40ef-acbd-9084485611f0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "31744078-483a-4d27-8881-c7cda0220ffb"
        },
        "item": {
          "id": "6db299a1-8da6-47df-81d1-b1f9e649cb65",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d65a0c12-42c2-4a75-ba7f-8cd9cada94d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658647e5-0977-44cf-aab1-1816df567ce7",
        "cursor": {
          "ref": "60fcaedb-3ddf-4e78-954a-dbf3b7a5ee52",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d04b2b1a-7ddc-4a3a-a8e2-4286e3bc1cb5"
        },
        "item": {
          "id": "658647e5-0977-44cf-aab1-1816df567ce7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a4491bf-8126-45b4-9fb4-de90b5cf03fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9854808d-f02e-4d78-802d-84915fe1d37e",
        "cursor": {
          "ref": "4369f625-8f8f-4f54-9abb-cb33ccfcba5a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62e12aae-7d60-4e08-b8a4-d5f192086dd3"
        },
        "item": {
          "id": "9854808d-f02e-4d78-802d-84915fe1d37e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6040b099-0a6b-4664-b172-8ae1379acd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9bcf99-1189-41b3-b79f-fb044a955f4c",
        "cursor": {
          "ref": "f492ab52-e1a3-49ba-9032-a0aaf7d60663",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "85ad8bde-b216-41bf-9d12-17467bd9e90f"
        },
        "item": {
          "id": "6a9bcf99-1189-41b3-b79f-fb044a955f4c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3b88ab30-4d85-4e49-acc3-098b7e81b5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e6714-2359-4c8d-9dd6-d4030a45f478",
        "cursor": {
          "ref": "f44b8cef-3ebe-4c08-ac86-3823db4f8f70",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5f0478cf-5413-48c6-99d5-90c733ada089"
        },
        "item": {
          "id": "d20e6714-2359-4c8d-9dd6-d4030a45f478",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2ef0d15d-603b-472e-9bf9-4980a6b6b448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4217db68-a0b4-4b7f-84d3-8f44b086af13",
        "cursor": {
          "ref": "5d60b272-8447-4423-b04e-1f5495153d9e",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aca47e18-b90d-4d3c-b58d-bca8864310af"
        },
        "item": {
          "id": "4217db68-a0b4-4b7f-84d3-8f44b086af13",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a6b62a38-99d0-41c1-8c98-86d18177e884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c81f48f-00cc-4390-a0e7-3cf76abcb052",
        "cursor": {
          "ref": "6b6cfb39-4d22-4047-acef-af2cbda8a6ba",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cfd63a46-2523-41ba-b8f6-adb79e1edf56"
        },
        "item": {
          "id": "0c81f48f-00cc-4390-a0e7-3cf76abcb052",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2ea16507-ab49-4967-8563-7b9c333be4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e911f7-c2ab-4e42-8cec-ae597e704ed3",
        "cursor": {
          "ref": "92c62514-5bda-4bb4-b412-59ec244825b2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bf63b53b-45f5-4a35-8319-8b02725e092d"
        },
        "item": {
          "id": "f3e911f7-c2ab-4e42-8cec-ae597e704ed3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "959e7bbf-8d4f-400e-aeb5-0e062127a7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c34fe-bd29-4663-a78d-ccf7c5f7d5ac",
        "cursor": {
          "ref": "956a77b0-df2d-492c-a8e6-4b863021b0fb",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "83304104-a5d3-4e9c-9fc6-7f252290330d"
        },
        "item": {
          "id": "5c9c34fe-bd29-4663-a78d-ccf7c5f7d5ac",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6300da2d-9b4d-4c0e-b291-82be0ffce56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6c64f3-4083-498c-b8fe-840cbfc6a782",
        "cursor": {
          "ref": "0618c78a-61c5-4244-a164-78ffd753a267",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "511fc82e-82b5-4f56-bb46-6fcf1de2496f"
        },
        "item": {
          "id": "4c6c64f3-4083-498c-b8fe-840cbfc6a782",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ec50cf1e-f8d4-4e50-a406-70266070f0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6851bf2f-bad9-4770-b4ea-de9be4f33b4b",
        "cursor": {
          "ref": "6368c5d9-88ed-427a-80b7-05c7867ad61d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "033edbb8-3168-42ea-b2f6-3330c6d99b45"
        },
        "item": {
          "id": "6851bf2f-bad9-4770-b4ea-de9be4f33b4b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a6c0652-1cf9-4a14-90cf-a13361b5e3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1782034-16c7-440b-bb4a-db1527843e09",
        "cursor": {
          "ref": "a4cd64a4-3200-488f-bfc8-aac514a7e88f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e77df4a6-9787-48c3-81cd-70604644bbff"
        },
        "item": {
          "id": "a1782034-16c7-440b-bb4a-db1527843e09",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0dfa7954-553d-4372-9f1b-a087acc8a2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c486a70d-833f-43fc-80ec-8d67e50c0e9e",
        "cursor": {
          "ref": "267ec23c-7468-4a0c-a60d-2c1146e60e45",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "770cf889-6eff-46e2-a033-cdd711f76fe6"
        },
        "item": {
          "id": "c486a70d-833f-43fc-80ec-8d67e50c0e9e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a1ea8c26-29e3-4c31-812f-96afa6d4cf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d7bd59-240c-48fa-8597-cef9a1fb4574",
        "cursor": {
          "ref": "6bec6a35-a12d-40e7-aa42-a128e51cca19",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ae7d1f4d-e473-4842-b77e-430921786fe8"
        },
        "item": {
          "id": "91d7bd59-240c-48fa-8597-cef9a1fb4574",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2c357e14-e4de-4b9f-882a-5842e8ec891e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4909df94-9e92-44d2-a613-b1c5020672a0",
        "cursor": {
          "ref": "d324be6e-27c1-4377-b672-4ab05fa2b9ad",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a3eb1c50-a506-45d7-86ae-5e0e8a7abb57"
        },
        "item": {
          "id": "4909df94-9e92-44d2-a613-b1c5020672a0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a096706b-4184-4ad8-ae02-afeacf2f0921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdfc1ab-4b68-46d6-bdc9-83ba3706630a",
        "cursor": {
          "ref": "78441135-9737-4e37-bfc5-f631745bdc4f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd9c57f2-6289-4a64-b65c-d3d3d9262650"
        },
        "item": {
          "id": "2fdfc1ab-4b68-46d6-bdc9-83ba3706630a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "72c45ecc-a900-4e38-b037-6bbbfabe81bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9207e1bf-6d59-4acf-834d-1fbe08a3f2ac",
        "cursor": {
          "ref": "4aa1a86c-5d5c-4482-bb80-02513ac8e06e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c45796ef-f8bc-4187-b1fb-3bc12163411a"
        },
        "item": {
          "id": "9207e1bf-6d59-4acf-834d-1fbe08a3f2ac",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bf302016-8156-4d2d-a40a-282e8fce8820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0914ce60-b026-414b-a50c-9e5661578f22",
        "cursor": {
          "ref": "37ed0cb8-ed4b-4e81-b89b-33b6c283d3f2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f7adb4bd-cf20-43c3-b68e-f4655a04d400"
        },
        "item": {
          "id": "0914ce60-b026-414b-a50c-9e5661578f22",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f9366092-844c-4f98-9146-11158f3cc3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8930bbe6-9b89-4e39-8e25-ceb58e8639b6",
        "cursor": {
          "ref": "f141173d-bb7f-447d-8f26-fd0a7b59bdbf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d8463581-4ce0-444c-819a-6967a883fb8e"
        },
        "item": {
          "id": "8930bbe6-9b89-4e39-8e25-ceb58e8639b6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8e651c24-ffc8-4161-858a-536839a5edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf4fb3c-b764-4e68-a434-551eadc1f1fa",
        "cursor": {
          "ref": "f31dc803-926f-480f-984a-943267d98229",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3bff03a-6993-485d-b93e-c8b21efd2568"
        },
        "item": {
          "id": "1bf4fb3c-b764-4e68-a434-551eadc1f1fa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a9908c67-9496-4962-9682-30d0fa9e625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5a7a9b-d89d-4235-a2e0-51c89dce8caa",
        "cursor": {
          "ref": "37b348f8-8b66-4e59-90f2-7ff226fac600",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0e34ff4a-a534-486c-81cf-f28637d77f66"
        },
        "item": {
          "id": "1c5a7a9b-d89d-4235-a2e0-51c89dce8caa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4d86e346-98d9-4391-a86e-c8c6d7538a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bab636-f226-45d4-847a-d4bc42063e80",
        "cursor": {
          "ref": "64c458d4-34fb-4dd5-bb96-9083e3f0e2e3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9769fa5c-c8c6-4ae5-ac7c-5446a9d9b095"
        },
        "item": {
          "id": "13bab636-f226-45d4-847a-d4bc42063e80",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "29c7ce71-5f92-4346-b9a2-22bf2cce6d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf8cb75-1b94-43ee-8938-97573f3b843e",
        "cursor": {
          "ref": "f083aecc-f2f9-415d-9fe9-3ce932e090ad",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cf075f18-6757-4c29-aa2c-d1be772053f2"
        },
        "item": {
          "id": "bcf8cb75-1b94-43ee-8938-97573f3b843e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8d0ec476-3962-4e5d-95bf-8e25e0f8777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21679f6c-548d-47ee-9605-d75e56ad9b72",
        "cursor": {
          "ref": "752e00f3-fb04-44f2-8c12-c979470be26c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "907c08b3-955f-428e-9ac9-60f8d180b415"
        },
        "item": {
          "id": "21679f6c-548d-47ee-9605-d75e56ad9b72",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "02b930fb-7cda-4404-92e4-767390bbd257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dd7745-7857-4064-b904-e91d781de15b",
        "cursor": {
          "ref": "54212b96-fa71-4c58-b05a-e42db2550207",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cc78fb55-96fc-4c9e-8bc9-68febe39204e"
        },
        "item": {
          "id": "e4dd7745-7857-4064-b904-e91d781de15b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6a2849ff-3540-4c4f-b0dc-97979940ab1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a67d4a-9ffa-4b43-b960-7fbf6e6a07d5",
        "cursor": {
          "ref": "84c48069-a089-4c24-92aa-73352d61e114",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e9b2bcc8-5dd4-4eb8-b897-a911e6adbe85"
        },
        "item": {
          "id": "41a67d4a-9ffa-4b43-b960-7fbf6e6a07d5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9134d7a1-6daa-43a8-b2ac-1ada730af3b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a9ab42-9bf8-4f50-a464-d0f4538d3234",
        "cursor": {
          "ref": "00758629-6683-472a-8791-4cf0b5e23122",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "70427673-3614-4b97-a433-2f48a1e6e71e"
        },
        "item": {
          "id": "d9a9ab42-9bf8-4f50-a464-d0f4538d3234",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "70107c5e-c96b-47f3-80b2-9fa03f93d7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "71bf65cc-791d-4066-a83a-0456b3a656d0",
        "cursor": {
          "ref": "cd6022b1-00d5-4263-bd86-b7eec25bf885",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f8f3123a-59fa-4709-8398-2bfde47902b6"
        },
        "item": {
          "id": "71bf65cc-791d-4066-a83a-0456b3a656d0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c09d219c-bbf8-466f-aa32-35c966f21ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eac71791-5376-4a81-a846-e82dc44fc057",
        "cursor": {
          "ref": "84f8a118-d212-4959-939f-4a1b48220d55",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e477f32c-6f76-4de6-82f9-1f9e2ab5933e"
        },
        "item": {
          "id": "eac71791-5376-4a81-a846-e82dc44fc057",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8bffaba5-a0f2-4092-8ba1-0bddf37d1959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8a4e6b4c-305f-415b-90e5-f3e65097ca2c",
        "cursor": {
          "ref": "0fb8bcb1-66e6-4ac2-adf1-7bc06436c2aa",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0dab21a5-397b-47da-a9ac-5c884499e7fe"
        },
        "item": {
          "id": "8a4e6b4c-305f-415b-90e5-f3e65097ca2c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b693ec97-b0de-4ba5-bf0d-7a1a46d45a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "95fd0170-3503-4d93-be1c-ec66b23d47d2",
        "cursor": {
          "ref": "20a2ac31-b58d-4e8c-b9ca-dcd8b7ba4ec0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "612e425e-39ee-4906-ad47-cdf1c9b5b4d8"
        },
        "item": {
          "id": "95fd0170-3503-4d93-be1c-ec66b23d47d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "12840fe4-c039-4207-87cb-f1db0058b44c",
          "status": "Created",
          "code": 201,
          "responseTime": 9360,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bf75f0-000a-411a-85bf-f1b862903dfb",
        "cursor": {
          "ref": "01e391fe-8d99-487e-bd8e-9d2a452bbd87",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eebdb0a5-0ada-400e-97c7-a087db6071a9"
        },
        "item": {
          "id": "42bf75f0-000a-411a-85bf-f1b862903dfb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2fd15fe7-e3e2-4e7e-b10f-2649f2f2cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "78e2e68b-ace8-42fe-9b66-3fba220d2ac5",
        "cursor": {
          "ref": "5bdf587c-3cf9-4b25-9e0b-ab658e1b8899",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "40e89911-8838-4a4c-8ebc-b640742723db"
        },
        "item": {
          "id": "78e2e68b-ace8-42fe-9b66-3fba220d2ac5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cfcef46a-7e47-463e-ae0c-da0512782822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4b0432ac-1cd3-4243-b11a-1f65ed8d8922",
        "cursor": {
          "ref": "00f6af65-fc8c-4483-808d-a8f7f5a7b46d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aabd1e5b-69d2-4e9f-88cb-4bb0a8c1d35b"
        },
        "item": {
          "id": "4b0432ac-1cd3-4243-b11a-1f65ed8d8922",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5a70c1b-242f-4832-b72d-852587871664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef2df99-6350-4c28-b341-c0da406dfd85",
        "cursor": {
          "ref": "f7f9e0ef-13a6-4d6e-9de9-72f5d80a2afe",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58593010-c300-49f6-9e25-b3a9a57a2eb8"
        },
        "item": {
          "id": "fef2df99-6350-4c28-b341-c0da406dfd85",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4df10605-eb78-4fe7-9fbb-4ed87c5c801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f05094-d286-4506-91c2-5e2e1511fe38",
        "cursor": {
          "ref": "bc4900eb-514a-47e1-9445-f99255c7e11f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b5bffc3a-6f07-43c0-b168-250d3ee55bff"
        },
        "item": {
          "id": "78f05094-d286-4506-91c2-5e2e1511fe38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "32cbd852-bc18-4a4d-b32a-fb6766de9c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab2321c-3754-43de-beca-bedccbf5d5c2",
        "cursor": {
          "ref": "fa679e0d-cef7-4418-9057-a2ec092c05ef",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4bf86c4d-8b59-4787-87f2-623d39677f84"
        },
        "item": {
          "id": "0ab2321c-3754-43de-beca-bedccbf5d5c2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a709de49-756f-4790-a94c-8584dc0790c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b526728a-450f-436a-868c-8111b72af31c",
        "cursor": {
          "ref": "bcc16b4a-d7b9-48fb-b737-e5a6b07e3bf4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2666941e-1f85-4fbd-a578-dc526934a20b"
        },
        "item": {
          "id": "b526728a-450f-436a-868c-8111b72af31c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "95320350-eef7-4aa1-a317-794ad6a0da7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26478377-a2dd-48b7-b6fb-e70e84cdeb73",
        "cursor": {
          "ref": "34519f84-feb2-4b12-86f5-93ce542cc123",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2aa5741f-50e4-496d-aa8f-f85554bc3fd8"
        },
        "item": {
          "id": "26478377-a2dd-48b7-b6fb-e70e84cdeb73",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "401b4266-b03c-422c-b888-9a9ac9dc42b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ad9db9-f405-49fb-87d0-5e220c14c2ca",
        "cursor": {
          "ref": "fe27ec07-8083-437e-b6df-980f5641235d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "62c29ecf-defb-4a43-bc46-11679ca85b7a"
        },
        "item": {
          "id": "50ad9db9-f405-49fb-87d0-5e220c14c2ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b43b03e2-9de8-4183-924a-49233cb4aa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343f5bad-e591-4bde-9a79-6da9e47d3b99",
        "cursor": {
          "ref": "ae102fa1-b30b-4a31-b7a2-ea5236a693e5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea6aac8e-59b0-4ba8-8e6d-689afa6e3c2a"
        },
        "item": {
          "id": "343f5bad-e591-4bde-9a79-6da9e47d3b99",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "75a71c14-7098-4a63-b143-5fb6fbb16c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e81e5-2b4d-495e-a7db-b4502658ddfe",
        "cursor": {
          "ref": "f80fdb4a-7433-4c8d-a599-2f0968e773d8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13e35ec1-ae9c-407e-8ebc-c7668c380463"
        },
        "item": {
          "id": "419e81e5-2b4d-495e-a7db-b4502658ddfe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "03466cc2-7758-42ad-b7cf-d587e377dd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e26de4-22b5-4d7b-a440-d0498445b18d",
        "cursor": {
          "ref": "79a287b4-3a29-4f95-ad2d-c8ad3a6978a0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3b3148d3-3dd6-4a7a-82d4-015d044ab0b4"
        },
        "item": {
          "id": "e3e26de4-22b5-4d7b-a440-d0498445b18d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "34551976-dbde-409f-9e4c-ff2779d45f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425d1809-16e8-4787-80fa-cc19f438f73b",
        "cursor": {
          "ref": "1d1fd03f-8f16-441f-b5a3-c5fed93d1e71",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cff1a9c2-f3cf-4458-9d6e-a6ca79312877"
        },
        "item": {
          "id": "425d1809-16e8-4787-80fa-cc19f438f73b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "26b79d00-d1f5-4a2f-96f9-788e780264c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5952047-4bd0-4d2f-a28b-73772e6ef98d",
        "cursor": {
          "ref": "8699c280-ecb9-4a5b-afe4-b3529f520c17",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bb74bf18-8782-465d-990d-33e58a73e456"
        },
        "item": {
          "id": "c5952047-4bd0-4d2f-a28b-73772e6ef98d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dad8773e-8539-49ca-8662-705e3e2dffa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c705e609-70d0-4e95-a460-52734d271e39",
        "cursor": {
          "ref": "d2c53457-3883-4ffe-bdf7-5f07040885f3",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9fb2222a-f184-4aee-a734-a365160b245e"
        },
        "item": {
          "id": "c705e609-70d0-4e95-a460-52734d271e39",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "089a2597-8bba-43c7-87f9-d2229183e21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda4c77f-af7c-44bb-8bbe-7edd8494f04c",
        "cursor": {
          "ref": "ac7b91f4-fb06-41ae-bfb5-ba5158afffe7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "83062203-0cc3-4e7c-9491-e2525bb0d497"
        },
        "item": {
          "id": "cda4c77f-af7c-44bb-8bbe-7edd8494f04c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2870c9fd-3e4d-4896-8d3a-b44fb5c7b6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54e06c6-5d85-466c-a12b-18478b563507",
        "cursor": {
          "ref": "2bb57dc1-ab1a-41f8-a29d-1ed768b10885",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "edb3fb21-8ee0-46bc-abcb-eced9729b163"
        },
        "item": {
          "id": "f54e06c6-5d85-466c-a12b-18478b563507",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4732b7a8-e387-4ceb-8ab2-1b9d350b4e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bda850-5372-4427-a200-570f87ede24a",
        "cursor": {
          "ref": "3e4b66f5-226c-4084-a339-088259f6364f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6646885e-8945-4fca-91a8-d6249923658f"
        },
        "item": {
          "id": "d8bda850-5372-4427-a200-570f87ede24a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "46add3d1-8122-412e-9afa-80c91d6ef2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99401e56-1c4a-4a75-8531-3865740e4b9c",
        "cursor": {
          "ref": "891dc359-3006-4121-86b3-953966fc3ef6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "447bc898-5913-4669-ab7a-8849022c85d5"
        },
        "item": {
          "id": "99401e56-1c4a-4a75-8531-3865740e4b9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "71c940fa-238e-46a5-8ff6-10bd649352c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ce9017-8e1c-41db-9f7a-d6316c471e2e",
        "cursor": {
          "ref": "65dcb23a-cc8c-4ccf-a986-f14e68103b98",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "954692c1-b03e-4d94-9f9a-10ac66b4601b"
        },
        "item": {
          "id": "12ce9017-8e1c-41db-9f7a-d6316c471e2e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "780c30a0-4c9a-4ab1-9ae7-e667bccc7b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4277eeca-c406-4099-a34f-17e571f75284",
        "cursor": {
          "ref": "66daea0f-297a-47ef-b492-8788d2b35028",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d061a5c-64c0-4154-97e7-9ff41c51e15b"
        },
        "item": {
          "id": "4277eeca-c406-4099-a34f-17e571f75284",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "df41084b-eaee-4ecf-9b41-0fb612f7703c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9423771-953b-4f94-b6e9-64821b98197a",
        "cursor": {
          "ref": "5834c79a-fe96-479e-ad16-c0c2c32368a4",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f598fae7-542b-4812-9d19-4644e8f4a6da"
        },
        "item": {
          "id": "e9423771-953b-4f94-b6e9-64821b98197a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "239570c8-24c9-4844-93a2-dae1e1163273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb54b012-6156-4c9c-a07f-10c29fb99b57",
        "cursor": {
          "ref": "db74dff5-2a6d-40e4-a4c6-209380a19c74",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b54d19d2-6417-4971-83bd-ef2d99af8d5d"
        },
        "item": {
          "id": "cb54b012-6156-4c9c-a07f-10c29fb99b57",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1751c769-84c1-4fda-ab9b-d89826473d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d497c40-d91a-4d05-8834-ad1fea497314",
        "cursor": {
          "ref": "2e759fc7-c3a6-42b6-bfda-d584cdf5e47d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b7d412db-54a9-4efd-b826-c4c01ad586fa"
        },
        "item": {
          "id": "6d497c40-d91a-4d05-8834-ad1fea497314",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9fef0608-4ef9-4030-865c-1e09a1d374af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47994711-d3f7-4733-9720-a68fc6189f81",
        "cursor": {
          "ref": "68cbb31a-ddb2-496b-baa9-ca7700a527c1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb5a2fdd-19ff-44c5-b18a-60fc11ad89e5"
        },
        "item": {
          "id": "47994711-d3f7-4733-9720-a68fc6189f81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0a4c207c-bdc0-4a1a-a1be-8589eb03c75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19155059-3493-4040-aa30-765edbd857b8",
        "cursor": {
          "ref": "de90950c-a5b9-40fe-a444-4d31905809e4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "856ed08a-8b5e-45b0-930d-d0d8926464aa"
        },
        "item": {
          "id": "19155059-3493-4040-aa30-765edbd857b8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ae8a51b8-b19e-40cf-85f9-71cd72e14925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa366f21-b76d-4358-849c-1b32b3e2e4af",
        "cursor": {
          "ref": "9b4a3bc9-1740-4e9b-b5b2-42532db1881f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8f1848dd-5f3e-4aa2-b59a-362ae3134846"
        },
        "item": {
          "id": "aa366f21-b76d-4358-849c-1b32b3e2e4af",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1f8bc63-b5d6-4090-aa72-dcbb157a54c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452490a5-6408-4f8a-86c2-0f2d32640c74",
        "cursor": {
          "ref": "664fdacc-32c9-4f6c-8395-93402c39088f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "490d4101-a374-4c4b-a0dc-107101b065bb"
        },
        "item": {
          "id": "452490a5-6408-4f8a-86c2-0f2d32640c74",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "385352fc-cf28-4d94-b64d-2e704c6a7dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343def6-3c2e-4564-846e-e96bd37872c9",
        "cursor": {
          "ref": "fc68314e-efb5-488d-87cb-81fdb1256a6f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9e922a58-edbe-4689-8534-be46bcce636f"
        },
        "item": {
          "id": "0343def6-3c2e-4564-846e-e96bd37872c9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "16ea7adc-1bb8-4461-9c52-f84194fc86bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e95c78-3af4-4acb-bde8-ef4937f6092f",
        "cursor": {
          "ref": "bdc1ff05-ad22-4542-9be2-af2ca5e593f7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "04ce814b-7c3e-4b4b-b9f6-af49130cdde0"
        },
        "item": {
          "id": "56e95c78-3af4-4acb-bde8-ef4937f6092f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "356f0c6d-1538-40cf-824c-71f2c627a2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a1475e-21ae-4aea-88a3-f564f23fbda6",
        "cursor": {
          "ref": "96a1e692-494f-40c8-9791-e026dbdfab16",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1b628e65-327a-4bdb-b1fd-bfd15d155400"
        },
        "item": {
          "id": "67a1475e-21ae-4aea-88a3-f564f23fbda6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea62c00b-47de-473e-bc9a-9ec516e55afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aaeee8-aff9-4627-809c-a6e0bfe12df1",
        "cursor": {
          "ref": "222cf80e-2078-4b69-aaf3-43a3bcaad4a7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a29eaa9e-c6dc-4d9c-b4f2-1aad1124d11e"
        },
        "item": {
          "id": "89aaeee8-aff9-4627-809c-a6e0bfe12df1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "806abb54-35ec-40b8-bfc8-7d2e4c778ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9f2b20-809f-4df1-a558-103a50031c08",
        "cursor": {
          "ref": "e5d2c353-620f-4b44-83a3-bf9beee0aea9",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1e8b0bfd-3a10-409d-acf7-14564ca78a66"
        },
        "item": {
          "id": "5e9f2b20-809f-4df1-a558-103a50031c08",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4179dabd-34ef-44b5-bad3-b555f3e38bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5970a554-c26b-4bce-adcb-1d18694b9051",
        "cursor": {
          "ref": "48965398-1295-4cb9-bae3-f91919490867",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "087ea0e5-5685-4e17-a022-f65adfbac5a8"
        },
        "item": {
          "id": "5970a554-c26b-4bce-adcb-1d18694b9051",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6d48d9c8-af25-44cb-94cd-fe1bdf9dd5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e0da2b-f9a4-4123-a40a-006de182d429",
        "cursor": {
          "ref": "c40e68f3-9609-449d-8979-c9844f392bc5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6acd2bf5-db28-4153-ba9b-961ca94af6f9"
        },
        "item": {
          "id": "47e0da2b-f9a4-4123-a40a-006de182d429",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "01713bd3-4ce1-490b-8f26-62862894f549",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3d2f2e-b402-46a5-ad09-524d9f16e5f0",
        "cursor": {
          "ref": "272690f5-0dc7-4731-9591-905086b9e5f5",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7cddeb81-9a67-45f6-aa33-bf5982f375b5"
        },
        "item": {
          "id": "2b3d2f2e-b402-46a5-ad09-524d9f16e5f0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "171e699d-e386-4f37-8f49-2fc372145e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3762593-cb36-4edf-b549-303a9e649f40",
        "cursor": {
          "ref": "c8634dcd-6cb1-4562-8ce0-5a66da20e07e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c815b7f2-194f-447d-bd49-c5be6327a698"
        },
        "item": {
          "id": "f3762593-cb36-4edf-b549-303a9e649f40",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2cce1998-a15a-4c27-ad3c-0cfc8d7d289b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349601f1-138c-4e79-92c1-f1c1047777b5",
        "cursor": {
          "ref": "56cd7d50-290b-43de-beac-4f1c250762ba",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5691b154-574c-40f9-ba22-120a52f5fc3b"
        },
        "item": {
          "id": "349601f1-138c-4e79-92c1-f1c1047777b5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d65cd4f0-86d6-4dcb-bd52-c53f8e57ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a221e325-381a-4b28-8563-60f9e7a6d14c",
        "cursor": {
          "ref": "346969d9-2573-41c4-bfc2-d40bfe55649b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bbe3f6ce-a3c6-47f9-9997-260a2a73b5b3"
        },
        "item": {
          "id": "a221e325-381a-4b28-8563-60f9e7a6d14c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b426020e-9c21-46b0-8db8-2264dedf65d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c49f2e-58ae-4af0-a283-92a4822df813",
        "cursor": {
          "ref": "6752c22a-4bf8-4a33-9b00-b0eecefebd2a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b5831758-7339-45fc-832c-52e794d6cda3"
        },
        "item": {
          "id": "58c49f2e-58ae-4af0-a283-92a4822df813",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bcfed811-6298-49a2-b9e8-0d7efb424b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beb44c3-c2b1-4720-a489-aa46471a5e5a",
        "cursor": {
          "ref": "01fc3fcb-16fe-4264-a942-1eeea92ac794",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5f8ef189-d1df-4aa5-bd63-e2e2844fad20"
        },
        "item": {
          "id": "2beb44c3-c2b1-4720-a489-aa46471a5e5a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6bea52d-440e-4987-893d-fe1e77aef68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7dee0e-fca3-4015-8e20-bb735a40af84",
        "cursor": {
          "ref": "57484d4b-530a-49e4-8092-991e98c91338",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f8a812ef-5a5f-4373-950f-a8484520b36c"
        },
        "item": {
          "id": "0e7dee0e-fca3-4015-8e20-bb735a40af84",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7aaaa9f-eff4-45ad-9b0b-f34bdfb1d448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0489e7c-bde1-4b91-bd97-408e0605e88f",
        "cursor": {
          "ref": "fa027465-d75f-4841-9b4f-b8c2c20b8cdd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "91f103ce-40d5-47d7-b276-89614c43730b"
        },
        "item": {
          "id": "f0489e7c-bde1-4b91-bd97-408e0605e88f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e5b04cb0-12ac-4fa9-94d9-bca2c303aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c23962a-3be3-4f36-ad91-7433fbe4a328",
        "cursor": {
          "ref": "dc1a1b12-e876-4949-9330-faab9c747bc6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "08726043-24f5-42c3-9acf-6be2d7a87632"
        },
        "item": {
          "id": "6c23962a-3be3-4f36-ad91-7433fbe4a328",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "944aedbd-d973-478b-a9a4-76ecb3fe46e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01710c2-11b3-4dbd-9183-23856205edca",
        "cursor": {
          "ref": "8817ed9e-28b8-4470-8a55-7ea6b1e47c7b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "03ce1faf-4c67-4ca6-a2a9-700a5f35a579"
        },
        "item": {
          "id": "f01710c2-11b3-4dbd-9183-23856205edca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b7505d6-28bd-4b23-9a97-d2a5403808c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d324af-26cf-4395-8754-a9a09d3cebf9",
        "cursor": {
          "ref": "8d73efac-303f-49cd-87b2-9a7922048caf",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37282974-f14a-4b50-83b9-76a4fba4160b"
        },
        "item": {
          "id": "18d324af-26cf-4395-8754-a9a09d3cebf9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eaf0e400-829f-4a88-8598-3b078b578e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e68224-8528-4f1f-a6c0-9403d83c0d40",
        "cursor": {
          "ref": "d4265130-3139-4a21-8d8f-1601604e624a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "21872bc8-2723-40a6-bb76-ee327ca2b48f"
        },
        "item": {
          "id": "c2e68224-8528-4f1f-a6c0-9403d83c0d40",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "00940775-40ad-4316-904f-916040936356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5252124b-b38a-4cd0-9c2d-9771c3e9b860",
        "cursor": {
          "ref": "5a3e7f9c-096e-4d7d-92e3-7d19bcba29b3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "25a300cc-c89a-4e4c-a005-8ecd630f406d"
        },
        "item": {
          "id": "5252124b-b38a-4cd0-9c2d-9771c3e9b860",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f4db7aa3-b962-4afe-bc66-69826882fa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b41c974-125b-4a19-b781-8a36a88b2a41",
        "cursor": {
          "ref": "12c83c73-b8dc-405f-b8cc-c260f19a2be6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5edbd357-616c-4a47-8177-5eb1f5056deb"
        },
        "item": {
          "id": "5b41c974-125b-4a19-b781-8a36a88b2a41",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f56c3f80-d192-4a25-81cf-0c60497050ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb0ac34-d0df-4033-80c6-8ebf6421ac12",
        "cursor": {
          "ref": "560653f3-c1c9-4dd0-814a-b2ccdd2253e0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "345a5ca7-45d9-4dd6-af7c-9292de1c59c7"
        },
        "item": {
          "id": "cbb0ac34-d0df-4033-80c6-8ebf6421ac12",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f91ac5ba-5461-481f-ac88-99afedc26b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e040c4db-ce59-4083-99d9-32c86b94386d",
        "cursor": {
          "ref": "730e46e0-fd73-4405-98e1-7072e4eb46df",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b17cca42-dfc3-4431-ad41-50eb0ad4d4ab"
        },
        "item": {
          "id": "e040c4db-ce59-4083-99d9-32c86b94386d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e9d067b-c000-47a9-8caf-0706e9f927a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b8e612-b113-49bd-b4b0-7168bd4b7495",
        "cursor": {
          "ref": "cb5702a1-1109-46e7-8728-a8c3076291d1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0a96ceee-ecb3-4c24-9c35-c9958b0b7e32"
        },
        "item": {
          "id": "f7b8e612-b113-49bd-b4b0-7168bd4b7495",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fdaccf83-2c79-4890-b333-cc97d815f99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa678bc5-19c5-4bcf-816e-c06110df65fb",
        "cursor": {
          "ref": "6165205a-4800-42ea-94fb-779aad17e8ae",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4d4dc73-1624-4792-b5cb-265a52421fff"
        },
        "item": {
          "id": "aa678bc5-19c5-4bcf-816e-c06110df65fb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6e4ee8b-e874-41fa-ad01-e014cb87cd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf3c432-54ac-44c3-807b-8c8f41ddabe5",
        "cursor": {
          "ref": "725f8ae7-bb3a-49cf-a707-55c47e7201f8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "57dfbcd0-ff83-4c3e-bd83-fca86f2cf5cb"
        },
        "item": {
          "id": "ecf3c432-54ac-44c3-807b-8c8f41ddabe5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cca8ef0e-a9f7-410d-922f-533ba0e50213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de472df7-169e-464d-bcde-710e3ae2901c",
        "cursor": {
          "ref": "2da682e9-fd3d-4f70-9926-e53b15d98dd2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fe6dd82e-ef4f-4b08-9942-66624f509d08"
        },
        "item": {
          "id": "de472df7-169e-464d-bcde-710e3ae2901c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2d7d02bb-b2b7-4b50-a53d-8643d5a03543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5da9554-a511-4125-91c9-0ad0b5cdf001",
        "cursor": {
          "ref": "cfa0a3d1-9ef9-42b6-a35d-61b4aaf05db0",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "64cfb4e0-e1f2-4230-9c21-847ecb15bd98"
        },
        "item": {
          "id": "b5da9554-a511-4125-91c9-0ad0b5cdf001",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a3e9bbd-f35c-4d52-91fe-384325190991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1684de3d-096e-4227-b5bc-0a7d9215b447",
        "cursor": {
          "ref": "5defb876-9477-421b-9901-f2367497d8d7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e4106dc5-3a5a-4a99-84b4-9650fa2b38f9"
        },
        "item": {
          "id": "1684de3d-096e-4227-b5bc-0a7d9215b447",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31e20be0-d550-44f2-86cc-6b23cf4026d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f34fa20-6054-466e-87f9-7bf50b65bb71",
        "cursor": {
          "ref": "68f0937f-3819-40d9-8d7f-6d36db3d9798",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d5bde43c-3706-417a-a8eb-129631ff1e40"
        },
        "item": {
          "id": "3f34fa20-6054-466e-87f9-7bf50b65bb71",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e32fd0ff-4767-441c-932f-8156404a3d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d75d56-2a31-45ad-bf97-f12a799db111",
        "cursor": {
          "ref": "e010e430-9130-41bf-b644-08274cd771c2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5a604f2-d247-4c7c-8db2-075420793a8b"
        },
        "item": {
          "id": "41d75d56-2a31-45ad-bf97-f12a799db111",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6d33653c-f239-4222-bfb3-2223b8dc0fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03602b82-68e8-4ff3-8488-59cc14e2cfb9",
        "cursor": {
          "ref": "20fa2210-c1ca-4c1c-9758-447c25d13f33",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f63fbdbd-739d-446a-a189-0aa9fa4b6d55"
        },
        "item": {
          "id": "03602b82-68e8-4ff3-8488-59cc14e2cfb9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e9bc193-6dfe-4038-88fe-5a4666d7498d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda607b-7032-422b-8893-cbdc847c5d21",
        "cursor": {
          "ref": "3bdea383-ed52-4730-97b4-8e60d6bc1d4a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6b17a671-045c-47aa-9ae3-ed1a05af0107"
        },
        "item": {
          "id": "0cda607b-7032-422b-8893-cbdc847c5d21",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "425927d9-e2b9-4217-b29a-09575a6ee559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a409f-77ae-4768-9347-40a719e17402",
        "cursor": {
          "ref": "08f03488-b45f-4539-875a-44a901d48ef3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b7255c8a-7d97-49b9-a119-8741ea3e15c3"
        },
        "item": {
          "id": "9a0a409f-77ae-4768-9347-40a719e17402",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2f1e390b-a03f-403b-8088-0bf8d4f1284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df14be6f-1936-4d18-87f5-71ecfa88bf2b",
        "cursor": {
          "ref": "48b7de7b-7a9c-4902-8de3-68bb948950a2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "13242569-1807-4a9c-a6b4-b5967e7cba6b"
        },
        "item": {
          "id": "df14be6f-1936-4d18-87f5-71ecfa88bf2b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f64bc76-7ca9-44e5-90ea-a68bb5382497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114235f-e1b2-46aa-a113-fd7194e979ad",
        "cursor": {
          "ref": "ee1582ae-a810-45d2-a5d4-1aec05408c4f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "731c0807-bb99-4426-9f5a-be0d5beb16cc"
        },
        "item": {
          "id": "4114235f-e1b2-46aa-a113-fd7194e979ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c69b6c0e-0e50-4e43-bcd8-519010daaeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0628f58a-8c09-4315-aa67-e7b0a9715378",
        "cursor": {
          "ref": "b094c000-8070-48d8-ab4c-847d0cd99a6b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f9a921c8-a3d1-4167-bdbf-6bd4fc8933c1"
        },
        "item": {
          "id": "0628f58a-8c09-4315-aa67-e7b0a9715378",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f66f7d91-e098-4383-89d5-0904eaa01041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b02f735-fcc9-4161-8a0b-35fa1d8b2403",
        "cursor": {
          "ref": "2035a02b-b5ea-4386-be67-667543ef966f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "90154315-d795-4b9f-b1c1-1afc59ab7d0d"
        },
        "item": {
          "id": "9b02f735-fcc9-4161-8a0b-35fa1d8b2403",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b59f1cec-c669-41d2-af55-d424ec0ab69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4dde3a-ef7c-4552-a1d5-1e4f7c91cd51",
        "cursor": {
          "ref": "0b0cd387-2e41-4464-b070-0d33a8661057",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "567b2b05-b708-4dd1-883e-ab3959dcd201"
        },
        "item": {
          "id": "aa4dde3a-ef7c-4552-a1d5-1e4f7c91cd51",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f5a4f911-d6ed-42b2-8840-a8eca9ed6e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff4d747-8cca-47d1-9109-4057d595f0c2",
        "cursor": {
          "ref": "c86ff215-37ea-4605-a15a-6cf7421b20f1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0e3d3733-1bbe-494f-90c4-466517773ea9"
        },
        "item": {
          "id": "6ff4d747-8cca-47d1-9109-4057d595f0c2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e047a01d-8f02-491e-9696-70c089a9cd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e2e28c-a43c-40cd-aa00-2dde04a259a8",
        "cursor": {
          "ref": "e27591c5-e95d-418f-89d2-bf93469b6d0f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b38dfc79-0fc1-4d25-b4a8-43669278529d"
        },
        "item": {
          "id": "b2e2e28c-a43c-40cd-aa00-2dde04a259a8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "57df2269-f104-455a-965b-4ef613624322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7caba30-3706-46e5-9293-ad50e2d13b8a",
        "cursor": {
          "ref": "17b6fdb1-7e55-4b38-92eb-b2ef66b7a3f2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f4c15927-b6cc-4fc1-a19b-d3cb437bddcc"
        },
        "item": {
          "id": "e7caba30-3706-46e5-9293-ad50e2d13b8a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "33e03b4e-9b5a-4631-b144-41be89e733e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9936be-e975-448b-8841-cf7b10992f0e",
        "cursor": {
          "ref": "7251d520-a187-4de8-99fe-fec105198997",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eb7742cc-af07-473f-a05b-ce5cc391cdd0"
        },
        "item": {
          "id": "5c9936be-e975-448b-8841-cf7b10992f0e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "57beb04f-f59d-441d-9b44-b48ebfcaa914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1b266-1238-4971-aaa5-50836290dca2",
        "cursor": {
          "ref": "594da24d-1a9e-4b5a-bccd-9f888c328085",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca23d147-f8da-4276-8b59-73f50b715ca8"
        },
        "item": {
          "id": "9ee1b266-1238-4971-aaa5-50836290dca2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f19f12ce-27fe-4957-91ab-cde1ff238b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16aa8bf-3408-4ce8-b91c-d786ba5bc6d8",
        "cursor": {
          "ref": "466842fb-edd6-4e6e-9202-785007ed1bd4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7547931a-e0c1-43e9-84e2-039295c7ca2e"
        },
        "item": {
          "id": "e16aa8bf-3408-4ce8-b91c-d786ba5bc6d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e4d202fb-3de9-4b26-b41f-b852ddd5a45d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bcaf99-e401-40e6-a06b-d2e1b4e35601",
        "cursor": {
          "ref": "37a29e87-7523-4480-8f10-c4caf6075dc7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dcb40246-d0e3-49c9-98d6-e0b6df4c735c"
        },
        "item": {
          "id": "e4bcaf99-e401-40e6-a06b-d2e1b4e35601",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d62ccaf9-0f03-4815-a678-d8d5b30b7381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd81cf6a-a691-4954-b212-82837691ab6f",
        "cursor": {
          "ref": "c2b23b7a-926f-4215-b72a-03cb76a37540",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "16add639-53ab-4a90-9ccb-54fba78293d9"
        },
        "item": {
          "id": "fd81cf6a-a691-4954-b212-82837691ab6f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9cc387b2-2dfa-47ee-ae55-7776ba5d74c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35647f60-de37-4425-afa2-d453b82fd8ea",
        "cursor": {
          "ref": "f06a166e-7cf9-4e28-b3d2-c49a2eb84132",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb765516-32ad-46bd-a5b2-e2551e987590"
        },
        "item": {
          "id": "35647f60-de37-4425-afa2-d453b82fd8ea",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "da9598aa-8166-4459-b6e0-80069c9ffef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245d9e86-818f-40c1-884a-b9f102cb94d9",
        "cursor": {
          "ref": "fb63810d-6648-4691-8ffa-ff706f051eda",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b0b359f8-7936-4e57-af78-f4c8147ef327"
        },
        "item": {
          "id": "245d9e86-818f-40c1-884a-b9f102cb94d9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "759162fd-539a-4ef3-af11-109d4638fc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6def0514-aacf-46e1-a23b-3b4bebc1388e",
        "cursor": {
          "ref": "db3e5dbc-ac0d-4eeb-a7c1-f0067387a4af",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "02497cc2-5114-4a3c-8be4-4b7d59a034f1"
        },
        "item": {
          "id": "6def0514-aacf-46e1-a23b-3b4bebc1388e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d74e9318-f8d8-44dd-8354-f5f55a821afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f66e01b-3d5d-45fe-bd7c-8df2aa79ae90",
        "cursor": {
          "ref": "d8b80231-963f-4a69-9eab-bff5005a91e7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e5609571-9e09-47a7-9944-ca03cd3623af"
        },
        "item": {
          "id": "0f66e01b-3d5d-45fe-bd7c-8df2aa79ae90",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7095c62-1b29-4595-8698-9f79c0505096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7394016-0e2b-487d-9c0d-772162abcda7",
        "cursor": {
          "ref": "b6c2108c-5d67-4160-90bf-d4c21bf8b7e1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b6df4d0d-e027-49c5-945e-13c3c02636e9"
        },
        "item": {
          "id": "d7394016-0e2b-487d-9c0d-772162abcda7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6a44056e-cc18-49ec-85a4-4a3f50630a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af34ae14-917b-44a4-bae7-e55e92e93051",
        "cursor": {
          "ref": "e0a84356-7d57-43ff-a55c-6586ca635007",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da62daef-c2db-44e1-a5e7-95a1a225a6d4"
        },
        "item": {
          "id": "af34ae14-917b-44a4-bae7-e55e92e93051",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4fc65813-070c-4b81-bf27-0a0450e883fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6788d7f2-557d-4ff6-9b8e-ec57678cbcb1",
        "cursor": {
          "ref": "4e02cde5-a120-40a8-b8c4-eec5feb3db15",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "27bbe758-d1f5-418f-beff-088a84d97460"
        },
        "item": {
          "id": "6788d7f2-557d-4ff6-9b8e-ec57678cbcb1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bf0a52b4-0c9b-40dc-bf67-7331e59208de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e34e303-5e3f-498b-baab-443d07f9a9ad",
        "cursor": {
          "ref": "b1cda923-3d9a-47f2-8937-775b002c38ca",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e4abc9f4-238f-4a1c-871d-aa0c14663fd9"
        },
        "item": {
          "id": "1e34e303-5e3f-498b-baab-443d07f9a9ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ed10b581-38a8-4276-8bc9-8eac250a55b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a56cdca-ebe6-4ac8-baa9-b16800addfd7",
        "cursor": {
          "ref": "b11eaf30-5b4d-4c2e-85d3-78424a193ffe",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5ffb8455-23c8-4f70-b568-6d7b2927f3f9"
        },
        "item": {
          "id": "8a56cdca-ebe6-4ac8-baa9-b16800addfd7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fcbf8f32-8c36-4f69-8b40-2cf61135a507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fe8b9f-110b-4f13-9d04-f573fcdb4366",
        "cursor": {
          "ref": "ce075d8f-85ea-4324-bd6d-2928ef71efae",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "23c3a0f2-ceaa-49de-b361-c4f3ceac5007"
        },
        "item": {
          "id": "80fe8b9f-110b-4f13-9d04-f573fcdb4366",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1ecffdec-7bbb-4937-853c-b8f2306ec423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa0ce4-88aa-4749-a8a4-9e4b34e01902",
        "cursor": {
          "ref": "92b6acb5-a607-4a92-a63f-7629c9a2c572",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "80ffefd3-1429-4b86-a861-142be5198710"
        },
        "item": {
          "id": "60aa0ce4-88aa-4749-a8a4-9e4b34e01902",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b27beaf4-32b6-4f38-9ac0-9914e386c0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dbe72f-3964-4f68-b859-14b890282659",
        "cursor": {
          "ref": "ad4c8595-ee72-44bb-b9e4-f82f60930ad7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "84235015-fb24-45f4-ad70-43c9d819d4c9"
        },
        "item": {
          "id": "39dbe72f-3964-4f68-b859-14b890282659",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "416675fb-7913-4780-a579-34819c7e2931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d00632b-38cb-4ec6-a1ea-a34e84d5627b",
        "cursor": {
          "ref": "5a109b5a-d90c-4167-a2b7-3f5732795389",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cbeb9951-03f3-4433-94ef-1273e21fad31"
        },
        "item": {
          "id": "4d00632b-38cb-4ec6-a1ea-a34e84d5627b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "570a5c97-3463-438e-bc4f-de78d5067cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c497c-800b-4b70-9d53-020fb56bd771",
        "cursor": {
          "ref": "c2710651-0e9b-4edd-bc4d-9d745cb117e6",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e99e8806-52bd-4e90-996e-e7b30de23143"
        },
        "item": {
          "id": "8a2c497c-800b-4b70-9d53-020fb56bd771",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4f5430a5-dd3f-4634-9df8-011ad1d75775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad3a8af-f8a3-452d-9044-abfb7f47506e",
        "cursor": {
          "ref": "c67235b4-4827-4792-92af-7b6c6a6e5774",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7e8ff8e8-d316-4562-86e8-14a6d8ad0fa3"
        },
        "item": {
          "id": "9ad3a8af-f8a3-452d-9044-abfb7f47506e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b4384cfe-d19b-4257-b661-b7e77a0c9498",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2bf4b31d-e285-4ed4-8c66-0930a26e6dbc",
        "cursor": {
          "ref": "c9def5bc-c4e8-4980-83fa-7411039c5791",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "78f0105b-ab56-44a0-b8f8-9f8e58fd9042"
        },
        "item": {
          "id": "2bf4b31d-e285-4ed4-8c66-0930a26e6dbc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fa91798c-a932-4983-b0ab-a9b410efbaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7afde15-3157-4815-884c-3483d4a09536",
        "cursor": {
          "ref": "f1c2f162-a8b4-40bf-944f-ead84a88293c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "62e36f24-aa67-4577-9dcb-688a5081d6e7"
        },
        "item": {
          "id": "c7afde15-3157-4815-884c-3483d4a09536",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "de0e7ea3-c250-4883-bd39-de01cbb18b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f2892f-907a-41d9-b832-cc431b87819f",
        "cursor": {
          "ref": "4b902cf2-9263-4965-8b70-bc6bc1c68f63",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b26198b-89dd-4d4c-b542-c928997b6275"
        },
        "item": {
          "id": "c6f2892f-907a-41d9-b832-cc431b87819f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aa3cd27b-01f3-4919-aa0c-0b22bec9822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81406d33-73cd-4c7c-bd54-4abd59d9cf22",
        "cursor": {
          "ref": "2239ba5b-a2f5-4356-b9e5-c0e4ee537e2b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1004527a-943e-4bbb-8e20-f1a82cbc0dc2"
        },
        "item": {
          "id": "81406d33-73cd-4c7c-bd54-4abd59d9cf22",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "40260380-90fc-4822-a9b6-b01a1826044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba78b2f-eb57-412d-a8a3-c0be458d0294",
        "cursor": {
          "ref": "caa9b44d-4445-427a-8bc7-13cfbbf7a381",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5bd1bc18-6ff6-4236-a49d-4e6e0f982db0"
        },
        "item": {
          "id": "8ba78b2f-eb57-412d-a8a3-c0be458d0294",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4bb86cc9-c106-49a3-b7d8-a0120f3c377c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811bbd50-46e4-41f3-9168-45fb79872366",
        "cursor": {
          "ref": "96c65579-b195-4298-a230-7aee2aa0997d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "823a41da-c961-4782-b876-d143fc542a6a"
        },
        "item": {
          "id": "811bbd50-46e4-41f3-9168-45fb79872366",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c94821cf-5524-40df-b173-1a3a3e44fa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3f5970-9c47-4e37-a24a-657bb4eb5da8",
        "cursor": {
          "ref": "2bff1403-afb0-4b75-812b-40fc8648acbf",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "695e9d85-af12-49f2-8a3f-72fc198c3d07"
        },
        "item": {
          "id": "7e3f5970-9c47-4e37-a24a-657bb4eb5da8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ec2e44f8-c24d-4eba-b0d4-0924c1e07dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de39c42-06cb-49e9-8c0a-a8ea2909bc64",
        "cursor": {
          "ref": "11a5b585-ca6d-4223-97c9-af518f6fdd01",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8dba62ea-852a-43ce-b2e1-eadad31b1bbe"
        },
        "item": {
          "id": "6de39c42-06cb-49e9-8c0a-a8ea2909bc64",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "618124bc-92f5-4fa9-9c5a-fb3fd652ec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2b9332-7b4a-4ecc-af9c-de0f1e219df5",
        "cursor": {
          "ref": "dd8563d4-4bdc-46cd-a0ae-41a4610f9dc1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "73f97aaa-5db4-4804-bdbe-70d179038077"
        },
        "item": {
          "id": "7f2b9332-7b4a-4ecc-af9c-de0f1e219df5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "30a058d1-d5d7-4442-9a59-3a90d0eea1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c9fa4d-ca0e-4ac2-8a9f-c2f767e46db1",
        "cursor": {
          "ref": "16557f0d-b391-4b10-88ae-d236aedcedcd",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "42e89ac0-1a7b-4b9d-ba7b-cc90c4a19b00"
        },
        "item": {
          "id": "37c9fa4d-ca0e-4ac2-8a9f-c2f767e46db1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "110cf543-e9b1-48c5-a628-1e863572486f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a230d02e-cc7a-44ed-883a-49a44528304a",
        "cursor": {
          "ref": "e000cab2-f17f-4261-944b-42aa37fa0bc6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99936dde-4d01-4674-aac5-63b4833e2475"
        },
        "item": {
          "id": "a230d02e-cc7a-44ed-883a-49a44528304a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "da98aadd-d6a7-4054-85c4-41ce14558bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b99bf9-527f-490c-8bfa-c029fd9f4795",
        "cursor": {
          "ref": "68942280-628d-48b3-842c-07a6ebbb2c42",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "424a803a-df20-4da1-be84-f13da13fd285"
        },
        "item": {
          "id": "89b99bf9-527f-490c-8bfa-c029fd9f4795",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3437c343-972b-4b49-b024-1e08b4803fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c462bda-d7c6-426a-8808-cd78b96888dd",
        "cursor": {
          "ref": "ac5297e2-7e09-49fb-8d50-e4a4ef1c82d3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0da3a1eb-d7c0-444e-92c5-c02bcac33952"
        },
        "item": {
          "id": "3c462bda-d7c6-426a-8808-cd78b96888dd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "946ff959-4fba-454e-82f3-e669481c6d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefba210-6d55-43a1-b727-1619ec5a66fe",
        "cursor": {
          "ref": "f5d1d8ed-1d48-4e29-b4aa-cd02f572eb1e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b174203a-2b7c-4c87-993c-e430d4056080"
        },
        "item": {
          "id": "cefba210-6d55-43a1-b727-1619ec5a66fe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "794de6b1-77a7-4e2b-b975-64e05e81be15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22c9ada-6948-4550-9b0d-b018184a0c1e",
        "cursor": {
          "ref": "10dacf2b-0dc1-4890-8585-06aba6eec58f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eca6de00-a6c8-4547-bef0-c84b2681a6a7"
        },
        "item": {
          "id": "b22c9ada-6948-4550-9b0d-b018184a0c1e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3bcdd000-779a-4776-9587-48a5ffff0c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db79cb6f-467e-47ac-8ce5-037b45cfdcf5",
        "cursor": {
          "ref": "a7d15782-a0a0-45f7-b1a8-2f5d17cc40c1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1a4ef3a5-c2e1-44e0-8dc7-fb6c4195dd2a"
        },
        "item": {
          "id": "db79cb6f-467e-47ac-8ce5-037b45cfdcf5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb974f74-f627-4c99-a974-b912834d8617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ab7460-9959-44c3-89d0-169c6b3d64fd",
        "cursor": {
          "ref": "deda3451-d95c-4d99-bd1d-6e387204152f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "efc3642c-b935-4f47-a1ef-4137ab195e38"
        },
        "item": {
          "id": "85ab7460-9959-44c3-89d0-169c6b3d64fd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2b223b53-650f-41be-ae73-0cdd1ab29205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030f7073-ea5e-4474-95dc-4e74885e5a68",
        "cursor": {
          "ref": "f22d757d-1fbe-48ee-982b-85929a023bf0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6e6d2767-6db8-4f0a-81f3-828867d32c49"
        },
        "item": {
          "id": "030f7073-ea5e-4474-95dc-4e74885e5a68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e8a3c4b6-0e55-4a32-846f-f4057409c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8c9a47-b06a-4287-8f7a-3b13b7b256bf",
        "cursor": {
          "ref": "f21904d3-e29c-4796-89cc-b010364121bd",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f30e4c12-ff1a-4b03-a5e8-16ab54d8dd34"
        },
        "item": {
          "id": "3e8c9a47-b06a-4287-8f7a-3b13b7b256bf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "08e8dbf9-1e71-427a-b253-1459a310bfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e7f52-7f5d-4fef-983d-fcd5697471e2",
        "cursor": {
          "ref": "2176b04f-d6bf-4ebd-a12c-38aace03b2e9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e72f903c-8a83-4416-bc15-90316f57f32d"
        },
        "item": {
          "id": "a54e7f52-7f5d-4fef-983d-fcd5697471e2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ea320494-2144-493e-b0d8-51ece47c2d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1601ed-6e69-474d-bd76-55ec67cf8c1f",
        "cursor": {
          "ref": "a4db1fbd-b806-475e-bd73-81e6640c04a7",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0b9fd01f-a643-43d3-9bce-abbaa7420322"
        },
        "item": {
          "id": "ae1601ed-6e69-474d-bd76-55ec67cf8c1f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4359e5e3-5f25-4dc1-8f05-7225a1cacbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aadbcfa-97f0-4a7b-bea1-c0bde94c3c13",
        "cursor": {
          "ref": "d4641190-657c-4f09-943a-ef113ffe1747",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fc836352-e213-4339-a57a-9f2f6d66a2c0"
        },
        "item": {
          "id": "3aadbcfa-97f0-4a7b-bea1-c0bde94c3c13",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "462a4632-2517-4a5b-96cf-ad68574b74db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac57dde-4516-4c91-bf5d-8cde3b3d0a96",
        "cursor": {
          "ref": "617a9bf1-7ffc-43f3-9440-98119625bd81",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d0d4971a-7bad-489b-88ff-ca885f69e142"
        },
        "item": {
          "id": "8ac57dde-4516-4c91-bf5d-8cde3b3d0a96",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba98beb0-407a-4a98-904b-53f1478a3ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6b998e-fef9-49e6-8949-7e9a6219dcb8",
        "cursor": {
          "ref": "62c6ec96-2f79-409b-9272-163d2667a843",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "059cd3fa-3703-45c6-b148-80a7ecaa6f27"
        },
        "item": {
          "id": "3a6b998e-fef9-49e6-8949-7e9a6219dcb8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a7ea089-0aa3-44a3-8f38-d317d140a8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4da4f8-5b30-4d25-b44b-49c58d461ebd",
        "cursor": {
          "ref": "ead0b0ed-8d66-41e6-b864-46b66b7a97c7",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b8b068e4-cb6c-4d1a-b58e-edbf957a9f6e"
        },
        "item": {
          "id": "5f4da4f8-5b30-4d25-b44b-49c58d461ebd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9bb643b4-7453-47c9-b408-673c1218f550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee06dc44-e0d1-449d-904f-d1c15707d911",
        "cursor": {
          "ref": "0bd0c3f8-c72a-4333-a153-c768741c83f4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "51696e50-e3b0-4c44-a75d-9fa79752effe"
        },
        "item": {
          "id": "ee06dc44-e0d1-449d-904f-d1c15707d911",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "10696208-7a28-49f1-972f-883c3ca8a559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2812b931-d236-4d26-9dc9-905f14b266bc",
        "cursor": {
          "ref": "49ea582f-168a-4d83-a038-1868c237d867",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a8154d37-9181-46e6-bb56-e42c2d2ff378"
        },
        "item": {
          "id": "2812b931-d236-4d26-9dc9-905f14b266bc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "af5dfed4-0c33-4678-8348-d834ef6d1eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7844452-62c1-458c-8414-310a69419ff3",
        "cursor": {
          "ref": "2d9f0c55-2139-4c5c-a8b1-948ed6a9004d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "700c4389-b217-49af-868d-c43b91186362"
        },
        "item": {
          "id": "f7844452-62c1-458c-8414-310a69419ff3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d5b74fbf-7a50-4773-89ca-69e42e551504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c8fcf0-150b-4dd6-be26-bdf3a0bfc84a",
        "cursor": {
          "ref": "9f272c8d-e248-4452-a089-f96b700de939",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b7df7a73-b34a-4d02-a3a3-004e3bb21854"
        },
        "item": {
          "id": "61c8fcf0-150b-4dd6-be26-bdf3a0bfc84a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1e5435e9-03cd-4052-905e-4e1f3cbd7f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64682f-fe7f-4639-85b0-f52058503c37",
        "cursor": {
          "ref": "ed81c4fd-0113-42c2-88d2-f46200259499",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e3550148-7e7b-458a-ae03-bbc7a4a5aeb2"
        },
        "item": {
          "id": "5c64682f-fe7f-4639-85b0-f52058503c37",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0d69dd6-8daf-426d-a988-fbbe3ffc80d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57822392-5c1d-4d57-b003-efe98ba927b6",
        "cursor": {
          "ref": "89da3efb-029c-4b2d-b01e-e77a14bef192",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c7f4f373-cf89-44f0-bfa1-a644717c7005"
        },
        "item": {
          "id": "57822392-5c1d-4d57-b003-efe98ba927b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0a3dccc3-16b3-44f2-9f9c-b96ca89e2b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae462e1d-a164-4a10-8714-c2ca084a7181",
        "cursor": {
          "ref": "d7e51165-107a-4605-963a-fc3c0c466681",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9bcfb866-e285-40e6-b9ca-af35134e1ed3"
        },
        "item": {
          "id": "ae462e1d-a164-4a10-8714-c2ca084a7181",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f74bf652-1118-4736-a5e9-b81f4db10463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2223b3b0-cb3b-489e-95b2-b442351cd0c1",
        "cursor": {
          "ref": "b554ea54-9c18-426d-b391-8853f1661917",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bd90d98-b151-46ae-9650-ade9614ceb8d"
        },
        "item": {
          "id": "2223b3b0-cb3b-489e-95b2-b442351cd0c1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "88e5cb79-8667-49b5-97e7-e33ead03d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70ad802-fd16-4bb8-8732-9be89db68c64",
        "cursor": {
          "ref": "fab81018-f0d0-40c0-ba01-901d89f4dc21",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cd5d07c2-a5db-4c0c-af5c-1c47fd1b5b8b"
        },
        "item": {
          "id": "e70ad802-fd16-4bb8-8732-9be89db68c64",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1d06ff29-7dad-43c2-a38a-fd84bcb9e604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e524b8c3-52f0-4564-b746-18dc91d9d0dd",
        "cursor": {
          "ref": "87c673d5-2aaa-4140-8869-f751c97105a7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "75700750-4b0b-4f21-a754-93ec30c2eaa6"
        },
        "item": {
          "id": "e524b8c3-52f0-4564-b746-18dc91d9d0dd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f0ea8b1f-3c90-4337-adbd-537992f4d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cc7309-cd6c-4e97-b899-0ca10703a8a5",
        "cursor": {
          "ref": "ec503b54-d9fd-405b-a118-e5706ae2aea7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aa73024e-dcbf-4411-8e23-5c46986d3280"
        },
        "item": {
          "id": "49cc7309-cd6c-4e97-b899-0ca10703a8a5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "da5155b4-4f8d-471b-8dc4-7fac8596d19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e684c-5a44-4302-989e-201cf8d22835",
        "cursor": {
          "ref": "0fca9d38-7f22-4b81-bab7-2ab1a3ea0d60",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e4ae3ca-a436-4681-b2dd-117facb4860f"
        },
        "item": {
          "id": "986e684c-5a44-4302-989e-201cf8d22835",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a565777b-dba0-4d6f-981a-093f1ef2e95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0de509-7c98-4bc3-a12e-3b87c2aeea93",
        "cursor": {
          "ref": "e0057d3d-97ec-439c-be23-ce8894e331fa",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "342db680-4aeb-4884-8310-cfc2d63f7c8a"
        },
        "item": {
          "id": "fc0de509-7c98-4bc3-a12e-3b87c2aeea93",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c1078236-b83b-4347-aa3a-d28e7c8d210b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7436b5-886d-40ef-950c-91c3f74101bd",
        "cursor": {
          "ref": "c83e42a5-e892-4de1-9ff5-15dfd98c8c16",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1192e892-9ded-4f88-9174-62f8f100eec5"
        },
        "item": {
          "id": "ec7436b5-886d-40ef-950c-91c3f74101bd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a07cc1e5-3b49-42e9-a144-9b980f54b49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8f9e4e-8879-4728-96c2-703aa9c05ff2",
        "cursor": {
          "ref": "078a4a34-00e8-4808-a8bf-9f2c94c86bd1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5fb25b45-9d10-476f-99a5-46dc3a08f57d"
        },
        "item": {
          "id": "4f8f9e4e-8879-4728-96c2-703aa9c05ff2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2abdeabc-375c-4ce3-ba01-239bf63bfef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e445ba0-574e-47e8-84a8-a0e12d7c19f7",
        "cursor": {
          "ref": "4502c90f-61e1-481f-9e0b-edc0d53e2ced",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "734780cb-6603-4ac3-a8b0-b007b4f45177"
        },
        "item": {
          "id": "1e445ba0-574e-47e8-84a8-a0e12d7c19f7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "66a06f2d-755f-49a7-abaa-9cebb2a0bacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c54ee2f-bc12-4999-b487-7a7f18651777",
        "cursor": {
          "ref": "ddbdf4fc-e5c1-4c36-a5cc-5fecf6695d56",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "885d1469-c83b-4ceb-9ef7-50f58791b0dd"
        },
        "item": {
          "id": "7c54ee2f-bc12-4999-b487-7a7f18651777",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "21e3c940-cbd1-4141-9d1f-845f35a9aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61e33f1-3c7d-4aef-880b-55636f946aa6",
        "cursor": {
          "ref": "e8ac7c9e-584f-4890-b9d6-3b6b90f240c5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "adcfd86a-d022-4409-a91c-4ccaff214126"
        },
        "item": {
          "id": "f61e33f1-3c7d-4aef-880b-55636f946aa6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d14cb6f6-2a10-4e42-a107-bbb2d015900a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63098676-e3f4-4d71-8015-9c04f90f366b",
        "cursor": {
          "ref": "0dc4b8de-a4e2-4e16-8618-bb6078ba8382",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9613c529-6c98-4a2c-b7ea-ee49f5ee52cb"
        },
        "item": {
          "id": "63098676-e3f4-4d71-8015-9c04f90f366b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1fef1ff-424a-4f50-83ca-220a70dbce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4869d4-d672-4f34-9a6c-00039fbed5c0",
        "cursor": {
          "ref": "971afcba-4696-48b3-9339-cbfe2de46220",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "29661536-a559-4b18-a97e-f74f66a03ce7"
        },
        "item": {
          "id": "bc4869d4-d672-4f34-9a6c-00039fbed5c0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3079268d-d69a-4b4c-91b6-f4b431ae8397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e0b83-3bd1-4848-beed-aca4e65f776a",
        "cursor": {
          "ref": "59956631-49a4-4ee7-8d5f-5f6c6e99f3b3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ee85f37f-b6b9-412e-a134-ccfaeb5774ed"
        },
        "item": {
          "id": "ce4e0b83-3bd1-4848-beed-aca4e65f776a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "318cd59e-6be6-4237-82a7-855a605f62df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bdf9e1-3239-4d89-83b2-d9a3e751ea34",
        "cursor": {
          "ref": "c27f6fd6-e1df-4ee4-a3f6-027b73aaf09c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6911d0d2-1a3e-4bb5-8a99-87d014ab8399"
        },
        "item": {
          "id": "76bdf9e1-3239-4d89-83b2-d9a3e751ea34",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6490919-2c1b-4665-a802-323b049fe7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4e510d-4ef2-43d8-8f58-acefae252235",
        "cursor": {
          "ref": "46fa5185-1bc1-4531-a739-92469a0082a4",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dfbb3534-faa6-4099-9bd1-26aa01438306"
        },
        "item": {
          "id": "cb4e510d-4ef2-43d8-8f58-acefae252235",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a982088f-a04d-43b6-b3ba-45c2f4f87fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706d1c81-5d49-4b9f-a883-cfad047f4aff",
        "cursor": {
          "ref": "48464f93-0c93-4d13-abc5-5c1966e15b9d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1d866c4b-1bec-41fe-9c47-d31e7dd03dfd"
        },
        "item": {
          "id": "706d1c81-5d49-4b9f-a883-cfad047f4aff",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ac841901-235c-4ac7-afd3-193fb67ae655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c10338a-6a82-421e-ac90-6cb7fdb0d968",
        "cursor": {
          "ref": "ed433df3-26d8-4abd-a344-cd6c49bfd14d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "764d2186-3155-462f-ac35-cf447e673653"
        },
        "item": {
          "id": "5c10338a-6a82-421e-ac90-6cb7fdb0d968",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "34a4d364-f428-4f00-9da0-6b0958f43b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f95476-64db-40f3-8afd-761fc9eee5da",
        "cursor": {
          "ref": "088c8951-2e92-413d-bcb1-8536ef996d4b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1dff0f96-1b83-4e37-8d77-56569333ac0c"
        },
        "item": {
          "id": "63f95476-64db-40f3-8afd-761fc9eee5da",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e60ca5ae-6c2b-4747-8ce0-b2759a199be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f7ae80-c93b-4e2a-bc46-496ae0b58318",
        "cursor": {
          "ref": "7c10f40f-09e1-458b-89d3-38b5b6debbe6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "374da397-6642-4fb2-ada7-5463a015e741"
        },
        "item": {
          "id": "82f7ae80-c93b-4e2a-bc46-496ae0b58318",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2acd45f6-4bdd-49f5-b4f0-9ca7265d02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671df510-90a0-412e-bea1-fd5736e8b79b",
        "cursor": {
          "ref": "1334be5b-4333-42c3-b9c5-10fe6c19deef",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "41f490d9-dbf0-409a-83c8-663c1d00c8f9"
        },
        "item": {
          "id": "671df510-90a0-412e-bea1-fd5736e8b79b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f69e6cb1-fcca-46a3-a5e9-7fca05b38872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93668564-c483-41bb-a772-8b5088974c86",
        "cursor": {
          "ref": "3b6f7ac3-f64e-4ded-aa87-da7f28ed2e74",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5372d138-ed2d-4617-ab79-016751c65237"
        },
        "item": {
          "id": "93668564-c483-41bb-a772-8b5088974c86",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "de16d75d-f705-4faa-8a6c-b80745701fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87fc75-3af9-49ec-80e6-5219b0da9409",
        "cursor": {
          "ref": "4bd64ed9-46c9-4721-bb45-cda7fb87e1ca",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4666c105-bdcf-47a4-9fa1-1a4840a6744a"
        },
        "item": {
          "id": "fd87fc75-3af9-49ec-80e6-5219b0da9409",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a89236ed-d7d5-44cf-b494-0d27671e1666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83527504-622c-4100-b876-d453a9338795",
        "cursor": {
          "ref": "a42053eb-051b-4a83-8184-e1882691c3bd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3092d4f6-b581-446d-a48a-8b348677ff6d"
        },
        "item": {
          "id": "83527504-622c-4100-b876-d453a9338795",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "436726a1-9205-466d-b1df-cfdc70ba7c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1cbd45-a8b5-4a2d-b8b4-4a7eca2b77d8",
        "cursor": {
          "ref": "d2dada2d-522f-4295-b2e3-96ccb83f8f4b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "40506da0-43a5-4795-90d1-1861ceba77b7"
        },
        "item": {
          "id": "3a1cbd45-a8b5-4a2d-b8b4-4a7eca2b77d8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1421f74d-bbbc-441d-8ab2-0a86d2bcf0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e3b191-d096-4cc3-8732-b6a543f2f0c5",
        "cursor": {
          "ref": "132d9120-daef-41d5-81f4-c0b468ca2c4a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "369f307b-1a7e-47fe-8258-48cc01f3597e"
        },
        "item": {
          "id": "71e3b191-d096-4cc3-8732-b6a543f2f0c5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e5253e88-9943-4c51-9e8b-9f542e40c4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9c888a-3e26-437b-9b56-a7eb2a29397d",
        "cursor": {
          "ref": "1a8dae19-bb40-48f8-ae3d-f98b84aa18a5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "97c93e4b-0fe5-476f-8284-f5639224af9d"
        },
        "item": {
          "id": "2a9c888a-3e26-437b-9b56-a7eb2a29397d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5d9e6918-bd97-4057-87ac-f2d8f1146049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91115a8e-74c9-44a2-9962-3fc5d26b51ba",
        "cursor": {
          "ref": "f2ef552e-2b76-4c7f-b97f-b7b4671d3b10",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "16d09880-5d59-42f2-a03c-648444d96730"
        },
        "item": {
          "id": "91115a8e-74c9-44a2-9962-3fc5d26b51ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "92f031c5-da78-4012-81ed-84e3bfb7b262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bba76d-121f-4d09-8664-815231427750",
        "cursor": {
          "ref": "f51ba4d7-4e33-4618-bdb8-4223889be3fe",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "09d93ee9-8a82-43b2-8369-d074e7d6975a"
        },
        "item": {
          "id": "e5bba76d-121f-4d09-8664-815231427750",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ced1e3c5-89d4-4ec2-bb1f-746535ab557e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0aa395-3a0d-4033-a762-3631fda58d6b",
        "cursor": {
          "ref": "67e192ba-bfea-42c5-9325-aabfd367392e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6e57dd94-4050-4b08-8bcd-bf127c33106f"
        },
        "item": {
          "id": "bf0aa395-3a0d-4033-a762-3631fda58d6b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7764e437-0f73-42c9-b823-8483bf1dd50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0415a-acb1-4280-a9d4-a47c230bcdeb",
        "cursor": {
          "ref": "6119ca2b-38e9-4a74-be43-0ae7e7f63793",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "17166148-2e8b-4ee2-acd6-19e54581aef1"
        },
        "item": {
          "id": "25d0415a-acb1-4280-a9d4-a47c230bcdeb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "174ac7e4-8fd1-4483-a1cc-bf0b8ed8f9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2da8cd-365f-4aa8-bf69-76a635ff14d1",
        "cursor": {
          "ref": "3e1db0ba-9723-44f0-9744-c75efd876036",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "07debffb-d715-4e73-8a65-e823b1881c0b"
        },
        "item": {
          "id": "7f2da8cd-365f-4aa8-bf69-76a635ff14d1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6fd28887-ade5-4653-8718-009d9f0de187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ef24bd-dd29-46f8-9012-d7178ebe65b9",
        "cursor": {
          "ref": "43840095-acb6-4879-b503-d02507dcd24a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4a920128-ea51-4496-8d29-7677cd76d5dc"
        },
        "item": {
          "id": "c1ef24bd-dd29-46f8-9012-d7178ebe65b9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bc1fcb7a-488f-439e-bf53-7b108c942ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f5ebb3-63c0-4fc7-88fe-ca58a29541e9",
        "cursor": {
          "ref": "5fe2c9c6-0054-40f5-9d6c-fb6434f09561",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7a1f1764-1c5a-4cb8-845d-2e6dae398145"
        },
        "item": {
          "id": "a2f5ebb3-63c0-4fc7-88fe-ca58a29541e9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea5cc024-7c2f-4de9-bf9e-253615177236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243e3fce-fec9-4e6d-9724-400f7dfc956e",
        "cursor": {
          "ref": "bb7f1766-b8bc-4f70-9f3f-8956afbda350",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "66688a60-439f-44e6-ad87-3a98a156b875"
        },
        "item": {
          "id": "243e3fce-fec9-4e6d-9724-400f7dfc956e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "563b21b7-5cf0-4b87-b280-7ec25b498807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2dd8f-9bdb-4045-b955-207a9bf7e732",
        "cursor": {
          "ref": "b1462584-84e5-49d8-842c-f4529ba89461",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "15b23713-9cdc-4b78-bfb8-a11c0ca8d918"
        },
        "item": {
          "id": "99a2dd8f-9bdb-4045-b955-207a9bf7e732",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5e92dcda-0089-4359-889a-185e7ca7520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441be12d-5451-4fc6-9154-1a87ed75a751",
        "cursor": {
          "ref": "53fa1a40-409f-4625-806e-8c4fb8c69466",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "65c56d87-cf37-494d-8c5d-a55566015882"
        },
        "item": {
          "id": "441be12d-5451-4fc6-9154-1a87ed75a751",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b8896ad2-7780-4c6d-bf74-eaf5cc2e15fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bcecac-1cfb-4d28-a421-682b6bbb19c2",
        "cursor": {
          "ref": "4ee4dbdf-066c-4940-98c5-7b9899e939dd",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2525a01a-f9a2-458d-ab2a-bc7c6590b463"
        },
        "item": {
          "id": "31bcecac-1cfb-4d28-a421-682b6bbb19c2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a2f89c52-e0c4-4690-88ef-ace83cbe6fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d357fc23-b9e1-4335-a59e-5fdff6d8c718",
        "cursor": {
          "ref": "65c49632-76b5-49e9-b4ff-c390e43d3548",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9d8789d4-91a7-49fd-a12c-f86fe042f0ca"
        },
        "item": {
          "id": "d357fc23-b9e1-4335-a59e-5fdff6d8c718",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a32da864-93fa-4d5f-a92a-2eb6213ccc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7563b0-dcf4-4837-bc2c-8c620ff2ea4c",
        "cursor": {
          "ref": "f3116ec7-7541-4f6a-995e-c5d24f6f6930",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "65d1b758-8ad7-4a36-964c-1b362b7574cd"
        },
        "item": {
          "id": "0b7563b0-dcf4-4837-bc2c-8c620ff2ea4c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6b95002d-8278-4abd-8009-d3f5af460b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ffa66-9176-4ada-ba4e-fdf47e24caea",
        "cursor": {
          "ref": "24e8577f-f528-4687-940c-7853169601b9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5fae0120-db5b-4763-9b88-611a7378faf1"
        },
        "item": {
          "id": "a79ffa66-9176-4ada-ba4e-fdf47e24caea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5d676228-3c1c-4aa6-8ae7-46ac342742b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3e6025-8cf8-43b1-be87-01f82e766c29",
        "cursor": {
          "ref": "f67ccc17-c452-4e91-9037-f0adf416c0c7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "af5ae8ed-0fd2-4cca-9a40-be631de7abe8"
        },
        "item": {
          "id": "ad3e6025-8cf8-43b1-be87-01f82e766c29",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39d197f6-63b2-42a8-855e-53f0b51f3086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f878863-29a0-4049-ae74-5a67cd2d195e",
        "cursor": {
          "ref": "ad7353e1-22fa-43a5-88c9-755f7b79eedf",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "248af643-7003-4fbd-bae1-80f4956fcf8e"
        },
        "item": {
          "id": "1f878863-29a0-4049-ae74-5a67cd2d195e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1d49015a-dc09-44c9-ab2a-5541a078a230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6ddba5-cebd-4a46-91cf-8b84abd89cba",
        "cursor": {
          "ref": "5737275e-faaa-4769-b005-43626400c04b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2759f414-c888-43bd-81fb-7581085a2ac8"
        },
        "item": {
          "id": "fc6ddba5-cebd-4a46-91cf-8b84abd89cba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "42dd4fa4-7bf2-4640-a48a-a91bb84b66b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a1c060-3537-49ed-92fb-c0b8054eba41",
        "cursor": {
          "ref": "f6a4788b-5f52-4a5f-b531-7d9c5519c9f9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3c15db25-9c5a-4692-ac67-defc6854ead6"
        },
        "item": {
          "id": "12a1c060-3537-49ed-92fb-c0b8054eba41",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b6c2eeac-6cf9-4ce9-a223-b0d16e6958c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e8406b-46ae-4a82-a6e6-1c92c0fce8f5",
        "cursor": {
          "ref": "c7d5e29d-9726-4ef4-b489-7e1dddd40c16",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ea643541-e2ff-48ab-a431-9614611fbadd"
        },
        "item": {
          "id": "b7e8406b-46ae-4a82-a6e6-1c92c0fce8f5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "99b69570-101c-480d-91c9-12e2fe46c1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc70a097-e643-4c09-909b-11264c9e0a97",
        "cursor": {
          "ref": "0c93474c-3f8d-4330-9fca-8ec385bed9f2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0dc94ff6-2c97-4632-930e-3e3a2a053e84"
        },
        "item": {
          "id": "cc70a097-e643-4c09-909b-11264c9e0a97",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "210cdff9-48a2-4159-8bbc-47986b0da77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2179fd87-b7cb-4262-8989-1c2fdb047988",
        "cursor": {
          "ref": "7c749bb7-f977-4f3c-a2ae-09efb3a3ed17",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e172fa70-b470-4bf5-9908-2d07af4719c1"
        },
        "item": {
          "id": "2179fd87-b7cb-4262-8989-1c2fdb047988",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a2cd6e53-db98-4ab4-90d8-65cb3ae61437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdece0cc-f95b-4d73-bdf0-579143353694",
        "cursor": {
          "ref": "467f9c7c-ed78-44c1-8967-3ee8aabdf137",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4683bd0b-f09c-4177-a3c6-95e54a4e167b"
        },
        "item": {
          "id": "bdece0cc-f95b-4d73-bdf0-579143353694",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2d62ec7c-cf0f-4f9b-8740-c222120379ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8383facc-0047-487e-8669-347f178b2eab",
        "cursor": {
          "ref": "f9e4eb51-6895-4ae4-a476-4de64c5d9978",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bbbc3184-8d39-4137-9a96-285c2f4f6416"
        },
        "item": {
          "id": "8383facc-0047-487e-8669-347f178b2eab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6f160a3c-b81f-42f7-adb9-ff7e0215cfed",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de4f6a9-984b-4a95-a47f-3626d92998d7",
        "cursor": {
          "ref": "c6f840b1-5a1b-41a7-a39d-556e90798bde",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "810d336c-2eb1-4768-80cf-05ac2c4e68dc"
        },
        "item": {
          "id": "9de4f6a9-984b-4a95-a47f-3626d92998d7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ab5695b0-5cb8-4eff-9d9b-d853cc2f96ea",
          "status": "OK",
          "code": 200,
          "responseTime": 2480,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd5787f-e2be-496f-b271-a9bd23764863",
        "cursor": {
          "ref": "8cf42115-630a-4de3-9d5a-20144fc01f4a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d8aafd1d-9c38-4323-bdda-3a887694a7db"
        },
        "item": {
          "id": "3fd5787f-e2be-496f-b271-a9bd23764863",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ac121c8c-9931-4a4e-b9cb-cb988ef6e8ed",
          "status": "OK",
          "code": 200,
          "responseTime": 2806,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3571783-2d1b-4f1a-91fe-0945a3fe45a9",
        "cursor": {
          "ref": "d7fb2bc8-b23d-4007-b1b9-2763ae239fb3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "83779b93-7d1a-426b-a47d-7a0ea02d22a2"
        },
        "item": {
          "id": "e3571783-2d1b-4f1a-91fe-0945a3fe45a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9236d773-f59d-4c25-8e75-22711dad0bad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3571783-2d1b-4f1a-91fe-0945a3fe45a9",
        "cursor": {
          "ref": "d7fb2bc8-b23d-4007-b1b9-2763ae239fb3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "83779b93-7d1a-426b-a47d-7a0ea02d22a2"
        },
        "item": {
          "id": "e3571783-2d1b-4f1a-91fe-0945a3fe45a9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9236d773-f59d-4c25-8e75-22711dad0bad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e8a7f3-beb0-475d-85f1-4b4ba7cd571f",
        "cursor": {
          "ref": "2c5cfdbc-3746-4ed0-97ca-be2d24a6dd77",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ef3a91c7-3bce-45a7-97b6-25952f35807a"
        },
        "item": {
          "id": "09e8a7f3-beb0-475d-85f1-4b4ba7cd571f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b027c110-a677-4d8c-82c6-1413fc302894",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd5d2ac-0e06-43e1-865f-06ba98ffc8e1",
        "cursor": {
          "ref": "6bd2d7dc-afcf-4029-927b-b700d7355ff6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a55bbdb4-e805-44b7-82c7-d9469ded7692"
        },
        "item": {
          "id": "0cd5d2ac-0e06-43e1-865f-06ba98ffc8e1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6530d90-341d-424b-b16e-d3ff180bff16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}