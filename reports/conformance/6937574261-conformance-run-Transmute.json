{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3c8a4cc7-da35-4068-8900-6d1b69adaa18",
        "name": "Clear Cache",
        "item": [
          {
            "id": "491d7668-bad1-4a6f-b3ba-34519f8d2232",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe0f5237-fb7e-4383-a954-382f13214621",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1b9f6d6f-1602-4a3f-bde9-adb0533ac8ac"
                }
              }
            ]
          },
          {
            "id": "ceba233b-a512-4f7f-adc5-6a05f9be8db8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10354a62-c4c9-428c-90b6-9b2edbe65d90",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4285ba2b-0aef-43e5-b6c4-533acf0bcd8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5293e46b-ea9e-4a58-9515-f406d0a9ee2b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2339b840-da9a-4eb3-84aa-7a15404696df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae558bf9-aaf4-45d5-8b23-14328f015a4d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b02f9ab0-059e-4e0b-9bcd-0be73e24ac66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f26fd143-8fcb-477a-a7ed-83616ce94b17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f4c08fa-ba53-484f-be08-9cdb800c5b89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c626f6f1-6519-429d-8adc-c35494e066e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33ad791f-6a0d-45f4-878b-00d74912d6a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e51ca1ef-bafa-4825-9783-6d3577ebc1b3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57bf9e0d-ac6f-4385-9969-296ec29f6649",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9a263392-dfa6-4d61-bce1-8a10d756405e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a7aeb5b-e540-4402-abfa-2a4b056f0d2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fe9c7db-4951-4797-afc3-661ce0a25504"
            }
          }
        ]
      },
      {
        "id": "94376e69-cf0d-46e6-9108-3ffe092576aa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad6a233a-531c-4f0e-a6cb-fd18039c60b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aa4215e-7475-42e3-b12c-21e6d587c86d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92da590c-edf5-41d9-8e3f-85db5422ff3b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe2eec3-0b41-4734-a5fc-fd64d370b4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "876e3cd1-3ef0-425d-8e0a-ce16e73b56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff4ab90-01b1-456f-aa41-fd65d42524c6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56567e9e-a827-48b6-bafd-aa1ecd83fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6cdb9c7-1c37-4400-9cb1-f066328daa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14716f92-60ef-49b4-a0b9-2b832507780e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca51c09-5c30-44ad-99b3-a026c133f62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5acbd300-8a24-40fd-9786-92c7ee282988"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6bb7939e-1633-4485-b330-4373462f1b7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef02ebbf-e1e0-4795-803a-3406ce8defc9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f414e0-19e0-4bc7-840b-9a5fed4d5a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5be30bc3-d9b4-492a-83bd-793754de34d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c862aad-59e0-43f1-9abd-00907581a116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570c2311-e5a2-4cd8-979d-9985b02b93a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d264936-fc53-487d-88d0-21eefc72b2be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ff2225c-a739-47de-938a-53a55144e126",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b681107-2163-4da9-b868-1be61d5998fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "db2b4fe9-809e-4ff1-87d2-18680dd328fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5ed6fe4-0231-4c49-9093-2e8dc67c1b29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c4134151-0343-4e99-8771-79520a3e030b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1ea3e0e-9825-4c94-b510-3a5113e60a8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12a8732b-e015-4f98-9721-fc988fe5ef69"
            }
          }
        ]
      },
      {
        "id": "1fab19ae-1616-44b3-ac1f-8b1f8cbcf473",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "49bf945b-e32c-4162-8b8f-9030d2cc5c5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bfbb749-4eed-4e4d-82a4-f0779d4e9bb4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fe7de9e5-5940-4943-bd3d-aaf3fb0fd4c7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b677db-24f7-4e83-a7fc-103d5e3378ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0796b12c-9af1-4ece-b0e8-afc4bef13f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b59c2c6-3a8d-4ca5-bdaf-dc79f29569eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c762472-b61a-44b8-8be4-3189bacc2150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483f7200-cbb9-47e8-82db-ff7ba7a7f245",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdc6a50-9d40-45a8-968e-6b3160c3216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdb2f01-4c7f-4687-83a3-0b1778f6f121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc5e40c-4144-4df6-a9c9-cba64af9081f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a28177a-9fc4-4c49-b335-0cd624b7c0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96006cd3-d5e6-4aad-a0d2-e7fae75ebc1b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e34e1b-7b5f-4ab1-b72b-934dc76c028a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0495e8f7-16e3-4785-8fcf-20c4ed45cc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eee56cd-be2f-42b9-b385-0d8d3d8057f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a034be5f-fe41-4a6f-8724-fa08e04f1867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f1e662-8264-4eff-b1a6-fe3eada542f8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d131d-ac14-4d91-93fb-8521a1568e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235454bf-e77f-4299-bcf8-2cf70b7c0b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f12fab6-6762-4184-844e-ea1eba947293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3337a738-e7e4-487e-aff1-62ec604bf7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935aeeb7-4126-4537-8402-8ff69db15d99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751913e4-2443-4962-817e-db104663f82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ce8a10-9b97-4147-bd33-550399784500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0f5113-b188-40ed-b57a-6a8bfea0f56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "099ddeb1-d916-4669-9ca2-5e1889760370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3110f3-c9db-4fee-a395-7dda1574e77e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414ef3f-037e-4663-8c6e-566f2466b84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bccac45-0b0b-4434-ad6c-68e68f1b539c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8365eb1f-0413-49f8-961e-6376d0cac43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0d674e-c184-47ba-9f9f-132db3d1fff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5605d87c-ac66-408b-8d5e-60843c277d84",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7246f972-88e3-4aad-b48e-f471085e61f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980c1c27-823b-4301-9688-ef973bdb10b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8871b3d-d849-49f9-b96b-56985dec5751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b25a82da-fc59-46ff-b345-af4a28efe18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef46365-b6ea-476b-b01e-009e8c82cf7d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6688da01-c7ba-45e3-9dd5-30b9ddcbc93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec82607-ae06-4c6b-ad0f-bbfbf98914b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25d0a5f-66e9-4fb4-9207-53a4a85cb1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "995a4a9e-03ad-484a-8e0b-49a97ce3ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aa1b8e-6ca5-4822-867f-14ac3abda122",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809cbe98-3d96-47aa-922e-875a72f980c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7181c989-64fe-4952-99a3-a68810d4e11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe026eec-1189-41d5-85c4-e5f664c084d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a555ab5-cc2d-4fd1-bfce-30419795bd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5f6f4f-8ae8-4d52-ab05-e4ca5cd639c2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab877a2-dd74-472e-ad28-676defe600c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71fd11c-6b47-47ef-a959-9f66cbe345e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28329c68-6c43-47e1-8403-aceceb31c69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3114e87a-0d29-4840-b6a6-a27ec88aba10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d7ffcf-b65f-4d94-8ad3-cf3580fd49ff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe33388-71e4-4e50-b30f-06cf4ed0d8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c72300f-1b1b-4159-aa87-9f612ea8917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27acf807-3852-4533-9ab2-27691df0bd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f13db8d1-4bd4-4a59-832c-95deec3c779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a6e7c5-b110-48b6-a835-225c88fdce45",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ba41c8-5d41-4158-9efe-c3a5345c77c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc05da1e-df74-48f1-a108-a762e5fd9204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8b7edc-59b5-4631-bb24-f40ccb031d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04951751-5ee5-41e4-956e-478d90ce0159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0556c16-4fd1-4340-8e37-8f860cd114d2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90937940-cd0b-4abf-b7f5-7dd9472df99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f437e4c2-2f50-433f-a3cc-6690618823fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cdedd5-40d4-447e-bbab-1faee2b0bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a95ab9a5-b1d9-451a-91ab-89e535b260b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7202dd7-a27b-43a9-9de0-3a783ea74feb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ccb7b8-f589-412f-9c2c-46718a449936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5943b3e-2c27-4ff5-b6b5-35c7e25e9acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0532ba75-e16f-4d9b-95fe-1ee65a84a5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8779205-e0dc-4def-9b5d-a2adf6352482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e0555f-606c-4fd7-b745-808491938df4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1280e379-594e-4b35-a620-a6186c57c8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c7a8fe-dcc0-44e6-a174-6de058b44c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6af5d8e-247c-42ef-a21d-a8aad9eeef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e3a989-1f57-4fa2-b9bd-3fd187b7b958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49435902-f8d3-4d46-bb74-1d8d51e69f9a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f71307-2167-4b4f-8b24-e2e88a2e20d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb16983a-278a-463f-bb07-bbbe7a64a71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e965b9d-525d-4cec-8c52-abe6f771a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0dee43-3477-4d68-8942-5dc5356dac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e194e2-f053-41c5-a765-d8e3e6fd4238",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dfd913-ae81-41fd-8cde-49ede7ccae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf63cfd9-4cf1-4f22-a21c-df2844455d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758350c5-139e-4aa9-86bb-b1815ead20ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27f8f7d9-02a7-492f-badf-c19f1a6ecdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621bce29-9606-422a-b540-59abe8a379c8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce9cd1e-ff2c-45ee-a2a2-a98fdee162de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa2731b-adc6-46ab-8a1d-12fef6043aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94a311b-79f7-4afe-b6f4-9600911242cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3369d1c1-98d1-48d3-9459-9ba6722d67cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60bd92d-a1f0-4b2d-8d55-e3ef73484ea0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b61dae-b548-4ea8-9b59-83e2a8bfac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71770d1-6122-4c89-be9b-67cc258599bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdce6cb-2d53-4b4c-bd36-fbe30a98af9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95d0d7b5-3341-48cc-bde8-db1a34047d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540ed503-cb2e-48ce-b586-6df7a6574015",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cfaa1f-a388-457f-9543-4afdd4941ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ffcc36-7f50-4e38-9db6-2f578d3923a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96021eb5-a77a-45ee-9bca-56fe29c524d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5c99e8-ed3e-4056-ba96-546da25e9315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d4cd63-d140-4cf9-830f-abcfb1639cb2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595d4474-063a-4abe-87a3-c739075854d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac91585d-765e-4876-9c51-859d61d1cac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d90bae-0178-4762-bdc4-0d1d501def16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c250e1ba-5eee-490c-9114-14d7d800901f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96efaa48-da28-4427-9bce-bc02e68a0d14",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab718c2-1fc6-4236-ad64-404262d733f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935bab89-7eee-4103-9dc4-ae398167d790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891688f0-0946-49c6-b618-f9f386450e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fedcce03-318d-4cf7-b0f1-507bd37ab777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3b4737-4626-4153-a4f0-4e969c746b1f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6298705-6404-4a10-80c2-668d0f73bb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fd700f-9216-4850-87b8-f41b89ecbda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4aa39b-2daf-4a4e-9507-8cb6b3e613f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b90bc5b-f2e2-47ec-86d5-f9dc9e8d498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef3aaf1-75a8-4a11-adaa-6b8fccac4eff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5ef9a3-2a17-4216-abfd-383d41c0dbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169501b5-b7f5-4e6b-b536-a673f9a19b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ac5071-2b82-4a0a-bc04-5ae682e2a553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62454cde-43b7-4d82-b56b-32542fe60577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ddf766-3569-4dd2-8407-2ac183d6b8d4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b2f603-201d-496c-b4b6-3cc8d3b6bf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1174eb01-54e0-43d0-bf2e-9606b6b91d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b5d0aa-b82c-4930-84c6-518ee4e0fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05d6a3b-a72b-46f3-9457-532d38a16462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8738ee01-8f4b-4f61-91df-7f1c8a9b7011",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474cb37f-bb38-491b-a645-7be2a6289cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c13fdcd-7e8a-407b-bad3-0d3df9f97055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513bb101-1118-4cd9-88c2-8b84b290ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f516b4b0-f66d-4ae4-9b83-50fd79ea9493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47ba36c-8357-4d2c-a2c2-31dc2f87dfec",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6ff7ab-0ffc-47b5-8daf-a9d914396f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08147f2-ca63-4040-bf6b-b8a6245703a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db124883-0791-48df-bd51-2501346cf68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac634274-d6dc-4963-a2d1-981bd35ae2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5caf65-d537-433f-a0a3-e8bffd9c9985",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1032fc4-bc27-42b9-84b5-90beb841ea2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6450b8ba-7e62-4295-a9f5-8c6e51619030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e94c6d1-2aab-4aa5-8810-bbe6f50a9c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f279bb-325c-4fc4-a191-e16dbb0fe9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcbf778-8943-46a4-8d36-1874dc2b52ce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcf4c2b-e87b-43bf-aebc-601286b658ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948c68ba-7aca-4bf6-ac3f-7030e20a06ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597e2306-6f99-46fb-9757-962819b59427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7009a16-97dc-43d4-bfa1-9daf1de3c1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03fa015-3a3a-4a63-af9b-b4e962af027b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d49d57-96c3-4fa2-8806-618e51d67153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feed9c9b-4f94-4bab-a0d6-965670817de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f86e4-4044-42bc-a2d2-55209db8ca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "120d77ce-d704-49cc-8073-4f2451790ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acfaaf7-fdd3-4e42-9de9-69860a926215",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11714013-ebfe-4c69-bba7-e69914074e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dcd055-4ccd-4373-8df0-adadb2c3000f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e1491a-5372-4686-98cb-1de742639b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a333552f-2c22-4bcd-b195-fcb494547852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b696fe-2a6c-4d16-b31a-a49ad8ec5ab8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefc70f1-d170-42de-b26b-9c170bf46717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406f9829-5c12-40cd-9e43-4a6c9af46cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c608ac7-2ebb-4ae6-bf74-7d980614366e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed1e0a2-4aab-4c2e-8fae-ec613b893ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ba007c-637c-44db-a64e-d43cdbb1deb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd98a1d-35e5-4fe0-9630-a7f001929ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adf5f29-6684-47b2-aae8-00805506f9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71cd581-c074-4789-9065-f17c690babd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6fdc96-f564-40ae-9907-32cb7fcd66ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751966d2-9bf1-4f46-9386-bf099a8ac676",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e09ea05-845b-46ea-a0cf-10d3179780f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098b1889-cc83-41c0-9135-2d88e558a2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0529bbb-8837-4f15-9f1d-37cb5fd97f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91f6376-d837-4a24-a791-48526982e1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e5cec3-178d-4d0d-a049-43d811dee5c4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4ab8de-b050-4b34-95cd-c403908e99c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255d3c66-e27d-4da8-8dbb-8a745b304100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0f70de-654e-4264-af27-753e28851182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "75f7e770-57be-4bb7-a4f9-93b01d029735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6b64df-3a21-4a95-9cbd-fec6e56410bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ec5005-136d-4e86-bd46-a14ef0f70d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf4ae532-d8ed-4053-85ce-82337d961285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b06faa-0865-4c0e-8393-03e06a1d4638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8efc1f15-0389-4ba3-8bb9-051d0b3e7ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096a56e7-e2ba-4400-93af-73730a3124e5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0f5a5e-f67d-4238-857a-fc16b5469328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2241a98e-044d-46e3-95fb-5a12d885d417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef80d20-7a59-4ff5-98b6-ed334fee5620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3fe151-d6ce-4529-a6c0-efc1f5bf63dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3603ca8a-7299-47bb-98ce-ce5f2eafaf1e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e163e6-da22-4d54-aa53-13a6a7dadda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9165350-bfe8-48a2-89b9-e08a4f1793e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1009a335-7fc7-471b-b2b2-c6cd651b60a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39207479-8688-411a-a542-f27562c5e5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59159f2-c8bc-4ee9-ab03-9828d04af3b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6d5bca-fd05-4f88-8cf3-8b79f6e353ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4317926b-6e2c-4ea3-bfac-40f26bef36ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c43de7-80d4-4d90-9b91-76f93eefc2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40264cd3-89c6-4a78-9cf1-5d2e242b68d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ac8268-912d-40af-9236-0eba310d0098",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd48046-dac1-407c-bd93-750b076b3fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b39e75-8418-448b-a1af-c165511b2481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3462093c-9496-4819-a3e8-4b56878b790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d15fa7ed-9d2c-480f-b47f-102cf20b17a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d30d10d-bdf6-48fc-9be1-f42326368c05",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08666242-3718-4037-b453-b44172275d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39abfa3-22e0-4963-bd64-feb2c8f07f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c80dd7-70f7-4de8-be7b-5c3ec7591c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dd2f2a-6dd1-49a1-aa99-ba3fa3a75a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8703f67b-bfcb-4873-82bc-1495e21da368",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe77e30-6e3c-4c36-bd19-7481fcc3fab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f48e699-0e03-4a71-9e3d-0291ee2bd11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b0d4e2-5aa0-4467-bbf4-b7fa879dab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2f08d199-8fc6-4f9f-a0d0-58e4a60c1f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0243be81-908d-4cb4-86ae-6928ec01cdd9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed512941-a708-422b-bb3a-af06d37f08f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27698951-04d7-440e-9674-06e3452493eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31d201e-20b3-4467-96a7-ac7bb39d7a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9fe068-6447-4aa6-82d2-3ea3063bb54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0674364-0a11-4685-9663-511b1799f409",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec132bd-03d0-41bc-a6e5-7b63501c3ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca42152-722f-485c-9b80-f8954be7852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8b94aa-1542-4461-945d-39c030cf212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea91481-dea9-4352-876b-3d3e59eddbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c478ec-ea54-4882-989b-4ed17e789e87",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d76bb4-090a-4a86-ae49-65349bebc6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134117af-0b60-47d1-ad8d-72de833028d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfe28d9-a946-428b-a936-609e1a86f3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a8c029-46ab-463b-a53e-11dda3fdaa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4313b37-3178-47b4-8faa-80694b4a8f9c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3076dde7-a0a3-4b7e-9dcf-bf8eb79b0017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82258d72-d223-4d79-85e5-2455358916db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6072c1-6190-4cee-9c13-bedeacf0ae2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f2e7c2-3539-406c-8b2c-6bafaae3c711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dacd41-8409-491b-ab42-f95e5312dd9f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8da1f27-f698-4433-b9bf-5c4aef164026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97574e9a-3442-4801-9584-e837bc2a7140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f44d018-8fc8-44a6-837d-c1b6c89ef52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80dd92f8-2d0f-48d6-b929-901d76020fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749aae80-ee30-4c32-b6a1-b4284957d5a9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1895603-e1a9-4a00-af7c-e6d4927a9027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff1ef96-d0b8-4a6f-b868-750e883ccac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8540070d-61e1-4eb0-8bec-d08d36e4156a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1fc7a4-4e95-47db-935f-3b2c9439d2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069c30c-ef22-4aae-83d5-c6e7e8a05ea1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1c1be6-0e56-43d1-99cd-b6b3733f3f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e9c340-984b-427e-8a08-8f00c15e2dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aba057-aca9-4872-adfc-8b19d9991eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab68771-6468-4d0a-a67b-20f067ba3f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84f3e5d-43d5-40e1-8fc4-8b89b1188690",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1db7b7-e6f6-4c70-986d-dc97b9905f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b308a2-998b-40b8-b8b1-984363d07de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960244de-b169-4372-81d0-3ec8e720be00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06ed449f-f0e3-4303-a787-dea5ba4c87ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5601f1df-83c1-4601-b9a6-2681e3575f73",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea89328e-df93-48d0-820b-8c08e101c11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8751879-26f1-4972-943e-c05df9c5d22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e094e03-41ee-4ae3-8fb6-d41c1138d65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6931a05d-8907-49a1-8b45-c881497998d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd19f48-5545-400d-a1ff-e4ccdb896650",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b375cb73-2015-41ae-822b-a253afcc7ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27b4dfd-f54f-4280-ac19-c3027c4dab87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2d65ba-2b7b-481a-b1af-93202c16e80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "debdd36d-4cba-4696-a706-aa15761599ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0941d9-2e42-49db-9297-12d9570be32a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c939f59-def0-4dc4-aa4c-ea5752783c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f0a383-9c18-4fd8-bf84-66d1893aa7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1656aec-193a-4cc7-a402-4dbfc8f1021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1677c030-e94c-49f1-b117-0857cef865c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86f54cd-fe08-44d3-95c2-04545ebe0be5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2d0807-d9ea-4ed3-b42f-efef901bf850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eb4e49-570d-4c24-b3cf-2b75ba13c4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e92e04c-be2c-4c1c-b437-557a11ecefd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6fc3d5-0aa4-4f73-8a09-8d90b6280153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c223ac9-0fc8-4102-a005-25de73a154f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b980fa8d-774d-4b4b-9c98-20584403a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dce5cd-c0c3-45d9-b321-e5fffa456b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4596802-1519-4926-b6dd-9ce86363fecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2aec715-82b4-48f7-ad1c-2095ce2bb715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f698283-f04a-4d43-942c-7119e4d64563",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d85b871-583e-4c22-9f37-4485933ea31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c5cee0-ebbe-40fe-abad-e2f29bb401db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1dd95c-7877-4f2c-b21f-6b197b85e77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "455beec5-4316-487e-89aa-34893c6e7e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7908c99-aa97-4e77-bec7-b7b3683cb8d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfcad2a-49d7-4531-9c69-91f1fb869b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a02ab82-abf4-480d-94e3-4c917f0a3700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62ed353-d778-4b2b-8950-d9db98baebf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b055bbc4-9cc9-4672-bbfb-f5124dbd4db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b57de19-b635-485a-becb-74a2056a2d0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a98489-b490-4f1a-8aa9-fbc3c3e80305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47ccbe1-52b7-414c-ae24-6d82399840ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305bc0c2-11c2-42bc-a066-eb0a75306ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c36672-66c5-4ee9-b065-46d27d8edc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734bb689-9d5e-4eac-a42f-41affecbf102",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d96b60-ef9e-4c6f-950f-1b95d67026e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de43493e-97ee-4a91-ad12-33131fadba48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d168eac-30e7-4511-a1fb-e5d4d7ac1109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9412736c-6ef8-4510-907d-d8a47f6a77da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46544da9-6011-4b04-9990-ed7a10b4cded",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534a6bc9-4a5f-4ef5-8a15-92796ddfc992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24a6674-3132-4331-9315-4667337a01c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4146f159-1e58-489a-8dc3-9015c8442aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bceb89-55db-4016-9270-dfbadf74d90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b47662-e6d9-4820-afb9-e834b5072bf9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e85e374-9270-4f8d-89fe-52cbc4d7eef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3751b2ee-4256-4fa9-9bc4-f720b0ced699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e413bbb-f65b-4f92-b095-96f4d2956a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "148b7c26-1b6e-4215-b26c-fa9d21a541c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abadfd38-7a8c-4954-82ec-b75de3cada39",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661e5ccb-bfbf-43ed-8136-43124632f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b3ec3c-e289-494f-a406-26fc2486169a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd6594c-6a23-4185-bc3d-211c77eeb4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd020741-3b54-4c36-a644-207e6a316751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f629913-5552-4de0-9feb-247147c1d76b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4429d7d-72e4-41a1-91fd-5b077ab2fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf46c99a-f4fb-43fb-abba-e77b4a70285f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a88207-e0e0-463f-b67c-2017446ad88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4b94e9-a4d7-43b4-84d5-e1764b0f562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf551f5-e003-423c-95d7-a8e0edba8db7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df07a34c-2c73-42a3-babe-25c3caa99c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e53cb4-27af-4945-8b8c-a2f84600e25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d085175a-4ccb-48ba-8d0b-95f7d76cb44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6916b92f-7ef6-4ecd-a73d-64cb6a757c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1faca2-2881-46f4-a715-31e2d138be74",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df651267-8a46-4064-91cc-4daa93c7ef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3b26dd-ff1e-41fe-9a82-75ec44b60273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d32b68-f8fa-41f8-ac6a-480d9f6af199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa994a10-8e83-4456-bd39-8ef1c1da42dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a27154-4fd9-46c1-a776-c4657b3249ca",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b221f7b-25ab-4392-8cf1-9168df5c9703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42c6810-9a09-4bfe-8dd8-0120e3f2d55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5372fd-67ab-4acb-9e70-41eb65129590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7da0a4-5891-4397-8afa-cf7189f4817c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52d501e-5c17-4e14-ab6c-e9fa09d9d2c9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347fb44f-a771-4350-8373-dc9b51381c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ef39e8-ed34-4687-a90d-899e6be88cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a776b1-ca0c-47f5-ac6f-15ac4f6262d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf0a0fa-36b5-49f3-8a8d-f79086d5b0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ba7bc4-1fcb-4ac7-8afb-92442f8248a9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6405d79-5d94-4df9-9059-8b66326d3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb73f7a1-b04c-411c-acab-57eb628c315e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae7ac29-8349-45b1-a568-a9dd49ae6e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a678ef85-14fe-4c7c-b766-77ec3940b422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4926c4f-0156-4cae-9e47-31e141821978",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ee6263-bd0d-4b07-bc42-d3c485dc177c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f258e41b-13c8-41ce-a6de-412178b0d33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba863cc-756b-4751-a498-9c4616bb0388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3b74fb-e45f-44cd-8f72-5b2be421ed23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57dd27f9-cbba-47f4-b9fc-75a8fb771601",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03643a00-ff40-44eb-b245-7874b711321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97781f20-1304-4d19-a7b1-5faf50349fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73da761d-e899-41cd-95c1-a7aa0954baa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4a0a78-05c4-46f9-8a77-ce7b32175606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc50b96-8e25-441f-8c3a-324990f07362",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef8e11-57d1-485e-a560-bf419d4d93f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400f3d42-9626-41ba-bbdc-354c7d13603b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea30b96c-a150-49a3-9408-7978c6143324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b164f5c-4476-4bee-851b-9970a1dd0dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b526fa0-7f78-4f3b-890c-a48e405e2829",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3446a579-c412-4db5-a596-1fadec0b27cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aa1901-8319-4c79-989e-23311610a8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6256aafb-6914-41a0-a9e6-252cc7cc8a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd97f85a-7096-4aac-97ac-6451fc183e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a56d0f-ac4f-4756-b3cd-a46ba63beb97",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391cbd8e-3263-4ea7-8bbb-504b306a1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a849e83-b234-406c-885f-16117c316150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b8702e-be49-4eed-ae6b-8b72f031d7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc0f16f-9e94-4209-9fc2-6b1a9482445a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01b801a-0f00-48e9-9a72-6f028f9e77f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9059481-80af-43ff-a8c6-2b3b6cb91fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c10d0c1-f7d3-46af-8694-4d1a97f83ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca7c952-274e-4d81-81e6-b05b4f4088a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "824b2ef9-5c44-4d3e-9185-97ce61df4e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e54f0e-ff5b-4898-86df-3f352aca1450",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190aaf0f-651d-412e-94fa-0b3b12435311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654d6517-69ba-48fb-b343-862241d1a93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25556c4c-d0b4-4520-9525-413c1db13fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23b74476-532e-451a-a03e-850e15750118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed59299-1bcd-45d5-be99-aa5f4a202b44",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad39f55a-a030-4503-a3d7-c257844b0636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f925e7ec-e9de-4bb4-bd37-7645275c581c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055dc627-3fd0-40c1-a602-76f58fc740a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d499a10f-81bf-4a82-a124-fa2aa72dde82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb2abd0-54b3-45b0-9b51-6f8edba64d12",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961b470d-c2f5-46e4-9b84-525105610da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aefa78-24ef-4509-b89e-854721a39808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8187c305-e6d7-4124-88fb-7be601445f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8147954-af69-4fcf-84ee-3d023a64ba5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6393b7f-d0b7-4716-b435-20df6608b625",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc21d8db-03d4-40b0-90e9-273166a686fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a035af-b781-42f6-b3b5-9990fa84a32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf3d0d3-24f6-4ee9-b521-95ffa7ef63b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b117c6f-2ccd-49bb-922f-15bc99d0d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e5c509-7236-4e2c-9bbe-ea1abe830ca7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1257ff-48d8-4431-a491-c742af46cd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e98bc99-7545-4b88-8389-1a5ad33d4ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffe3358-db23-46be-972a-8a1a95dba88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d395f19a-534e-4c2b-8db4-8c7f7c192ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270f29b9-8ab5-4653-9c61-10bd1679beb0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f821fd0-52b0-483c-893e-4434e95da029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caddfbb0-0987-49d7-b8e9-ad6573f2abdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1034691e-5829-40a6-b653-1e6bbb12bccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf8e4c5-d627-48a4-96da-85b91c74a30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573e69fa-727f-4485-9b15-34fc8ef4c1ae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a570ed01-d214-4910-980a-4212c4cfce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab2d65c-04a3-4084-9f81-c2463474daf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74ada39-4b34-4ba1-8135-6cd996224940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaff011-bae0-4c2c-9da9-37712c13789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b209e2f8-d706-4489-ab7f-80b606b30197",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c522f41-ea8e-4e0c-8a4d-8cd50633df93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6640a92a-d8e5-46cf-bd05-6bde79cf69d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84612bb-a337-42c7-9ea0-2cad37db99c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6419f1dd-2aff-4b68-b354-675ce0668e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f08c329-999f-4b23-ba21-593bb742abd5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fb9d2b-ea05-48e8-a10c-714e1569bd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50aa5c2-778f-4d1d-9902-9887271b314e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25429ed1-f4f8-4fc3-9606-d1586e9d2543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b7dfe5-4a16-4501-b8ac-8f0567ec3ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa48c066-a3f2-489e-b06f-4071ec05518c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b81683-fd18-44a7-9364-b1f547b20a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1113fbde-bd5d-4465-8c05-2cac4ece7e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bccc3c-b970-43c9-9dbb-a43b56628014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24fcdc95-959e-4e41-967d-ca4950ce2d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a003696-3c7e-443d-bed6-d024bc477b09",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c2c784-7fbc-45fd-a2e9-0d39dae3fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bffe335-e041-4de7-b976-789d8c096fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511d2d60-6697-4af5-8499-01941e80f903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfda32ef-94a8-4768-82a5-f255a86df4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32b7893-7ffc-4eb8-98d6-6d19c91c07d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ad41ff-ef3f-4fdb-aaa9-007727c46a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c22b39b-aeb6-444f-863b-0523f1a2ca13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e68118-ce27-43c5-9c65-dcb74760c090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca624390-df60-4757-89ca-50a4365aea02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585e4f50-e431-4a3d-97c7-3684e35a9cf9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e86bc4-3585-4ccf-a0ae-e44f52fbf09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bbac7e-7ff0-4d60-a533-38ee2c3f208c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595569af-9ca5-4585-8166-8cedb530f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "73eb3c41-4cc5-4b7b-ad8a-4859edb4387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14132916-6fdf-4d9c-8720-b85f9c0f5459",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1248bdf6-db79-4ad9-829a-621eaef7d944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6866f5-a485-4f2c-bb5b-7f1298a7fa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585aa543-4bbe-4ed9-a53c-6226deb3dcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef38bed5-30e1-48cf-8768-14d61c53ec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b0156e-3957-40a4-9aa2-3bf88d1dddc9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5eeecd-b593-4602-bece-90656dbd21e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8199b4ed-4863-4e9c-bc0d-08eac2feb447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7de8bd2-eb1b-42a1-abbe-45f1129af19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "032f9504-e33f-42a7-96ea-4a2533f3d31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f856a5-5abc-4e0a-9184-157854e83285",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c1d872-f134-4e27-bde3-f49780d42b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dc2446-99f0-49c1-bac6-ee83afd6c7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745e5e43-771c-41d8-9814-856390734ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68f4cb67-4fd8-470a-8128-393c6d29b6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9efdc6-07b0-41d5-8c21-608a726712b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41674c56-f97e-4a5b-be92-9b7356a0e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a133f812-eb1c-4708-8677-00eb4ca2bbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a4cb12-33e7-4b48-ad4c-15a3832615fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e816dc83-204f-4d35-bb81-0c08bed45340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fde5e76-4555-4c76-af33-c53f6f22da95",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7ada76-95b8-4a5d-ae7d-3d140463f31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a293c2b-f96f-4822-83b0-12608a728ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef78a09-3de8-4d87-96ad-a3f8c34af45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18bb4791-f97a-4f84-9b91-df46ed8be401"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5df62cc-2cc4-47b0-96c6-31ac54c25e41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "975a6ef4-7afd-4900-8984-0f9d41be9274",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4763c1-e29c-4e59-992c-fca719ac5835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a347b3b-e1bd-40b8-8782-7654ecad38a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca28dd1-2ab0-4275-9008-9e0fae4142f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9d7970a-d501-41a5-8d37-ac6b22fb5fa5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14323f04-624a-45d2-94e2-b2c41f4198ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0789493c-e4cf-45a4-9694-9153328efaaf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "425027cb-f4ce-4138-ba06-45a1b2aa35c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d14b0853-c1ad-40d5-90cf-eea6fde1c045"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eea2d7da-5f55-4b55-9a19-6c533062c30f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12cc0882-bf99-4b1a-9a45-48cca192e771"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "519aba72-bb94-430a-b0d2-d28b5849e8ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b2765c5-c062-48fc-8f01-54279e48718c"
                }
              }
            ]
          },
          {
            "id": "245ea774-7fa8-4553-a07f-4c2ff60eb7c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c6b645e-6714-474a-9596-67468fd8c565",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "01240d1a-2f03-4bb3-afb8-72668a42c1a8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e04442b-3c3a-4b5a-9c21-bca6d163f323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75c78e02-7642-4980-8918-86572f43d003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea880d05-0d83-498f-a7ba-f206b139da6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbd9d73-a318-445e-ad81-02808bd6b2c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca70af1a-3994-4fd8-805e-53f204840afc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc72265a-961d-4d8d-9ef6-bb65a5f86cf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6935acdc-b4b0-4767-8638-962cb2a5331c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d49f619-eb11-442a-870d-c9cc43a75de2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10dcee6b-2e42-4ad3-a749-9b63c2f51476"
                    }
                  }
                ]
              },
              {
                "id": "2dbf1970-bcde-4086-b62e-ad30a033405f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fddc80a0-d6c9-40ed-b0b6-181a554aba03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8807c59-42c8-4cb5-b8a4-d4f315f7ba84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f5649c3-ac9c-4634-808d-9544398fd124",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "469392e1-43dd-4dc4-a1ff-56d470881425"
                    }
                  }
                ]
              },
              {
                "id": "01c4272c-f561-436c-aaaf-6d10ea15be71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20cdfb91-0ab6-42bd-8934-2cb912eb93ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6fbe6f1-806e-445c-a42d-69425db8f360"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "effddcc9-bc43-4a34-93b7-9d497d9bbaf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71be288f-cad9-4988-a702-0c27d8b8a457"
                    }
                  }
                ]
              },
              {
                "id": "b8c046e4-3eea-4711-9b3a-5a5fba8f9728",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba4b8f80-7c2a-41fd-9bc9-8876c099d3d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b12ef722-dc40-444c-9145-2614f007aeae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c21cd404-ac21-492b-b7d8-0cdd7f74d82e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6c56a251-7cdf-49bb-972c-9bcbfd014993"
                    }
                  }
                ]
              },
              {
                "id": "e8d49726-d67b-480b-aa21-3cae481e6f74",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29adbbaa-47d0-4107-853f-8ea6815f1b81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "accfdb0e-ea57-49bf-850d-6c1706314b25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42491b20-3181-47d5-99c7-0e72571f54cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "61e88f09-ca57-4ed6-888f-508afa14d0c1"
                    }
                  }
                ]
              },
              {
                "id": "3a3b107f-1ebc-4435-80e5-433ade77af22",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a9fabf7-bf37-4180-9458-cdf40f56c4fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3918fde-f86b-4351-876b-a70e3b93acc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5055ec92-f992-4dd0-9258-ecf565eccc0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9ac2c13-88e1-493a-90a7-71a1e516407c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fb9730f-f10e-4625-a0c6-3dee0f26ae6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d60e0525-2c85-4685-aa21-8d890284b90a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac187a3e-f1f8-4c7d-92aa-dba4e4c0d3bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b7cf014-bf00-410e-9b25-217b9d11d191"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee1e921f-8f97-481b-9dab-b9a564ed2f23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8ae9834a-f62f-42cc-ae5e-4b8bb6573975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd2f9586-09ec-45fa-9d58-af42c5cfc077",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7369d784-4248-40a6-98ad-352f2b858b5a"
            }
          }
        ]
      },
      {
        "id": "484d42bd-1c91-4e66-a1a9-2606fe53d4ed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4304a003-4269-46c4-a420-1a47fbbf7920",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a194dd3b-9df9-4fae-a4a1-a38c63e72fa5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21f27d41-17ac-4d17-8a77-4e3130b9d368",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac9ed81-4bf3-4bb6-ae2e-ddb2295db6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad52d45-39f5-4752-9885-3e6d87f54a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdccd4fa-f3bd-45b7-b14b-1d24cdd7056b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "80487547-a977-424e-8baa-ff8a733db599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91854534-b936-418c-ac34-dc5963927191",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9ae4d9-0d85-460f-9c0b-101af074bf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66c40dd-4f67-448d-b42c-864467ba8e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3387ac4e-c0c5-441e-abde-3832ae5f48b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1c1d9f-148d-4835-89c1-508241cfb1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8146d7-905e-4c42-95c0-63ff0ce0b223",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9d2e0f-477c-4239-992a-3ad06c042f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451bfdaa-df17-4498-ada2-9954bd999561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8515729b-38ac-4f5d-a425-70e9065fbf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be17f6fc-8dfc-421c-819d-4c6b11a0cf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cb6cbb-06c7-4b95-8512-45551c412f4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a954e4a2-d5fb-4edf-84f1-a9d44d2d79b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e07cd57-95db-487c-81b4-d7001a94b5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cfe1c1-7429-436a-a969-ce16af680e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1321f48b-bfce-4bb2-be82-dece481786e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21a92ee-942d-43e5-872a-fa3db005da70",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271fe638-6713-4009-88e6-92b602c965e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febd1603-b71c-4eef-8825-b5e193c57843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cceeb-f513-4883-aeb0-4cd48c97f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84af4b10-9087-4534-be73-a2c7917c4b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f858cbdd-f592-48a9-b579-3f13d47d4c25",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc26a06-edaa-4402-abc7-aa716a08bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9117af-dec9-4e1b-be70-e6dd2cebbbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37215ff1-e8bb-4f60-8525-91f7e87281ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d678b5d2-7c32-40b6-ba6c-b6fa6f0a2b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a73acad-b2c2-47fa-93e4-f3bf2bed7a06",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2049bdc-d3bc-4b10-910d-9c6e54001743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d42b33-adc2-4645-b094-1289d132cb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a06b7b1-3fbb-4501-b6f8-93cea6558c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4487cb3-48b0-4964-8053-f6300f6b08ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e468579-d1ac-4e3e-b8cf-cb8ca9830590",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e8ff8b-9da7-41dd-a031-e01e2466bef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78ca32d-33ff-45b6-9af1-feec4af27f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9defb2-df44-48e0-91a6-c92fd0ae6027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8542704-86c9-4c92-90ae-eb39a1b160fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22041f7-c058-4436-9918-c5add157163e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f1cc10-99d0-4e50-ad5c-c50716c39dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb99f781-426e-43b5-808a-2190d019a613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d550a5a5-a57d-4cdd-9103-9d42e412f53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60ea0206-ab7e-441a-912e-4f22869cafec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322e100e-516d-4b17-8bee-a9b4bae71b0c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e350b8c-e597-40d3-b43b-b84d9759c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11299f6a-f3ab-4714-962d-c984dcb4adf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164dabd7-38bc-490c-add3-9d1045e1e66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f100cad-e7e8-45f1-8571-f67367280881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd670d02-c878-489a-9bb0-976866050afc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3936caf5-83cd-49b6-b5c8-b18fdee1a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2380a1-169d-4c14-a59f-b0b2add8e581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e60a0c1-acda-4cb9-b295-462489df630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "076b3a46-c356-4a04-8d2a-80cced9890f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b1a2d9-8cd4-4b36-a2a7-a8ade9c79e0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550ff755-b8b3-41c3-bcbc-a60085c4b944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbba6535-d66c-4683-9482-6fe663eb967c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cba40ac-10d1-461b-8b62-9dc809469966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc96c57-027d-4c51-8863-5cc539c524e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4941ee98-695f-46b9-85ba-f35b116ac7c3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5085f5-fe3b-4c0b-9e10-da2c0f3c2bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1756b032-04da-40b3-a1aa-77c7ecea00b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b37ca2a-69a2-4d8f-b464-976e50df9b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "119016f1-cd96-4efb-b0a6-38197e9aea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d7e83d-b373-44ab-8ef0-90b59660a7d4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10085c3-92e7-433c-bf64-f04f4e0b9108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a425a71-2cae-4876-bd14-f2905767257a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fbf64e-6619-44ab-a333-1eb4c059cb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdafc703-9b26-47bb-8557-42c2c31aad44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc023a5-e844-4610-b929-fa0aef023f2f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab90a4-052e-41a8-ac6d-8c0777c171ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ba3b52-3b0b-49e6-ba2e-081ac8a0b9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ad1e2a-9a0a-4f4b-8256-6c7d67e97973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6675a2ce-8461-4747-9d7f-c6542ad60848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f310506-c4d2-4dda-9116-b74a86eeabf5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72e3d62-f8e7-41ad-b3ce-c0ff3c088aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7402d7bb-2a2b-4118-a4ff-c903b7ab7c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68006981-b4b1-430e-9ebc-902490a9a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "61a218bd-c523-4a5a-bf8c-5c9ce1fe15a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4480f926-1744-45c2-b6da-b03fe2daace3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4da998-061f-44a8-a45b-d49b21f137fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb5d554-4d9c-4158-b768-5fefc945e14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0120a12-82fd-40ae-8f90-ad2312348a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4405c06b-5062-44e4-a5d2-3ab73edad8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947baed7-deb5-4fb2-ac28-794517529e7b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aeb6dd-d1f0-462d-8fec-8556eab63176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4672f5b7-f73c-4a60-b7a4-cc007d97f3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f72df26-f9f7-4352-aa56-c653040b8fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4372280-0265-4fd1-92b5-16b203ce14a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e23a3fc-c06b-4e96-ba4f-ccfa2886b991",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519989bd-a3e8-4f67-b139-e4f08019a3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e455f9-636b-46e5-97d4-048c529763c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17ca11c-ee31-4352-b44d-f44c4bc71bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afc9e4f-be02-4414-9e7d-f3d85e90e8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89cee16-f108-43f2-b804-79b41f15d249",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1848cea6-4ede-4c53-90b4-b35879e5f2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1a50c7-e700-40e9-bd9b-6de3bd37b896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ff37b5-0318-43a1-a5f6-ad86e4562bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "600b1949-633e-45bc-9ae9-c66938be58a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce0d901-327e-47aa-a932-866f8e5358f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b59d2f-afde-4fd7-a0ec-67685bbbe542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d3a862-83e8-43f3-9010-4885d7e80d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2220505e-23f4-44c0-96dc-b65294dc7d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a1def3-8fa4-4bc9-bbaa-12699a86e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eff3e42-80ac-461b-92f0-832cd3ec5e3f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f390a8-0bb1-474f-bc6e-a25c15d18de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5119395c-1fb1-4503-ad95-64aa0360cfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b9bc64-977d-465c-a3e3-79c4d5de2c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaeb342-e42c-4f32-93bc-b8e66288ad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e900451-a024-45c0-b179-19f15b6a7275",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfd1446-a84b-40ef-a799-f6722935bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97229ae-8b59-4667-a39d-08c5c99e8168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd608829-9bb2-4b94-9d17-8e85151d2ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d4ee15-3063-4828-bcdc-d08d0a85a5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d414a59-80ac-454e-b10c-c369a8d74f02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35b4816-e022-42cf-b0fd-af7aa5cbcda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d759578-57e9-448a-a207-36a7535ce0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8768ee02-86c5-4a76-be29-fcc9a49ba918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d843fc16-61e1-4764-96c1-ab6b8d97cc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addb9416-73a8-4f92-a0c3-cf472f3d3f18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d1f3fe-6256-42bd-b6aa-30412df81ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b5c526-be7b-4954-8c2f-171407a78518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ef4df1-6d2a-4973-a68b-de1017a1c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b07f3b-03f4-4b11-8a13-a6dd7d28effd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d27475-156f-4df6-b7bf-51e0cfee4ab1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aa509d-c3c9-45b3-ab03-3de7d73970c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc4f404-c521-4299-b8f8-d429d72e83b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8785b72d-d100-4695-8e9c-f285665c8635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feaca5ac-65fe-42e7-ad0f-cdf1ecf84bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca9af36-8cc1-4c51-85b6-0c8dd490ccd3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6042e839-2ba7-4925-8aab-d83fd7a0988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d012e22e-a18c-41d5-86dc-26a5da88dfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84747f1c-acee-4107-bb8a-655ff18dd2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d09c1670-eee4-4519-8d91-4fe05fb94cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67f6b7e-87c2-47f9-87b6-776857c72c97",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e07f5-ca0b-4d9e-8ef7-710bd4506856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659d5a83-03f8-41cc-b971-7c3f8e5ebf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a0bb1c-77ee-49fd-99a1-deb27b13acd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab98a2-c055-494f-9a33-dfd541b14d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c239fa-eca3-4516-a07b-7c527993d401",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc6921a-0a3e-4439-bdda-a97bf89a7a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdcba2f-b767-4387-ba78-0db19e87937a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34b453b-fa34-43c1-a886-bcea85fba02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56398c7-841c-41a6-be56-8f65098cbfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff61dfd3-3635-4af5-b5d1-e599cec9f8f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c601be3-b941-44f9-ba37-8996f7e6a40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e106c5-17e0-49cf-946d-d88c9b8b9b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cb8e3b-f700-497d-9668-c4a4ffc059ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda50481-9bd8-42e7-b535-4abc5327f8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245afed6-12ba-4168-9894-95374a463205",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a087a7-844d-41bb-9fe4-c6a44363365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dc4169-3af1-416d-a02b-dda333b448fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ceeae1-3374-4f3d-be67-967f3d5e8fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab86c97-6736-4eac-8296-de24dd0a3524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7ba2e3-e6d9-45df-ad0d-c42486b25610",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed4317f-ce29-4941-87b4-1815ff5c808f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0691a7a-529a-4e0b-9265-17bcfc067139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002e530f-b3cf-459b-bfdf-18a68167040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030f4be0-8464-4cd0-b5b8-afb0b2c2dcd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46df39ad-149e-422b-8e01-a6def3530023",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e709698-6b5f-4764-8dc3-0f2d9b15ccf1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96fcca5-4b96-45dc-9ee6-aa7a8536d324",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8648be63-9fcd-4770-88ab-c5bb1ab5a839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d9f25b-edfe-4ef7-8c66-caf78cc5d01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccdb724f-df8d-4bd3-a535-ed65d27b67c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cb07f99-72ec-4182-af3e-0cc3f8068cf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cfb3d35-a45a-467f-8035-a62577cd50d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2a60d7e-2acb-4836-9370-0987c3b8ff3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29419f7b-cae7-41d9-9f13-412a7801e2f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "088dde03-4f7f-4629-908f-2f3667fb98ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d45a92b-bca4-4ad9-8d78-8c195a03f039"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9724d10d-b396-4291-8f95-da0ad0cbe506",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e09d729e-d64d-4413-a0ef-45cf1b808044"
            }
          }
        ]
      },
      {
        "id": "8ec327e1-1dfa-4c39-b17c-bb1f4884623d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ba841951-be5a-4658-9124-41b8656247c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "641777b5-9d9c-46d3-829e-c86138f770ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b74a1659-5194-48b9-b2ee-3aed148b2bc2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a240ea1-e156-4e91-b8f1-40f217a58258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ece4417-c233-49f7-bd6e-1e3e7892b63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295596ef-526b-4c16-acb3-e1fd02468337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc55a12-e102-4fdc-974b-10bf80aae834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f216c35-6c95-4613-b804-d60c1a40dda7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661ddc42-d0ce-4017-9fcf-ee8b55debcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55a62ef-706e-495c-9e0d-50b3ae74ba5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbee356a-c425-4d26-a13f-b0cb26b0f04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f34faa-bcd9-4fd7-a845-939bffcdf159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18d7259-d015-4daa-b899-baded957f27b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de366044-d9e4-41a2-9d52-e237cedd9c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01625cdd-1a62-40cd-a3d7-8fbcb7827608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b85ff9-6b98-4ed1-bf51-d89397c4c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ce5a53-0a03-4c71-b7e3-0feb83bba4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21238b2-216c-4a35-82ab-68a4f547c981",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75be4616-4c77-4c89-bf16-18d9f04650d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cead7abb-5b8f-4511-ad85-e71b802d5cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ba026a-993a-4406-a78b-669520746291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c33427a-26a0-431c-a87e-f3814465b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf96fe2f-dd57-473f-aea3-9a55cdc530bd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b709b87-ca3d-4907-a509-cac0074394fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbae1de-c1ae-4686-91ca-496b14643425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fb5c55-afda-48a9-98fa-2ae53b158146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b024de0d-5d16-486c-aaa0-78555642a705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbb8781-6faa-4c21-9e86-aef87ab7a432",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727e0479-0b3a-45f1-b8ff-435ea13416be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8933670d-c8f8-45cb-8390-5f2a83c2a624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d4a5e6-5477-4228-ba82-6821bb45a4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06e4ec16-8cef-4f54-9eef-b6e77c427639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34a75a2-e84f-4357-9fb8-2fed748c5180",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85f2a70-69f7-41be-9031-5423539b3a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a90803-ab93-4cee-a770-cb8dd4e3c051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f1fa51-a667-4e69-b1c0-ac28ab231dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfba73ab-6953-4e78-9a7b-6dd76afe948d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b963e75d-88f9-42cc-a171-ed0a4847081c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98ee3ca-a9c4-4ee9-96b2-76f25c693651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8506d3f-8204-4530-a0b2-9f5e23179671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd6780-c485-4092-86f3-b17ed806b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49284428-c54e-4cc4-854f-7b1c0bbe787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521b0247-9a0b-43c6-b56a-b6b3dcc0774c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae23945-6f1b-4b1e-b92b-fba5e9f239f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b20373-e9b2-4813-a759-1c73d12c00fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08387df2-f00f-4d2d-a329-71adead12f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3a0bd-487e-4509-b4db-0eeab6d58445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aedc759-d055-48f2-8f62-4125aee46636",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5be42f2-0042-4fec-af95-d741607498bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b25359-f80d-4fa1-b6cd-2c76ae39b9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e34a27-7719-48ef-a5f7-5f24f5527848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5987afb-c448-418e-a59b-c26615c530d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd97a07-3f98-4b66-a9f2-5b566f864cc2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7487eb7d-cb00-41ae-aebd-e479a6c951f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70600085-f862-4ad9-b268-7709646cf5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab90dd1-12c6-4995-9fbe-46f2a4ede055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd05690-e516-4ee2-b422-7977b0ae9cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6db07d-5178-4bfc-808f-340cb9ae19de",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b57a8e-c927-49a6-abae-3a49c930a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ebd739-b8d7-4c87-a063-7c8818ff331f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8ffee4-c48e-49a4-8ff5-a9aa986eae7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f972051-c232-485e-b8c7-1f16e96ac76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47955e4-40fe-4845-8312-f36e1261b892",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb04fee-5bfb-4918-8aee-1cc0c808c473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc995d3-9f96-4712-8681-1743a7a02224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1a8ea-2c0e-405a-a5eb-d4dd53b10a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7254bff5-cd9c-4d67-8cb1-4e8b2502f2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d022ea7-29fc-4a47-8c64-c0b299202463",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ee5e04-6d02-4401-a44a-b69450f68c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca751833-e8e6-4c63-b68a-2dea0b745f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d11119-b1ea-414d-9338-fab8856139d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abc2c40-100e-49b0-bb35-8bb7896e4b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9748d298-1183-40b2-aee9-78815e1bad4f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19d8d40-a20f-477e-a205-1ac591a3080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4ba347-1119-493a-a6bf-c07e5bc9beb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aca6428-f8ea-4bf7-bbc8-c88298be19d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d00f3f-e908-4601-a8c5-d45eba5a1877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e10b30b-583a-4687-ab48-dedb6ed30974",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5cd94c-48b5-42ae-8f35-a04f09527f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6112e1-df96-441f-995f-12373393b443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e795357a-04e3-4b65-b617-b370be47abc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aae116fd-b4e4-4f0c-95f6-e76e0d8f630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba6cde3-24c9-407a-be45-d9a1c5e5e885",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef883ad-1f22-4bd7-b4e8-d9552bd43b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b5a2fe-a346-495e-a6b8-1104f2a53242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfb2702-f191-4248-9ebd-fa892c334838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "018167e7-bbd9-4cf9-ad72-ccc3fa572ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435da3be-38d2-4d6e-8ed9-13b164656e6b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69943b6-7c3b-4782-9ea2-a4d808775aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16c0333-def5-431c-b097-6c51d2b61592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68122ed1-c4cd-4bc3-b1cc-c0e8b593c7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8aa87d9-e4a2-4505-bd91-de2f1bc2e2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7728d0a5-a2c9-4461-8e62-aa51ede33110",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171e9faa-43bd-4f62-86e4-bc05665d7b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cda8ea8-04f1-4ef6-bb4b-238cac9c19ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7718203-ebdf-4a71-96a0-6409ba1963aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2878afc5-a821-4f1f-864d-0687a74fe80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50668d58-b9fe-4ab2-89a6-d47a0f9195a0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012ba5b2-5f16-4f6d-86f7-e87983355467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919740ab-e1aa-4f17-b192-cf4d9c0ccc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3805623-04be-425b-a20f-7718b6ae5437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7a75d8-ebf0-4c58-ae23-9188ddffb768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed80e21c-1b6f-48e0-b02e-a0d885436313",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3a2853-652f-472f-b9e2-5868045fbab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6483c1be-eaa3-4383-a51b-8c41883e0b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721e8bc0-9ad6-4d2b-90c3-c53b043c73bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a93c163-256c-4641-b2eb-f5f677f14823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbd8b4a-854b-4f78-a7b6-088dce030af3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f38cbb-5e35-4cd9-9858-87279ef6ff9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4a7bb8-a60b-4b1a-ace2-f0e3865f6049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657bd7e1-803a-4dcf-b006-a28c0f2dbfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a6389c-9af8-4234-bd04-ccf911ba0153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f2ff77-0e42-44b7-bd9b-8dd22b9379ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780f01ec-7a01-4c68-96ef-4792d659d903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc78aaf-47dc-43b7-9703-0bef6160aa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b655d0f-6f8a-479f-bb55-461496028cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e5dc3-d474-4016-bba8-1675b800f64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125771d7-e85f-47a9-871d-b086b06ff439",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6016b2-745e-42b4-8cc0-359a4bde5369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e326aa-8151-42a6-8f91-b3a8d236adea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17b12d3-bba6-4fad-aa67-a73ea0e87881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc351d79-3b6d-4a30-9447-c3af5e9b1226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6656b0e2-e204-4923-87e8-bc68fc4cdf23",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1348ac84-492c-4e7c-9706-6997f3e404a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8510760-abbe-43b2-83ae-fa73ef1f26f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02df6681-8ed3-4892-b10c-95a8424b59c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094cd952-b08b-4f57-ab71-a1e2c1c5c16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ddd82-51f2-4e3f-8ded-b848d1bee8ce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a763447-eb1e-4f7f-892a-b19d20636f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f97a6b4-008f-49cb-817e-164316ad2e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abcc593-328a-4ddd-b6ba-57f57df6295c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b39ec8-dc00-4e31-abc9-90500ae1a752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f5d432-537b-4397-be6c-0ee7d038beee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327bc2cc-fe4c-452c-b151-c5e689426792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f68846-069b-48af-9180-d166171c05bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24ccb56-d466-4f12-a19f-b76299456aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe369d07-e4b8-453a-b5ca-5dfbdfbce6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790d928b-e631-4746-afa7-7d675198d13f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a54890-3cf0-40da-ac2b-9f005615b834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfa5b55-1c57-41aa-8c58-7f9cdb67364e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6262995c-b73c-4dcc-a594-b678fd20c38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ae64d1-45fc-4b6a-b2de-7d843c7d73c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce94db7-34b4-4903-954d-aa3a59da9e57",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28844fa5-b0f9-4a8a-994f-c14108adc61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f90330-9bf6-47ed-a7ff-9dc946247fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deafda24-9adf-44d3-b21d-55e5479af40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52343418-edce-460e-823f-5dae4a1ce841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93857a06-1ddb-464b-a8b6-69ff5c9348b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c23a2b-298d-43cb-8ccf-d3002fb30ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d3fc95-6e45-495c-bd1f-6f1c6a2688a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150e054f-97f5-4141-9a3e-3afef3558067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88e0d99-6816-4326-b3b9-cdbab352d3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595990bb-b8ec-4d6a-9c7b-14f06aca83b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6399528a-6263-4ba0-8143-c8eb02071b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a8281a-e5f8-4bea-8c74-6f9a61929fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c44dd0-0055-461e-be9f-c30f1fb6947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "062d1864-d6c4-4897-9517-2497c2637946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85222a7a-0097-4d78-a6c9-27c35c0f17e8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7e0450-8265-4b2f-8a97-9b7bb10d3fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ef429b-56bb-41d7-abd4-7235217a1da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4794ce-d258-452f-9ff8-efc3b2c0d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b4894d-ad5e-458e-bb3b-6ad2f13a5c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958043e0-69e6-4cae-a83e-201c7e09e5c4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cc5d07-dfeb-4089-b5bf-943afe2cede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1347800d-4fec-4683-bd60-06272ecbd398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403df357-cbc0-46cb-a8d9-e221aad5095f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bbdb6e-f12a-4afc-bc8a-97c9a5e725b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc3533a-2788-420c-af5f-0f6e55e08afd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30ef18c-acf9-4d98-a700-8bc7a05129d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bbef65-8993-4ef8-8444-92e380e07a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b3f940-0be4-436c-8fd3-555ab7d6a638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c313dad-7ee1-40c7-ba57-20adbbfa6d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b80d9c6-f498-4fcf-9943-bc3760ba8534",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0c7870-9afe-4fa4-9213-bdd6f8b33e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5abe254-13f4-4a5e-a69a-2c6130bb0095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c9392e-34e6-4a0a-909f-5618b3b1edcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3fabda-b833-4349-b944-6d8990912de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227749f9-4ada-4b34-a13b-9ce925c9abb4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46ac95f-cf6b-44c2-aeb3-3da2fcd0d68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384d54c7-4880-45d6-b9a5-f57b89b93213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d48e06-eb91-44a2-acb4-c265d05b086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02398227-b4da-416d-9582-1b3f0d40df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff4ebc4-9958-459e-b39a-a53aa1244cc5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ecf946-8390-4382-b2a3-8acf4f511c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cac4954-57cf-4fab-a24a-58487f08b449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642b4206-f19a-45f6-b9c0-d883c27e84c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a386cbb7-250b-4895-b203-911b8a579eb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0830504a-71f8-49e5-9892-48b1e7593b5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ae63948-3832-4657-98ba-9b28bbd251c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94593329-72b5-4517-8b6f-165342a46542",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d7139fa7-59b2-4c7e-8528-6101c22a0b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b91846-72dd-4b5f-a4a9-d7c1039d1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c6855cc-6048-41ce-8e47-f7da3a29fe2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6178bb40-5063-4320-9ec0-91160c63e084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "343e1232-519c-4f7b-934e-21990c12bbcb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0652ccf6-4196-47a7-9f1d-cc9d7f7c777e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf451f9e-c747-4802-a94b-ffc63b65e67e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32ba5c07-0654-4269-9c11-81984fe414b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a3d0dda-b538-4ae1-82a3-098d02f47b4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3df68b9b-0584-4eb1-b3cb-956f05113ab3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cc97463-5ac0-4179-86d6-4f022dcbe7bc"
            }
          }
        ]
      },
      {
        "id": "af60e7d2-b924-4c71-8e82-5631693c41c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d295499d-4e8f-4ae2-a702-9abe27a64dec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32243c2d-ae3b-41d7-b8ba-8b4ff60bc249",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bef3d0e-26b3-4765-8d3a-3d667b8f8d9b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b4712c-0b90-48af-acf2-98435c43c6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8977ba-198a-4f1f-9fd0-fa585ff571d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abba86ec-7e86-4348-9f8e-daf91b9e642c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9295ff78-f8b6-4ce1-af7d-72c804c40f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fbe551-1230-4a0b-bbfa-8949b73cdd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac055781-16a2-4ece-a027-53e51301750b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10b2cb3-5228-4641-ad5d-ccf7fa219e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fb7114-1f17-4600-92d9-b9e7191f4eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed69d9df-6775-4036-b04c-8ae6e7512bf2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea955401-4939-4a6f-b70a-5cd0f6a8643b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0428b772-4fb6-4a18-a9cc-7c93f32e2f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7efeff-1eee-4394-8710-2585ebda2bb5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490fae37-7cd3-4394-b88f-d3ff51aead5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9387434e-039c-4789-a8fc-e679697f9dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248310ee-d8fc-449e-b4a9-f386ad85f525",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbf1dd3-4505-4251-881f-784bfaff4121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f8b1f2-4cea-4353-83bb-102f9c871f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbee42b-e30a-48ba-aff2-422cc5a063e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3da41e-c5f1-4ba0-8030-63110bb94167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cbbfb3-8bf3-46ba-a262-5df963040abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb263e-18a2-45f0-80dd-280945bbb141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3a954b-c340-4db6-b62e-0683a1936c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e82307-a899-434f-a29f-1fdfe8225ece",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1833218f-00c8-4950-838d-7e117e07ad54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b651bbe-2f0a-4db1-be8f-137a10d2cdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3912a529-9d97-49b4-96ae-31b7ddce08f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe7418a-bc51-48a7-8e7f-9951571e29c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c8572c-400e-4dcf-a8f6-3f873883ef90",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84130237-936f-4239-be2c-38e732f00fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6f5398-a8b4-4449-8ab5-00d70fd6617c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decbf650-05b3-4cdd-a6f7-629bca12ce47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae327c0-60a3-4ec2-b6a3-7a0107bd1d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4a9140-fdad-4e41-b3af-bbceffc1cd06",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa1ad1e-3d0a-4306-a52e-dfc207b32ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c8787e-7999-488c-a1a9-bbe4398a1be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32fdb97-dcc0-40d2-a3f8-fc90fbfaefa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8bd10d-7c26-43d1-8ef3-b61653562d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac1698-7d9f-4400-ab8b-848396034826",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31707183-9f08-4cfd-8733-68387dd219e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe20c23-63a0-48a4-beb0-e6427e5acd5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aaa146-2937-49ab-9af9-0ca90d0c57e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8d947c-0af2-4f64-9f01-4ef8c4353d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0026904-ddff-4413-958f-25df9e8fff2a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083231b0-1c8d-4455-8456-6689771dc450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8804e15d-7705-4774-8dbb-c050993fd460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d1bacc-12f6-49f4-9a43-6e4654d87181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f7a120-4875-4bb9-9468-09d63f7e1446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be807529-6f1e-4015-aeeb-fb042b51931b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a940bdac-7e43-4382-96b3-b6fb50550f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1939e87f-3ba5-472b-b3df-fb6521d7704b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80e290d-6dfd-401c-83c2-096eb0b0c4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313f7656-0448-4b19-b40a-3292abcf6910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4982df77-8485-4c56-9fef-ca96ee0badf2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a536d6c-79e3-496f-a937-0829bd041c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eecf1c3-0c4a-427d-950e-4f8fece92121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227c7412-76cd-4ecf-b804-0cc9dd896de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fa61b5-9e69-40b7-8eed-bf3356ce7d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a267f07-e166-4348-a327-a82193fa5fbd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c4d710-12e1-4b19-9411-3d4054032ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e10fb7-a5eb-4317-bd83-eb81205d5093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0772f58b-05d9-4d5c-8c9b-436ff8c9409a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfc2dd6-1cb4-4730-bcbe-cab27363252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef5e21d-d614-4f0b-be45-4d6a69f85bcd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2137ce-e638-42cc-947d-bbfc7e55ddda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da1d977-5d10-4cc5-adfa-844f28b2f269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07671e07-99d9-4644-8cc1-db78bdb5f6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce368821-10a6-4eb7-b62b-d27eb2392fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fee5f3-2245-4a81-ae6b-9d05be1fc1bb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc885ba5-8723-41ac-b9b5-a23fc6cde129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a4ab1-47f5-416c-aabf-c1f0f7a3c6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb80fde-9155-4831-b297-b2f1062a5a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40043b28-e890-4fac-ae45-e345774638ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca647fe6-4568-456e-a550-87b4e84b4c62",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65db6433-0384-4416-b8aa-026ecadbe0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf254ca-143d-4a06-a9a3-8706dc00578b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487fc88e-c5af-431e-9e14-c95581f012b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0857de-7e25-4f24-9c02-552826f75520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4163851-0372-41ad-b8bd-2f722ead0b2e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190415c0-0e9b-4fbf-a35c-e7e6d99643eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928598a4-904b-4ec7-8145-ae71cd0de8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8040d71-779e-4b31-afab-9af93bc4e21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfa9ed3-62bd-4be5-8657-6fbb24dedbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fcae64-09cc-47eb-bf96-ee34496699bc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c5ddaa-457c-480d-8d65-34db67c6278b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f4a46f-48ee-418b-8367-9970e3663dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ddf506-1d2b-4fa6-a978-a693c890b16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d113baee-d2ba-49dd-9f0b-19cca53f5cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831a6bb5-f98b-4214-bdaf-789e95706b4c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13270e0-8073-4802-b266-18911378609c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda74271-577b-4815-b626-afce4deb4937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dcc492-7fec-4034-9027-f6a1733acf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef2a381-4027-49ed-b047-94c8437c75c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07718a95-2cf3-449d-8ee6-3cb195d5c6a4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a2b60e-1c3a-4a27-96b7-aae0e09cf1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028b9e68-197f-46d1-b262-4d4b2ea313f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f652d46-b3c1-4afb-9d53-8363f2a9eec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a24fe75-f1c4-4102-8a0f-e41423d5219d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42a5f42-7f62-418f-89fd-260b71fb4aad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f80c79-27c2-4036-9a73-52f093f546af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0b307e-d220-4b70-91d9-6335d77dff92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b0729-d372-4920-bc8c-6c8ecf1f4387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b96024c-3dfe-45e2-bc2e-d4fc464bf5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83884362-ca7b-4e41-854a-e5f29f926662",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dbe43e-c6e8-4a48-b827-a4ee7285a6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943def5f-390e-4d88-bb89-d45532f58841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f990138-8438-468b-a8e2-b9a118307a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f6518d-f6f6-41a6-aba2-61953d822e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a691633-f4a2-440a-8b89-5007712060a2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ba80a6-4bc2-418a-8785-0cfd12bb2166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6904ea1-084b-4ce2-bacb-127715ec49ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4490640-da9a-49ae-a307-8757491abc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d678c03-86b1-43a2-9c30-36b8e92cdcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d4f790-88a5-4233-bcb2-e48d5aee19bf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d438a2f-9266-4d86-8400-93ac937fca32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11926a8e-c7ca-4f24-842c-df49a70a68e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7975d48f-9768-48b6-8a31-620044c52788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaedbed-0fb1-41f3-a7ac-fcc6afe01d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194e3bb0-f98e-4d6d-a54f-11ed6ea1d18a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcf0fd0-5590-45c5-ace2-6cf808717810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a003bfc1-7c7f-4cfe-88ca-5abe999cb2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12837a5e-fbc0-48d9-baee-c575962c7cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b31046a-2e6c-4442-9a5c-60f2ce1f1637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92404d36-ad26-438b-87fe-736232bf299c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fcab17-606a-4f32-9919-aa8ccd2ed617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dd8827-2c99-41e1-8743-417d2a611640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f618bd3-6f37-4232-9b74-cc6cf279e192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb1f96c-e2f9-4ff6-a0e6-758a254a770c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fb8a43-2016-4695-94be-87acde3df3c2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a470e32-7327-42b8-a202-ad56be74ed72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce8531bc-aa34-4e1d-8948-d5e8e7aa598e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2b5a21-e2d8-43fc-81dd-78e30a92e0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f7e028-5abb-46ef-b080-57a48ddb8416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac774f4-b60d-40d1-bbd7-da9e5d601fd7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0512a4-efef-42e4-889d-51cdda06d850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf85e16-ff80-487b-bdb1-f93d509a5eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4878c30e-49c6-4d3c-ab49-409011509ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ce4fab-53d5-4628-8691-83c08658d181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a5489c-82e7-4b62-aba7-ef80c1151b4c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f46dd2-fd49-49ed-91b5-14aade96f40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ade01f-c48f-4995-a192-28b186763607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca35c0c-e104-462d-b3b6-4b14aaaa19de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad45816-0153-4d69-86a0-e1b574ec2b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8513da-3d6d-419b-ac3e-4eacde1244e3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c273a98-df49-4284-b6c4-9558363334cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3c938c-df14-473d-9054-cefff91b42bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc4a1f9-496a-4501-8226-c0e61b9a7d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7369c0a5-4695-4df1-81c1-e63b85f85736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf02ecd-2d84-44f5-bd4b-66c097b4402e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b5775f-97db-4ccc-af64-bcd25ac34385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50511d7-8796-4b3f-a53c-376df274c036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1908bce0-129b-4181-bbea-d1f16d6a88f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbcadd1-5696-4bfd-b3fd-4b2d53a8b2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b302f89-8a66-434b-b46b-f753bd4a2c5d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2899ee-5e5e-43a6-bae1-ef382be0cbfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18280dc6-b092-4c82-b71b-0586aeaa4c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a2fa69-7d65-4752-8d5c-4a15b33f3929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcb026d-aff6-412e-b480-2f45f50fa6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09e22e-f672-4f70-8255-f010041441fb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3712842-4429-4e50-9984-47fb60ec45ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23510cb6-7061-4246-908d-a66416c7769c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8664e6d1-b091-4845-bfac-c7598b85a08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713112c9-9250-435b-8fa8-5c80b09e2e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b972e6e-074d-48ef-8e78-e06b3544282c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e3a74a-0624-4638-8abc-650a5003af36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09ecaba-ea1a-4735-a74e-fef4153160cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ed0dd5-72be-42ad-bac5-9b103d9d0b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4af93a-e53f-48bf-a048-c5a5c0426df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f87e70-ed49-4be0-8520-079e179aded0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc7a9fa-f329-490f-8094-71017bd5c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0389132f-887b-4f88-82ac-2ff8d1a986aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cdff30-86e6-45c9-8098-87ef7c9a3a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb4f09e-6345-4424-9e45-91912451cad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c259e9d-7822-4cb6-95f1-8b6ba0a855d6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2614a7c6-bc90-45ce-8691-7e123f9d9667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b943d956-eb84-458c-a8ab-08d91f4532d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0433da7b-374c-4986-b725-5d3c5bcca251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeec04ae-9bda-4b12-a09d-7e984a834780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a86d6c8-0cb0-4d11-ad39-afde9278b371",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bf1f15-744e-4daa-9e4d-ff6c83876c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af919863-6237-464d-8914-744e6dc61370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793170ce-ea5c-4f06-8039-1bd730371e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d693f0-4606-456a-b8e5-9b90ed7c73e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa63b22b-2ec8-49f9-b14f-610161726433",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704cfb3-9088-496d-a8b5-39f9a93a9178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a56fe85-ca8b-4469-9f46-ece3701a831e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9015fe-8ea0-4887-91a5-7eaf308f16a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a672d90a-4524-4e23-afaa-c9eef952d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980e723d-f4fb-4397-b96b-b138317d9075",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a838339-24e9-4702-9e3f-2fdf7e85c218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4694a8-339f-4c46-9e9b-3ee99e842269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c9f8f6-608f-49b4-b66b-1b3e22c5564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b5a15d-7288-400f-8c8d-1c8aecb75530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c16fb2d-a090-4054-9423-c5697d0a8d1b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b9ad54-7684-4913-bc2f-002bda14b928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e6b578-a86a-438a-8b76-ea4e98f9606a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b8e6a9-6986-42ca-b219-60b82a124b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe659a9f-e505-4213-ab35-c33a0e49cda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80b6b39-3138-465f-93fe-2df560cc815a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9d0937-6eca-45aa-8523-df0876550141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d44b794-d32c-4f3d-bc0c-c5fb973a4df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9fe42b-c124-451e-b2bd-92e7cd0a4ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ceffbc-2aee-4e67-bf86-d1cebc909416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53542797-196f-42d6-9c88-12b05f3c40f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e41891a-20f9-4693-beab-010dac1dfdd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81e0d47-1993-4f85-8122-a41eacb9c6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d6599b-7274-401b-b649-ee6626c8268d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f31e8f9-c6de-4228-be35-ffe6f13bcdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42b8325-95ae-4829-bf03-f02665646cf4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c367bd6-246e-433c-b3e8-a6d4bc5a6bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87b3249-92c9-4f9e-9357-8e8e649a2562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3367b1b1-7f76-4ade-9e57-b9712e12dbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9d0b1a-224f-41b9-ab41-f963bebb000e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8cb1ba-9084-4424-835b-e01cbb2fc2d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea57ff6-ba10-4ce2-96d8-ae0a49b7d4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc15180-6bae-445d-b409-2cafba58f3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf37187f-ca2d-4b0c-a2c9-1ca5831103ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e17ece-b04e-4b69-b8c6-4a1535a3fd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81e4270-b8b2-4247-9c36-e8ab4a844f25",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044b87ff-5638-418b-b513-f3f69d220c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c805d3-0885-477e-b679-a6c278da916a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22deed7-8968-404d-8aba-311e83061a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca899b3-735c-480a-96e7-f2b5795c40bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6648d74-b249-459e-b1b4-f01de93c02fd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0649220-c9f1-4b01-bef1-3efb8e78a82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fe70b7-7045-4241-aae7-c68c41d0678b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834be01e-b43a-4ec1-864f-35f2206fc59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913c463c-bf3f-4d9c-8c84-2666b7103b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5191937d-05cf-408a-864e-54c7845c137f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d8c7c0-89f9-46bf-b3d9-8541877e9815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf6fc86-ca8d-4659-9c27-a70c60539788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bfac24-fd3f-40c5-a0ca-0b44548ade7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b0f3dd-c189-4235-98a5-7d74c3c68651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8e39d2-8c74-4266-9a63-3bf464977617",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9657ea-8d7f-4945-9a77-795c527ede20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9b2258-ca3c-4aaf-8ab5-719beae28c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4dd7b4-bfd3-4ce3-8621-a2370891bf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558dea74-fc86-41d0-a66c-9e63c68eb546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95b85ab-ea90-45a2-996f-f46bf735a3cc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d017f51a-82e0-4dcd-ae61-931ef45d18ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4322d0db-7c68-46a8-9b08-8ff453386d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168e6fd-7149-41a4-8241-3d047241374f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10a7704-b767-4c6d-a917-33c5b7275687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cb4177-dc54-4ea9-877a-d152bec0f423",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a282189-7c24-4086-8f85-b666bc575a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda38fac-5882-438f-be4e-b9324b28b2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50eb5345-21c1-4ace-adc2-ea495caba9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b029a5c-5eb5-4e92-b26b-c32edbcce64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54eec1-bc36-4e1a-869f-acee43b5a57e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996bd141-ba0d-443f-9686-9ed25518a255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1310d968-84c3-4f81-a2a2-ea2a89f52874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf93a90-d9b6-4f70-b2bc-f53b3b4232f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea81f6e-a154-44a9-85d1-312cdf315962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118796a8-2dc4-4222-a4fb-1ceb1f80af55",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c8e7f8-0d6b-4abc-80fc-5f9e8d6b21a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5c8857-cb88-4ef7-8732-f4d5f8b01970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abce574-89ee-4e4f-b339-84cdaefdb50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c96c4a5-3d3c-472e-bd11-4871fd6855fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42061f3c-1f7b-495a-9a06-d5d27c5c9f09",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a46f870-5b2d-401b-9a27-33c19e1ea27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e660b33-03db-4cf4-bdd3-b4d7e71b4bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f3cf82-0c36-4e44-ade7-d76adb9d7d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e55c4d-ce1a-42f8-8542-24dda3713357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88291249-d716-476e-b2e1-34db457754e4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d303283-4819-419c-b589-45fb0f2f37ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01348df8-e15a-4db3-bb56-ef7925aae893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d17cd1-e97d-489c-bf56-1e5d95f24bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706b8856-ba63-4d0a-a6a4-c6ffa995d117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076d21b6-2067-4851-b538-30c92d910679",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637b77bf-d2ca-474e-bcaa-d20878b4bed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06365148-6b05-4eba-91db-22cfb65f934b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef177a08-d75f-4f0d-b5b9-f388c13e3719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a5234a-14df-49a8-8292-fc403e9c9d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2480b4a-2f4b-4239-9ed5-d45257baa32b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b6d790-b9f4-480c-96d1-f09648d50c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d7a47d-c138-4c72-b220-60bc1aeade41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c7303e-2c66-444b-bc21-dfb19c4c8377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201fc972-57d8-4861-b03a-2a814888e6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c197b7-cccb-4348-bde2-8358e3ce83ac",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c61ea0b-0e3b-4610-b9a7-cd2a0cf6bc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bcf20a-e9ce-40db-a9da-a9bf18871fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dc21b8-2a99-4f6a-aed3-d8a104b7dbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73bcf21-da17-455e-b231-391aa4264cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980a17f-c676-43ae-af96-0eb2770b0572",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fc09ae-f31d-46d9-851b-2481dbc66ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b418ed-884f-4488-aef9-f8054bbc6f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a212f2a-ac1d-45e5-9056-6f0c3d3b7493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455e0659-3c20-4473-b6d4-916767fe1dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c005ee-1dd6-4063-89ed-e4051c6c59d8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6721b69b-ca58-4b13-b77d-48666f9719cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4eeee23-4281-444a-9ddb-abf52535d379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4092b8-917c-4bdd-ae1e-8cda544a0a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62966a75-6f4c-4b1f-96a6-547affbf014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df56449f-ad24-4514-b3a2-42628a5bc19d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49fc0b5-ea82-4b10-9a8f-1ec5d7bbc687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b315da-fe0e-4762-b77e-8dbf58d2f7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcc7497-d344-4f45-a9cc-ef53f59344da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25305a54-8b1c-43f5-a380-e070025d2c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892a29e9-2fdd-47ef-808d-a4ed8007df0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2377e654-6856-4f2c-adf8-d6eb26b1a563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41a3524-f5f4-42c6-a050-1e615b30a01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a306541-a138-4113-ae72-b17cf521b67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbc5861-ca25-422e-bbe2-1b4b990d8f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233bb94e-79b3-4ec7-8da1-0a73853ebf7f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa24be4-6eab-4b70-a166-f8868acc0549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2665407-bd6c-4bd9-beab-b59735ff166a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4b20f7-b15b-47df-9444-c30781375179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d9a3a9-bfd8-48c5-b525-4cb68a032c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0051abc0-6226-4ae3-8bed-de6c76a97ee2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7143780-76a5-4ac8-9527-45d59060b489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ebaf1b1-ba7c-41fe-8691-5228d08f4e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc855ac-3530-4092-8293-bb9ed605c57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67eea1e8-e8d4-4291-b9ee-c8635ec42d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6648c410-990c-44f0-adde-ecc0b3222c0b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed72f99-b3a7-4b0f-9300-a91f7c05c8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0065515e-92b1-4a66-9a0a-985459132910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096b02a3-2f20-4680-9ff2-cf973b77cc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cab2a9-7b14-426d-ba82-f04cead19628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b61472-f2a8-4156-8a47-e4a92558a302",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a0c0fc-767d-40b7-8ad9-5d4afa3a11ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2246e2-0b5a-41a1-a087-62b972041e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef3ff3e-3091-4f23-b038-0b2ad8b3f3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198eecfd-beb2-4d87-8889-089bd64d2e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ef230-65ae-43a5-86d6-449f07475061",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d006f1-cb0a-4e42-89e5-87d83aa46380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ed6b0b-e870-4553-9212-3127f081433d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036b8c67-65d9-4e81-941e-7877252d3ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc261533-e1d4-4dd1-bf09-98e59e2ca7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14800be6-5e9c-49b1-b381-c81171483fc8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc081c1d-3ef5-4b8e-b59c-bf6f5454c89d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d3bb52-5d0c-4507-a940-e85b8aa967b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fe8602-84d7-4a21-8b24-1f6fbbd4e715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd5fe06-cd20-43c9-9ba7-f371fc41ed50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4996f3b3-39f5-4c60-bbf7-6b6d424bab8e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae8ff62-2707-4fb3-b8b5-9a7a04810263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5045294a-561c-4866-9803-b9a10d2acafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ee57b0-add2-4db2-b8a3-d25b62adac5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c6422b-b414-4bab-ab1a-1a74a5f5b016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0babf3-68cf-4954-be82-8d66322a4939",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dac268-4ab8-4abe-a9e1-f8a8a10c6138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a342a878-3ec7-4b3c-946b-2aec0b700158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7810287-d814-4b3e-b216-b111aae6cd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5322ddd-e9b6-49f7-9e44-687ca10e345d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008ae8f5-f3ac-4857-9c97-260a09379afb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b17af-cee3-4b1c-b79f-bec6db49936a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365b0888-b222-4e74-9b93-5ae00e02c9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c5c255-c01e-45fc-a6b6-2a04010ec0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8232f86-6733-42d4-b9ed-fdb0ce13ab76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8644d2b7-93a7-4dea-bb2e-68aa300595ea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeeb5e3-4f87-405a-8d55-3b8eb2aeb683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62af3263-b43f-4371-af88-1def5bf84e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cff2e5-dd0e-4eb5-ba2c-bbc2e40946e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefc1bfe-cfc2-4b3d-8084-4ccabb0e1fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669cb574-d869-4419-9f69-6376bb6395fc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16550807-a984-4fdb-b340-66b519fd0bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a2e492-d9b2-4a13-8acb-268c975a0af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be4daca-efaa-49b9-be62-ff4cb722d598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6143040f-02d8-4c39-877e-3e9209b38487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee78cbf-b3b9-43ac-8d72-bee6dfaf1d69",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba59265e-ba91-4ce1-abff-4afdca2644e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f168fb-2416-49e1-b14d-39578e5fb481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c23d11-5bca-4b9d-b1aa-09f6046dd79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ea3448-5b82-433b-8ccc-4346e37e6812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ed8730-b303-4af0-8943-445178f01076",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3645ba1d-e785-4579-8bf6-f408bebff022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0549ec82-a4c6-456b-ae6f-d5e98e8c1780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f15e4-926d-4fef-8846-9f9f2eab9813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174e7a77-8554-4c8b-b130-5085f10a2d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14826d4-5f7c-4662-988f-f64f763350b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaeedd8-65db-4457-a431-d82405aa60c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a7d340-6468-404e-809a-313a142df881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db4f56-9dbc-45e9-804b-f3cf91b90a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddcb5a7-037b-4f7a-ab12-af0d1981b9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7954020b-2413-433a-83c4-785be3cb50aa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5596c7-aa5d-4b74-ac75-23faad469e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9561a7a2-965a-49a0-be77-278edac314d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57764548-7697-4c68-b374-530c5077e5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dcbe3a-12cc-4e58-a4fd-fbc03a5a272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd90c3a9-8282-4a19-b548-cc178fab553f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8461dd7-a122-454f-a05e-fae0c7e3c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4e07b8-239f-4557-82b4-5c107bfbc22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e724b1-d946-4cb9-90cb-f4ed639f4821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38e27af-ae51-4935-a163-35070923c174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd0c878-2cb2-4604-ab66-e9458b8a26db",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6c4404-8441-4702-b895-55c488300eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d836f50f-501b-4e7c-bba6-1ad25cb343e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2184fc4e-3baf-4bbb-9fc3-b6f50e3ebf8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32911aea-1bf8-4e71-8692-dd013ef4aaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef53592c-8307-4870-9292-61a895b89f8f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba323fd-4990-447d-b4a0-dfa9c084c11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00b4fac-b93b-4ea8-84b5-a84e61dbd264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2924b44-f6fe-4011-a23a-7df15e0171e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf9da44-1cf9-494e-8fa4-7463160074d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a45393f-d621-45a0-be84-27041b69c930",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51a5e6a-5f3a-4fea-922e-15f4ce97ee42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af1eca43-f421-46db-8ca2-5fd3648e127c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8440397c-79ae-49e5-8ee9-b1f596fb5640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1d5d65-a106-4248-8fbf-3ab10c59acef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac083e31-4da1-421d-9f89-9527d9d46e80",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adec48f-9e7d-43a9-a82b-6f35665858a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086d748a-0c28-492b-bdf2-177b15f454ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44fe684-e0ea-4a95-b43e-247e115fd186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec1d2db-2012-424d-801b-fa992084d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244bc924-5b68-4f6d-b8df-d2876d44ef1e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b2362-1122-4ad4-b332-42190c310ebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241c3c54-4e11-415c-be1d-c988b3c34872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee95a41-419a-46f3-be42-22251171ff60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332d4ed7-4904-4569-928e-d211b3f8179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30465439-ffd5-4397-8607-9f52edb3d1a5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df7408b-1822-46e7-bbc7-cc79c90550de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3186b48c-e0e7-4cbb-8357-7d3bb6184e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c935438e-6527-49c1-99a7-260df78ccd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8c3dc8-3ef3-485a-bc5a-aa97846d0497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576e121a-7d39-4cdf-8473-e126a46ed6fd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e430f235-6701-4c29-b248-6f1d7636d0a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a474e5a7-c6f5-4e5f-a2e8-79ea59dc4724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66140d3-c377-4329-845f-bcccbd4464bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77938a0c-ca97-4d74-bc29-dad1c3a77dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bc6d8f-f493-437b-bdd2-709031864822",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa996e-9ce0-4cea-ae65-26ab684c4462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43ffef6-7828-407f-84d3-76fd025cbbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5894bcee-e350-44a0-84ec-fc0c4eb9a8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3388b24-5616-4b6e-9caf-907d97451342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f0aef-b343-4a38-adac-59778ff55862",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6674b8-9cf0-44d5-be60-ced04a8f9e5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91244fe4-8e8b-4648-9598-6a69deba60b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41b37fa-4af9-42d4-a17f-35ca469e60db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8f3b8a-e4f4-4ffb-b937-00ecea288798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dceef1-fdbe-453a-9cdf-ce36b9702de4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4299ab22-bbcf-43db-921e-17465aa9ec91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e5baa7-d57e-4643-bf6e-72d1b5e85bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293a4cb3-b8e3-4f0c-a9eb-dfed5ee920eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12a9e8a-5084-4e22-b6ca-235f2ef6ea02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0315e68-82f2-4306-995a-e65887f9e7ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d5be97-ed3b-4f25-981b-c784efcfe64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee85a001-698f-41d0-9fda-a54360a492e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a705ca25-cb5b-40f4-8fdc-63459d02fb0d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14683274-b4b1-43f0-9a2c-76f52b3f75b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb35615-ddef-4424-ae93-806da2e7b368",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683a030b-4f43-4b6c-a1b8-40e190944681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab98d6a1-6688-4c85-a739-9fdb96d07c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb5edc-e5f9-4cf6-afc8-a9a9476e567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19c4fcc-afc6-4c02-ab93-07191f55919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85089223-7a6e-4073-8ba3-f251c2ba0fdf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af5afd9-d1e1-455f-8213-424d35b334be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba68d128-7154-4b73-bce7-058f3e582c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d85d5e-b0f1-44be-8305-a1ecca3eb729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3f223b-361d-4307-99ef-3a48bca5ec89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772d31c1-136c-4c49-9727-d12351b688df",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b53371-aa7f-4996-b858-9cae0477c2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa0bf45-a4c1-4690-8ff9-02affa4262a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0899a9-3516-4414-be31-20722ea23877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee65ce0-d71f-4d23-896c-97d8e79f5b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59583b0d-fb47-4a1e-9e5a-2a0d057df90a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86767dd-1589-45b0-b66f-47609c05a724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9253e4c7-16be-4a45-ba5e-53bd8aefccf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc120b35-cc87-4303-9ccc-258a4d452df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeb2dca-c9e8-4daa-ae1c-c5c406a2d2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98899feb-592e-4aee-a06b-0e21c48718d9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff4a548-12d4-43e7-b915-c1441fb6491a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adfeb9c6-b8bd-4887-b5ad-dfc06b712d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a95793a-13e0-4f97-af75-0db037be88d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e7bdfa-8b2f-4ffa-8ff3-1edd1e00cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a60f2c-1dc9-4f27-a7c2-6e2584612a85",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1566b531-0055-4a55-80f0-ce9a9c752aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e192b0-dc3a-4050-9aef-37eeb0c6fac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da3ae19-33d6-4b5f-b950-efba776bbe28",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356ca66d-dd1e-4f5b-bbf6-15e220c41eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55697cb-733f-407c-80b9-c20d681b09e7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b81ffd8-df44-41ee-8e45-6b732904fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8399eb7e-734e-4426-a1ef-d7bb8f0d4b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708c1b41-97c8-4e59-9411-652f2574d047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682e34e5-3d78-4652-8d02-ca2e73697832"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0216375e-4eb3-425a-a4ba-e97af77a57c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0893741f-ce00-4d1f-9fdf-948e1d7b83a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea85503-88cc-4ccb-8dfb-0e7e14ed377e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c03b03fd-2c59-424b-9459-3725f63edbc3"
                    }
                  }
                ]
              },
              {
                "id": "14a0dac5-5c8f-42d1-97ad-aab6dbfde4da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60a83f40-996c-4a1c-a743-f6714b937f88",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80bb3a7-74a6-428e-85ea-328be7ddf28b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5408fcff-02eb-4330-a726-3498055538e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c008e94-9d02-4cd5-91a1-e21f338f2e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f348f58-5548-4dab-a384-0f2949708da5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60016350-441e-43f7-bb74-3bbe89c16a9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dbdec33-5ef3-48bb-ba51-bbf1b9069c53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "526595bc-81da-447d-92fc-10b383d29db2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bca98c08-c4d3-4cda-b1d5-b2b18735377d"
                    }
                  }
                ]
              },
              {
                "id": "5e59a7b3-96ed-4936-b4a3-2dfd04d967b2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "de9330f0-14d7-409c-bf48-6d2a14f7b849",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384bb0ff-1f89-4a5d-be8a-3a968db74a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "03073a08-7207-4406-a6e8-606b07fc7097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bc33ad-26fa-4d35-a912-32d3450f8823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd30f8d0-355a-4243-aa95-7929749740ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eabc5bb5-9ec0-4320-9d89-352747f824a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df9aab01-ac78-4cb8-8dcc-9db6e8ff8571",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2406a3fb-9e4e-4e11-a9dd-c7a6282bf9c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95423cdd-63ce-4056-ad18-2aabcd314896"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf9f0458-100b-4bb0-b091-8b58b7747bca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa7cdfef-ca51-4f07-be4a-83ca6f1c6fd1"
                    }
                  }
                ]
              },
              {
                "id": "0c1368ec-68ad-42fc-b39b-48eb86b6c49f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08dc9a23-65b6-4230-b9f6-0b0bbec9f116",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac497299-16e9-4902-acdf-bc3292540f86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8fd6aef-dbe5-4dd6-a5bd-5d890d6ee6ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1db7ec14-6313-4eb4-b4ed-04a6215e3efa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63135942-42eb-414d-ae94-8a9130fd3e05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "452d177f-3d34-447f-90ec-0af203b4f983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2a27f04-7dc9-4c2c-b534-fe2cc18d8703",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edf0d995-30bf-43bd-96e7-dbf0e528817a"
            }
          }
        ]
      },
      {
        "id": "93df51db-a37f-4b3e-b651-57d8db4b8bae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "24aa62db-6c82-4870-91ae-9fe6e6a63ac2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67d8ab67-4377-42fd-a27e-e45692ab7881",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49bf8a6e-369c-4319-9208-9311835c45cf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4266e2-9f78-492a-8492-5aba9fd835e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "72dc6694-1d58-408b-9e63-4849640e440c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57fd9c7-2ac9-466d-b111-86900c637225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba897ad2-9ce0-477c-b23f-8bb1e3c9d87b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e5b0f0a-e7cf-4097-aebb-1503828c1dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5286be48-4a67-4218-a95e-04e9f4461f14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28e6f489-7d19-48e7-8ebf-bc5d1ecd3c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6345899-acb0-451c-af71-849af24f11c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50e7dc5d-d9e6-4c5a-9b44-c00a1a883730",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e5b180dc-d55b-45b0-953a-8ceaa363bf24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e65e634-63b9-4703-916e-c470378706a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deef545f-cec7-4eff-983a-e573937e10b4"
            }
          }
        ]
      },
      {
        "id": "32870b30-8fb6-4ff4-b189-d02dd7c635bf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "047e5765-75b5-4698-ad9d-53604324fac5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8de8ad0d-6798-410e-8594-cc2f4de3315a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b11a9959-41d5-4301-bd7d-964880bc7c8c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8128a5a0-c11e-4b08-9b97-e7521a969e00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e73ab8a5-8a96-4cfc-b8d2-564242e55110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4fddad-67d8-4fd2-a80b-ff3b7f934ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfd33a62-8703-442a-91b6-e43cf69a0ba3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a205e2db-0ec3-4a1b-b8e0-da8cb98d9d19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "894a2315-a6ab-4477-8039-ff2f1df7327c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7baba556-74cc-40cf-8c5e-04b270a0e469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1009897a-96f5-4283-9d56-69026da3a20c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3245add6-fe7b-456d-a277-4d8b7bc7e185",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71a98cc7-39ea-43db-b151-7fe6693e26d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "291f80a3-1279-4589-a7cd-07f181693c5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "434774c9-ab35-4d70-85bd-6f065652c5f7"
            }
          }
        ]
      },
      {
        "id": "b4323bf1-3b13-458c-a699-a692e73d05de",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "752687fd-4ad1-4002-8a0e-96335da77d02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6857eca-b422-42dc-ad93-47c7b70bf0b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a7a8d11-cdb2-4609-9c98-3c0a8bb7b4af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c16cb7b-0bb6-4109-9765-d63204fd03f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e30f5b13-5a3c-41eb-bace-cf41df71f87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b002c-0714-43ea-b795-12276c9f4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ab589b1-912e-4ea0-914b-3ec7a8c030e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74db78f9-bfbb-4b63-a836-ed81436bc5f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98322bc1-2570-4229-a629-c049f0dde635"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cce900f5-1941-4645-9d32-796a3ada7199",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75d83ee7-6118-4399-abdf-fceac6fb0323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0517b94-8a19-4617-9db1-0d09450e1ca3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92a6e9cd-f4ad-4b81-9e44-8b498e88251d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c560e2e0-24a4-4d5c-b824-a19a899ccd6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b434ca13-397d-4f3a-a366-9f254b2d3d93"
            }
          }
        ]
      },
      {
        "id": "eda02ec9-b129-4b4f-9696-3b973914e4cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "779655e9-9bf6-4648-893c-45583865acfb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50b27b7e-48c4-4748-839f-1828d33f37f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "722d9950-b302-4a19-a1d8-f0546730fc60",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3aebd47-e122-46e2-9892-be874b7fccc1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16d71a5c-e5e9-48db-8087-8637fe1c589e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 244.09473684210502,
      "responseMin": 10,
      "responseMax": 9176,
      "responseSd": 1154.313424617855,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700526974353,
      "completed": 1700527053273
    },
    "executions": [
      {
        "id": "491d7668-bad1-4a6f-b3ba-34519f8d2232",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "18eb71fb-f1a1-49ce-b19a-7b708bd48d95",
          "httpRequestId": "b397b6a7-69e4-4457-a107-eaea8796ce4d"
        },
        "item": {
          "id": "491d7668-bad1-4a6f-b3ba-34519f8d2232",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5289b58e-eff2-4faa-9309-dc9a2d49f81c",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "ceba233b-a512-4f7f-adc5-6a05f9be8db8",
        "cursor": {
          "ref": "a3b7fe30-a036-4090-b143-312edebc34bb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5b401cbc-b8ad-4205-9262-bed3f16f14a9"
        },
        "item": {
          "id": "ceba233b-a512-4f7f-adc5-6a05f9be8db8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fac1ac7b-591b-421c-a2b3-79c50d69481f",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ae558bf9-aaf4-45d5-8b23-14328f015a4d",
        "cursor": {
          "ref": "3ebabcee-83b3-4f92-b1b9-09d1764851fe",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f254769e-4e23-468b-8931-6f33da1bda7f"
        },
        "item": {
          "id": "ae558bf9-aaf4-45d5-8b23-14328f015a4d",
          "name": "did_json"
        },
        "response": {
          "id": "b2cfa06a-f2dd-4f00-bc46-cac956bbff3f",
          "status": "OK",
          "code": 200,
          "responseTime": 1719,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92da590c-edf5-41d9-8e3f-85db5422ff3b",
        "cursor": {
          "ref": "abb3573a-2145-43c1-bdd8-141d578408b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6a1fafa9-4100-40f7-8a97-acdc4e9c5c78"
        },
        "item": {
          "id": "92da590c-edf5-41d9-8e3f-85db5422ff3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e344baf-7434-45ef-b1ca-4b8d273e960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92da590c-edf5-41d9-8e3f-85db5422ff3b",
        "cursor": {
          "ref": "abb3573a-2145-43c1-bdd8-141d578408b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6a1fafa9-4100-40f7-8a97-acdc4e9c5c78"
        },
        "item": {
          "id": "92da590c-edf5-41d9-8e3f-85db5422ff3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e344baf-7434-45ef-b1ca-4b8d273e960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff4ab90-01b1-456f-aa41-fd65d42524c6",
        "cursor": {
          "ref": "12a820b0-963e-432a-a205-16cf3b3305c9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "429c36ad-16c1-43a2-86b9-c98c25fed9a8"
        },
        "item": {
          "id": "4ff4ab90-01b1-456f-aa41-fd65d42524c6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fbe64abe-3bc5-4f2c-9ad0-d9f8f3098ca8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 113,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14716f92-60ef-49b4-a0b9-2b832507780e",
        "cursor": {
          "ref": "7287ffe9-0bef-4ac2-b434-fe1e152d6dc8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec3e6775-23ed-4624-9d91-7a5e93843597"
        },
        "item": {
          "id": "14716f92-60ef-49b4-a0b9-2b832507780e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9f66c80d-eb9d-4587-951c-843175120a40",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef02ebbf-e1e0-4795-803a-3406ce8defc9",
        "cursor": {
          "ref": "58d03760-3f1c-4566-8148-d27e7fdc00ba",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5a6efbf1-96ae-4b4c-b0f0-4c9bd0ae27df"
        },
        "item": {
          "id": "ef02ebbf-e1e0-4795-803a-3406ce8defc9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2e1ef77a-c4d0-41c2-95fa-84d40147e510",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff2225c-a739-47de-938a-53a55144e126",
        "cursor": {
          "ref": "cfb057c7-fe3a-417c-82e4-26e39bddaa34",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "13ec0423-ebe1-4d35-a784-0a8e2d6154da"
        },
        "item": {
          "id": "8ff2225c-a739-47de-938a-53a55144e126",
          "name": "identifiers"
        },
        "response": {
          "id": "f5a78f2f-4b54-4067-8be6-f62ff8f0a870",
          "status": "OK",
          "code": 200,
          "responseTime": 1249,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7de9e5-5940-4943-bd3d-aaf3fb0fd4c7",
        "cursor": {
          "ref": "973f79ed-a19a-4e13-b3ab-f79262f4f6b1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1aa51e50-f67a-48ef-8ba2-47a5a5c92b43"
        },
        "item": {
          "id": "fe7de9e5-5940-4943-bd3d-aaf3fb0fd4c7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2b0b0d0c-3b13-41bc-b69f-4267b549bfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483f7200-cbb9-47e8-82db-ff7ba7a7f245",
        "cursor": {
          "ref": "c21581e0-0b06-4272-a5c7-8cf6db92840a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7a814c00-401e-4c22-bdf1-0f9255a63403"
        },
        "item": {
          "id": "483f7200-cbb9-47e8-82db-ff7ba7a7f245",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9a1d5e23-ac15-4f25-88c6-f545829eeef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96006cd3-d5e6-4aad-a0d2-e7fae75ebc1b",
        "cursor": {
          "ref": "37489685-056f-4cc8-b740-377ac9b3445c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "450472a2-0cbf-43c2-93d2-efd95ae7d89b"
        },
        "item": {
          "id": "96006cd3-d5e6-4aad-a0d2-e7fae75ebc1b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dfb41bd3-f3da-4dd4-972a-c03096be35b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f1e662-8264-4eff-b1a6-fe3eada542f8",
        "cursor": {
          "ref": "c2383b8b-9bbc-4b89-b568-e7f87f7e23c8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97236492-b825-43ad-96b4-5cb3036880a1"
        },
        "item": {
          "id": "b4f1e662-8264-4eff-b1a6-fe3eada542f8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8339a197-2514-424f-9b37-6575f615ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935aeeb7-4126-4537-8402-8ff69db15d99",
        "cursor": {
          "ref": "f94f0e32-b1d0-4e77-be4d-0abae000067c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "875af574-9b25-404b-905b-002f0cb1b79a"
        },
        "item": {
          "id": "935aeeb7-4126-4537-8402-8ff69db15d99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "758e8c50-7134-40bb-af12-34fcbc87520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3110f3-c9db-4fee-a395-7dda1574e77e",
        "cursor": {
          "ref": "ba3a3c61-5c81-49a4-b335-0f64532b0a43",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a066b799-96a6-4a64-a9e4-f16511de296a"
        },
        "item": {
          "id": "5a3110f3-c9db-4fee-a395-7dda1574e77e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "68bbef9f-b14e-4aca-b119-961fb1604ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5605d87c-ac66-408b-8d5e-60843c277d84",
        "cursor": {
          "ref": "4ba4e34d-759d-43ae-9f8c-31e22068b62b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "64cf5fae-a03b-4c54-9d29-fabbc3ec6b1a"
        },
        "item": {
          "id": "5605d87c-ac66-408b-8d5e-60843c277d84",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "81837a27-e819-4ce0-9f0e-b4b06645fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef46365-b6ea-476b-b01e-009e8c82cf7d",
        "cursor": {
          "ref": "df795509-d2b4-4d2a-bf70-caba8c123480",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a8ff7ec7-4099-491d-be25-3a0d073ec33e"
        },
        "item": {
          "id": "1ef46365-b6ea-476b-b01e-009e8c82cf7d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "39b871e8-85a1-451b-a693-57680f8586b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aa1b8e-6ca5-4822-867f-14ac3abda122",
        "cursor": {
          "ref": "a3fdf4f2-2615-417f-8e0d-82c660521b4f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "491d5784-5d74-424a-b90e-51140ff90f00"
        },
        "item": {
          "id": "73aa1b8e-6ca5-4822-867f-14ac3abda122",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "edc9395b-87f0-41ca-a080-56acdf72b1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5f6f4f-8ae8-4d52-ab05-e4ca5cd639c2",
        "cursor": {
          "ref": "41ef8eae-4450-4ae9-85da-4c7dc1eedd37",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5470afbd-703a-45e4-904f-70ff060e2ff3"
        },
        "item": {
          "id": "6a5f6f4f-8ae8-4d52-ab05-e4ca5cd639c2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a92558a0-3b05-47c6-9731-ca0e61de22ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d7ffcf-b65f-4d94-8ad3-cf3580fd49ff",
        "cursor": {
          "ref": "ae9b219c-549a-44c7-8c07-ed5ddfe5bc3d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "20430f13-f2f5-40ed-964f-cf817a5cf51f"
        },
        "item": {
          "id": "62d7ffcf-b65f-4d94-8ad3-cf3580fd49ff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4f7c5eb1-41d0-4761-b353-5858c1801f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a6e7c5-b110-48b6-a835-225c88fdce45",
        "cursor": {
          "ref": "490da8ab-9dc2-4727-bad1-813490aa5e41",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "039b8d83-c38d-45ba-999e-36400dc28c41"
        },
        "item": {
          "id": "50a6e7c5-b110-48b6-a835-225c88fdce45",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "195294b5-49a3-442c-abf1-73def920d830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0556c16-4fd1-4340-8e37-8f860cd114d2",
        "cursor": {
          "ref": "65ec8e07-e3cf-418b-a63a-716c27174d26",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cd540e4f-7b89-4bc1-8c21-a313198ed84a"
        },
        "item": {
          "id": "d0556c16-4fd1-4340-8e37-8f860cd114d2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ea7d4fe9-dce7-42ee-a7ca-887390df8fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7202dd7-a27b-43a9-9de0-3a783ea74feb",
        "cursor": {
          "ref": "398b6a36-63e9-452c-b4ff-33b971c6154d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd217b34-4bd1-4060-8482-ae9f3cd58255"
        },
        "item": {
          "id": "b7202dd7-a27b-43a9-9de0-3a783ea74feb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a03d6801-dc5c-4786-b4bd-bc6f1a28d053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e0555f-606c-4fd7-b745-808491938df4",
        "cursor": {
          "ref": "c2b6b6f0-275e-408c-9244-4acfc910e646",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c87bd158-eebc-4792-a94a-89afc14d9ccd"
        },
        "item": {
          "id": "19e0555f-606c-4fd7-b745-808491938df4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e78cc2f2-20d3-4f2e-832f-b16b7b06460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49435902-f8d3-4d46-bb74-1d8d51e69f9a",
        "cursor": {
          "ref": "3aaf2755-cb22-4755-b6a7-57e0807de64b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6ddeaa53-b5da-44b2-b2c5-680ee2840e57"
        },
        "item": {
          "id": "49435902-f8d3-4d46-bb74-1d8d51e69f9a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bdd775b8-3184-46ea-8902-a9f83b72938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e194e2-f053-41c5-a765-d8e3e6fd4238",
        "cursor": {
          "ref": "7b2e3333-5ebf-4126-959e-1e9516fa1a42",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b4dd239-a62d-4dba-bf58-280f9698cb7d"
        },
        "item": {
          "id": "28e194e2-f053-41c5-a765-d8e3e6fd4238",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "94dd00a5-79e1-4317-a463-2111e088e775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621bce29-9606-422a-b540-59abe8a379c8",
        "cursor": {
          "ref": "39fa5353-080c-41b6-b013-b24b1122f162",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ee852dc6-757f-4541-892a-aecbeff1b500"
        },
        "item": {
          "id": "621bce29-9606-422a-b540-59abe8a379c8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "71c97f1d-992c-4651-a032-bb47ef919a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60bd92d-a1f0-4b2d-8d55-e3ef73484ea0",
        "cursor": {
          "ref": "360afb0c-5cd4-46b3-b381-694351a3ad37",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b55e6e91-fa6c-4574-b2c3-c8cce6ceca48"
        },
        "item": {
          "id": "a60bd92d-a1f0-4b2d-8d55-e3ef73484ea0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36408c47-b29a-402d-8dc0-5beb07041d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540ed503-cb2e-48ce-b586-6df7a6574015",
        "cursor": {
          "ref": "66e1f2fb-8e96-498e-aee5-a302c0cbb3a7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "406b50c4-b908-493a-b9f7-bb95069fcfdc"
        },
        "item": {
          "id": "540ed503-cb2e-48ce-b586-6df7a6574015",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "34f9e311-a80a-47fa-8a9e-9e563a44c226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d4cd63-d140-4cf9-830f-abcfb1639cb2",
        "cursor": {
          "ref": "dc1d3848-1a4a-4cd0-bb04-a2836a040103",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a92ab55a-660a-45ed-aac2-a1a408b0f42d"
        },
        "item": {
          "id": "60d4cd63-d140-4cf9-830f-abcfb1639cb2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4d62a8f1-5850-4e67-9c84-f4f84b82ea61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96efaa48-da28-4427-9bce-bc02e68a0d14",
        "cursor": {
          "ref": "e97d94c9-d14a-43af-834a-04fc09ca633d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "468bec21-ba98-43e7-a154-9eed8f416a2d"
        },
        "item": {
          "id": "96efaa48-da28-4427-9bce-bc02e68a0d14",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fa615c88-8d65-4c2b-818c-1cd38829454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3b4737-4626-4153-a4f0-4e969c746b1f",
        "cursor": {
          "ref": "973ab255-37db-4050-b789-1433bcbaf5cc",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7c0e548f-af0a-4f46-81a6-3096801f0d32"
        },
        "item": {
          "id": "6c3b4737-4626-4153-a4f0-4e969c746b1f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2f0070d-cd63-453b-93ca-0384c8a51e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef3aaf1-75a8-4a11-adaa-6b8fccac4eff",
        "cursor": {
          "ref": "916a8952-086c-4659-9a6c-16168c3aa2f7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f9a81709-6be2-4ea5-b56b-d7d430eae335"
        },
        "item": {
          "id": "0ef3aaf1-75a8-4a11-adaa-6b8fccac4eff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6a95ff0a-cf50-40ca-8e41-53a332629bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ddf766-3569-4dd2-8407-2ac183d6b8d4",
        "cursor": {
          "ref": "7c79883a-4a3d-4449-8df3-32df7151b4df",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e242c85d-e735-4f38-aa70-ee61b6fee445"
        },
        "item": {
          "id": "85ddf766-3569-4dd2-8407-2ac183d6b8d4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d597b8d-a422-4d5d-a65e-285e1bba20d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8738ee01-8f4b-4f61-91df-7f1c8a9b7011",
        "cursor": {
          "ref": "10532bfc-2857-475c-b527-74d7d889a91f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "06d1add6-83bd-4263-8f92-8d14e8511fa1"
        },
        "item": {
          "id": "8738ee01-8f4b-4f61-91df-7f1c8a9b7011",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2155f61d-fdb7-4821-b701-c17d71161a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47ba36c-8357-4d2c-a2c2-31dc2f87dfec",
        "cursor": {
          "ref": "0e98a173-72a5-4162-b9d0-110377d84b06",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6babd81a-0743-4c62-9157-fc8b980afec9"
        },
        "item": {
          "id": "a47ba36c-8357-4d2c-a2c2-31dc2f87dfec",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "25733171-f7f7-494a-b9d6-3c0221d93b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5caf65-d537-433f-a0a3-e8bffd9c9985",
        "cursor": {
          "ref": "abdcc97f-5dcc-431e-91df-d4dcddc5e5f8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "54b494b7-d63c-49a8-96a2-3e21b22afd69"
        },
        "item": {
          "id": "7b5caf65-d537-433f-a0a3-e8bffd9c9985",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d8dbe3c9-f877-4bfc-8869-c0fe50a00536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcbf778-8943-46a4-8d36-1874dc2b52ce",
        "cursor": {
          "ref": "5dec6bee-dfe0-4aea-bbaa-122df23be743",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2a800a89-cf41-4e5c-bf31-f9678543f56b"
        },
        "item": {
          "id": "ebcbf778-8943-46a4-8d36-1874dc2b52ce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d1c152ba-a0a5-4f6e-8a5e-a171997fcca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03fa015-3a3a-4a63-af9b-b4e962af027b",
        "cursor": {
          "ref": "f1d24bc3-93b3-4e7b-8c36-d523ca1e1328",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "54608fef-c11a-49c1-913f-6d4b5e8bf4e0"
        },
        "item": {
          "id": "c03fa015-3a3a-4a63-af9b-b4e962af027b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9c39bf47-59a5-4e4e-b6a5-e35ccd85fb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acfaaf7-fdd3-4e42-9de9-69860a926215",
        "cursor": {
          "ref": "72ca7b7b-ad9f-4192-9143-55cf9ed0b87b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f375c499-0d99-4d37-a475-614e0a495fe0"
        },
        "item": {
          "id": "3acfaaf7-fdd3-4e42-9de9-69860a926215",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fb238f9a-dd01-4a70-959f-c9773c394c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b696fe-2a6c-4d16-b31a-a49ad8ec5ab8",
        "cursor": {
          "ref": "7f63489f-7108-4b2d-881c-08f1577840c4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a363802-4fd5-4b45-b86f-5510dbc2a63f"
        },
        "item": {
          "id": "e8b696fe-2a6c-4d16-b31a-a49ad8ec5ab8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f25e35a7-1b9a-4769-bed0-86dc50e1640f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ba007c-637c-44db-a64e-d43cdbb1deb7",
        "cursor": {
          "ref": "8d8b969e-edb2-4c3c-9b3d-abc974d2a0d1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "445c290d-0054-4fe3-a843-ca781f6d660a"
        },
        "item": {
          "id": "20ba007c-637c-44db-a64e-d43cdbb1deb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a1786623-ccc0-4632-8935-06e60d3e6657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751966d2-9bf1-4f46-9386-bf099a8ac676",
        "cursor": {
          "ref": "e86a09da-b38d-4f5a-827e-b5d285ead48b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f7b91328-e88a-4cbe-b5ea-36320eea20aa"
        },
        "item": {
          "id": "751966d2-9bf1-4f46-9386-bf099a8ac676",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0ab17175-8df5-4d65-a568-53a78a2ddfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e5cec3-178d-4d0d-a049-43d811dee5c4",
        "cursor": {
          "ref": "5ce1e64c-2495-4fd5-829e-c25e4fe08e79",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eef824b3-ec9c-466c-8668-2edd16f54e23"
        },
        "item": {
          "id": "c2e5cec3-178d-4d0d-a049-43d811dee5c4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "09bd29ee-2c01-45ca-8d51-609145c09a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6b64df-3a21-4a95-9cbd-fec6e56410bc",
        "cursor": {
          "ref": "fd3f63d7-8d44-4ee6-a672-acae31406cb9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5ce4be96-f954-438b-a6da-6b0df09660fa"
        },
        "item": {
          "id": "4c6b64df-3a21-4a95-9cbd-fec6e56410bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "be00bb3e-e106-4f1e-9952-b0dd2b5e74a2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1518,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096a56e7-e2ba-4400-93af-73730a3124e5",
        "cursor": {
          "ref": "7b0af780-2440-41a5-a50a-43439518a43b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "79490d2c-c356-4ed7-b0a8-317673e1bdef"
        },
        "item": {
          "id": "096a56e7-e2ba-4400-93af-73730a3124e5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8b0f5c74-e84d-49b8-9c0a-e3a05d3a5ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3603ca8a-7299-47bb-98ce-ce5f2eafaf1e",
        "cursor": {
          "ref": "f43dd850-64fb-482d-8572-b1e4c9d72ff0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cf8dbcad-0568-469c-8027-742098b45dd3"
        },
        "item": {
          "id": "3603ca8a-7299-47bb-98ce-ce5f2eafaf1e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a512ee3e-0d0a-4270-853a-14208aae3036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59159f2-c8bc-4ee9-ab03-9828d04af3b9",
        "cursor": {
          "ref": "14e99c0b-099b-4311-9df2-5a26e0937270",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eddbc8f9-0236-449f-94cd-cc66e0a0fab5"
        },
        "item": {
          "id": "d59159f2-c8bc-4ee9-ab03-9828d04af3b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "06cf5929-033c-456f-ae84-7a312e2747b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ac8268-912d-40af-9236-0eba310d0098",
        "cursor": {
          "ref": "9792c9f4-2153-486f-b4bc-ac0d08faee11",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3d0b8825-3b85-45ed-884a-d7d1715843ab"
        },
        "item": {
          "id": "e6ac8268-912d-40af-9236-0eba310d0098",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ffe7f3a8-c1bb-412a-8b27-7c01594fb7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d30d10d-bdf6-48fc-9be1-f42326368c05",
        "cursor": {
          "ref": "0e11a400-6394-40e9-8146-0bb92e953353",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "802da0d1-ab25-48fd-bfcf-91e966ebc126"
        },
        "item": {
          "id": "2d30d10d-bdf6-48fc-9be1-f42326368c05",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d955b665-43c0-460f-9f6e-bce5972365f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8703f67b-bfcb-4873-82bc-1495e21da368",
        "cursor": {
          "ref": "35f19f95-0c90-48fd-b41d-024ae1dceab2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a479bd18-07a3-4b41-8b56-e579bd81c282"
        },
        "item": {
          "id": "8703f67b-bfcb-4873-82bc-1495e21da368",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "38fea34b-15bf-4686-a7eb-f0364bf75a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0243be81-908d-4cb4-86ae-6928ec01cdd9",
        "cursor": {
          "ref": "ccd40789-694f-44c6-86a0-2dbf3f14519f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb075db9-5233-4b82-91d1-a2b4d383979a"
        },
        "item": {
          "id": "0243be81-908d-4cb4-86ae-6928ec01cdd9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9d55a7e1-7304-4e0d-9b6a-19d9e36e017f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1542,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0674364-0a11-4685-9663-511b1799f409",
        "cursor": {
          "ref": "ede1f76c-eb4d-42bf-bb0b-ac9ee0590c43",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f5141d7a-4e0c-41da-9067-994f37a10dcd"
        },
        "item": {
          "id": "b0674364-0a11-4685-9663-511b1799f409",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c4992e18-1eb4-42c7-b7ef-02f3dfdc6a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c478ec-ea54-4882-989b-4ed17e789e87",
        "cursor": {
          "ref": "73616663-a428-4639-b896-4d9f05b17c1b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f2b5fff3-2029-47e2-8231-9bf2bba4e8d7"
        },
        "item": {
          "id": "40c478ec-ea54-4882-989b-4ed17e789e87",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1861e92f-4c45-4db7-90ea-01b9d840c19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4313b37-3178-47b4-8faa-80694b4a8f9c",
        "cursor": {
          "ref": "445ceea7-293d-4f74-9950-c9580a09ef14",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9d76f56a-0444-4306-ae2f-f882b68ff0bc"
        },
        "item": {
          "id": "b4313b37-3178-47b4-8faa-80694b4a8f9c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6cad9260-1386-438e-a870-cb8a93229f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dacd41-8409-491b-ab42-f95e5312dd9f",
        "cursor": {
          "ref": "5ffbb776-dc7a-4e86-8056-29e8b9fd420d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "744b0f1f-b3c3-487e-a31d-595d667a6995"
        },
        "item": {
          "id": "27dacd41-8409-491b-ab42-f95e5312dd9f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cb94a93a-083f-4059-81b7-fff325093be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749aae80-ee30-4c32-b6a1-b4284957d5a9",
        "cursor": {
          "ref": "cd04b710-672c-473a-a8e2-a123dad6c998",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a5a3dcc8-c865-4564-bb50-6d186ea911f9"
        },
        "item": {
          "id": "749aae80-ee30-4c32-b6a1-b4284957d5a9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c310169-8b0c-496f-b3e1-24b89548ca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069c30c-ef22-4aae-83d5-c6e7e8a05ea1",
        "cursor": {
          "ref": "b68605e8-7d45-460b-9d39-bcc5bf93d452",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "956a2a04-0a30-442c-bce8-1210df7b70e6"
        },
        "item": {
          "id": "2069c30c-ef22-4aae-83d5-c6e7e8a05ea1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "738fc674-4eb9-448f-8a2f-d1150a62258b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84f3e5d-43d5-40e1-8fc4-8b89b1188690",
        "cursor": {
          "ref": "1f89d394-8aa7-48c4-ac12-ae2c82be0035",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "97392695-7623-4fd6-b824-bf3b6c1f6df5"
        },
        "item": {
          "id": "a84f3e5d-43d5-40e1-8fc4-8b89b1188690",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ebd03d2d-bead-49e6-9886-2b0f7acbe7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5601f1df-83c1-4601-b9a6-2681e3575f73",
        "cursor": {
          "ref": "104c3938-b0d8-4195-aa0d-d380022208e7",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c85b1794-7a48-4077-a91e-fe2fee577026"
        },
        "item": {
          "id": "5601f1df-83c1-4601-b9a6-2681e3575f73",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "381c8988-a81e-4bdd-b2f4-73e856aecff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd19f48-5545-400d-a1ff-e4ccdb896650",
        "cursor": {
          "ref": "998156e5-3481-4afb-b13d-2d892603b2a5",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8abcad3d-28fb-4981-8b34-eb25af45c995"
        },
        "item": {
          "id": "cbd19f48-5545-400d-a1ff-e4ccdb896650",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "14e7cc09-babd-4366-9f2f-c8e10f457ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0941d9-2e42-49db-9297-12d9570be32a",
        "cursor": {
          "ref": "c56b6147-8095-498b-8961-ac2fc64fc57a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "957687a3-a98f-4cff-b8f7-bfcdfbf4fd98"
        },
        "item": {
          "id": "0c0941d9-2e42-49db-9297-12d9570be32a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "81af2bfb-b1bc-4c1d-ae29-b4d7e5000888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86f54cd-fe08-44d3-95c2-04545ebe0be5",
        "cursor": {
          "ref": "e624eff6-58fc-4178-904d-cbb5de11b827",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1fb80378-6cb8-44ce-9cdc-dc0a59318c1e"
        },
        "item": {
          "id": "d86f54cd-fe08-44d3-95c2-04545ebe0be5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aa244e86-97b1-40e5-958e-01720d3dc06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c223ac9-0fc8-4102-a005-25de73a154f6",
        "cursor": {
          "ref": "cb93d099-91e0-465d-bd9c-5b12c9d97767",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fcab360b-f179-4579-a850-fe17186e9118"
        },
        "item": {
          "id": "5c223ac9-0fc8-4102-a005-25de73a154f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "64c29844-ef68-485d-a264-469ff0875232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f698283-f04a-4d43-942c-7119e4d64563",
        "cursor": {
          "ref": "fe438dd3-5e59-4470-97ea-68a580afe8bb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4fdaa843-0754-4482-a5fd-f825ee279d6c"
        },
        "item": {
          "id": "2f698283-f04a-4d43-942c-7119e4d64563",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b540b48d-c995-4f1b-8acb-20b2fbbd08c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7908c99-aa97-4e77-bec7-b7b3683cb8d9",
        "cursor": {
          "ref": "1fad03ee-cb70-4ba5-9d32-236a8bd49b02",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fb0f9a39-8806-405d-9c4a-65c0d67f4294"
        },
        "item": {
          "id": "c7908c99-aa97-4e77-bec7-b7b3683cb8d9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "21a5c0f1-4dc9-4e8f-ab6c-98e23d07fdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b57de19-b635-485a-becb-74a2056a2d0a",
        "cursor": {
          "ref": "074a97df-9cfa-4623-8400-a2039d8cab99",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cbe1ba66-24c5-47b8-ac06-82c7787a1178"
        },
        "item": {
          "id": "4b57de19-b635-485a-becb-74a2056a2d0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ebd83289-0781-4865-b730-c169b19994ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734bb689-9d5e-4eac-a42f-41affecbf102",
        "cursor": {
          "ref": "1d86e986-7a01-4d58-896b-d4cf93dc58f2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "841c3f79-8edc-4338-b6d8-a8358adbe18f"
        },
        "item": {
          "id": "734bb689-9d5e-4eac-a42f-41affecbf102",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5d7ed84d-835a-4e59-b300-444528957d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46544da9-6011-4b04-9990-ed7a10b4cded",
        "cursor": {
          "ref": "db651a1c-b7fd-43c2-87ce-9ce25fbbfa0d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a830d955-1fcd-477a-b9f4-f4d39904dd22"
        },
        "item": {
          "id": "46544da9-6011-4b04-9990-ed7a10b4cded",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9b2a4182-4be3-4702-bfef-c68fd1edcda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b47662-e6d9-4820-afb9-e834b5072bf9",
        "cursor": {
          "ref": "5aacebde-dedd-45a6-8f74-0441216e3b3d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c4dc75ce-d52b-43b2-85c7-3cfdce4e61ac"
        },
        "item": {
          "id": "f6b47662-e6d9-4820-afb9-e834b5072bf9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "16f438f0-147b-4c86-9f7e-01b14ccb89e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abadfd38-7a8c-4954-82ec-b75de3cada39",
        "cursor": {
          "ref": "c9b11be8-e180-4586-b5a8-e0d6680165c6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "76bc720c-3f5e-4108-82b2-4aaeb842413b"
        },
        "item": {
          "id": "abadfd38-7a8c-4954-82ec-b75de3cada39",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "eab20e53-eb28-46a3-a3b4-eaf41d9b8ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f629913-5552-4de0-9feb-247147c1d76b",
        "cursor": {
          "ref": "fec3256a-99d1-44bc-944e-44bb924a2331",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a2dea154-eab0-489f-a82d-5071205f07c3"
        },
        "item": {
          "id": "9f629913-5552-4de0-9feb-247147c1d76b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "28c9966d-a695-4355-b055-a023a2db2266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf551f5-e003-423c-95d7-a8e0edba8db7",
        "cursor": {
          "ref": "06566397-e185-46b2-97b9-6181dbca7ca5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "865dc6f7-e936-4f45-82ba-44455068d46c"
        },
        "item": {
          "id": "8bf551f5-e003-423c-95d7-a8e0edba8db7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97601b85-e731-421f-a6f6-400e4daf62d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1faca2-2881-46f4-a715-31e2d138be74",
        "cursor": {
          "ref": "b173a075-e79e-4e16-83ba-0b414fac43cd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b589c619-dd3f-4ae5-826f-5e7b556d7b26"
        },
        "item": {
          "id": "af1faca2-2881-46f4-a715-31e2d138be74",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e24f61e4-6185-4e54-9735-5040ebeb1ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a27154-4fd9-46c1-a776-c4657b3249ca",
        "cursor": {
          "ref": "7740ec29-088f-4945-9eac-7958f95e5c38",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3eb14dec-c906-4f94-8dfb-3b132f58798b"
        },
        "item": {
          "id": "69a27154-4fd9-46c1-a776-c4657b3249ca",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0b23587c-a544-4cf5-9b2c-4b7224ab1542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52d501e-5c17-4e14-ab6c-e9fa09d9d2c9",
        "cursor": {
          "ref": "a9bd1198-52e6-4279-b72b-6294c2f22467",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b5100855-1ba0-49a2-bce6-892e7633ddea"
        },
        "item": {
          "id": "c52d501e-5c17-4e14-ab6c-e9fa09d9d2c9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b975c133-aea8-422c-8d68-02297145459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ba7bc4-1fcb-4ac7-8afb-92442f8248a9",
        "cursor": {
          "ref": "432c258d-bb8b-426f-b359-c17f4262e6d9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f63f2110-21d2-413a-a5ea-73f98e9a9b41"
        },
        "item": {
          "id": "b8ba7bc4-1fcb-4ac7-8afb-92442f8248a9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f75979b8-a432-4f66-b91d-13d5b80eabd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4926c4f-0156-4cae-9e47-31e141821978",
        "cursor": {
          "ref": "7607e3bb-a708-4668-8cc5-247bfc7f3e61",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "375826c5-7a2f-4a69-9101-08ca3cd32c3a"
        },
        "item": {
          "id": "e4926c4f-0156-4cae-9e47-31e141821978",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bd7e1625-89d6-4117-a47e-0321e64be513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dd27f9-cbba-47f4-b9fc-75a8fb771601",
        "cursor": {
          "ref": "7647eaa8-36eb-4fec-8282-5efb937f01b3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c14a52bb-1b4a-4050-a166-ea39ce784a62"
        },
        "item": {
          "id": "57dd27f9-cbba-47f4-b9fc-75a8fb771601",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "39d5a03a-d1a2-4b94-a00b-ec10e6c418f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc50b96-8e25-441f-8c3a-324990f07362",
        "cursor": {
          "ref": "055c5c42-76e4-4f94-801e-a0ce55fe5a76",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "08fee4fc-536c-422d-9e7e-5b3e1a0d91ef"
        },
        "item": {
          "id": "2cc50b96-8e25-441f-8c3a-324990f07362",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "105ff11a-5797-43ce-92ae-fbcae367c2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b526fa0-7f78-4f3b-890c-a48e405e2829",
        "cursor": {
          "ref": "0eed0883-cea9-433f-b0dd-274dfc2b4639",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99171643-5669-4b8c-ad98-6423d11a0f40"
        },
        "item": {
          "id": "4b526fa0-7f78-4f3b-890c-a48e405e2829",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "69894d63-31bd-4ec0-bfb8-e5f1532323e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a56d0f-ac4f-4756-b3cd-a46ba63beb97",
        "cursor": {
          "ref": "60656af7-dc51-4a25-9312-9ac68c9ecaa4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1dfc10fd-580b-46da-8b58-d790b3e67699"
        },
        "item": {
          "id": "32a56d0f-ac4f-4756-b3cd-a46ba63beb97",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6d9e4040-d8ec-4013-85e2-f598566e82d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01b801a-0f00-48e9-9a72-6f028f9e77f2",
        "cursor": {
          "ref": "2a81c4cf-53d3-49ff-8d51-d762b2c2b251",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4c561101-2c67-4800-ada8-41e78b756666"
        },
        "item": {
          "id": "d01b801a-0f00-48e9-9a72-6f028f9e77f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0d4ed45e-be6c-418b-aa82-a034445a77b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e54f0e-ff5b-4898-86df-3f352aca1450",
        "cursor": {
          "ref": "60caa3c2-1ddb-4239-ae0d-e222a789ee06",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2ccdfdc2-d2fa-4b4c-9350-51964a68b49d"
        },
        "item": {
          "id": "95e54f0e-ff5b-4898-86df-3f352aca1450",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "757fb9ec-062f-4bd7-b1bb-0bd5c6629a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed59299-1bcd-45d5-be99-aa5f4a202b44",
        "cursor": {
          "ref": "57fbe7b5-b3b3-41d8-95a7-46f24b438f48",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b89a349c-1471-438e-b5fe-6de88d3602e5"
        },
        "item": {
          "id": "aed59299-1bcd-45d5-be99-aa5f4a202b44",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "492ca9d2-80b1-4d0d-91cf-5e70da9c59ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb2abd0-54b3-45b0-9b51-6f8edba64d12",
        "cursor": {
          "ref": "898614a6-0a33-448b-8e79-bdcecd4a5857",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e02311d4-044d-464f-984b-f015f64b1087"
        },
        "item": {
          "id": "5eb2abd0-54b3-45b0-9b51-6f8edba64d12",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "91fb314f-ec74-4d95-8cf8-bc3700d55902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6393b7f-d0b7-4716-b435-20df6608b625",
        "cursor": {
          "ref": "74930014-6ed2-4aac-a434-ffed525dc772",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "50124d95-1b97-44d0-9286-cbb457bd83c6"
        },
        "item": {
          "id": "d6393b7f-d0b7-4716-b435-20df6608b625",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e9983373-c813-4dd5-9569-e93ebba85654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e5c509-7236-4e2c-9bbe-ea1abe830ca7",
        "cursor": {
          "ref": "4987e739-fdc9-4814-a163-c95d9329bc91",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "822ba967-3a25-41fb-b511-2414f7b0b70e"
        },
        "item": {
          "id": "60e5c509-7236-4e2c-9bbe-ea1abe830ca7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0474d628-d8db-4d45-a267-662edd776007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270f29b9-8ab5-4653-9c61-10bd1679beb0",
        "cursor": {
          "ref": "acf737e1-7a4f-4416-90ba-72f036dc5feb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ee4ee3e9-a49e-4c9a-bb15-a7a75ecd8ed5"
        },
        "item": {
          "id": "270f29b9-8ab5-4653-9c61-10bd1679beb0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "205ceadf-283a-4150-ac91-5d4c010d4920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573e69fa-727f-4485-9b15-34fc8ef4c1ae",
        "cursor": {
          "ref": "ab2d4238-937f-494f-a4c6-ecbde36f46fb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9962d1ba-532f-49cf-9037-998264b50f31"
        },
        "item": {
          "id": "573e69fa-727f-4485-9b15-34fc8ef4c1ae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d16c5613-5090-470c-871c-3bef9a20060a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b209e2f8-d706-4489-ab7f-80b606b30197",
        "cursor": {
          "ref": "7438bee9-c3e6-4ac1-b615-be7e15f287ea",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "196542a5-56c1-4e23-a08a-7e45e9bae5a7"
        },
        "item": {
          "id": "b209e2f8-d706-4489-ab7f-80b606b30197",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "78c2af7b-bbc3-4163-a4e8-fbad4b9dec91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f08c329-999f-4b23-ba21-593bb742abd5",
        "cursor": {
          "ref": "3582470a-ab80-41dc-9427-c85609bf6c84",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7ba93d18-1578-49ee-8095-c6a91fbc1b37"
        },
        "item": {
          "id": "2f08c329-999f-4b23-ba21-593bb742abd5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "68b7bced-6a1a-402f-b9d7-1aa832008efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa48c066-a3f2-489e-b06f-4071ec05518c",
        "cursor": {
          "ref": "f0c4cd43-537a-4bd6-8787-94bd33272748",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "05eace92-2613-4534-b007-0d9e6053d845"
        },
        "item": {
          "id": "fa48c066-a3f2-489e-b06f-4071ec05518c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "941cc45f-3ba1-4f03-a100-2778ea1805ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a003696-3c7e-443d-bed6-d024bc477b09",
        "cursor": {
          "ref": "30809c60-1af2-4f0d-9b83-06c17b52b5be",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0471856d-6dba-45a0-9e40-79f33e65d43d"
        },
        "item": {
          "id": "3a003696-3c7e-443d-bed6-d024bc477b09",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d8b1a434-5e31-4577-94dc-7eea42b49f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32b7893-7ffc-4eb8-98d6-6d19c91c07d9",
        "cursor": {
          "ref": "670da8d4-939b-405d-af98-29b3080fca5b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ec5dff51-4ed1-48e9-a185-0a22cc9369d3"
        },
        "item": {
          "id": "c32b7893-7ffc-4eb8-98d6-6d19c91c07d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "362599d3-4e4d-48ac-8910-c5030a7806fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585e4f50-e431-4a3d-97c7-3684e35a9cf9",
        "cursor": {
          "ref": "3fd9b32f-6982-4005-ab0e-9fb788bf7164",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7dae2d6a-17a3-409d-a646-a2a8ac7a4aa4"
        },
        "item": {
          "id": "585e4f50-e431-4a3d-97c7-3684e35a9cf9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e0fe901a-a491-4c35-a78e-c9c9e01daca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14132916-6fdf-4d9c-8720-b85f9c0f5459",
        "cursor": {
          "ref": "11d87e0c-1645-4598-9a1b-ba8ee18d31bc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4a6383c1-f5ed-439b-84ec-f37cecb12614"
        },
        "item": {
          "id": "14132916-6fdf-4d9c-8720-b85f9c0f5459",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d41c4bef-1a02-480c-a097-99a76f8e30a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b0156e-3957-40a4-9aa2-3bf88d1dddc9",
        "cursor": {
          "ref": "21aba81e-6fa6-4c37-988d-6c92a0b19891",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4d1b9c83-6ab3-4c71-898b-135ab8bbac5d"
        },
        "item": {
          "id": "39b0156e-3957-40a4-9aa2-3bf88d1dddc9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "527562db-f325-4f6c-b195-e7d31e75935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f856a5-5abc-4e0a-9184-157854e83285",
        "cursor": {
          "ref": "47d0fa41-cf8c-4f93-918c-464b5f97b2ca",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "282c8d4d-2b19-42f7-8c38-4b656e347913"
        },
        "item": {
          "id": "e5f856a5-5abc-4e0a-9184-157854e83285",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8d20c673-a690-4757-a355-ddce989cfa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9efdc6-07b0-41d5-8c21-608a726712b8",
        "cursor": {
          "ref": "9df478ae-7c26-44c2-b259-bf36c0744570",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f15822d5-bcd4-4595-9ea1-fb4316ba7afc"
        },
        "item": {
          "id": "0b9efdc6-07b0-41d5-8c21-608a726712b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "40f5a1f3-45c7-4894-90de-10e53bd9061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fde5e76-4555-4c76-af33-c53f6f22da95",
        "cursor": {
          "ref": "79dd6664-fc62-4bb3-b46b-16dd0fc2141c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "771435a2-658a-4441-b2a8-4f327e06fd06"
        },
        "item": {
          "id": "9fde5e76-4555-4c76-af33-c53f6f22da95",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f7d62d00-07ff-4a02-b7c7-662d40d32a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975a6ef4-7afd-4900-8984-0f9d41be9274",
        "cursor": {
          "ref": "00c678d1-f4fe-403c-95d6-6a66310add79",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ab75e29b-3c7e-441d-9f37-030203876748"
        },
        "item": {
          "id": "975a6ef4-7afd-4900-8984-0f9d41be9274",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e11e711-9a6e-49c4-be84-5f3088d14989",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01240d1a-2f03-4bb3-afb8-72668a42c1a8",
        "cursor": {
          "ref": "29ba5d0e-56aa-436a-ae92-f87797a7b01c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "83d199ce-2cb3-44ef-a3ca-278eb2c67b8e"
        },
        "item": {
          "id": "01240d1a-2f03-4bb3-afb8-72668a42c1a8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7c931141-0987-4367-899b-0ab0698d87bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ca70af1a-3994-4fd8-805e-53f204840afc",
        "cursor": {
          "ref": "fecccfce-c390-4903-9126-788f67fa0526",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bfd1a5e7-5d17-45f8-a7ac-7e11453bbe1c"
        },
        "item": {
          "id": "ca70af1a-3994-4fd8-805e-53f204840afc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6a068dc4-868f-4675-af1b-ecfad775525f",
          "status": "Created",
          "code": 201,
          "responseTime": 9159,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbf1970-bcde-4086-b62e-ad30a033405f",
        "cursor": {
          "ref": "5a2081c6-a936-44d9-a135-747c941c0a6c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "931082ec-1ccd-45b1-b122-2dc8e4531798"
        },
        "item": {
          "id": "2dbf1970-bcde-4086-b62e-ad30a033405f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dde76e48-862e-4388-a1a5-ec3b36323f4a",
          "status": "Created",
          "code": 201,
          "responseTime": 8457,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c4272c-f561-436c-aaaf-6d10ea15be71",
        "cursor": {
          "ref": "ff118a80-3364-4420-a442-78059f2afa62",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b924308e-3a93-4d63-9f18-7258aa6877d1"
        },
        "item": {
          "id": "01c4272c-f561-436c-aaaf-6d10ea15be71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "db14a124-255e-49dc-a94d-2cc8e56b42b1",
          "status": "Created",
          "code": 201,
          "responseTime": 8475,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c046e4-3eea-4711-9b3a-5a5fba8f9728",
        "cursor": {
          "ref": "fefa63f9-ff56-4a08-84e6-fd2117a2fa6c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9828b313-c3be-47a3-aaa0-ce710738c382"
        },
        "item": {
          "id": "b8c046e4-3eea-4711-9b3a-5a5fba8f9728",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3d23d8ec-82e2-42e3-8b3c-18474bdd29f3",
          "status": "Created",
          "code": 201,
          "responseTime": 9176,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d49726-d67b-480b-aa21-3cae481e6f74",
        "cursor": {
          "ref": "118e0dd9-a2e5-476d-af9e-0164c7b61c61",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ab37bcb6-1479-40b3-b5e1-c32f1268e705"
        },
        "item": {
          "id": "e8d49726-d67b-480b-aa21-3cae481e6f74",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2bce2b54-1824-430e-a0f7-5a34e0499fc9",
          "status": "Created",
          "code": 201,
          "responseTime": 8368,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3b107f-1ebc-4435-80e5-433ade77af22",
        "cursor": {
          "ref": "5a9ebdb0-2c40-444c-be63-6ab74a235f2b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8585e34d-97ef-4a59-adb6-3f3cf2e7050d"
        },
        "item": {
          "id": "3a3b107f-1ebc-4435-80e5-433ade77af22",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5263e3e2-5863-4c5e-915d-39c4614b7be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "21f27d41-17ac-4d17-8a77-4e3130b9d368",
        "cursor": {
          "ref": "e76448e5-402c-439c-ae30-e2e4cd730207",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2d9f496-3b58-4d8d-ac0e-1a61aa366db7"
        },
        "item": {
          "id": "21f27d41-17ac-4d17-8a77-4e3130b9d368",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59844ac7-676a-4fc1-8782-c625df4509c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91854534-b936-418c-ac34-dc5963927191",
        "cursor": {
          "ref": "8efe26a4-48e2-4db6-9de8-e4247afe5dbd",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ee9b6faf-df3b-49b1-a3f3-5d5cea5b0bda"
        },
        "item": {
          "id": "91854534-b936-418c-ac34-dc5963927191",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8bfc6a6c-cad9-4372-92a2-a5e1b1f053e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8146d7-905e-4c42-95c0-63ff0ce0b223",
        "cursor": {
          "ref": "a93bd587-8f17-41a7-ba38-90b249f3feaa",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1c78d957-f21e-47d7-a3e6-9ad516309a36"
        },
        "item": {
          "id": "fa8146d7-905e-4c42-95c0-63ff0ce0b223",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "75b0a14e-0dc4-48a9-ae31-6246a49082a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cb6cbb-06c7-4b95-8512-45551c412f4f",
        "cursor": {
          "ref": "c0deffb8-aae6-475a-96c3-e77e1a26fa1d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fc811024-0de9-4f34-be6d-65f2adb8679b"
        },
        "item": {
          "id": "e7cb6cbb-06c7-4b95-8512-45551c412f4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5cca80b-eef2-4648-924c-7da811a0220d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21a92ee-942d-43e5-872a-fa3db005da70",
        "cursor": {
          "ref": "87141681-9e3d-4210-a842-70e481817c13",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fd1d38d1-4d19-4db1-b2e1-9511978ef914"
        },
        "item": {
          "id": "d21a92ee-942d-43e5-872a-fa3db005da70",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56c83c96-8555-4a17-a6e7-b76f9d751acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f858cbdd-f592-48a9-b579-3f13d47d4c25",
        "cursor": {
          "ref": "ac4c7122-6f2a-4fcd-ad08-b064436d7b9c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "91bb91ea-b14f-4aa7-8e74-e62e01ce7c4e"
        },
        "item": {
          "id": "f858cbdd-f592-48a9-b579-3f13d47d4c25",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80c70075-1d1f-4b1b-ba14-f1172523f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a73acad-b2c2-47fa-93e4-f3bf2bed7a06",
        "cursor": {
          "ref": "9cba9b8e-9521-41fb-a5f3-8d03e0d9af49",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a9eb0963-ce6f-4956-b224-cf11347a8daa"
        },
        "item": {
          "id": "6a73acad-b2c2-47fa-93e4-f3bf2bed7a06",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9f65552e-d541-4d84-94ff-97cecba268f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e468579-d1ac-4e3e-b8cf-cb8ca9830590",
        "cursor": {
          "ref": "7e6339ca-438b-4e7f-bf66-2598790a25ae",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be38aea1-9140-4a09-9c86-680bbf51f74a"
        },
        "item": {
          "id": "8e468579-d1ac-4e3e-b8cf-cb8ca9830590",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5b21ec76-5ebf-4b92-9d70-30d41694cf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22041f7-c058-4436-9918-c5add157163e",
        "cursor": {
          "ref": "adfd9d92-2631-4ea4-9c19-7754cf4b0a8c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fe7ad9e0-df8b-4f10-a208-bf97ec94e4c0"
        },
        "item": {
          "id": "b22041f7-c058-4436-9918-c5add157163e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4552a82-8108-420f-9ffe-4c628aa6fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322e100e-516d-4b17-8bee-a9b4bae71b0c",
        "cursor": {
          "ref": "c5e18bc8-77d3-463f-8f0e-7d5ea424b639",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f41cee70-4040-477b-aab3-acd201d93421"
        },
        "item": {
          "id": "322e100e-516d-4b17-8bee-a9b4bae71b0c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a83c1536-653b-4f52-902f-847058a93c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd670d02-c878-489a-9bb0-976866050afc",
        "cursor": {
          "ref": "97fafaeb-7f11-463d-9863-0372d66335ee",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0552254e-919f-44a8-8cfc-caa8b7e7f296"
        },
        "item": {
          "id": "fd670d02-c878-489a-9bb0-976866050afc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c98b160-5650-4cfc-b72f-60746d4d86e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b1a2d9-8cd4-4b36-a2a7-a8ade9c79e0b",
        "cursor": {
          "ref": "d6cf38c0-7ddb-4697-8ebe-acd7149048c0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a4ba77b4-268e-427e-9f2c-128e76749421"
        },
        "item": {
          "id": "96b1a2d9-8cd4-4b36-a2a7-a8ade9c79e0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "219135f7-3979-4e70-9807-fda35abfb6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4941ee98-695f-46b9-85ba-f35b116ac7c3",
        "cursor": {
          "ref": "60875858-7bfe-412e-99db-d91db186ab00",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e7959d62-faa9-4c0e-b89d-eb790f2d380a"
        },
        "item": {
          "id": "4941ee98-695f-46b9-85ba-f35b116ac7c3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2bdeba96-fb99-4f8b-a0cd-019c351e06ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d7e83d-b373-44ab-8ef0-90b59660a7d4",
        "cursor": {
          "ref": "406f80b1-5f94-4f31-845f-8044492eebc4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "03f25c32-0501-4e9a-b3e8-4bcc1cb8f6a3"
        },
        "item": {
          "id": "40d7e83d-b373-44ab-8ef0-90b59660a7d4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df055e7e-e105-4b5a-b0eb-619d9ba3e8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc023a5-e844-4610-b929-fa0aef023f2f",
        "cursor": {
          "ref": "e45c45c6-923a-4614-9cb4-4c6632755c6e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1a7f1c5f-1f18-455a-93eb-9cd29881c304"
        },
        "item": {
          "id": "afc023a5-e844-4610-b929-fa0aef023f2f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8fd94c14-6c86-4eab-868b-db7151b14367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f310506-c4d2-4dda-9116-b74a86eeabf5",
        "cursor": {
          "ref": "f875c28c-8765-4fda-a8e0-b86f957199ad",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27525d43-3a01-42b6-9635-95dbecd0427a"
        },
        "item": {
          "id": "2f310506-c4d2-4dda-9116-b74a86eeabf5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6aff81d-447a-43a1-8544-b2d0519d71dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4480f926-1744-45c2-b6da-b03fe2daace3",
        "cursor": {
          "ref": "510ba2a6-b515-41d5-9962-8febee4d0f63",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "adac2021-feb8-4753-90a8-6dfc3b02dc78"
        },
        "item": {
          "id": "4480f926-1744-45c2-b6da-b03fe2daace3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "313a240e-5131-43ca-af58-4d30d0880d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947baed7-deb5-4fb2-ac28-794517529e7b",
        "cursor": {
          "ref": "d334374f-301e-43d2-b3b1-087d3e48b50d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2246d606-516f-4f44-933a-0bfc632fa602"
        },
        "item": {
          "id": "947baed7-deb5-4fb2-ac28-794517529e7b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7db92de8-8116-4fdd-b833-766e0a7a77fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23a3fc-c06b-4e96-ba4f-ccfa2886b991",
        "cursor": {
          "ref": "4da09396-5f35-4482-a85d-b2c5c11adab9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "11a731ef-f47c-406c-ae92-48ecaf69dde2"
        },
        "item": {
          "id": "4e23a3fc-c06b-4e96-ba4f-ccfa2886b991",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "63693a51-3d15-4147-b309-3c58d6030c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89cee16-f108-43f2-b804-79b41f15d249",
        "cursor": {
          "ref": "711e26d2-0b4d-4119-8371-e0080145bdfb",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "13cfaafe-b17b-466e-9c49-2bb27ef57c09"
        },
        "item": {
          "id": "e89cee16-f108-43f2-b804-79b41f15d249",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "205c8fc7-ca0d-4cc6-a656-55ea2414f1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce0d901-327e-47aa-a932-866f8e5358f0",
        "cursor": {
          "ref": "1893536c-5e26-4a0c-b09a-a3e4c1f1c280",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9fe69505-296d-44dd-b8b5-85245bbafadd"
        },
        "item": {
          "id": "bce0d901-327e-47aa-a932-866f8e5358f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f36ada5-bde3-4bfe-81cf-2519c67cf8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eff3e42-80ac-461b-92f0-832cd3ec5e3f",
        "cursor": {
          "ref": "c9c16752-941d-47a5-8423-e261bf7737a7",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ae27c8e0-ca0b-4346-aed7-8ef1340940f0"
        },
        "item": {
          "id": "6eff3e42-80ac-461b-92f0-832cd3ec5e3f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4347a277-c6a7-4064-abc6-cd88896febd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e900451-a024-45c0-b179-19f15b6a7275",
        "cursor": {
          "ref": "5e168b73-e16e-4de3-8a41-af113bb459a3",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c416dec8-2f5f-4aa1-a142-fd3f1cc39d32"
        },
        "item": {
          "id": "9e900451-a024-45c0-b179-19f15b6a7275",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f5281009-942b-460b-a894-9a59c3c1e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d414a59-80ac-454e-b10c-c369a8d74f02",
        "cursor": {
          "ref": "8879d239-fff9-4cd2-8f8e-14e30ce64255",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9a4b7ef-63b8-40b3-86d4-eb704eaf1863"
        },
        "item": {
          "id": "9d414a59-80ac-454e-b10c-c369a8d74f02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c9b8bac6-829c-41cc-87ab-7a0873472337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addb9416-73a8-4f92-a0c3-cf472f3d3f18",
        "cursor": {
          "ref": "bfb3e727-b8d3-4c55-bd53-c6b1ee58de33",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "189e8660-624f-4507-8542-3429812153d2"
        },
        "item": {
          "id": "addb9416-73a8-4f92-a0c3-cf472f3d3f18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d97b1028-93fe-4fc7-8279-f2cad3aae219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d27475-156f-4df6-b7bf-51e0cfee4ab1",
        "cursor": {
          "ref": "dfedd1a5-98c5-4812-b7c3-b903e1d10036",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4002bbe4-bca2-40c1-bfca-4cb1568529e3"
        },
        "item": {
          "id": "11d27475-156f-4df6-b7bf-51e0cfee4ab1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c6a60a7e-7e5f-45e0-b5cc-7d999e6484db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca9af36-8cc1-4c51-85b6-0c8dd490ccd3",
        "cursor": {
          "ref": "6aa5c113-7a05-411f-85af-6cafb0b532f4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bf273cfc-c07e-48f0-b1ec-1adceaccfa0f"
        },
        "item": {
          "id": "cca9af36-8cc1-4c51-85b6-0c8dd490ccd3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3e0248e3-9bd1-4692-8084-fcb27c7d103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67f6b7e-87c2-47f9-87b6-776857c72c97",
        "cursor": {
          "ref": "b2821bb0-907e-483d-bd90-7a9f99814bfc",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3214e2b8-9a88-4443-a8f1-dda32ef40672"
        },
        "item": {
          "id": "b67f6b7e-87c2-47f9-87b6-776857c72c97",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c463e6dd-7df2-4c56-b275-97d75cd279b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c239fa-eca3-4516-a07b-7c527993d401",
        "cursor": {
          "ref": "6a2cb5b2-ebda-4f46-8648-719b9ed7715c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ca56d669-9b20-479b-832d-ee5bfaf418bc"
        },
        "item": {
          "id": "69c239fa-eca3-4516-a07b-7c527993d401",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cce00693-fd6e-47d3-a2b8-6102c25da814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff61dfd3-3635-4af5-b5d1-e599cec9f8f0",
        "cursor": {
          "ref": "ddec2fd9-b991-420d-9d53-cfa90df9545d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de47bb4a-c6a6-4950-a0ff-8a08bc4e4e4b"
        },
        "item": {
          "id": "ff61dfd3-3635-4af5-b5d1-e599cec9f8f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "10ca4aa3-c0ca-4db6-a8f1-8a9e094a50be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245afed6-12ba-4168-9894-95374a463205",
        "cursor": {
          "ref": "c848e39b-4ffa-4f3c-88b3-0ea6d626fc55",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c09c390-9875-4d77-b7d2-8f27a685027e"
        },
        "item": {
          "id": "245afed6-12ba-4168-9894-95374a463205",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f8607d5-1f23-44c7-bf56-49aff80b6185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7ba2e3-e6d9-45df-ad0d-c42486b25610",
        "cursor": {
          "ref": "72e3b76f-bd43-430a-a84e-531ff8d6697d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "56ff5fde-2914-48c9-809e-9dc1aa204589"
        },
        "item": {
          "id": "4b7ba2e3-e6d9-45df-ad0d-c42486b25610",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0b0de921-7ce1-4de6-b0d0-7a9669d88fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e709698-6b5f-4764-8dc3-0f2d9b15ccf1",
        "cursor": {
          "ref": "3ee23863-dae9-4fd4-819b-b366e1a7d41d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "39c4151a-06f3-4b0c-a5f5-593305c6f2a7"
        },
        "item": {
          "id": "5e709698-6b5f-4764-8dc3-0f2d9b15ccf1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4ddfa34d-57fc-40d3-a427-1aacfeb63888",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a1659-5194-48b9-b2ee-3aed148b2bc2",
        "cursor": {
          "ref": "debefa34-f85a-49fa-aaa3-d170564a2047",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "729e821b-2168-4280-a002-b39f53192f9c"
        },
        "item": {
          "id": "b74a1659-5194-48b9-b2ee-3aed148b2bc2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d54c5483-b44e-4fc7-b767-ff0a78b28d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f216c35-6c95-4613-b804-d60c1a40dda7",
        "cursor": {
          "ref": "0c78dbc6-7f77-43f3-80aa-cd824e18f3fb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1b14dc1-dec7-4348-95d2-710b744ed572"
        },
        "item": {
          "id": "4f216c35-6c95-4613-b804-d60c1a40dda7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d31c841-e1c1-434c-bfe0-61d0ad1bfe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18d7259-d015-4daa-b899-baded957f27b",
        "cursor": {
          "ref": "5bf0bef5-075d-4820-ab80-f2c44154de47",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "26cd7bd9-ff55-465b-8f81-474634e0e00e"
        },
        "item": {
          "id": "d18d7259-d015-4daa-b899-baded957f27b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "45d0ef1b-bb8e-4039-ad4e-5ccfc4ba0cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21238b2-216c-4a35-82ab-68a4f547c981",
        "cursor": {
          "ref": "f4be7c8c-b987-4a74-a573-f0a0606f8609",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "de1b1772-5146-41b7-8acb-a0a0018ab53e"
        },
        "item": {
          "id": "e21238b2-216c-4a35-82ab-68a4f547c981",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b7246fb-8645-4bb1-b0a7-48d84f44b296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf96fe2f-dd57-473f-aea3-9a55cdc530bd",
        "cursor": {
          "ref": "a1a231b7-0ef9-4f49-a651-cec869350381",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "826963d7-ba3f-4f3d-9b3a-b0940548fc3b"
        },
        "item": {
          "id": "bf96fe2f-dd57-473f-aea3-9a55cdc530bd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5cd948bf-428c-4d76-964c-27873fcd2eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbb8781-6faa-4c21-9e86-aef87ab7a432",
        "cursor": {
          "ref": "139a2122-b774-4c53-b768-805b5654e6d8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f0b47fca-c3c6-42b2-9dee-945e17be5cba"
        },
        "item": {
          "id": "3fbb8781-6faa-4c21-9e86-aef87ab7a432",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9e66951-a1f6-4c9c-b396-27f14e49ac28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34a75a2-e84f-4357-9fb8-2fed748c5180",
        "cursor": {
          "ref": "b5f5d942-0679-4ae2-ab90-0732ace3b47d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3aa0e829-0f7e-4bfb-b3c1-d1a1cc2f3984"
        },
        "item": {
          "id": "a34a75a2-e84f-4357-9fb8-2fed748c5180",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc53d445-2e92-4c62-be3b-2cfb29cfd167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b963e75d-88f9-42cc-a171-ed0a4847081c",
        "cursor": {
          "ref": "f3397791-f850-466d-85fa-4f8ded822418",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4df1268-4c78-44fb-9684-3e028f4ab738"
        },
        "item": {
          "id": "b963e75d-88f9-42cc-a171-ed0a4847081c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "076af21a-da85-4f8d-b838-00044036df41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b0247-9a0b-43c6-b56a-b6b3dcc0774c",
        "cursor": {
          "ref": "05f000bc-7f51-48a5-a0ff-d417a294030d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "66023776-edbf-4fc6-a597-b24c4c9e02ed"
        },
        "item": {
          "id": "521b0247-9a0b-43c6-b56a-b6b3dcc0774c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0f12dd05-6801-4ffc-85b2-d6c740807f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aedc759-d055-48f2-8f62-4125aee46636",
        "cursor": {
          "ref": "4b0a8dc2-3f4b-4d83-a419-384b1dd0b9a0",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8846fc26-3112-45e2-b609-6840d2fa515f"
        },
        "item": {
          "id": "3aedc759-d055-48f2-8f62-4125aee46636",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9cb543fa-fcfd-47e2-b786-0a695e3e4519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd97a07-3f98-4b66-a9f2-5b566f864cc2",
        "cursor": {
          "ref": "889f50fe-709c-441b-82ec-9981d439fd6f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9d0d7b94-6013-45a0-a296-d695b23a8be8"
        },
        "item": {
          "id": "6cd97a07-3f98-4b66-a9f2-5b566f864cc2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cfafe8e9-a95d-44b8-bc55-9109d3bf7449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6db07d-5178-4bfc-808f-340cb9ae19de",
        "cursor": {
          "ref": "fc43a9dc-7ade-4e8e-ab1d-a871d82f8cc5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "61f97d6e-1dac-4ed8-9bcf-0ac3855fb428"
        },
        "item": {
          "id": "0b6db07d-5178-4bfc-808f-340cb9ae19de",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "03375d8b-3fe3-4a79-bbb5-2c2e8ed8d8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47955e4-40fe-4845-8312-f36e1261b892",
        "cursor": {
          "ref": "d30724fe-ac14-4276-806b-496c0e4748b1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20671855-0e2e-4d65-a5db-dbb3737bafd0"
        },
        "item": {
          "id": "b47955e4-40fe-4845-8312-f36e1261b892",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a0f564e0-5f61-4f99-b427-157f87d52646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d022ea7-29fc-4a47-8c64-c0b299202463",
        "cursor": {
          "ref": "5d98cede-4bd7-4b53-a9ad-ea6ed1ee4eaf",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "65aa9a92-dee4-4d6a-ab34-8ceaaa023a57"
        },
        "item": {
          "id": "9d022ea7-29fc-4a47-8c64-c0b299202463",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ba08e776-1ab9-4d14-8fd3-3cc07575692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9748d298-1183-40b2-aee9-78815e1bad4f",
        "cursor": {
          "ref": "cb1aec5c-9026-4aa2-95fa-fa612aec22cb",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5e30cd2c-dc02-4769-bd52-5c0b57496024"
        },
        "item": {
          "id": "9748d298-1183-40b2-aee9-78815e1bad4f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "848cb410-11ad-41a8-9e9c-2859a4d4c6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e10b30b-583a-4687-ab48-dedb6ed30974",
        "cursor": {
          "ref": "8b5f1685-6190-415e-ae1f-23998433bd0e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e35d1037-1350-4cd7-8815-39366ad83654"
        },
        "item": {
          "id": "8e10b30b-583a-4687-ab48-dedb6ed30974",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ea15668f-a667-4006-a855-e72d7a157e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba6cde3-24c9-407a-be45-d9a1c5e5e885",
        "cursor": {
          "ref": "ab1f87ba-93c0-483a-a180-c69de3efa373",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f981e2c4-2d67-4da7-bd2c-bcd50c9a840f"
        },
        "item": {
          "id": "bba6cde3-24c9-407a-be45-d9a1c5e5e885",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65c5f17f-2046-41e4-9c3b-3b48b5b3455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435da3be-38d2-4d6e-8ed9-13b164656e6b",
        "cursor": {
          "ref": "6c96d6bc-852f-4f93-83e5-015e67006d0f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "076460ee-1ae2-4346-8e85-8399ca97fd3b"
        },
        "item": {
          "id": "435da3be-38d2-4d6e-8ed9-13b164656e6b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bb1488fa-0585-4a9f-87f8-8a18528ced11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7728d0a5-a2c9-4461-8e62-aa51ede33110",
        "cursor": {
          "ref": "f4b207b2-8611-4640-a35f-2497ea1cd098",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cf739acb-7350-42a1-b60c-c5d5814b1fcb"
        },
        "item": {
          "id": "7728d0a5-a2c9-4461-8e62-aa51ede33110",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f92fdd3f-4ecf-4413-b9a0-595a34c5f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50668d58-b9fe-4ab2-89a6-d47a0f9195a0",
        "cursor": {
          "ref": "686b8116-d9f4-42eb-bdde-2c4f14675183",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8242847d-5418-4b06-976d-f34b622e130a"
        },
        "item": {
          "id": "50668d58-b9fe-4ab2-89a6-d47a0f9195a0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e74c28d4-79d6-4507-889d-7f2b35dc057f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed80e21c-1b6f-48e0-b02e-a0d885436313",
        "cursor": {
          "ref": "3bc026b6-40ed-47ea-b4ea-572538bc6b45",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e6cab46-94e0-4060-8b35-92ecb51cbcf1"
        },
        "item": {
          "id": "ed80e21c-1b6f-48e0-b02e-a0d885436313",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f3cdf524-6aed-45a5-9242-64cf370c254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbd8b4a-854b-4f78-a7b6-088dce030af3",
        "cursor": {
          "ref": "76fc34a2-678b-4afd-9b13-070b57b5c914",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01eb91d3-770a-40d1-9491-218d818f5376"
        },
        "item": {
          "id": "6cbd8b4a-854b-4f78-a7b6-088dce030af3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b67cdcbf-d7c8-46f3-a812-405cd7675d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f2ff77-0e42-44b7-bd9b-8dd22b9379ae",
        "cursor": {
          "ref": "f421772e-5ea0-4103-8689-e9e6763bf9e9",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce6dad1b-6d72-4f67-82df-6377025e4ed1"
        },
        "item": {
          "id": "48f2ff77-0e42-44b7-bd9b-8dd22b9379ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cb2ea82d-8861-411e-914f-ab132614da02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125771d7-e85f-47a9-871d-b086b06ff439",
        "cursor": {
          "ref": "25db9dd3-0bd9-4b42-9a39-9208ca6f6cac",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "db3fe8b2-2a81-4889-9abb-abf2448e93f6"
        },
        "item": {
          "id": "125771d7-e85f-47a9-871d-b086b06ff439",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7fcaaf1d-ecdd-4df7-aedd-81d43ed0511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6656b0e2-e204-4923-87e8-bc68fc4cdf23",
        "cursor": {
          "ref": "92200c92-6d52-407b-b43b-89ee4ddd1eac",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "105f05d3-90ff-4dc5-a78d-fee7072a4f18"
        },
        "item": {
          "id": "6656b0e2-e204-4923-87e8-bc68fc4cdf23",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a764d347-7f4b-4102-a7f2-2a66b64c0364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ddd82-51f2-4e3f-8ded-b848d1bee8ce",
        "cursor": {
          "ref": "e8d0e1c3-faf3-4f92-86a0-f4225e2044d8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bf487a15-8a26-496e-b27f-0904ca037120"
        },
        "item": {
          "id": "0c0ddd82-51f2-4e3f-8ded-b848d1bee8ce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d821ee7-1665-434d-8e6a-d782cc77d458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f5d432-537b-4397-be6c-0ee7d038beee",
        "cursor": {
          "ref": "d58daaf7-1c8b-4872-bc79-890bb1e1a3e2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4c00d2a5-ebf7-4539-9641-baeb9360815c"
        },
        "item": {
          "id": "96f5d432-537b-4397-be6c-0ee7d038beee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9ac33770-bff6-4449-b160-2f5a2aa2b351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790d928b-e631-4746-afa7-7d675198d13f",
        "cursor": {
          "ref": "b4eb6029-1eb2-4703-bc6a-01b579eb1df1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d8d11f0e-9ad8-4534-b6fe-e615849396b8"
        },
        "item": {
          "id": "790d928b-e631-4746-afa7-7d675198d13f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ea1a32bb-530b-459e-abc7-9b7210bab016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce94db7-34b4-4903-954d-aa3a59da9e57",
        "cursor": {
          "ref": "3f9d13c5-f611-4a95-bce7-5d047e8535ee",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f6a583f-62b1-449b-a5f7-3b2040a2f904"
        },
        "item": {
          "id": "9ce94db7-34b4-4903-954d-aa3a59da9e57",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77dd6658-3116-4810-87b3-80d19d0e7586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93857a06-1ddb-464b-a8b6-69ff5c9348b7",
        "cursor": {
          "ref": "57380426-4fd9-4502-a16e-857e4a0acf95",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4a75627a-85c7-41e5-accc-872b3360f7d9"
        },
        "item": {
          "id": "93857a06-1ddb-464b-a8b6-69ff5c9348b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f9881a6-624c-402e-9114-a2ebe47e6b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595990bb-b8ec-4d6a-9c7b-14f06aca83b0",
        "cursor": {
          "ref": "422c8257-f152-465a-9e7c-d6f2eac9f5c5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b0a573b8-cb10-48d1-88f5-bd7d5eeb125a"
        },
        "item": {
          "id": "595990bb-b8ec-4d6a-9c7b-14f06aca83b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "96af7909-9bdc-49bf-bf93-e43b5de9ffe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85222a7a-0097-4d78-a6c9-27c35c0f17e8",
        "cursor": {
          "ref": "9ce439dd-823d-41dc-97a6-9b7d1628b46d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fb51995c-21af-4d8c-b712-1973b093922a"
        },
        "item": {
          "id": "85222a7a-0097-4d78-a6c9-27c35c0f17e8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c360b809-3730-4d4a-8e7b-c194e3fa96cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958043e0-69e6-4cae-a83e-201c7e09e5c4",
        "cursor": {
          "ref": "a3db86dc-d5eb-4ace-b373-4b6b5bb3b4b9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c802f346-30fd-4119-82c3-9db3aa3f9b14"
        },
        "item": {
          "id": "958043e0-69e6-4cae-a83e-201c7e09e5c4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ed998b72-29dd-4b77-b72a-ffa98195a8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc3533a-2788-420c-af5f-0f6e55e08afd",
        "cursor": {
          "ref": "b338de04-6961-4895-a26d-3561e5afc67b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e0c45861-dc26-45e7-85cd-88468d5d1919"
        },
        "item": {
          "id": "bcc3533a-2788-420c-af5f-0f6e55e08afd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8d09271b-46ab-428d-9543-52ff51c949af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b80d9c6-f498-4fcf-9943-bc3760ba8534",
        "cursor": {
          "ref": "13bb538c-50c4-4081-bb65-02cb1acf2c37",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c48b2d28-c25a-4b4d-843c-9a07d5dffe99"
        },
        "item": {
          "id": "8b80d9c6-f498-4fcf-9943-bc3760ba8534",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "20dc675e-a3ed-4dc4-a9e3-9470dd1b4199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227749f9-4ada-4b34-a13b-9ce925c9abb4",
        "cursor": {
          "ref": "433f5ea0-1922-4ccf-b6bd-2c768c458b18",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9eac18a4-9f30-42b1-9750-98598952a9e9"
        },
        "item": {
          "id": "227749f9-4ada-4b34-a13b-9ce925c9abb4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "22245df0-1801-4a11-9775-01cb809fcd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff4ebc4-9958-459e-b39a-a53aa1244cc5",
        "cursor": {
          "ref": "da60b3a6-a36d-4d4d-b5c3-4a7f7aae8212",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e6d6a137-46a8-4802-9665-c5164922440d"
        },
        "item": {
          "id": "aff4ebc4-9958-459e-b39a-a53aa1244cc5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9bf405a8-1657-481c-bd8c-dccc7e458d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae63948-3832-4657-98ba-9b28bbd251c2",
        "cursor": {
          "ref": "53cc87ea-c665-4638-ae11-5a847568b1e6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2bc28428-8188-416b-8f2c-f62fb1d09482"
        },
        "item": {
          "id": "9ae63948-3832-4657-98ba-9b28bbd251c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88747a41-93eb-44f1-8b71-cada02eca682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bef3d0e-26b3-4765-8d3a-3d667b8f8d9b",
        "cursor": {
          "ref": "e0273a5b-3333-4f75-a5eb-b238b2aaff04",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "840d1135-9526-4171-a44f-a2b1018a475c"
        },
        "item": {
          "id": "9bef3d0e-26b3-4765-8d3a-3d667b8f8d9b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91bdcf8f-cf14-47b0-8515-b84db9f69afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abba86ec-7e86-4348-9f8e-daf91b9e642c",
        "cursor": {
          "ref": "084fd78d-d054-4e15-a9fa-e2d3abc4858b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a49b756a-fc2f-4718-bc86-0a29f89257c3"
        },
        "item": {
          "id": "abba86ec-7e86-4348-9f8e-daf91b9e642c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "edd157ac-697f-4f86-8717-54b7a6a45f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac055781-16a2-4ece-a027-53e51301750b",
        "cursor": {
          "ref": "310b3e7a-9847-4623-b9c1-7c23157eb97f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "af5249c3-0137-4af9-adf3-f4aedafd8d63"
        },
        "item": {
          "id": "ac055781-16a2-4ece-a027-53e51301750b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "95ec45ba-0974-4fc2-ba11-03fa519a317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed69d9df-6775-4036-b04c-8ae6e7512bf2",
        "cursor": {
          "ref": "24605294-1c18-4c40-b947-9f5bbdbdeae8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c1d2b058-f0fe-4931-9871-642a4b584ade"
        },
        "item": {
          "id": "ed69d9df-6775-4036-b04c-8ae6e7512bf2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f6389699-7ec7-48af-adaa-9030568cc216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7efeff-1eee-4394-8710-2585ebda2bb5",
        "cursor": {
          "ref": "b40c30ec-479a-450c-8a71-a95b7f5e5043",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "57db21e0-b068-4358-a4cb-c0fc2b9a9141"
        },
        "item": {
          "id": "fc7efeff-1eee-4394-8710-2585ebda2bb5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f9f76868-630b-4929-82a2-aea3723b4e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248310ee-d8fc-449e-b4a9-f386ad85f525",
        "cursor": {
          "ref": "03bc3073-81fe-45fe-aac3-b5599e2cada2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7f574f74-af43-4fa0-b149-79d81d9b43ab"
        },
        "item": {
          "id": "248310ee-d8fc-449e-b4a9-f386ad85f525",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "90ba61e7-4d69-47b7-9c77-30ba79a3f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbee42b-e30a-48ba-aff2-422cc5a063e1",
        "cursor": {
          "ref": "1d6d9b1a-74a1-48aa-b269-250793ae8fac",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "de63401b-21fa-4283-a4a5-510a5a185890"
        },
        "item": {
          "id": "1bbee42b-e30a-48ba-aff2-422cc5a063e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e227605d-c4a7-43ab-89df-914ec1bdb881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e82307-a899-434f-a29f-1fdfe8225ece",
        "cursor": {
          "ref": "fb6b42ad-cb89-446c-ac8d-be78c4693534",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bd5fedc2-8863-4832-af7d-8f4528b458b9"
        },
        "item": {
          "id": "c2e82307-a899-434f-a29f-1fdfe8225ece",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aa6efc59-dbe9-4ca0-90c5-eb6a3bc8c831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c8572c-400e-4dcf-a8f6-3f873883ef90",
        "cursor": {
          "ref": "7c0e7a34-9330-4d58-bf67-f30870c6eca7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "873ea2bf-8b5c-4c43-ab95-0a50def41504"
        },
        "item": {
          "id": "c3c8572c-400e-4dcf-a8f6-3f873883ef90",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "854ee383-3226-4789-ab59-5aa2675a36b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4a9140-fdad-4e41-b3af-bbceffc1cd06",
        "cursor": {
          "ref": "363911ac-d869-42ba-b2aa-f77dbef59003",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "428727d1-3ac0-4628-b27e-c1517e551835"
        },
        "item": {
          "id": "0a4a9140-fdad-4e41-b3af-bbceffc1cd06",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9d9ab0d7-bbe4-479f-ab76-f0262bcc49cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac1698-7d9f-4400-ab8b-848396034826",
        "cursor": {
          "ref": "add7ad1d-acae-4fa5-82cc-ed35e7effd10",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b071bd7a-c7a2-4d9f-9dfd-c651f1a7434f"
        },
        "item": {
          "id": "b9ac1698-7d9f-4400-ab8b-848396034826",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ba09ffb6-361f-4274-8543-163923afb3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0026904-ddff-4413-958f-25df9e8fff2a",
        "cursor": {
          "ref": "740bd818-eba1-4fda-ae2a-249ab75d1838",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "73217019-cdb3-4888-b90e-8cf4c8318ca8"
        },
        "item": {
          "id": "c0026904-ddff-4413-958f-25df9e8fff2a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95aecdb9-462a-4cf5-ab7e-cbca8006ecf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be807529-6f1e-4015-aeeb-fb042b51931b",
        "cursor": {
          "ref": "19a499cd-23f1-41ba-bf93-768061dd7d51",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d4903966-c98a-4541-8129-de0a35957b73"
        },
        "item": {
          "id": "be807529-6f1e-4015-aeeb-fb042b51931b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2bf0f374-af77-4b62-a5d4-d2356c517add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4982df77-8485-4c56-9fef-ca96ee0badf2",
        "cursor": {
          "ref": "1ad9a4dc-f200-46d2-a88f-b552829fcdbe",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eab6edff-59db-44d3-a18b-0ef3f2baea5b"
        },
        "item": {
          "id": "4982df77-8485-4c56-9fef-ca96ee0badf2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cd2e654c-e720-44a1-8820-ec30c7a6ad61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a267f07-e166-4348-a327-a82193fa5fbd",
        "cursor": {
          "ref": "aac4a837-4b63-4e58-9e36-fb036623bd40",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9e40fa2e-7cb7-48b0-921d-27fbbe6ab67b"
        },
        "item": {
          "id": "6a267f07-e166-4348-a327-a82193fa5fbd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "989defd3-e48a-416e-97d3-1d61c42f7096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef5e21d-d614-4f0b-be45-4d6a69f85bcd",
        "cursor": {
          "ref": "20d8c20a-6118-44f1-a24a-3439f98a1c00",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b0eace29-19a4-4554-805c-5235db664d76"
        },
        "item": {
          "id": "eef5e21d-d614-4f0b-be45-4d6a69f85bcd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "879b7f6d-b825-42f2-a717-3386005708fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fee5f3-2245-4a81-ae6b-9d05be1fc1bb",
        "cursor": {
          "ref": "775103e3-1761-438e-bebf-53da9d0dabfa",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a1d3bed9-7ef4-4f34-883d-e377bb3e7b06"
        },
        "item": {
          "id": "19fee5f3-2245-4a81-ae6b-9d05be1fc1bb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3b5ebc68-0ea8-4cde-b624-69fdf6b8d15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca647fe6-4568-456e-a550-87b4e84b4c62",
        "cursor": {
          "ref": "e435a033-a023-4b2f-9079-ec84a032099b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d72fce22-1728-491a-ab2e-fb122d3978e9"
        },
        "item": {
          "id": "ca647fe6-4568-456e-a550-87b4e84b4c62",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e8eb08b7-753d-482d-8d49-eb55d81184aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4163851-0372-41ad-b8bd-2f722ead0b2e",
        "cursor": {
          "ref": "f776fce8-eeff-457d-bc2b-4651f950fede",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "781baaa7-fbcd-4d79-a1fb-db3e3e9d8253"
        },
        "item": {
          "id": "e4163851-0372-41ad-b8bd-2f722ead0b2e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f4fa1c5b-f4fb-43e7-9398-b0c8d6726cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fcae64-09cc-47eb-bf96-ee34496699bc",
        "cursor": {
          "ref": "d809a188-cd4d-406f-ace5-0fe422ad1699",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cfa0b445-077b-4415-8135-0b7a5cef0598"
        },
        "item": {
          "id": "d8fcae64-09cc-47eb-bf96-ee34496699bc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3032e056-247e-41e8-a826-7dec9af3fee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831a6bb5-f98b-4214-bdaf-789e95706b4c",
        "cursor": {
          "ref": "0dbc1f68-0932-4ce0-8a1d-2bdd6268dd79",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a0fbf780-ef89-4153-b516-29e1ef0933f9"
        },
        "item": {
          "id": "831a6bb5-f98b-4214-bdaf-789e95706b4c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "43ef1ba6-748d-4add-ac2e-d68b82743c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07718a95-2cf3-449d-8ee6-3cb195d5c6a4",
        "cursor": {
          "ref": "f0c7c3fc-a999-4494-a4b5-b4486691ab63",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "82a3c7e4-16a8-43a0-aa33-a3e0ad98c951"
        },
        "item": {
          "id": "07718a95-2cf3-449d-8ee6-3cb195d5c6a4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "38c8abfa-cf2d-4ab9-a65b-f747297f9354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42a5f42-7f62-418f-89fd-260b71fb4aad",
        "cursor": {
          "ref": "e7e216f7-9753-4cae-b4aa-e99f30cc15d7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f47148ca-c6a2-443c-a8bc-06045a237316"
        },
        "item": {
          "id": "b42a5f42-7f62-418f-89fd-260b71fb4aad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4c6730f6-2781-4677-ac17-ce56dac160c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83884362-ca7b-4e41-854a-e5f29f926662",
        "cursor": {
          "ref": "23da17ef-c2fa-42cc-bc7f-d6d2aaa9b8c8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "988d9775-9f8f-4ab1-823c-3650e7d02d52"
        },
        "item": {
          "id": "83884362-ca7b-4e41-854a-e5f29f926662",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "68c71256-1387-4dc0-8b9d-a00c12d6dc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a691633-f4a2-440a-8b89-5007712060a2",
        "cursor": {
          "ref": "01ffc8f2-ec2d-40a3-a9f4-e91ae1577280",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "515c2bfa-a61f-4761-93bb-87769e4dcf5c"
        },
        "item": {
          "id": "5a691633-f4a2-440a-8b89-5007712060a2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4079d0b2-f657-4035-bd15-1ec1cad2a15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d4f790-88a5-4233-bcb2-e48d5aee19bf",
        "cursor": {
          "ref": "912eec45-20e6-48dd-8fd3-56cc80f299b5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "846439ba-4ff9-44e7-8fcf-7c2aba04c423"
        },
        "item": {
          "id": "d1d4f790-88a5-4233-bcb2-e48d5aee19bf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f1e943b-a6db-43c1-aa3b-e785198566ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194e3bb0-f98e-4d6d-a54f-11ed6ea1d18a",
        "cursor": {
          "ref": "a27eda51-0f60-451f-ae7c-5c3de2e141e6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1704fc1f-27a7-431f-accf-d0663e79ffe3"
        },
        "item": {
          "id": "194e3bb0-f98e-4d6d-a54f-11ed6ea1d18a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "424818e4-5a68-439b-b9f3-7b15ef7f0a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92404d36-ad26-438b-87fe-736232bf299c",
        "cursor": {
          "ref": "944c797f-7924-495b-910a-07f68e0f42fb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "33fc124f-24bc-471e-a81a-8373a3c1ab62"
        },
        "item": {
          "id": "92404d36-ad26-438b-87fe-736232bf299c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d5678bf9-c52a-4b57-814c-dea003a7d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fb8a43-2016-4695-94be-87acde3df3c2",
        "cursor": {
          "ref": "50d46c02-f33c-4241-969d-4a35502ba398",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0893fe76-08f5-40b3-b186-63e2185340d7"
        },
        "item": {
          "id": "c7fb8a43-2016-4695-94be-87acde3df3c2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0ef3a3df-f45d-41f3-bdfc-7afabc215327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac774f4-b60d-40d1-bbd7-da9e5d601fd7",
        "cursor": {
          "ref": "5d6ce544-764d-4330-90bf-8ad65236f1f3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "66faaee8-1c06-4c74-bfd8-28b0e3391115"
        },
        "item": {
          "id": "eac774f4-b60d-40d1-bbd7-da9e5d601fd7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c48bb8d6-1fbe-46f3-a857-6d1356f13afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a5489c-82e7-4b62-aba7-ef80c1151b4c",
        "cursor": {
          "ref": "d12328ed-de71-4f37-91bd-258b316899d3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b12b27cb-e5b4-4ab7-9bb1-0392680af8df"
        },
        "item": {
          "id": "94a5489c-82e7-4b62-aba7-ef80c1151b4c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d147c392-36fc-447b-9ece-cc1e4c0d37e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8513da-3d6d-419b-ac3e-4eacde1244e3",
        "cursor": {
          "ref": "648f6a95-2074-4e7d-8caf-2c9fe8884b45",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5220e24f-9330-4b72-a1e2-6562ae21fbea"
        },
        "item": {
          "id": "8e8513da-3d6d-419b-ac3e-4eacde1244e3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a2a90705-4ed5-4be4-88b5-d42577dd2290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf02ecd-2d84-44f5-bd4b-66c097b4402e",
        "cursor": {
          "ref": "8a8d6060-b8bd-4cff-bad4-bcc06badca06",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "42e0912a-994d-4c34-8c26-7359af9d7dae"
        },
        "item": {
          "id": "bdf02ecd-2d84-44f5-bd4b-66c097b4402e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3bfec4ce-16bb-4bc2-bf1f-ade34233a877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b302f89-8a66-434b-b46b-f753bd4a2c5d",
        "cursor": {
          "ref": "a82bc898-caea-4c33-95f6-d058f0e77fac",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aa6b1417-53b9-48fb-b831-79706ab4f558"
        },
        "item": {
          "id": "2b302f89-8a66-434b-b46b-f753bd4a2c5d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "193d44c8-c041-47b4-ba2a-c84d144f696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09e22e-f672-4f70-8255-f010041441fb",
        "cursor": {
          "ref": "1d90b19a-dafe-4b1d-ade4-ced875b71535",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1e3a675b-29ae-41bd-a52d-027e04f7ef99"
        },
        "item": {
          "id": "ba09e22e-f672-4f70-8255-f010041441fb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "02b90627-a350-4538-9dbd-c5132d83da39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b972e6e-074d-48ef-8e78-e06b3544282c",
        "cursor": {
          "ref": "c9cddc58-7562-49d2-b212-81ca571899f4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6ac84773-e58b-45e3-b137-a534216a0c7d"
        },
        "item": {
          "id": "5b972e6e-074d-48ef-8e78-e06b3544282c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5e404afb-e63e-40f4-9231-aec5e3ce7602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f87e70-ed49-4be0-8520-079e179aded0",
        "cursor": {
          "ref": "d2dd9254-2f2a-4c05-b338-729950916289",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0d449be5-e4cf-47d9-a611-5579b8a468cc"
        },
        "item": {
          "id": "52f87e70-ed49-4be0-8520-079e179aded0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "49b0be41-eb5d-4e46-ab9a-3e75e622f4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c259e9d-7822-4cb6-95f1-8b6ba0a855d6",
        "cursor": {
          "ref": "a9cb0267-c15b-4ee5-a1c4-006a162f2963",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "23f57802-721d-4643-8655-b99bf296bc28"
        },
        "item": {
          "id": "4c259e9d-7822-4cb6-95f1-8b6ba0a855d6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d6aa485d-2dbf-4893-8f54-9f3b03b7c5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a86d6c8-0cb0-4d11-ad39-afde9278b371",
        "cursor": {
          "ref": "2950935c-026a-4b30-960d-c3f52d3e0266",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5c9c39bd-b044-49cc-974e-cddc544dcb21"
        },
        "item": {
          "id": "0a86d6c8-0cb0-4d11-ad39-afde9278b371",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "524c2960-a6c4-46a5-906b-24d822ee24db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa63b22b-2ec8-49f9-b14f-610161726433",
        "cursor": {
          "ref": "5ed2a4a7-590d-4c43-b103-c04f1a04daf0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8e26b752-f7e7-470c-aa19-f8e9c92ad9c6"
        },
        "item": {
          "id": "fa63b22b-2ec8-49f9-b14f-610161726433",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "26cf86a5-c5b1-436f-9ce2-b8582ddef2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980e723d-f4fb-4397-b96b-b138317d9075",
        "cursor": {
          "ref": "1d86e34f-0a6d-4481-bc1d-adc799d8b52b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "49bf1eef-8b25-419f-9742-8b50e22842d7"
        },
        "item": {
          "id": "980e723d-f4fb-4397-b96b-b138317d9075",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e2c2a4cc-9863-43cd-8c21-09c2bd2ad4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c16fb2d-a090-4054-9423-c5697d0a8d1b",
        "cursor": {
          "ref": "172b0cce-5cda-4224-bd6e-f289ea267f1d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7d13cf7a-3ed3-4b0b-9ee5-c9655a660f45"
        },
        "item": {
          "id": "4c16fb2d-a090-4054-9423-c5697d0a8d1b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b86ee6cb-2445-4df0-b752-5be51a978f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80b6b39-3138-465f-93fe-2df560cc815a",
        "cursor": {
          "ref": "719cf5b2-5034-407d-a457-9e9813010d89",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b6ea2801-af29-4745-a1f6-5ff3ab24c5ea"
        },
        "item": {
          "id": "a80b6b39-3138-465f-93fe-2df560cc815a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "28ab38db-9989-4598-b99c-d811a4f9c3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53542797-196f-42d6-9c88-12b05f3c40f6",
        "cursor": {
          "ref": "fcaf06eb-b3fd-45b9-849b-5fdbf8a12b5c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "73b648aa-52ff-405a-a495-febfae5aa473"
        },
        "item": {
          "id": "53542797-196f-42d6-9c88-12b05f3c40f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "50d977bc-8d2e-4b32-8b11-525cf1bfc8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42b8325-95ae-4829-bf03-f02665646cf4",
        "cursor": {
          "ref": "98ff5cbd-3c93-4887-abc8-7485ab5e8570",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a83dce64-d144-41e1-b728-42e758ad6924"
        },
        "item": {
          "id": "c42b8325-95ae-4829-bf03-f02665646cf4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a28c8a0e-275b-4315-97b7-1ac8a43d26d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8cb1ba-9084-4424-835b-e01cbb2fc2d1",
        "cursor": {
          "ref": "3bd700d4-1ea0-413d-b6e6-a355c62d17bc",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d81f2133-2094-4052-bda7-44d870af073e"
        },
        "item": {
          "id": "cc8cb1ba-9084-4424-835b-e01cbb2fc2d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9642a0db-6b77-4436-83b2-0f02ad94b742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81e4270-b8b2-4247-9c36-e8ab4a844f25",
        "cursor": {
          "ref": "b224dd40-8a09-4d84-b88d-9b947379f0cd",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "450e6b6f-c0f1-409b-bf4d-0fb6f9fac8d2"
        },
        "item": {
          "id": "d81e4270-b8b2-4247-9c36-e8ab4a844f25",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "15fac4cd-e2c6-4b9a-b55e-4d61af7cf0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6648d74-b249-459e-b1b4-f01de93c02fd",
        "cursor": {
          "ref": "efca5a3f-2d3a-470a-a1df-f37040847f32",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5fc66cb0-dcca-4d4d-a293-a6f5211d4ad5"
        },
        "item": {
          "id": "b6648d74-b249-459e-b1b4-f01de93c02fd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a2818a24-3551-4535-a9cd-4ef5629f791a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5191937d-05cf-408a-864e-54c7845c137f",
        "cursor": {
          "ref": "97ad854f-c271-4df9-aca1-8b24fcc30413",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "45b7c6ad-be80-4a67-8580-5ccb2fe00890"
        },
        "item": {
          "id": "5191937d-05cf-408a-864e-54c7845c137f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f613398f-ac54-495c-b3ad-f7bc1814388d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8e39d2-8c74-4266-9a63-3bf464977617",
        "cursor": {
          "ref": "f2469c76-1d46-415c-ad6d-59273c04f2e3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0a9090ba-addc-47f6-902e-5f256cf3ba4b"
        },
        "item": {
          "id": "ff8e39d2-8c74-4266-9a63-3bf464977617",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9a3ce6fc-47c9-4d65-a7d2-fb2fcf9c847a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95b85ab-ea90-45a2-996f-f46bf735a3cc",
        "cursor": {
          "ref": "a1e3274b-b367-4ad1-9c18-be31c9242307",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e9943c78-cc6b-4da5-a144-b4d6a71bce4e"
        },
        "item": {
          "id": "a95b85ab-ea90-45a2-996f-f46bf735a3cc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "214bf86e-2a13-4155-a088-1a308e338a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cb4177-dc54-4ea9-877a-d152bec0f423",
        "cursor": {
          "ref": "41d067f9-e9ca-4a88-b470-e34edeb5101a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27d94128-ddbf-4f8b-a5d1-0037ce1692cd"
        },
        "item": {
          "id": "60cb4177-dc54-4ea9-877a-d152bec0f423",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1a4ff7f2-8406-4fdf-84df-a0337d3379cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54eec1-bc36-4e1a-869f-acee43b5a57e",
        "cursor": {
          "ref": "551884a2-2c91-41d6-a976-94ce968df7b8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae2feb7d-3d4d-4ebe-b7bb-1df244f6743f"
        },
        "item": {
          "id": "aa54eec1-bc36-4e1a-869f-acee43b5a57e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "431bd7be-491b-43a5-bf9f-c387ad83ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118796a8-2dc4-4222-a4fb-1ceb1f80af55",
        "cursor": {
          "ref": "1b82b818-e916-4b6c-84ca-1dc9cc15bf8f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e1acd734-c213-413d-8768-bf95564d0243"
        },
        "item": {
          "id": "118796a8-2dc4-4222-a4fb-1ceb1f80af55",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "133c2004-9b94-4282-b3a3-8f3100f177c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42061f3c-1f7b-495a-9a06-d5d27c5c9f09",
        "cursor": {
          "ref": "22b3b455-de8f-450a-b371-c938d68da93c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b5bf054-809e-43e7-8174-a4f842256df6"
        },
        "item": {
          "id": "42061f3c-1f7b-495a-9a06-d5d27c5c9f09",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "11fb1491-11a9-4120-a656-42ab90f07cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88291249-d716-476e-b2e1-34db457754e4",
        "cursor": {
          "ref": "cf627f69-1e1b-4e08-aa55-0e101c5aa900",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3114a639-a96b-470f-82a5-bd00e47d6c23"
        },
        "item": {
          "id": "88291249-d716-476e-b2e1-34db457754e4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d0b2775a-2c3e-4e26-b69c-34d95e1c5996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076d21b6-2067-4851-b538-30c92d910679",
        "cursor": {
          "ref": "968c2291-e845-4f3c-b368-be9b80e62f64",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0f5616e2-9ef3-48a6-a5cc-b4040e04f6b8"
        },
        "item": {
          "id": "076d21b6-2067-4851-b538-30c92d910679",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "de0bdacf-8f98-4815-9966-e6167cab1f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2480b4a-2f4b-4239-9ed5-d45257baa32b",
        "cursor": {
          "ref": "564e3ac9-f2cd-44d5-9223-abb5d08c7590",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9200aa82-8a83-4f82-a009-f9a063dc30bf"
        },
        "item": {
          "id": "e2480b4a-2f4b-4239-9ed5-d45257baa32b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6c60ba82-715a-4f3e-8e02-33ce20b4c37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c197b7-cccb-4348-bde2-8358e3ce83ac",
        "cursor": {
          "ref": "5fe12b16-6756-40ac-b45d-3dd7e9e0ef89",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "67b63f75-46b2-4f69-8471-6463bcbecceb"
        },
        "item": {
          "id": "e3c197b7-cccb-4348-bde2-8358e3ce83ac",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "000771fa-85ea-4b3b-88f4-fa21cd44bcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980a17f-c676-43ae-af96-0eb2770b0572",
        "cursor": {
          "ref": "49331840-0603-4b16-ae82-e1e8e49581b8",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "66f44b25-b0f3-416c-a0fe-1cf1d74da033"
        },
        "item": {
          "id": "5980a17f-c676-43ae-af96-0eb2770b0572",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d719a44f-ce30-4973-9d5f-9716358c5854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c005ee-1dd6-4063-89ed-e4051c6c59d8",
        "cursor": {
          "ref": "3ccdfeb8-caea-48a1-a4a5-606428302d72",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "97058818-f94a-4d10-8e1b-635c51c9a838"
        },
        "item": {
          "id": "92c005ee-1dd6-4063-89ed-e4051c6c59d8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8a61aefb-8406-4bd6-a169-09e68087ef9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df56449f-ad24-4514-b3a2-42628a5bc19d",
        "cursor": {
          "ref": "7e5b71a0-98ab-4a32-b1b5-cee4c009f142",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "559f30ab-49e0-4e8e-b0ec-4969ca9421d0"
        },
        "item": {
          "id": "df56449f-ad24-4514-b3a2-42628a5bc19d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "27bb5ee2-823e-4ac3-b7f2-dcf22920a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892a29e9-2fdd-47ef-808d-a4ed8007df0a",
        "cursor": {
          "ref": "a301eae9-22c8-4538-adf9-418862a410d7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9005ceed-280c-4fbd-902f-240f2685f5ee"
        },
        "item": {
          "id": "892a29e9-2fdd-47ef-808d-a4ed8007df0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae34f4b7-6bf9-45a5-a97b-1ead2495a713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233bb94e-79b3-4ec7-8da1-0a73853ebf7f",
        "cursor": {
          "ref": "60a08428-fc03-4938-8e55-1e29c4e110cb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3b67ceeb-0ed4-4dec-8093-8a4de62a80a1"
        },
        "item": {
          "id": "233bb94e-79b3-4ec7-8da1-0a73853ebf7f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bc22863d-7b0f-4fa6-9321-22d69843bdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0051abc0-6226-4ae3-8bed-de6c76a97ee2",
        "cursor": {
          "ref": "15e852c7-a3d1-4157-a107-d16668183fac",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "11a9c6ac-5980-412e-b58f-4545bfc55398"
        },
        "item": {
          "id": "0051abc0-6226-4ae3-8bed-de6c76a97ee2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "08ed798c-259b-408a-99d0-794877201699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6648c410-990c-44f0-adde-ecc0b3222c0b",
        "cursor": {
          "ref": "0be14306-6616-4b03-86d4-3da8b3fdaba8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8ab0e22f-f77d-4393-bc8e-5471d2567c78"
        },
        "item": {
          "id": "6648c410-990c-44f0-adde-ecc0b3222c0b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "090e915e-42b3-4fd4-9315-e9c6db0d9d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b61472-f2a8-4156-8a47-e4a92558a302",
        "cursor": {
          "ref": "f56b931e-ba0d-472d-a022-c11b5b44176d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2e12f90a-3d3f-45d1-b9c9-b15283440606"
        },
        "item": {
          "id": "24b61472-f2a8-4156-8a47-e4a92558a302",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "20eae9c8-8f13-473d-a275-de5b9a74fcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ef230-65ae-43a5-86d6-449f07475061",
        "cursor": {
          "ref": "39206fd1-4c6f-4d11-bcd1-809c57088f75",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7b7d40d4-c7d6-490a-9c26-4874c0b978ef"
        },
        "item": {
          "id": "ab7ef230-65ae-43a5-86d6-449f07475061",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "15cc9fd9-972c-4ab5-9851-d956cc13c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14800be6-5e9c-49b1-b381-c81171483fc8",
        "cursor": {
          "ref": "c6d7df11-a0b3-4716-80b7-9566e53f239f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "478ae0e7-142a-4b46-81ff-f43e62ed4c84"
        },
        "item": {
          "id": "14800be6-5e9c-49b1-b381-c81171483fc8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3a01f9ab-7dbb-430e-95fc-35adbbdb1282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4996f3b3-39f5-4c60-bbf7-6b6d424bab8e",
        "cursor": {
          "ref": "d911193f-3ed5-433f-8bdf-2b4356bc35d3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4e2e7229-487e-4a17-b479-eba80f7a2c7d"
        },
        "item": {
          "id": "4996f3b3-39f5-4c60-bbf7-6b6d424bab8e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4efe0d14-f766-42e0-a592-6c4182156f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0babf3-68cf-4954-be82-8d66322a4939",
        "cursor": {
          "ref": "10695ddc-99f5-4598-b9b7-3b0a505dd8b9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b971b989-4a59-4b25-ac75-14b4e51d39b1"
        },
        "item": {
          "id": "af0babf3-68cf-4954-be82-8d66322a4939",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3f8d392e-5d98-4cdc-83ae-ce43f0729ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008ae8f5-f3ac-4857-9c97-260a09379afb",
        "cursor": {
          "ref": "e80dc390-93d8-4db1-89f7-6c6eb34f2cf0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "52db6359-7e5e-4844-b80e-830dea09937e"
        },
        "item": {
          "id": "008ae8f5-f3ac-4857-9c97-260a09379afb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "17c81808-d377-4706-b4c5-ebd04ac2582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8644d2b7-93a7-4dea-bb2e-68aa300595ea",
        "cursor": {
          "ref": "86105bf0-dd3f-4d99-967c-3a0673c1267d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4b1ba267-3e0d-4918-996e-c11cbc30890b"
        },
        "item": {
          "id": "8644d2b7-93a7-4dea-bb2e-68aa300595ea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3f14f5cb-aa6a-48f0-b196-94a2994d7553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669cb574-d869-4419-9f69-6376bb6395fc",
        "cursor": {
          "ref": "18414613-8e21-458b-bcb6-95fefd59b55e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7780159e-2f26-4f4c-ae5d-4328025f55b6"
        },
        "item": {
          "id": "669cb574-d869-4419-9f69-6376bb6395fc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d4d2ff6-7afc-48e9-8cd0-8c9667ba8fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee78cbf-b3b9-43ac-8d72-bee6dfaf1d69",
        "cursor": {
          "ref": "167fb24d-4a2c-47ef-84e7-530d85baf7fb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "291ccbe0-f2e6-4aab-b19b-58f076d00ed6"
        },
        "item": {
          "id": "3ee78cbf-b3b9-43ac-8d72-bee6dfaf1d69",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "984b87d1-5fd0-42db-bca5-b1d5e0cfba74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ed8730-b303-4af0-8943-445178f01076",
        "cursor": {
          "ref": "419d44b2-afd1-4817-a250-af0d02276f9d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cb0290b7-6ff7-4f06-8622-686ff49e9d7b"
        },
        "item": {
          "id": "17ed8730-b303-4af0-8943-445178f01076",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f8d2fd69-63ba-4001-8d8b-801efa68ed5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14826d4-5f7c-4662-988f-f64f763350b2",
        "cursor": {
          "ref": "a6cdff99-7dbc-4b10-8073-559a75cbeef8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b96189d9-81f6-4701-8ce5-18a60493c855"
        },
        "item": {
          "id": "a14826d4-5f7c-4662-988f-f64f763350b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "02a5326b-8023-4fc0-b245-c2dee45b7afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7954020b-2413-433a-83c4-785be3cb50aa",
        "cursor": {
          "ref": "e9bb4e2f-8414-4021-80c9-8f45581262ba",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bd861ad5-2bd8-4f2d-8de3-30a6531ab55a"
        },
        "item": {
          "id": "7954020b-2413-433a-83c4-785be3cb50aa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5b060bb3-5e6f-4231-bce5-611fc6d1a7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd90c3a9-8282-4a19-b548-cc178fab553f",
        "cursor": {
          "ref": "94370ad1-8988-42b2-a7f8-fe29ba0132dc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "13f41ea0-d22b-4453-97d2-58d8efe8ffd4"
        },
        "item": {
          "id": "fd90c3a9-8282-4a19-b548-cc178fab553f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8815e7a2-6fa6-45e6-a225-4d67359350c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd0c878-2cb2-4604-ab66-e9458b8a26db",
        "cursor": {
          "ref": "98d6e5d9-526b-417c-a06e-2165f136e44c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "973fef25-a118-433d-993f-fda7e1292ba6"
        },
        "item": {
          "id": "1fd0c878-2cb2-4604-ab66-e9458b8a26db",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ea7068d2-2880-47c2-89cd-31a5082e3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef53592c-8307-4870-9292-61a895b89f8f",
        "cursor": {
          "ref": "5ceac1ee-e97a-4d10-8f58-d6b081fa4370",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9cb236eb-2f3c-482c-ace0-106f1792d60d"
        },
        "item": {
          "id": "ef53592c-8307-4870-9292-61a895b89f8f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ef1977ed-bb58-4cac-8035-8322c5ef4c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a45393f-d621-45a0-be84-27041b69c930",
        "cursor": {
          "ref": "b05e5870-9581-4e1d-a195-1a7bf8807b90",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f998131c-3c6b-4cc6-9bb6-39ff6bedbe82"
        },
        "item": {
          "id": "3a45393f-d621-45a0-be84-27041b69c930",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a3a2cb45-de79-40f2-b709-285786eda6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac083e31-4da1-421d-9f89-9527d9d46e80",
        "cursor": {
          "ref": "3285fa0c-bc5d-42a6-a719-c4338ebe75e2",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4a4b60d9-705e-4f87-b373-fb393199dcf6"
        },
        "item": {
          "id": "ac083e31-4da1-421d-9f89-9527d9d46e80",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "67df36d9-2f67-4028-ad38-e2cc867adbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244bc924-5b68-4f6d-b8df-d2876d44ef1e",
        "cursor": {
          "ref": "bbe6c4a5-abf6-421b-830c-2d760972437c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "17d4496f-08a8-48b8-884c-e1adb6960561"
        },
        "item": {
          "id": "244bc924-5b68-4f6d-b8df-d2876d44ef1e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "21a601cd-dbd0-4d90-bdd7-d7e34386c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30465439-ffd5-4397-8607-9f52edb3d1a5",
        "cursor": {
          "ref": "8ab262b2-a7b1-4b6c-bd7b-657f52e7a2d0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c2a0a8d9-325d-497e-adf3-304143d41c14"
        },
        "item": {
          "id": "30465439-ffd5-4397-8607-9f52edb3d1a5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c6ae117d-2bfe-4b62-b724-f6ebe7e74227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576e121a-7d39-4cdf-8473-e126a46ed6fd",
        "cursor": {
          "ref": "5af49700-f4e4-47c5-acb6-05ca48966b6e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bc1b6a6f-11ad-4740-a93d-93e7e93beb58"
        },
        "item": {
          "id": "576e121a-7d39-4cdf-8473-e126a46ed6fd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e0207a19-c001-41c3-9a0a-e7df0d48b588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bc6d8f-f493-437b-bdd2-709031864822",
        "cursor": {
          "ref": "3736846d-4f28-46ee-b566-6baccbdcddc1",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "84c71410-fdcd-4d3f-9f85-78caae931dc5"
        },
        "item": {
          "id": "b3bc6d8f-f493-437b-bdd2-709031864822",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "db62af4f-e169-44f5-9389-dcc706b5f167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f0aef-b343-4a38-adac-59778ff55862",
        "cursor": {
          "ref": "91298dde-75bf-4f89-ac9c-8370fde9a2e1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "08e5a3b6-7a18-43b8-b16f-5224e3a24f19"
        },
        "item": {
          "id": "795f0aef-b343-4a38-adac-59778ff55862",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "38b8252f-fb37-4d96-9a4d-d1ae933a1729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dceef1-fdbe-453a-9cdf-ce36b9702de4",
        "cursor": {
          "ref": "0515178d-5537-421e-9e60-66e9b1d5d4a3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e2ff7473-03f9-4ead-bd4a-5e561d2cdf3f"
        },
        "item": {
          "id": "33dceef1-fdbe-453a-9cdf-ce36b9702de4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6808e969-fc90-4fa7-8f96-da3efb6388ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0315e68-82f2-4306-995a-e65887f9e7ed",
        "cursor": {
          "ref": "b8a868b9-356e-4d85-b1e2-f5192f18fe4c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "02486c8d-27eb-4444-aa07-77c6c1518c3c"
        },
        "item": {
          "id": "d0315e68-82f2-4306-995a-e65887f9e7ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "03b1f0f4-cc77-4c5d-958d-d5b36163fe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb35615-ddef-4424-ae93-806da2e7b368",
        "cursor": {
          "ref": "2151fc4e-cff2-4582-9ef5-396e0d69f7f7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "80f17f4a-c3bc-4027-baa7-d564b9a18365"
        },
        "item": {
          "id": "7fb35615-ddef-4424-ae93-806da2e7b368",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d82a8cd9-0855-4560-b995-16dd05885685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85089223-7a6e-4073-8ba3-f251c2ba0fdf",
        "cursor": {
          "ref": "f9218816-30bf-424f-b6e0-09e72ab59352",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b7f60a97-d556-42d6-8e89-4eb622f17190"
        },
        "item": {
          "id": "85089223-7a6e-4073-8ba3-f251c2ba0fdf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1b74753b-86bf-4ccf-9cb3-a9366b5352e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772d31c1-136c-4c49-9727-d12351b688df",
        "cursor": {
          "ref": "92de7655-570b-46a0-ac7d-55f36a9ca378",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "63fc85b4-0b9b-4523-8adc-4618ab0716dd"
        },
        "item": {
          "id": "772d31c1-136c-4c49-9727-d12351b688df",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "72106b5c-27e7-4fa8-a0de-53ce4a561725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59583b0d-fb47-4a1e-9e5a-2a0d057df90a",
        "cursor": {
          "ref": "52d66ac2-1a76-487a-9d12-5a6d332d6d0d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6d6b0672-9a3e-4577-a7bf-b4438aa95ab7"
        },
        "item": {
          "id": "59583b0d-fb47-4a1e-9e5a-2a0d057df90a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4dbc78cc-b08c-4200-b9ce-faab0ff9fff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98899feb-592e-4aee-a06b-0e21c48718d9",
        "cursor": {
          "ref": "976e21c7-daa4-4051-8ff6-1cf49f1bbd12",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "35fa9ebb-0073-40ad-9de9-edd3ff7bbddf"
        },
        "item": {
          "id": "98899feb-592e-4aee-a06b-0e21c48718d9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "99a59990-8722-4eb9-9964-bc6c9c89203a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a60f2c-1dc9-4f27-a7c2-6e2584612a85",
        "cursor": {
          "ref": "70a8b0c6-f083-4789-be8a-8654c5e84f5f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "069f30a2-f5c3-44e7-b92c-b012ad8b0191"
        },
        "item": {
          "id": "15a60f2c-1dc9-4f27-a7c2-6e2584612a85",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "74757ebf-7c92-4a53-9c90-701154dfe8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55697cb-733f-407c-80b9-c20d681b09e7",
        "cursor": {
          "ref": "a6394e04-8026-451c-86a8-cf19934513c8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "46eaea22-57b2-41b7-b4b9-eb9729b7e296"
        },
        "item": {
          "id": "f55697cb-733f-407c-80b9-c20d681b09e7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dfcc47f0-93c9-49e9-80e6-0ca56336a655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a83f40-996c-4a1c-a743-f6714b937f88",
        "cursor": {
          "ref": "f0ea7edf-52b2-43d5-9a65-1f87f970f2b7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8cbe38cb-7b8b-4461-9e3c-f653e07aaafd"
        },
        "item": {
          "id": "60a83f40-996c-4a1c-a743-f6714b937f88",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9a1e8ff3-78d0-4312-9900-95f7774e7d4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9330f0-14d7-409c-bf48-6d2a14f7b849",
        "cursor": {
          "ref": "b507a5c4-217f-441e-b497-dfd20b06ecb5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "37f8f0d1-ae9d-4725-9c40-793740ded82f"
        },
        "item": {
          "id": "de9330f0-14d7-409c-bf48-6d2a14f7b849",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "26080b07-404b-4439-9023-9e00d9c51333",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9aab01-ac78-4cb8-8dcc-9db6e8ff8571",
        "cursor": {
          "ref": "e82026ff-03c4-4053-8714-cc4af2fe5cfb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4bb3d238-9539-47e7-aa15-77e1f791b89c"
        },
        "item": {
          "id": "df9aab01-ac78-4cb8-8dcc-9db6e8ff8571",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e1428aec-03b5-480f-9046-65fe53c89504",
          "status": "OK",
          "code": 200,
          "responseTime": 1280,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1368ec-68ad-42fc-b39b-48eb86b6c49f",
        "cursor": {
          "ref": "b0e492ba-3d10-4f5b-b1bf-075af2e3be03",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "02cca8f9-94ed-4dac-891a-b4865bd76b1b"
        },
        "item": {
          "id": "0c1368ec-68ad-42fc-b39b-48eb86b6c49f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "528c351f-d490-45d8-a836-4d5e3949d157",
          "status": "OK",
          "code": 200,
          "responseTime": 1282,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bf8a6e-369c-4319-9208-9311835c45cf",
        "cursor": {
          "ref": "f40a351b-0a15-4284-8acf-fb564a55ad02",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "27b7077e-8f4f-47a4-bc4d-b8102a32bc47"
        },
        "item": {
          "id": "49bf8a6e-369c-4319-9208-9311835c45cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a577d2d0-c6e7-40ac-9013-c27643de3cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bf8a6e-369c-4319-9208-9311835c45cf",
        "cursor": {
          "ref": "f40a351b-0a15-4284-8acf-fb564a55ad02",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "27b7077e-8f4f-47a4-bc4d-b8102a32bc47"
        },
        "item": {
          "id": "49bf8a6e-369c-4319-9208-9311835c45cf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a577d2d0-c6e7-40ac-9013-c27643de3cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11a9959-41d5-4301-bd7d-964880bc7c8c",
        "cursor": {
          "ref": "fb845b39-215f-4c47-9a67-4e24208f325f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0a000f12-6296-4c9c-b285-9041690d8ed1"
        },
        "item": {
          "id": "b11a9959-41d5-4301-bd7d-964880bc7c8c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d0af3f75-62c0-4055-b412-182a3c4bca23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7a8d11-cdb2-4609-9c98-3c0a8bb7b4af",
        "cursor": {
          "ref": "950d84b9-0225-427f-9cd3-0626de80f9ee",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "55df972a-66a4-454f-819a-20a7b8986d03"
        },
        "item": {
          "id": "1a7a8d11-cdb2-4609-9c98-3c0a8bb7b4af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3ffec261-e055-4c2c-ab03-025afd6e80a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}