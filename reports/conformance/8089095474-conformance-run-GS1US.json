{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b02a67c-dcae-44dd-8092-3ea9cb7a1ae7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "615bc787-7db8-47c9-9767-7ee34eb76956",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7555f06c-d8d0-4bf1-9b66-a19feb324dc9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "366d8702-14d5-4e76-9b98-31fc377f9ad7"
                }
              }
            ]
          },
          {
            "id": "6a6a505a-f911-488c-8e8e-8266afd08fb9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb596fa2-017f-41d1-98f2-1075c6d2fb29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d400a7b0-43d1-4cd6-a958-e8fe4aa75662"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "474114ea-acb4-4b99-bfd2-596226da6d86",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "03d509a6-9c38-4a41-aea7-afe5ee55928d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ea8724c-ca9b-4f9b-8ce4-0f8f0cdcaaa7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e4cffa2-bd9b-4e6d-8adf-0d70c6705557",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b80a846-b460-4952-8a5b-6365d143bdf4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e45f218-d407-43fa-981a-a2d6693ae9ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7af77a68-3e5c-4ad3-bf6d-e94b0bb24cc6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "87a53431-d708-4623-81b7-c991780c259f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2258ca82-16bc-4ed5-9924-d2d7d0364e69"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "693a3895-9465-4d5a-bfd9-82790b939b09",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c5c3b786-e14e-4455-b688-a2e40bc15f63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49fb1c39-db36-483f-baaa-05a1937bcd05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e13ffe0-6885-43a0-8480-c138d9d30ddc"
            }
          }
        ]
      },
      {
        "id": "f6b861c1-bf96-4bc4-ab40-6d3451a0f5a8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e3c9da8-81d6-4af5-bf0f-7f016b54c03d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e315e51-285a-46e2-bc4f-f59ae6011985",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcaa974a-e06d-4d3a-8045-08a084dd9e3e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514a1db8-701c-419d-bc43-70db3cb36b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a5f1745-c6e0-4639-8eaf-92dfaf8e6977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ecad6-f4a3-4927-980f-5694682bb43d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2920b091-f8d5-43b7-84bb-e8d44c2e73b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83ab147e-7b75-4a22-bf91-4af95ecb9129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41be9dd9-dd58-4880-bf04-52b8726c4c79",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac88823a-1939-437b-aff6-073434dd1e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9deb9a2d-9049-46c7-9de9-4a3296df59aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98f698b1-d386-466d-a88d-bc4cafc48317",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb09cd3c-6900-4333-a362-b650d2a74394",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dbbd39-1b2e-4982-b881-62bd05da5ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5689e94-f42a-42a6-a771-4b915d09bd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5c6b87-ce0d-472e-9177-b51d44099b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c44fef2-2874-475c-b9b3-acc6c0952cf3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d769c758-1c62-4735-842a-b48ee41ae744",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b2f7756-e3a1-4f42-9cd2-fdd2c2c8ea8c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "881a48b4-9977-4e4f-9616-531c338220fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a06563e6-d13b-4d94-8e13-2971db178a7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14e6dd35-8f4d-4bab-b6dd-de70352b569c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "05cb439a-5a18-4259-967e-da19f1e0e8d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "115ae044-97d0-4040-a9f0-b47645bf2f4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62b8cd3e-5fc4-4c61-8cd1-a678d8990c11"
            }
          }
        ]
      },
      {
        "id": "70f603ab-f510-4430-8408-3f78129b0e65",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ecf72c12-2acc-4010-a656-de5466fd740d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5350f9ca-39d0-4e85-8b17-280a983643bf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "881252f0-5866-4dac-b061-326bd92d1b9f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e2a0f-9db6-41e7-b8fc-d68289bd03da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be51cd4b-a910-41cd-b2d4-a6212b63c270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc2caa6-fa64-4810-8200-7d3bb062eefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "907d1e2c-a068-42a2-9ec1-a8c8fa836777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69797627-fb15-4c6c-a467-818e27795e54",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6dc859-8b8d-42f2-8950-c5eb3085a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f59b483-d0d0-4aa9-a92f-ae196017e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99cba9e-626b-4580-9984-d9c0c2d658da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6cc56d3-d9bb-490f-96ca-6ced6e56c6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eeb9d1c-e732-44ae-8f33-e1ff5f66d9a7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201318b9-6bbf-4d76-9ce1-44e613af3fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7c755c-4d15-4e7e-b7dd-4799b0313275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ee24cc-47da-4047-97e9-2c9dd18c0504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab3d495-28d2-4ee0-8c1a-9e9b9e8ed361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5a6dd9-ce80-4128-8df4-e588fe7bb1fc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17f1f84-287d-4533-a67d-0f0c0da9d0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d28bb2f-c3f4-4d0a-a827-30e1966f0d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4bca99-eabb-4bc6-a3be-bb75c20f1951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3968037f-38df-4aa8-9999-fbee7cad02f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976c5254-8e03-460c-b5fe-f01e549c49e8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4f4086-2a0b-49ac-9420-643731b38634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5591563-3a1d-4fad-b272-c9acb1c258b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e023320-ac8c-40a8-9dd5-933364016274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4afe588e-574e-4699-ba7f-39c8f9743300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0d5df7-b475-42dd-8602-75c3f74c9da4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072063d1-8246-4a68-8f78-fd7edc49865a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cb1fe8-8e77-46a0-b435-e8ff8a4344e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba15c5e0-346a-4cca-802a-354509743ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c20a46c3-ca09-470b-abc1-3e29f4a24da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db4f0f5-7046-47ee-92c8-9cdb1e8b4755",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e938e1f6-2318-45d0-bfe0-5859a1877703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b2d389-72e6-4290-ae1a-944e4a9c55c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ae6894-506b-4b4d-bf40-97613fba4cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "257f5816-9301-4d93-8531-43501dcb61cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b9e9a0-08b6-4db4-801e-93fa59019721",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c719b5-d0aa-4fde-a235-c6ed1c0f71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42b06e2-0846-484c-9352-344746e3218e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60db7e5-cade-415d-b0a6-38c73cf8bdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553d69c3-5809-49d2-8297-9ff1c3e28d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d5193f-968c-4537-bdb6-5c6f0219720e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a90c1a-c058-487c-b810-f24b0b0a0452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7455440f-221b-4961-a97e-4d08a070870a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a4adaf-7f4f-4bf1-8c0e-f4f5d5f465a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41c144ad-8205-40dd-b2f7-be6f120e6667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d4a7e5-fbbb-4652-9b2f-21a772326551",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb6e2f2-e9da-4f6b-a952-4ebfab778481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e53098b-ab36-458d-9afe-3f8d376fc37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee149ff-9cb4-4692-bfd1-99de2b954200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae279135-a49b-4a1f-9717-56e4f2e411ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c988eede-6819-4a2e-a853-db02d0057d5e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f04654-7834-4405-bef4-88c6465539ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75813614-f0e5-4d68-b5e2-1e3a8a142ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d06f5c-070e-4e62-b680-2ee52a56c397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69223d16-cbc1-44c9-92e8-2da811e56a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b02e7a4-b4a6-4fca-b78a-20268c6ed86c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7b16b8-6e19-4714-9a11-9955e8d1ddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d84516-fc19-42fa-9779-2a69da911727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d7360-967c-4461-ad1d-9a99e5c33b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cb8d35d-7ba4-4e5f-8dde-52c8f4df619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be996a40-e6c3-406a-99c2-70bcca025f70",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd743b1-0471-4b5c-9488-bf58e95d7633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323c962d-0e94-4784-9660-372bf864f2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3743f2-8b0e-40be-8378-cc695d6e63c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4b3caa3-8ef5-482a-9cfe-be5cdd983828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca124678-b4ba-4bc6-8709-f35c439198ec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52ef311-b393-4ef0-aa6e-f7ca5f263612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb1e4f6-0689-4d35-b010-0f95e47827ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd998cd2-e0f0-49de-b8a1-942b57ff1237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d69894e5-18fa-4503-8b4f-3769b324f8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00420565-17b1-4f58-8c24-a9bbdece7790",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1986d126-eb0d-4ee9-9660-c808302406b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad6a81a-f61f-41d8-8644-7ea161dc8093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79aeec1-0aed-457f-8fd4-d67a3b30ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0edbcbbe-754c-40d9-92d0-684a66450311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c8d284-8bd4-4583-b890-96f9109d2e6d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9702c9d-4079-4369-b47a-0912f455510f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834030bb-de5d-4aa8-8895-43ae0b497b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a2871-6f78-481d-a1ba-3590c3e8d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1f8323b-7d96-44cd-91bd-c1367f05f812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf45ec9-18aa-4857-9504-16d73c8721e7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e230fb-546e-4186-b83a-59d0421b2ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb5fd21-411b-41d9-9c82-262eb6619a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5843429f-c540-42e1-83b3-23cbcc2ab659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd299e6-014f-4b37-afcf-a442767da13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a1e774-cebe-4324-a158-7ce95821c22c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262afb2a-1e80-4602-8c5b-97113a78e2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce17ce52-a158-427b-b1c9-e3bd9dfd529f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c644ccc5-f1f2-4301-abec-627fa5ada795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b570c90-1edd-46b7-a39a-36c983f62022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8c09a-799b-41b9-8a41-4dace22ac696",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b487aee-9605-4d68-96b8-71c6652fe5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04554aaf-d88f-4c94-b78c-1e294194c43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0efb2f4-53e5-446c-8f8a-b14d647592f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67b90b3-70f7-438e-bf04-83ae19094d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e610dca-4d69-4e37-977e-3d27fe2c8f38",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec3c801-a7f1-4488-9aaf-9008668e62e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2cce45-2fce-4298-a2ba-ecd6621ff386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06ca771-14a6-453a-9640-fc1d1c9e709a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "950e7672-b11c-44b0-9999-8f9a91d22c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d415cba-d9ff-4761-b260-1f130b0ff056",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f7ed72-df8b-480e-9112-1db863400b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011c075c-c1b6-407c-9422-c1dc355c9bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3a95c0-3521-41b2-afaa-e6ad4a6039be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d464cd3-15c7-42ca-a140-c09f9aa3f513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109ae278-ab67-445b-8434-cba2d6be02de",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a77fd0e-e9e5-48d0-9662-795133e8d35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cadd29-da37-4145-b1a7-01c9da25629a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a3142b-8540-42a1-97f7-b61a53ab6d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63b8cefe-577c-4ef5-a781-936aedaab736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a52804-c86b-431e-a8c0-09f61bc6763b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27481661-92f7-4375-90ea-6fc41a2f3c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c13a063-4602-471c-b6c6-ae86fcd6dd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bc4b4e-68d1-4fbf-8511-6cbfc53b7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c5eefc-a7d3-4073-8303-f99ff4ef9197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5246865-416e-4fdb-a701-f675969e421e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f9ce6-5f1a-43c5-be16-30ca714e4335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1146fd4-4ff8-4666-ad4f-46f7582f21a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ac0a9-04eb-440f-8b47-f2a927d35d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcb750e-0e2a-43cf-88d9-9e0bae229fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4a0da8-25f3-499d-8ffb-52277d253b5d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769aeb53-3e45-4790-91a9-2f661cbff143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562b036e-84fb-472b-b03d-ad9f4f33d83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898a5b3e-6bf1-4863-8adb-8be65aff4d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "848c4b43-fd8e-4574-a6a3-d010dbe0c2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bfa8af-8adf-4cfd-8497-25d63169f347",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a620b9e-c23c-45e5-a2fb-bb41dbc56337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4fef7a-d475-4a63-b43b-114b1ce9895c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9dd36f-988a-495c-9678-c98cb96279a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "287bfce2-7ff3-4e5f-822c-5aaa8403bbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677ac95d-b4d6-4b5b-af30-a6822720533a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57514e0d-18b3-430e-b304-d7797e5a2f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e13bd1c-1a5b-4794-ba34-f9084bf4ca40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18aa3ea-f1ca-4301-9957-a6564eaca474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca50f0a-f344-405d-a75d-5f502623adcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1ead3c-bb2d-400d-b429-237771aff8ea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a6a7a7-923e-459c-aea9-5d17eb4435b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb258e2-191b-4731-ba75-a9921fb62aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f44f3a-f199-43d2-b22a-8a36c2bdf1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6943faab-2a75-47ac-9171-e8549c561f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998ea191-59a6-4f28-8f78-225981d61d79",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bdeec2-004e-4f3b-8086-057a48102e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12971746-5260-4dbe-98c4-0d94c9e2799f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4419fc6a-72c7-481d-9194-5fd7e741128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3453f03b-190d-45e2-b864-6b274d936951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364b9625-a908-4af4-8ed2-1db6315386d1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da39da6e-091a-4222-b2f5-548ba427a8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060646f8-042c-4cd2-b986-73055713e01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee89c9e-0e54-4005-bfa7-f1b38ad84a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce503d13-1470-474c-9f21-925dbb62dbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56781ad8-0e30-4452-b16e-408b1e1d03a4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6d5cae-88eb-4bd6-b284-97350ed97e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7937a69-b1d5-4f28-8695-303b1cd10832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c45f8d-e87a-4271-816a-593a5483e969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb60f7a7-3466-47fb-98f9-279b0234a566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d312b67-1b1b-469e-8e85-414eb0649c9b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f9ac0d-b625-49d4-b59b-a64f98ed70f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a58524-9cd8-4b4a-a176-cabc3793a784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4905345-1630-4383-b27a-1f2cf81ca0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c79a313c-34ea-44a2-b825-5f1e5af7cba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495197b6-7ecd-48ce-92ab-00eadf3a830a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08166c6-91f6-4557-910f-f08116532cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79888521-f798-4abd-b237-47cf5728b1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d26817-412f-4f2c-8f09-b9bd4cd593a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c55b2a-81eb-4408-a5d1-ffa6f3edc3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514538eb-faa5-4f93-95e8-b5afb928de27",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1badd4-a33d-4f6e-a052-8ac6d854ab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eca5699-105d-4e3f-8872-be926953499a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febf549d-2a97-44b7-819e-fed03156496a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c646630-dcfe-47e3-af6c-e8b5b90a833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb602e32-bfcb-41cd-9477-6cbd1428c82e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6452f6-8480-44c8-bd8c-dfd630f26a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f68ba6f-b751-450e-8400-89b1c858b7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc0418-7708-48b8-8bc1-823a7f570357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fa32377a-ebf0-4c81-83ee-f21d3d47cb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8300485-6d1a-4cfd-b667-a2d38509db9d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb7360c-dafe-4cdd-b308-3fe09a05e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c01802c2-83a8-4202-9844-cd444d404b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79cad1-5495-4c93-af08-9e9f5e1438ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc0d113-ddf4-4f55-9755-e0659a18711f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcb4ef6-33f3-4528-b781-ca09cc6fe4cb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb886c27-2245-49a2-928d-155e3d09d64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18313eb1-90c6-469a-a48b-48e86a1c0480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d421dc-ba3e-4b31-9481-095f1b4f731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c637ea7e-2f9d-4b66-8648-00a741d41584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e318393-72b0-4ca1-b243-fe30a4b3648e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfad82b-71ee-4a25-8c10-02bb3f3c6454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def7c000-b375-45c7-8990-a4633853ce42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b097cdb-0d05-46c5-b378-d1a0e2235a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33fb9e8d-0274-400f-89c2-79a9bd13f36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4121418a-453f-41ee-88fb-5b70de73f02f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372ac9e0-22fb-4ec9-9c73-95a291b6edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3a638b-0412-4fe6-a76c-128c61040751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2e9b8a-349c-40f3-936a-921851f107cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3cd4ef-ed37-41fc-897e-36ce0f7b530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11acbcdc-903c-4eef-a92d-54d2dc021b11",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b28d2b5-9ace-4a63-9e7b-3a8e882cea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9113adeb-1186-4033-b4d7-edf14a3c8982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6c946c-6236-426b-a02d-a2e4b4ff3338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c44eb2b-1142-4e61-88c7-6cd988ee0f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a3fc42-18c6-4bb1-a342-5dcf88a4f3d4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982f7e0e-17f5-4fbc-be62-7bbf71997d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7e3c3a-5baf-41ec-a2eb-eae090e309be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa06ad1-c1f7-469d-bc53-51a730cc8176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69d3ce95-92fc-4d94-aead-31166807b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fce29aa-71bf-4c0f-b194-6c2e9194f1e4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8e5dd1-922a-4d57-a2f2-ce737d8c0571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b6694d-ae6d-4c86-bc3b-7b2f2afb5ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d1f5e0-d457-4436-bc57-54ea90156926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3bbeed-870e-49e6-9152-cbde33be0ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fb21ec-bd77-47bf-a37a-e9725f60b5a8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c23fb86-7d59-4dec-b461-457dbbe81c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3987efb8-c859-42cf-8213-b1ebf694c7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b87fe7-54fb-42c4-a475-41e128b9ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "805dc6df-0c4b-441c-bf2d-3801dff05839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8173c5-3f35-4ed0-ba83-896711f641f2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc96ac1-88c1-4387-bf11-d4817a827405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182560b4-480f-434a-b2eb-d0191fe1e209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8271f4c-94b2-4bbf-84c6-90cce848b69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "052f65d7-6d8c-407f-a28a-3d6f70f74649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8329702-fdd8-48dd-8a0e-c8c38963bc5c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28abe904-bfe1-44a9-8a72-01d33310e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d775776a-26f1-4fb7-bbae-26766d5f1902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89920f58-d089-4787-b7a5-782f1a499ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cbfad2-0b01-4d87-80ee-144744120a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7282bee-1d17-4881-9379-d81c43bdf10f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5389674a-a812-4aca-b00c-7748f277bf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcaa097-76b8-4049-8fea-ea47522fa86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba10136-e899-47a4-b3d0-a834a0856adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd40a65-fedc-4d82-80a5-a3c85047ef20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f7cad4-659b-4a7f-aba4-495ced4170a4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082eac16-858b-48b3-9b90-c1fdce9dba5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f904b1c1-f8ca-4d03-a099-be71b08c22b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f82178-f7f3-4237-a83c-161853e961c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40188a0b-f79c-48d3-b88f-007e838a3957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831e7e18-8b34-40ed-8e08-0a56907dbb00",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12786559-cde3-4e91-8050-0af09a2c81ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2625f801-289c-4b27-9995-a6c253bb64b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86489b0f-7adb-48b1-a452-3c3307902654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0247e953-18cc-4a08-8e3d-d0ea247b549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f375758-eb0b-481b-8640-04fc97a4b27a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52234346-2286-44fb-9cea-7886722f27c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432a2f02-6298-41f0-befd-b849f834b37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d16a09-3d4c-497c-bbdb-8cde0fa58751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "396bd90f-98d8-4262-8956-425a88cda5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ca4774-533c-4803-aee4-4a5299048bc0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97004b38-cad6-444a-8e5c-cda62e18ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1824516-6c43-4d18-95cc-eb97fc919da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90e4e8c-2b38-4edd-94a2-a6a9bb37692b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "552333d7-764f-45b6-b81a-d9ee8c17e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a26d9b5-4142-4f1a-83fc-e69666493afe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c98329-7175-4d3c-8ce7-b7c25d64e965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2992f706-93c5-4e39-bc8e-d8b166653ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737bcac7-eb47-4389-885a-604098589a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f5afed-c749-43b2-aae4-646a1c1c670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da2bc3a-0f99-452e-ba74-dbbfa821eacb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217e3e7b-eb7e-420a-b498-32ebaeebf72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dae22f-4f08-4890-a940-3428776298e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a67f75-9af2-44e6-95bd-e5ed51fdbccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52527cd-0974-4615-abf5-c2fd4cc89625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bad9821-f4ad-4d48-bd86-54709df353c4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447a21ec-a0f1-492d-8231-0b34054adfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f6231e-04a0-431a-a93f-2b8fe3740ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a580e296-b82d-490f-bad0-40789467832b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8ae824-1e5a-40b5-bc2f-3f63dcec6f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c233b00-1e62-43e9-846e-b714d7e173c5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8898a29a-a08a-49ed-97e5-b1ab62750d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6bcead-3176-4cc3-890a-2bb452fa7f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d282c682-dd81-4b81-8bbd-67f5ade67bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f6a41d-020a-4ae4-ab68-27e2a70bc5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e88cd4-707f-4d01-93d9-f35fc439a103",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f0643-34f1-4175-bbc8-775bc7f21a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d595d3f-e262-4b9d-96e3-78f95b417eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e0bd70-23e6-4aec-b536-8289263c424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4c8aa0-a90b-4bb8-bc8b-b555309b629f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7b474a-490a-43e8-8fa6-363d70767636",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9807a4d-b28f-4038-b922-3b1ac156dac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5decc60a-a164-4bef-807d-23e1f79793da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5058d449-6ad9-4d01-957c-346f37e45c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0825ea-dabc-4ead-a4fe-8d480b9d0d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71d7114-166c-4246-983b-c20e389c54e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f378d4e2-ad25-4c86-b419-081c2a5db254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de7c1b2-cee8-4c13-8a2e-b9b6288a6520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a61a99-3749-4233-9c16-8540c540a864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "66e2603e-d347-4593-86e7-b506a6964cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adbea28-9a1c-45f2-8ba1-acd3abd9dd60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6853ff2-b9cd-4e08-afae-261e8ca9c3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40fb662-44d9-4ce5-a3aa-f12c1f300dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5029fbae-d502-4f43-ba83-c2150a54ddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e05713f8-9dba-406c-af47-63a569e30ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584c4df7-af30-4308-b1a3-8adf8e6c13a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a45fa6e-48d8-4792-bdf4-3b8744665bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe0cccb-6834-42fe-8331-ce8dd4ec82e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6981e843-3d94-476c-a5a9-e555594dd0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c40cf515-e116-4781-8787-ab0741e959eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1e572f-ebbf-4191-8d60-04f54a1c3561",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e5259b-701d-41f2-9bac-d076a5e91d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a4fa9f-aa60-432b-887c-24b8559629a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f0fb45-1a00-46c6-a49d-bfc17c088075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f063484-424a-4025-89d5-0d3d0a12d4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5293a18-c3bb-4f59-9052-f6e5836a9750",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaf5d30-8b8d-4147-9094-cb195232060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9ac113-3087-43ed-bb31-d4a0be0833fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f774a659-d53d-4c55-856f-d11d2f4f9d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cc2fce-8bd9-468a-a1d8-6fd487cde8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb29f0ef-518d-42d0-875d-882ce3ac6e06",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d56aad4-f28a-4c96-b86e-fb1640300096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bb87e6-1b34-45cb-8213-bbaf1bb36754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4f513b-f66f-481f-bf1b-bfc24c5b2ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ada25f-12f3-4b04-ad9c-88ee756482b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85304b-f1b1-49f5-9739-d21a916c1498",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f7f2e-d750-4c44-a70b-24e456c283fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fc72b7-c515-4a32-8695-c318b876a960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb959ed5-887d-44f0-8b3d-a1392d65575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d99ab38f-b889-4187-b09d-a32ca3a3cf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c20995-8a40-4601-852b-08ba8d60af14",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d09232-4d25-4213-839e-b85013e9a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597fa570-357d-405b-ba32-1ce3655be867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929519c1-3717-4337-9c34-5fa4c8c20317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5549c1e-6360-4c65-b435-400842754df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9430fa11-c21f-49e3-aa58-fa651ceaa697",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbee7247-0ed5-4af9-a004-0337aff049dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2c2cc6-589c-4f84-937d-d9f75e888cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fa1604-eda7-472d-8c4a-accba458001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1ab103-a05c-410e-b572-cb4ebb7bcff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f138c2d3-827c-4705-903c-bfd6ddfbefab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027c299a-e526-4808-b398-4546301726ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995ca6bd-eb48-49af-a8af-27c8bfdfa99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c70401-5219-40c2-bd79-412e8d3d9e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cd7c13-98bd-4514-8cad-7015dfd3e1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8aca5a-94fd-4f3a-af85-6cdd126b7a1b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e162c-cf39-4a6b-98bb-67c7318ba823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f089707f-a8a6-45ec-97a5-34ccbb70a314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab89d4b5-8ebc-45dc-aac0-a1336b0b548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e57e1d-7c8e-4a43-9fd5-8008bd9aa87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2da1c70-2d47-4650-8321-187410044239",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ea697a-213c-45db-9c92-9f9400b01ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524c701d-3f29-41f0-9401-62a7a671489b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b96c06-725d-4369-90c6-fce484ad7c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a34458-eae6-428b-9974-52133b3f2032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a966590-7565-4bbf-8771-689b1ff98ae2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0d28f0-3841-41f5-8379-f9528ef6fa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0df2d1-f3fb-4d10-a60f-fb92024ea1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643945ed-a750-4ae7-9371-de629dbf55b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e868f6-1e05-4b62-ba1c-c6116d96393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dc8f58-c2f7-434c-9eb2-659c6108fad1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5452b671-7514-4226-a182-0374497a045b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d75254-7fb6-41fd-8422-e328a9ee78dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70659968-f027-4751-8d58-15f184367a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fada6a22-0f9f-4868-be49-11c7e33ebdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e981ea-a6c0-40ca-a68c-5f642c3f0d00",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92eb96c-b9ce-4aaf-8c89-17ea0430179b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93524313-3a71-4720-a2e9-74b20dcc802a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccdc754-9904-44a8-a4a1-85c1cc1a8f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57101f5-96bd-434d-8842-f88b11ae3126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f36b50-927a-47ce-afa3-aa4768ba713b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad967e75-82f1-42d7-ae6e-44e05ca81fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317f58f0-81a6-44ca-b61a-68b0d0309851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2816c01-be11-4b41-8489-27399198e6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b81bc12-28a5-4c4e-8f3b-205e427898ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe4455f-2ece-4b4e-97a7-d441d4d39b70",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9e62b7-8a14-4ab4-bf95-4850d3a390a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ee430f-348e-4063-a4a8-39656210b338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f615d8-8476-43d9-8c35-e884ce9ff66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "510c0c76-7ca3-4fe3-9efb-deb9737d019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbca003-b768-4833-9227-44b9c6a7f745",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8cb2f9-44ac-4b6c-849e-e231532c8b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaec4b3c-1138-4e5c-a1bd-a6e221cd9b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64003af-ce3d-47dd-8113-95f76aa6de1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "443ca704-c5cd-4be4-8c64-e829f22e0539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a993c5c-4e92-4e57-9f04-b71574f793e0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d37a78f-65a7-4ff2-8d09-282a93956710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6001ce2-3da5-4e1d-bd6b-56190b8947d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654f6504-f8e2-4758-a3aa-d28582a19b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12dcfa1e-3fbe-4101-80c5-8c4b217c6267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc1d019-4985-466e-afff-1f1d4bc3b9bf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dce86b-2a0c-4a48-97b9-7ced4a7b596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc901a13-cbf9-4088-8630-9095e8c87f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a302e63e-9213-4553-aff5-c3ab0ca519c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d629148-ca0e-4d6f-a5a6-787afe0f6f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18218ff-50a2-4f3a-a621-0951fe68b526",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0b5a92-e9f9-482a-841a-0a8784a3debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e4f11d-c9c1-4932-a46a-d945a52a6a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20b476d-cff5-4453-a8e6-3f8c32fa3283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a48e59-d837-44fa-8849-07e6f17fec63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff3cb0b-7466-4489-a5ab-21c334526cd5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217e6adb-577b-44dd-bb80-1699178b8a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d941f2f3-add6-4aa9-b854-a0cc67a0b6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87b2fa6-b22b-4f35-85d4-95aa7ccf30b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e7e381-2a61-4559-a0f1-aa019d89f876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095d4c38-311f-4eef-ba22-f283d607b407",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982daf17-c007-4902-b4a9-0adcf4a6a2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e79df7-298a-47da-8761-2c8c48bdc5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243b78f5-d222-4f25-9d2b-e763740bfcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f4426c-d939-4504-b59b-6543ccc2d1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ea1e5e-0f4f-4725-ae5a-1e44b7d2cb90",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080215a9-2634-438c-b3b0-208e6c8bfa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1e7442-8acc-45e5-8c71-384b5d43100d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df2eb2c-0af8-4209-beeb-cd89ae2c48ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc15cd8-a6b6-4da3-8a2c-47fbc114e908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d97e715-d3be-49ed-8d17-7e2b183c44f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39104464-7994-4e57-80cf-ba72390be1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008da64d-aeb6-45a5-8487-9e4270f6861b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c44d69-b871-4abd-8f8b-49c14b044dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57050d5e-0db0-4f05-af6e-1bb11d4c1f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7666896-db6e-4846-a688-00488ebb7cbf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82e2608-7bfa-46aa-995e-69d2b10c0988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b18e16-e979-421b-9b28-af77f29ba989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4edc0ac-fffe-4eae-8f1c-cc096250a89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af7a691-17fc-41ec-a170-6b6e8c3275d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb38db0-07d4-48f3-b2a6-754279024625",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73020b3-9d33-4b79-b21d-af9288ae0563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e60fe4d-c50d-46ee-92b6-6d0bd6dc33d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161ae042-7c51-427a-bbc2-c98cf3a47260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66df70e-e5fc-4a36-84e4-730ed819c577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584a6e4f-9f23-4880-944a-ff82a58cf2e3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3141efac-02a9-4dee-bbc3-96d189cfe949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586dddca-a9e0-424d-af96-650948adbf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71e6859-2955-4a87-a569-954d232aea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcf83da-6715-40e2-86d7-74e9998f9e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3bcf0b-d2ae-417a-b1a2-202f4dc053e1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44222c53-0929-4844-82c9-601e95d642f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e03dab-878b-4a58-a7ff-e8b0f1f4b5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a114625-57fb-4452-8f9a-c66099ab58f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2782d7b8-2ea6-4236-af9d-0a5b3af477f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3535e312-1337-4c6e-a991-7d163ea498c5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d530ebbf-3199-496c-91ae-a842d778fa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aa06db-fdaf-4969-aa20-5939d51bfec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6dcdbb-18b3-499a-9f30-26fbc669ec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01f75ea4-2944-4c8f-9dfb-38d3412e79e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949d7481-e309-4283-8a23-b1cd22ebe843",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb58d1d2-75fa-48cf-bef3-7c7070ef7a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00017a02-3ec5-43cd-bc45-02eed0769f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a713ecc-77da-47e8-8dad-36701ced991b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f544ec6c-0ff1-4aca-83ed-9e08c08c044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd797d6a-ede7-412c-8792-3b614ede65ca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3d95b7-7c20-4fff-a526-5883f2d4b05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c171bdc-e1b4-4d23-9ac3-2bbac4fea01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2c688c-0f6e-4e4e-b24e-1058f7d00d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0a84f4-7945-4723-bc00-4cb5abbe855c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe5b3d3-a495-465a-8337-47ec9dbeade6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43aacf5c-03e5-4e92-852d-1fad74269067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626beab7-59cf-4971-8ae4-98fd3da41ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cada7411-1951-4ad5-bbcb-e4b8ad584ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fda241f-7e15-4c16-86b7-9d350b46126a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3e0da3-52dc-4400-aeaa-bd121977f0fd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc98cc2-4d24-49dc-9965-548e9be2f02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ad4e73-9abf-4d7a-a954-a899fb83a7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7a755d-f21d-4203-845b-437d55d5b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c121d7d-3b74-4be9-9a2f-8d41511e85d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4a139c-388a-4caf-9d4e-64d5667f22b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c8f73e-a6fa-44ce-b3db-a34065e16395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c331fd-a5d0-466c-9712-2cef4b6a4d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74131424-9873-4c5e-9bba-f84611231715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8ebbf2-bcf4-4335-8416-11cd8460c14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5b7012-dfdc-4a95-9cb0-be07dd066ad5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352f639a-d3d9-4646-a78e-14d27f6d6c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "988cb85c-1f8d-44f0-8e52-ec84701798cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ae3d7-0dfd-4fa2-b2fd-4d4118922393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7668ef-6d9d-428d-8b74-da67cf9b8fec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7295d5f4-c572-4c78-8b9e-cdcc8ca412f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f35ef7f1-885e-440c-96ff-e95a3739e3a3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7b87b6-15c9-4884-82d6-77a18b23e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01063cf9-9364-4137-b5a4-f47f8e67cb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76357ca4-cf54-48e1-83c0-ff00c0af2d0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94caeb67-7a6d-4329-92bb-8b2543613cef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5701cb35-4e2e-4912-8c7b-fc3f7db2c2cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e03d87-5c15-42fd-af9c-09b18a71e711"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d202c0f0-abd3-4db8-a7dd-cfb393d6f118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c0de7a3-10b1-4915-8d2c-f50fa5be1b1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7a03f9d-b3cb-4514-a860-d6ae9eb66826",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "013a452c-079f-4392-9305-0eb2ab1086d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f962290-9be2-4b77-a0c1-01bde16e3379",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b33df73b-7893-4fae-9e9f-b4adbf4d77d4"
                }
              }
            ]
          },
          {
            "id": "25bc2e0a-5851-4eee-a172-278a03c69223",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6df3712d-638f-48ee-9e41-6a9284012602",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "480646c2-cab4-4e18-83ff-796624e7a5ef",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da321cc5-a9a0-4a22-bfc4-8e8aa44856fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c6a59b08-b73a-402e-8ad1-2714e28a4ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8013ea-aaeb-43b5-89f4-4ee32951b09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd21d1-f16a-460a-af8a-75ab42a34436"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b0fdc19-6933-428a-9546-c17dfa408097",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84396c6a-43a0-4f3a-8fa1-817683d9e04b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32c338af-df8e-49f7-9265-dfab9ea274ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f61642d0-ab5d-4ac1-8361-ec22a8a55b28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9475351-8e2f-481f-803a-1c7af517c295"
                    }
                  }
                ]
              },
              {
                "id": "782e8253-5f00-4726-9b94-4bebf0085bdb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84098948-6e8d-44ca-ab8e-dc447ef63a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7cda3eb-b0e9-4ac9-9dd1-c65e06c0b4ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d762b0b-bc5a-4cd1-ab9c-9457e6e01be5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a4be97d-81d3-4dd7-a1ab-e4a5673befee"
                    }
                  }
                ]
              },
              {
                "id": "9ed520c1-35c2-41c2-af98-abd396956070",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba18e31a-b51d-4c0d-b8ec-f36843ea016f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "726482a4-c93d-42a0-ac15-b030f7f606e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec5894ed-2944-4578-bd27-333c7e1a8691",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b9b6173-77c0-4bd7-bd25-7e37676224d2"
                    }
                  }
                ]
              },
              {
                "id": "ad6689fd-807b-4a56-a63e-4d0d76c3fc79",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fa5fdbb-aa86-4a07-bbc9-a90eb1a0778d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f69c471-a231-4ec2-99c0-78df64ff7e4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a5bfa38-da53-4158-b5f1-ff12d5049fbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "39d5e71a-d74d-4e78-bfb3-d4d0fb5ff866"
                    }
                  }
                ]
              },
              {
                "id": "417285ef-54f9-4678-972d-57725f2c5a97",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaed9946-6134-4fe9-a088-86232612e836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f89ff2a-2772-41c9-a3dd-6e0bde3a4fd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b6589f9-7493-495e-9f56-faf36fa4d89d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3b40b0f5-9129-4d70-82f6-26101f046b0e"
                    }
                  }
                ]
              },
              {
                "id": "eaea18bd-3c83-4e89-bcb2-d37540fb67e3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77916856-cd11-43a7-b3e7-ec3748ad4974",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0695ad6f-5477-4e71-b1a5-04618bddf316"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93ea9082-ebc9-418e-982d-cf2b983b56bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "faf294b3-0891-467f-88d8-acc66c3941a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "940a9187-96e3-44c6-9a86-6ba34461289a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "882c95f2-2e18-4536-bf33-3bf990f751ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0554b9ef-24b5-4409-a069-084de12a3299",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "885c6909-504b-4f06-90d1-08a937e318f1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be3fe71b-5cc5-49af-bc64-2e6a7daa7780",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1090109f-cba2-416a-b268-b96c513a4d12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcc8e9c6-96fc-471d-a56a-e28cdcdc463e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8289815a-e268-4ddf-a955-42312289a287"
            }
          }
        ]
      },
      {
        "id": "9801451a-d3d6-43ac-8e9b-188274152fbb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "21e2eb91-1e5f-486b-b7ce-2b87032ac3d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6f09b5d-c837-43b5-a93c-50597552c7b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3609104-35c9-4387-9e2a-1347a6cdb6ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a27cd4e-0000-4307-8996-0b67bddca30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91039f3-4232-44ee-a487-f1ae3c9bca0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0264b-2fd1-4bdc-9bee-84f8cc09ba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda64dd9-53b9-4eda-9591-6ae4f709602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a71d9d-8976-4c33-a8b8-d04d18739b96",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98141fa5-1f70-4c2c-8fd4-b5f2b4177915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd251d2-06ee-4490-a6f7-b20364480657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca36c1e-bee2-40f9-93a7-4839d4e58814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e2af30-5020-4d42-b5da-1da2b47a0e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded40276-366d-48e2-a2bf-4e65f078a248",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00db2c3c-0494-4e68-8d25-20d57b35788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a826fbdf-2f64-4537-acf9-f71c60323ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dc3156-89a7-4281-84ea-51980c12793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "860831e2-1011-4382-bbd4-77863c896400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f14cd0-e530-4fcf-a5a1-ab3b8283cba8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7e8c2d-da8a-4012-8ae6-1450edf88f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d914da-3165-41e6-a119-37b52971b643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd5de09-596a-4884-805e-18e8de4eb8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11a7c24-b2d4-474b-be54-a1ede9b4c0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2def9c68-9c5e-4933-9bb4-4a2939caa0f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410d4663-02c8-4404-b842-72bcce905c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0864b71d-b1ea-4f70-babf-8de37d65455b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba724ae1-3d54-42e5-b14c-9d51aec2893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "962385f7-56da-49f5-a4e2-f787a4e7ac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f013d-d59a-4cca-9e89-957902ada869",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b97e0e-f3d6-4788-bb90-f7c2ec4ada06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0920cf-ab05-4e8a-af05-af88f884a65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab3e9b5-d57a-4236-ba0b-a09c5d890f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e8c8ef-8b70-4de8-84c6-590094649dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdf4bee-14a2-4dcf-a11e-4b426f426715",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497a227e-fec8-400b-9f96-d5cf89b17cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84daa7e-6133-41dc-8314-9b02dfddaccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fefd9b-7012-490e-9e2f-97fcc28b6da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c7b24a-e6a1-4f34-bb5b-67653ddcec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7b613e-dc4d-4e75-96d9-8258e352076f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c2da68-df83-47fb-82b6-1edf92c850ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f23bcc9-c24b-4bcc-a25d-380ce16bbd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e0a2dc-b100-4db3-9d9c-d94c614cab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2977a970-8bc1-402f-a35e-3e89f8f0d8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f413fd6-8657-496e-b76d-9c2e6cb02767",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b12aa0-4381-4370-b2fb-8c76da05875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06912b4c-8845-4e55-9f5c-d75e5d8dc16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a625fc-17be-4db9-b1c2-5f5be76d0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8eec8f-8e6d-4df8-b4f4-a8ab9e96422e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7b1d08-d6c7-4d9f-81ce-4e08bb4978ee",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df034b29-cf8e-4c28-beb3-4cb81145bb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab4f876-f2bc-4bf4-8048-75babb2e8dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9a60df-f764-42ae-aeba-e962c3fd8782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f8996d-014b-4af1-a43e-2fd7b57ee6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfa2ef7-9383-4927-ad2d-0369b843faee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b78231-4920-48aa-a4c5-710ae88982ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104ff739-8c36-444d-8701-1706e462590b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18650f5e-705b-413c-9a6e-6f4aa21a383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91d7454b-4483-46ae-80c2-c2de4b0e15a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af44d0a6-a77b-43be-bd72-7b3d6a91b123",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9864363-10ce-4ea3-afd0-7e15fcc639ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6f8511-c1e0-4287-9233-de75ed328147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff3dcb6-b46d-40b3-907d-6ad023d94c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20dba7c8-626b-4242-8ce2-310bb81ad05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7336041-f0e7-45a4-8e47-d587483a7962",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fb3691-fbce-4ed2-9a57-81649d8a4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe65f35e-434a-470b-ae6a-481735d198d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33047bd1-9bb1-4477-9351-c8f019b18052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf6839c-4b3b-4356-aacd-02e6902ff8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdce2c2d-7db6-4747-897d-e1c52d3e8955",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0212760-b3f6-4e9e-b40b-a2e17f9f6fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4c6427-08e0-4cb5-95d5-3ac6c5aa354a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752997c1-0c2c-450c-9451-1a4a2666dda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "803207f3-5c76-4953-8bdf-d581e9b7df39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1f6e38-f3f6-4226-8d68-b76381fe5c24",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d295111a-c570-47f5-b954-6eb5c2f75ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55046fa7-6e14-4d63-8107-4df239195ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1847df3f-717e-48f3-b414-236834ff4807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcc43c6-26d0-4add-9905-01cca28ae83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c74310-ae6a-4c15-8911-0154b8ad1e8f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6954a5d5-526a-45e9-b356-dbb00f6a853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57624d5b-ef16-4030-94b1-f6b78e4148f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d075bf2c-44c7-4588-b7f6-b84301eb5756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2559de-4dda-46fb-8df3-19655a83cbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeadc78d-146d-49ec-8d2e-deae1be2806c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6e6e4f-ea7b-486d-91b3-623617e0cebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2315a87c-df4a-420e-b5a9-cf3053cadaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b05005-e1b1-42b4-9ebd-934a89848112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "60db577e-ac8c-409b-84a7-158284544ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c429a4f3-cc84-4b53-8327-97345cecb9f7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3fa266-1e24-49fa-a386-0e3ac0f34627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5394b8db-3a65-4651-9f2c-ab61f040ac47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1d4a7a-fa22-4daa-ba58-b48be73ac715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de577b33-0999-42bb-b3bf-badd73098d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83546307-f098-4419-961b-a1cb1f10a2d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d4439b-2825-49ff-835f-54f70b605943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3ff0f1-2e97-423c-888e-e07935bd01ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d212cfcf-7bb6-413b-bdbb-69f1e1b1f89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b562027-73dd-45ba-a227-7fe43b75e428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f7890-e432-4f48-900b-56197916a6e3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908376fd-228d-4af6-9f31-6a4b4f4ecce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5f7f14-7788-41f6-923f-4a2dffaf1aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d427b8-d148-454f-b441-3c6220f2603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b8facd-58d2-43ec-963a-3d211e0a1f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e6eff9-cae3-422d-a92a-1fb5fab3aa57",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f172bc60-bea0-42ba-81d4-f35fc481c776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e100c8e3-d819-4037-8a19-5f37efb126bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e2f70a-79b8-421c-ad88-404c0013c90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fc2b8e-3147-4ce7-88ae-a9ac419b9660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea98b6c-6c45-46f8-8877-6c10db254025",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecb097e-e271-4ee8-8198-769b01a06db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e64c13-d890-4a50-bec8-71ffd4781244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858b149c-719a-47e6-9970-68a30cbe4594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8357ad38-5475-4b5a-81dd-d2e9c9be7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3a035d-16fb-41f0-94f5-e92349f10852",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227137d7-b6ae-46b4-96a4-88cb0e43c4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a927970-5b60-4aea-bc65-b38726453a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc6cf6b-b226-4140-876c-988fc284220b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89bd043-4124-441e-a5b2-8a50b3fa7b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac58a0ad-3947-416f-94e1-c72e7e03214b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c69919-a8c9-41cf-a645-c8582be10533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8f8e99-4999-4664-84ca-ec314c6cae3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d9d2c7-7c56-4b74-ae07-1af71762f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2821c64b-609b-499c-ab2b-64496c1705e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7191d430-d8ef-44fa-b619-5570899c3b38",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035a2cc1-66ce-4ded-b7b7-2bcd6b1cccf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef456d57-c3b4-4f86-b5c0-ab29de6d3f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6665ab-8daa-4793-bc5b-4881767048b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4e5237-5eb6-42a7-9c6b-577b569c5299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee249278-8751-438f-91aa-6f23b64e1a1d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d46ae88-24a2-453f-a5b7-051bff152224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81683e20-5b85-408b-b37b-eb5bfdaa1111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65d7442-e22c-418a-9fed-893613c6bc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3d24c5-3d38-4bc9-9ea5-e7e58434bb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618d5ae3-12c8-4af2-9225-512cf4bcfbd2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b64b3b-87d7-46e5-b8f0-2c2c4bf67cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38806757-8afe-4528-8d34-c1343de1146f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caee417-81d7-456f-9463-0514b147412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28a17da-777f-4f04-a3b6-ac5c19099faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb32401-09e3-40d5-b949-96befb192e3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a953985-2f79-42eb-9d23-400ecd18216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61548ae6-32b0-4641-beb4-f0d2e432629d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5211e5d-6041-493f-8414-95086d45a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfe8dac-8d44-4c1e-9acb-c0789fda08e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1719a14-5bac-4b67-958e-fe98323f0db5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f78168-b63e-42ab-af3a-2c6174994375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba5a10a-854a-4bde-924d-641026fdbffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61270020-0abc-426a-8445-29f66e26ee8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5f7d93-6023-412d-9aa5-685516fc988c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b135fc29-ad60-4ed0-8668-140f14acddd2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe7dba9-ab3e-4131-a5bb-4d86e29da4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eebf6c-e0d1-45bc-b138-0e4262d40d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28da810d-cb1c-4dfd-9133-a68b370aa7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8c9743-36e5-41d2-be83-08b23499c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d2c5c8-ad9f-4408-be04-ac44507f56a0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79879f7-cc81-44c9-b665-635468ce6526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0ac1b4-e6c0-4442-82dc-de1aa7a04fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e02354-30f8-42da-86f4-4bdf1ae0ca78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95182113-e18a-43ca-aa3b-4f6b3a02771f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef804af8-eb49-43cf-bb74-8b26f24b8f29",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9642710c-7c17-4e1f-8970-db8a21f2f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b43efe-b100-45a7-b2a0-461d0bc9eb58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ab28d2-1201-4f0a-9be9-82b9d502ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88746db8-9b68-4424-94f5-710911673c17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77bd5348-0620-4b77-9012-601c6fd2b254",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a2f7aad-c9fc-43dc-a112-d35eb812e10a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e0f022-26be-4923-9259-ca9395a6c3c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "330476a2-f7b2-442f-9dc3-887279ef7cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37398da-de8a-4235-9a1f-091a751dd4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d62a022a-e9ac-4674-92e6-07abce94d8a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a14102e3-5c13-4961-b01b-57062e3dcdd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74e84f7d-219b-4194-b252-33ab04008739"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdd0ae5a-fe74-4530-b29f-7ddca68224d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "765f4efc-ffcc-41ef-882c-2ab19b5c30a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be1ef92f-1326-4d7c-a77f-35cd6a8a21cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3775410f-545b-4be0-b6f3-cb0eb8ec434f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0c758fd-d650-4002-916a-18664ef2affe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef93fc42-7530-458c-b13a-6ce4ff2264dd"
            }
          }
        ]
      },
      {
        "id": "316df43a-e5c3-4016-a040-784150061642",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6e1316d5-6eb8-4927-af01-5aba7722c788",
            "name": "Negative Testing",
            "item": [
              {
                "id": "487912e0-46d5-4016-b30b-9cb7c879a8a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dadef76d-43eb-45b8-9524-eda615799dd6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f44814e-3b17-48ef-9e0e-2a7fe0b7415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202ed154-6b48-4d42-90db-1e79872a5f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcde8e3-7330-43d0-9197-e3efdf1f5046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f72c64-a599-4c16-a526-f5c1c40011eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6ad754-e07f-4f72-9407-d754ee3e0d7e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd84ebb5-2036-497b-aa11-75b2dbb6b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a01aa0c-74c2-4606-9333-39f486900575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceac4e31-cba2-4700-b864-f058ff71a51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a003f32-24bc-4b00-925a-44af88a8ff6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a4df66-5086-4069-8f15-b5ca6bf7bb6b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd82a7aa-aaad-4787-9de3-c263d934b167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff043908-78d7-4804-a17e-3e9e5709d9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050fae7e-0951-4a94-abe4-978f613be1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b819a92-930a-4ef8-964b-ab715deef76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01c229b-b78b-42fd-9145-135a0fc5e392",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a2e7ad-2214-45bd-9430-57e07d06357a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb5e29f-e1a1-4eaa-96c9-14f0929b5146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4400e662-d1a6-4477-a15f-764c30ed0d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e8ae29-ce59-420e-aad0-f60b4ef95551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3aa7667-144e-4fbf-b94a-de9c135a77e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48587f1d-5a90-4317-adc3-a83a951d90b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf29701-f6f5-4be1-a214-22999dbd0cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e658de7-f5e2-4389-816a-7421f56e017d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be3fb0f-aedc-4fad-9c57-a869a1b84474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ec8fd8-921d-42b4-8d7a-85a480b78224",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97e5d78-8e97-4ddd-9ccc-4f0af963a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e365c8d3-54d0-4dfa-bb2b-03c981425c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4f8e3d-77b0-4126-8c34-42de80e315c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfacbb71-ce56-434b-b466-8d86513f6085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6313a39c-1696-418b-8831-4e531226b080",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600d3eb1-47e2-48dd-accc-8615f040282a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daa7754-39e6-4c34-828f-87b4455ed321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384a1b30-0e82-44ee-979b-848581f69f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d013fd5-8f7d-4a26-95b5-d0a6b1d3d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae60d12e-72ab-499d-a158-4c01230c17a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70789c70-c1cc-4efb-9ddd-86e5c6183e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77afe9cc-316b-43f2-8cca-e51ec268f5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a859ae07-72b4-449d-b7f2-c1283c99e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbcc9d1-42d0-4b2a-aaa0-8824eaecd50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7609ce5-ec75-45ed-a942-b63b89b93389",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8400b554-025b-4820-81c4-92d6b7e43802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a81d65-f464-4c7a-9e25-4593469e7bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4c4cf9-b596-4fa0-bfc4-b302ba7091b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8676520e-12c1-4e20-b745-9b665b19550a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df43fe1e-fb4b-42fa-a79f-9d609f97be83",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f090db-dc67-4203-bcfb-25bedc3bbad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f88931-c75e-4a1d-81cb-e9094d961645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8509c66-d37e-4673-b900-f02686044cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5da733a-2b47-419a-a159-d46ecc820d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344e57b4-2804-4e53-90b8-a861a843cb81",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c89885e-16b0-4a95-aafe-8e9f1c6b2207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93353d9-8a93-438e-b659-590df7a1bbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ceed2e-e386-40de-8688-1a84c2d081e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "35231444-c6bd-456f-83a5-aba92ef8a98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d858f286-921f-4d94-978d-ca142501b2ca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a4b57b-72b9-4f71-a058-6a439eef061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc25aba-5565-4411-a24b-6cdcb90a911f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded35200-51bc-404f-8ded-777bdbde1eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23d1adbc-9545-46f3-a2c4-913a80c3c27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9463f3f8-862a-4920-81a2-e69d5e7c9af1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeb72f2-f044-471e-9a40-4033797b708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f61cc08-0fb7-43ee-8c3c-976c27698a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996e9891-69d2-460c-8d6b-038cb4279abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61140c6a-3352-4b55-846d-dc768aad55d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d35a5b5-f9f4-455f-85e7-e33ad926686e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185e791c-c5fe-4085-8208-fcca949e1ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023bb002-ff0a-4833-85ae-64a44acdc428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724c011e-0e07-4fa6-93f8-51475cc716c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49bdcdc-af6a-45b1-b232-202857692a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02758298-8a10-4589-9ead-f3a28d29df32",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509bc995-36f1-42cb-abe8-1d8c242c5714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5e5bfb-e12f-4fa6-a3c5-814e4fa6a158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9f788d-6f35-449e-814a-c72b8bd9133e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dee514-b66f-4a76-8fce-95e9d06e1d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68003bea-cfac-40ae-b1c9-2dffd6072237",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74f5be9-7b06-4431-96c6-d0d13525d6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d94f95-f641-410a-8520-dd46c8be08a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcef981-24ff-48c8-a55a-26c6df2bdb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dec1b3-e526-4f6b-996f-4b552b0cf4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaae18f-2054-498b-90ce-eb17e0d8df1c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d3e3d4-988d-4a07-8ffe-79999e291d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dca68e7-fe72-4eef-a895-5ecd5000e47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d368bc9-c4b3-4aa8-a5ae-b592f64bd567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0eda17-17c2-426a-8c2e-8a72014bd058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd51744-da4a-43bc-a6a6-6e4115e56718",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2118f7f-5d74-4d45-8de1-9ef6e4b13d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a395c82-2770-4997-ad05-8b72e4a3b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27eeff2-e85b-4160-bc0d-c03cc0f7b442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50eb52a-2866-42d3-a960-6efccb5701a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27d1e65-cd00-474a-af2e-55fe21872dae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653c1603-995e-4b8a-aa08-2303de6a9cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ab5577-7052-4184-9cce-b61750b2f20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2c4d6b-c3da-489b-9153-d05d34b43801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2320103-4170-47d8-920f-5182f9a246b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638753db-c55d-4438-aced-7b15f4b3d0a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0c066f-db93-4a8f-8636-eea58a35bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f546160-3fc7-48ec-8050-5c3b9a074576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e36f88-7b16-444f-875e-43b8e85d9f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6598be-271b-4925-b60f-22f61a880490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02721348-6612-40f9-958c-c5e384789903",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b486acd-49b1-4244-8d17-6155b651a782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e99ed4-6290-4758-93d9-bd03e2078560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9737428-7058-4b71-938d-b73683df8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9610c4-7eaa-4bd4-b897-8b0b251239ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be7f243-9952-4232-93d6-de778f7530c5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76454169-ed8e-4e1c-a96f-412ffc9407c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0659b969-a0ce-483c-9e89-328a1653d92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcc4b54-f836-4896-b908-c4e4334572d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ec2328-a7da-4772-a105-81f05cf46b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b79a2c-12c0-48fd-bacc-da09799ca58c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9174467-97db-4483-8e02-22f15d24617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dbf32b-ff2e-4db9-94e0-33de136e76e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44f4a70-1eaf-4e7a-bf8f-3cc0092356ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c173e3c-88e8-4f16-95cb-53ec3c82788b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa83815-cf7c-41dd-88bd-dc30685ed752",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba28b5b-4da5-4321-9a42-d81639821c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c15a94-c210-44bf-b4ca-3b5fd1020551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbbf7e7-b148-4339-b2c9-4b2ffaf58017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3edce3-8500-46cd-9c67-c2f0c93078a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc8f391-1c84-4ed0-8449-bc6011692017",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5cbbed-f0ef-44c0-8781-430afa60cb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c46caee-2042-4be3-8b5f-fc12240ec812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eef8714-df0e-49b8-9bfe-f09f391b76bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24fadff3-91dc-47e1-9617-905a6ae20441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3c68db-d4d0-4ab9-9dc2-6ba58b773383",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e63b3c-2c97-47f3-a1e6-d6c6866a7ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71747c2c-ae72-40ed-853d-3544d3b332f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d2488a-fe8e-42d7-8934-a0260033a211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ae952e-3dac-43cb-b67f-35ce3a228f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecf52f7-4d4b-478e-85e6-2f197267ecb8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ee9582-7c52-416b-b252-1e02a802de01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d12aef-eb8d-4e0f-9eab-6f2310d573fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c1bff1-59c5-4ded-8323-5663f1ecd286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71eef52c-4e0a-459e-bb81-f008e08e8053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cef626-5029-4572-86d5-e6b6e93e840a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f14527-1a84-4a8c-8097-c54bd8ee6bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae933962-ff22-49f0-a0fa-e4db5d9c401f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede9cc03-166f-4ff0-8492-f34df329c2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5373cf0-f4ea-4e39-80ab-05026a673ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca68946-8488-4211-af92-9ba8e59c80c8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c61e16-9679-45e7-9b4d-b86fa4a85cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93c9c18-9c15-47eb-a663-a3e4e9877aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2df488-ec92-4fd9-8f51-871ce7f779ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec7fc30-837b-4c94-ac3b-095c5624de5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5938e5e0-0007-46ca-93de-f1363b694a7b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6ff0f8-2f30-4fed-9cbd-bc5d4451544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b752339-989c-4323-b39b-c4414225da44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8989be1d-8eab-4a69-8669-10666a737b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b8a620-db6a-49d0-9572-0956df1b9fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9c69c8-bfb2-4967-928f-390af523a64b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bddc58-68cd-40e1-8d96-355014c82012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04784d6-b310-44a8-af03-d9a161f12405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f18c27a-b717-47a3-a4e8-0a685dfec517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c788782-dca5-47be-bfb2-4bf168b75d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caed8fe4-404b-47c7-8af2-5a319b0fd947",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df66caae-ceb7-4fa4-bd9f-6fb6a9aaf012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e953ccd-30df-4f58-9448-348a8d906057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939b619b-e329-41ba-b03a-95bdff7a27be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4e2044-2bc4-4f92-acf3-b374eea9d98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8186fe-7430-4aba-9ee3-d02cf8aa292a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2a3285-dc30-4896-a8a5-879396dcbe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d6b875-8a4c-447e-a2e4-dec5a4154990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149eab5-5cd5-4b85-9a69-1b108c24124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b7316e-747e-4257-a716-54d4701f6419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71abdc32-9529-4d35-8de5-68113c831ea2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d1a5c0-2a75-43a5-a4f7-293ee8b0b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e789b7-ca1e-4242-b640-62dbed440a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af21a71-4aba-4158-bf0f-adc8230a79a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf9b0ba-863b-4fa5-94ec-d4b746b4b9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e505e3e3-6d82-4910-b0d0-a228ade6be02",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdae47d-79af-427a-bce4-01ebdeed64dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240f0689-09dc-4a3b-a587-06aa675575d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a228c62c-6aef-4344-842f-4bf7ac142b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b9524c-f34a-4193-911f-fcd3df1a48ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7aaefd-63e8-454d-9868-8946dd475c42",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8868ff7b-d685-4fcf-9c58-7184ec45acf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607e072c-7ba2-405b-8491-93b25a6a4b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215ca50b-5c0e-4d14-9f4a-350dcde41214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db481cb-ece5-405b-88f4-18426dbc2894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495e5edc-e009-40ee-8510-33e1bc23baa6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a7adb6-6383-4228-ac72-df1792c78be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eb28ee-6975-45a3-9f89-91e0d7eafd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f7e764-93d4-4b38-889d-b21fe55cf762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eafb2735-da42-468e-a15a-30a99e5ee9ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a06b67e-b03f-4277-9694-031df5bf70eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4723ccea-6f8e-4782-89f6-d8011e53feaa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761c562f-04b4-4871-9620-c5bfe68475e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8895cf-4ffa-4da1-976a-7b1745efdfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89164a8b-c14e-42bf-adfc-79f3695c51a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fe717b1-4916-4a9b-82d4-ef70b6105a3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54de04eb-b859-41bc-8032-aa403fe755d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebdd41bb-64ac-4d2e-b489-50dc0f351b51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62b89982-d960-43a0-a15a-d5d15f72aa9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "418bb4ff-6036-4b14-a29e-2e9d1a36fcec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "065f8612-c247-41c5-8ab6-38e0008a3f04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4285e16e-ef00-46fd-9bf6-d997204e575e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c66ef164-94dc-4406-b4e3-2136c591c502",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5de8814d-79b5-49f7-9289-72fae3cbba88"
            }
          }
        ]
      },
      {
        "id": "13cc5045-613d-48ba-aaff-d47dadfc4fb4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9d167a97-a8d1-4512-a43d-f9d249dde614",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9fddc1e-53c7-423e-a1a5-5a8fb8369ea0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0974546d-c7a4-4b9a-a416-c2adfbfe9906",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b093c479-8d3a-4bfe-ac14-251846d07b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b115feeb-8b96-4ff3-aed5-53603f0505bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c725c-34d0-418f-8496-386335d4df62",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97d1bdc-16f9-4acb-a601-0e3c0a1dcaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b3d33b-3fb4-47c7-82b0-8b16dfc277ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2306cee9-93ca-4ff4-a657-17f65c2025c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520eb661-7b61-4108-81f6-4b5ca6dcdf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6f28a6-be3f-40e8-bd26-0abf83a9a125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64447c5e-ba29-4a3c-8fc2-156e52fa95dd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcc8824-8801-4cd2-ac0c-e905c2db2348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528fec6d-43ff-4d66-9830-a5c72cc08fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af0b0bf-82af-4678-88ad-99b635c41b96",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb0b67f-6347-4503-b6c7-11001a0478f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3575976f-9aab-4fb8-b0fa-52bc04eae396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d21b426-272e-4207-9957-87b2ce12ac7b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d21940d-1b69-472f-b6bb-9d629b07da47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767f0626-c4c2-43fa-b81d-2557682684d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ce1f2c-86ad-4462-9283-6d60277bd82f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d41404-8cb0-4d24-9bca-7981430d76d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b32e06f-d45a-40ba-9251-f25acab87a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c4006c-3597-4794-8af5-5562806745d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d5a146-855a-46ce-971e-698e169bfd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b13dc8c-e915-468d-9efe-7c9955a9975f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0964cc84-4acb-45fd-a336-22d52de0b369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a351e001-5076-4ba5-afe8-114d48c91ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b8c4c8-fdc1-430b-a012-a143948306d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75889c8c-78a9-46ca-a7af-5e061b73d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa3cff6-73f0-4af2-a5a6-adc64c75b6c3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648ba8c9-1bad-4d93-941b-36cd7928d778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5dc621a-2baf-4601-b1b5-9cabea4eee23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f914010d-b16f-48cc-bce2-1244e933f9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b913e9c4-40db-4fd0-bacc-97b3fa975314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ab5f13-b8b4-4834-a587-6cf645f51934",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f889c0e5-9e85-45a8-ba21-f7daba723a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4866a6-8a9b-4f66-b98b-768e1ba009ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a478675-bba6-40fa-bbd9-bf130e719a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6de28a-617c-4ad8-99f8-41b0b3545db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd857ff-f9a2-4481-8361-1d6720494b3b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e856c111-bb01-496e-a857-dd4d6d527470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f635d8c-5f96-45f1-b9ae-808caa02c963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666c55df-8d71-413a-9147-272f8601a61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755a201f-03f5-4f62-80d2-0230e68e2d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9ab9c8-ba72-422e-8655-cb1e262d1a6d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9037a0-4b57-48dc-a652-0a7901a5a11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25af6b31-6eab-4a71-817b-c4dad5fec092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bd764b-3a6c-4e88-88a9-bb90d801e6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc2d594-9940-48fe-a6a9-32845f89e931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89344027-1067-4a8b-adbc-144a07ac1d37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443d7893-9d69-4589-8f37-75ce145eb9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec9907a-c45b-4a17-bfef-dba7dd2d05f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98f4347-79d3-472f-8ead-c87429ba1ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b011361-3a7f-479b-8f6e-0284c10ceebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1151487-8f5e-412d-af91-fd6c46f0c8a9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1a2194-4c52-4f48-a9e4-0569c100204d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d19e2c7-548e-4c80-a183-6c62a1ee0e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a581fe54-cdbb-4b6e-a47e-ca932530458d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40eaa74-510c-4e04-8e5a-620bf4fb343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff54b50d-6d1c-4ea6-84a6-8f4e3de34f59",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd0b199-fded-46bc-b100-08f5a4553365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5702970-9a09-4fbd-9c24-a1da2735ccbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c084cb-abd2-4475-ba70-f26f6d05c461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72752f82-7cc1-49d4-a053-e1f32f6bda43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1894ee9d-b2ff-4167-b026-046255b6c306",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8a940c-37aa-4d8b-9743-60ccd6ee2060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6614ebba-11d0-435a-8bee-54091de93488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1464f2f5-4615-4dd5-8c26-c9e5080b4040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced9cfdd-7ff6-46cc-b16d-69d9123235e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c4ab78-c469-4178-8efe-88309a68e4df",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46201ab4-6fc5-402d-952c-2e957d206a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80aa439e-b0cb-4b7f-9690-aba1893103b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb08c6ae-ccc7-4cad-b604-b0129cd2fc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d5f838-d338-458a-803f-c8660610fc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8cf785-9000-4e2d-8079-c47fd60f0993",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82775ab2-a335-4f0b-9da7-bd13621023d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11150ad2-3ef0-4fe9-a53a-8ce3b058453e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b3cbaa-c784-48f8-9d0e-f4b773a641ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92fefee-c3d8-4b3d-a839-fbc7f585136a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b317a7-9214-4980-9739-a5698dfeb4c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb18ce3-3897-4d4e-8124-0493c7d7333a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc40fe64-f0b5-4621-bd16-ca8fba007f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc12037f-e39a-4106-ad5f-5624e9e97fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2267079-0cdf-48e1-8bcc-3f99e2f9a253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f36f7d-1601-4cc4-b9da-2d78ca9facfd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006f47e4-47b1-4d39-9516-4db8a769b5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfecc6cd-9041-44ee-95e4-6fac61afbec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a820e5-dc9b-4eb0-9e09-a3ce8ca6e691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e1796e-79d5-4ce5-9f91-12e25286400e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eb1112-1ad7-489b-a53d-41326ac1aaea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fef535-6aef-42eb-a28a-d600eca530b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e56a9c-15ea-4908-9d29-aec17818ef00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c29b151-2177-4414-8f9b-16637b12c8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b55ba7-dfb2-4dd0-a9f9-a39a896fe99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4809cb56-a545-44a6-9d8d-955e1d00b539",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa1c87-f2bb-4ec8-bca8-4dff577bca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7098a4f9-93eb-48b3-9148-fd28a53b635f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531c3254-661f-4d44-8fa1-2e2df4e488ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b286be-bf53-4e84-88ac-83101408f836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb56b15e-dad0-4bb3-9d2c-3a9f00bfcc76",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3dab3c-5f7b-4974-b5d8-bbfec3d7484b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb48e17-2aca-4be3-8a92-b319034bd8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac60faa8-5773-48ca-8c46-e7a5c630dafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc4d1da-d4c4-4adb-980c-9ec5f66f75a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f521700f-16b8-4a18-a136-7d5d3e2dd2d6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a756a3e-940f-497f-ba66-3a3027e36ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1423c9c5-f504-4f92-9313-f8216a56db94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f0b071-e740-4165-9989-179d7c2bb36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f79f9d5-91b1-4d57-80dc-edd0d948426b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facd8870-6b97-4185-9e9e-2770a8d1713c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04838062-1281-49d2-9a59-4350738193f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2813db4-8c00-4b96-a9fb-34ac1d6801d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1850741f-53d8-4d9e-9c77-7cfa460a79fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7133ab3-c194-410b-8cfa-dd27fba9e6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd53363-162d-4ded-bd83-f5b5d84cde82",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab5b12f-6205-4812-91ca-8386d3241d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e66601-a57f-42cf-99b1-1973d689a45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79ca883-ef5d-44c6-b3af-7b399bd6e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19b176d-12f4-4f73-a1fa-998aa5ca523b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808c5ed4-077b-45d5-a656-a273a8ab9c41",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d561aff1-7080-4bf4-9d7a-fef828335308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b80940f-5d83-4ad4-ab44-93f5886f4b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89882c95-f274-41e3-bfce-a25d53158f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beda7f03-7e55-4e0f-b8c3-f04cdfe2bce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e49d3d-1951-475e-a3da-fc6c78fa57b2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46e74e7-925d-4286-b711-9e6694e2e79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b662ca50-3c9c-4dc7-b4b6-2e335237c0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff93e888-8a8b-43d3-b325-058815a5ea79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb242b46-1364-48f8-9c67-04042c969e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b5ceb2-551e-4ff3-accf-c1b7879cbbcf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3967d423-6a64-44c0-9fb4-a864c1314749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e9efd5-d5b1-449b-af6b-d7ddc007c68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383897da-d958-44cc-b32e-d13c53a3a144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30f0c5e-93a6-4f5b-8ac6-2f28c80a2fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c7ac29-a63d-48a8-939c-d8c70a44fa73",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57a35ee-0ae4-4525-ba5d-612f1ec60ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af15e18d-8ec1-4e1d-ab0e-cf3f52771473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5876f6ea-9521-47b6-b905-0152c6dc2ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f0893a-34a0-4ea5-9933-2ffee331d9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fee2fa1-53a2-45e8-9340-5ff095ab3eac",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621dcbff-e3f0-48a3-9a01-f02d1b63c938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "339c8e5f-3a14-4ae8-9e5a-27f6a25e3ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029c235c-29eb-40ef-a16e-31833a99d0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1804f1-7a90-4c3a-b8dc-64bbcf1f18cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7372c0-28da-492f-a7c5-3a7d166bf718",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79447fa-c2f1-4146-90ec-2f9886fbeb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aca2c16-2093-44eb-8fde-d1a749264c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7104e2c4-7bac-4d49-a760-c36c3bea96ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a044a25c-66a4-4df4-9a55-1f785a60e643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baa20d3-dbe8-4f8d-9049-9f89be1891c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbe64f2-d3b0-40e0-a1b7-aeeca4649c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b20077f-3351-4a84-a793-8c713f864d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30beab49-5195-4bb2-ad34-a403b1a16d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c364b7-3c7e-48cc-aede-b97874fc1568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ad8ab-850e-43e4-ab63-86ce73b0af74",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ae76de-8ab4-4337-a721-ae3cd5705a81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35149264-9c60-46d1-a9fb-7974145afef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e42ba87-cdbf-4c57-a2e3-19cbfdc8031e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dbb965-bb09-4659-a2c3-499685cf9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425c83dd-967f-41e6-b802-a8034337cdf8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2dcd69-428c-4751-99a3-64ffbf123781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be2e1be-0abe-40d3-a7a1-c82ba03ade73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b0c46e-816a-4dc7-9b0b-1519919d58f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb7c75e-7d0e-4d41-9888-d430685b1758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed384ac5-3049-4826-a715-9eca9d82a4be",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40daf374-f8d3-4f83-94c0-e8098de79d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde7f739-8880-49f6-85ae-d739aa59f3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c09429e-6cbc-4666-9198-39da75855c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bf8d62-3b4c-4ca9-8ac9-8c2775c0ab03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6aa27a2-f96d-4013-926e-76348340050a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e13ed-cc40-43aa-8fca-8a04030d2d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb63b7f-da62-4daa-9748-1465ff2a133a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f222b3c-d1d3-4a51-a512-87fe1284322a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb8933f-bc8d-43e4-a516-ef9a4f5a980b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6367508-3435-4e1c-9a0f-ba68ff59bbbc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398b9f2c-2798-43ec-994b-f915adb50c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f56570-c902-4781-ae5c-8adaed8a2051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938a30ad-d7d7-4b72-9744-a7d76c3cc38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedb9aba-3aab-4ea8-9e63-41148cac95c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0800a54e-45e3-4f36-9ea8-0811bf5d7cc8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694af942-3f5f-4252-99c0-92f5ccc2d8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901888e0-59dc-4dae-b723-3e38f28675f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39888210-4549-4e17-8b19-43554d1403a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480ba8c0-a062-4624-87aa-493ebe1c414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498f53ef-a07b-4429-a400-2a84af861b1c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb2b7f7-5052-42f9-88ed-a640f9292908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e62bca9-1b36-40b1-8546-588a4ef51f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9dc460-76ea-425f-bed7-0ab24af12813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb31726-ac4f-4068-833c-ece4c8bf712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb064226-ba55-46cc-99e4-7d22ac8055aa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539f9e03-8416-43b9-a682-1d6c1ae45e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476b2ae0-4a05-4bef-b634-10696439a1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65913706-15c2-4ef9-8740-8285f1da49be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4eeb60-832f-444b-bb69-5705d485d998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e50b4bf-f777-4e68-8df6-2fafc99c4d30",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d44b247-bf71-4c43-a864-1b7d960572df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ca380f-81a5-493d-8151-8e1b81aec72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c0e046-5205-4e48-bc5e-81067f9f4bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a3914c-03d9-47ea-969c-5f7449106fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77abac8-4000-412f-96bc-b06c46caa62b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca691e3-d600-4adb-84cd-a22ff4aa8501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b585adb7-1939-4c72-a146-b559f66a93aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd92bb85-a02d-4531-9004-1bd4f59d7c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7c6417-3b71-4da1-956e-46b9bb0a90d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e18c7-c876-4237-a193-bc3bd133def6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f331f309-836f-433f-a0ef-3249b04b43ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e37791-6dcf-4d1f-9d7a-57590103b0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f18d9-7b51-417a-be31-ef93dce5d16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfea628-420a-4189-9eb4-4de2cada88f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc52bba4-201f-4e30-b62b-f491ddb83d4a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8967922-6a99-40ba-9b7a-9c91ead3c234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3af2054-6711-43cd-9277-43198d2fe79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440a7797-54c1-4733-8d9c-32a9a812b7bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cdba66-055b-48f5-887e-de06cc407363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa791fb6-ff57-44dc-af4c-c3d9e0792271",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fca9c1-2105-49a8-982e-7238f1fe10dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f7185a-8a4e-4d16-9599-7ae175e31a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed80e0f-fccb-495b-9a84-958b1aa9fd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd306d5-644d-4f0d-956a-29b3e8d3fc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14226207-07cd-4ac9-a7c7-687eed6cc0eb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d6270f-072c-4ce0-aa2b-b079cee84837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37cb3b7-ec12-4f52-85b9-ef2dbdb4f909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0fb133-2efe-4ef6-88f6-7b6e351583ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309667b0-a811-4c50-9250-e43ffdf3527c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f2c883-43e9-4aed-9ac6-0da925233964",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748b8512-1abe-462d-81dc-f7f91d8eacbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a077fa-5675-4ce4-ac6e-5435fa659048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab5442b-3385-4e3a-9f62-531a5b2c800f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7eae6-469b-4da6-9831-5ab11010a60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7a90b8-88d1-4dca-bd4d-60a1c6cda303",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a132ea-c04a-427d-aee0-627c95c78c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4254758e-b9d1-4435-9000-30b4d34e53f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882eec0a-c713-438f-a33d-7d09620dca67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32009295-ae12-4378-952a-3faece7d95e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e83530-5559-4d1a-8712-cfafbc3622e3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa11a971-889c-4803-8bd5-54f730410a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3d3361-2cd1-4556-a980-2f708932b586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aa611c-7c89-4210-bbaa-9ceb1757f39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d355356a-01b3-40ec-9f3b-3df81334f0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e470038-c773-4ace-bdf6-0136eedaeb3a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c472a-391e-49b4-b68e-63b6194a4203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c70ba7-d6a0-4b7e-8944-5ef00df1bd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7242181-280f-4517-b6dc-b72381509093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e963f9-9298-4052-9c63-cb76a65589f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb39a81e-331f-476c-8c41-387d86a8eb74",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6f120a-25b9-469b-8381-44af9bcc00ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c17f1b-f126-430b-a128-d3f7f20024b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26737fef-3987-470a-b772-bb5dbee15058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d99d88-b139-4019-829a-e745a74f4f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a863bad4-a2e1-47e5-9bda-341cc81556bb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65bdf6d-1541-4ea9-8126-80c523d22e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105d25da-566c-42e2-a949-ab07279c86b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351ae1cd-a9da-4468-a908-47a9736826bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45570d1b-7cb0-47a8-98b0-e85cf4210c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39675687-2ae7-401f-b800-9286e5da4405",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df54f011-b61a-4120-83e3-4bd350af5118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5689bd19-89cd-48a3-950e-0feb1cefc0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c6cf9d-91d3-4ff1-9d37-4b706aef17cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ac4a08-12c0-4263-acf7-4604760919cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842a219e-450b-401e-909f-eeff5371ca22",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb06604-512c-4173-82d9-84423a2f7e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bfc082-276b-4154-a6cf-9d0e1b6491b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855f23cb-b143-41eb-ad0d-df456dd0d039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e11afe8-9188-458b-ab45-95e0701e1dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70f971b-1221-4bf2-a457-7124ce5c0ddb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c49fc06-1078-4c38-82a8-0be9921fe73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15764a2-400a-41a2-844e-7ec889cfc74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be27c56a-fa2b-43af-9a0b-770bcb20b5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2b026f-2746-4333-a1c3-1ac2d5d16acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbae1e2-c0d1-41c3-bed6-903d85beebc9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90f98dd-0dd5-4143-97c5-3b0b6a4c2411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44705891-d0e1-4bae-b1a2-a2afa90679ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5c71ab-13a6-4e1b-b9d7-e46f40b5ce3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96352462-464c-4747-96c6-ff080d4bd6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b597f8b0-5eb6-41f3-869a-f04e3c795e0d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335ed1a6-8ace-42ed-a86d-3cad3a4dcc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d5a26b-7653-4ac4-995b-0ba01a1af69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f218822-1981-4930-8de4-a8d9a5deaf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d35bc2a-86d9-4e0c-9863-cdf6f2fe4640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1494f8af-59f7-4f61-8f34-62e85f0d63db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedcd855-a53b-424f-84b5-f1a60bdb8154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7c82c8-c14e-4e5a-bf08-be8a73706787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e81c21-4311-492d-9db7-12c0738422f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031a0fbd-11b7-4c1a-b580-6c7e91d61cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab56a87-a02c-4199-ae62-fbad41b88576",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8d68c7-ba06-4a81-a67a-9ebafea14467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199da353-d3e3-4dd4-be84-22fb270af068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d59b1a1-54f3-4499-ad7c-d4c42573009b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c244c66f-aff0-49be-a98a-d38d3a099b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dae5298-4e83-4c9f-b6b3-1ceab4bffb8d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7c1de1-df13-42aa-abbc-a935d8d736b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0125bea9-2b3c-4e3a-a2dc-778172c78148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68143619-52d4-46e6-9a10-6d99ee3a5c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63160d8-242f-4e81-bf55-9ccd3d5dd5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5d175a-1010-4c71-84b2-83c81bb8ac94",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2753f3e5-0f86-487b-aaad-075dd96898fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b39f107-79a5-4c01-8cc6-2cd3c3b7c72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bf50d8-0c32-495c-8472-6248a5f2145b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40973605-f32f-4dc0-990f-ab54fa14429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef154bf8-eff9-4d9d-a77e-304012a65a32",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c2585-4e1c-4635-be31-404bf7ea104b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdb68e7-9aa3-4cd9-9d2e-f47adf3655e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f031fcf-d967-44d4-8938-7cfd21c86f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc8ac78-5cab-485b-82a9-3d82b74c6adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb187e-2936-48a3-a282-d94f36e5ef93",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78938d3-4519-4c7f-aba9-0bcc4594fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab7ce51-a253-463b-9b58-14c56a4638c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a785e6f3-d827-41b6-8724-0c5a3f21dff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6276289-a281-4ac3-b87f-2a09046c3959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a9d2ef-36c6-4de1-afa4-a242da8874e1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508481bf-d4ce-4c02-8ded-77bf4f521180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d2d7f5-954f-4056-86b2-ae9cb4a34560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb72e31f-0e5a-47b9-9c56-8f20c2667fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acedb52-6489-467b-9213-956f9c908b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8739d7-1daa-4c85-8e0a-d7183b034278",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5838bfdb-4aab-48e5-9c7c-e5c5e601993b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7c675d-2e04-47b6-9dea-35fff0c37449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afe7a9e-9b4c-4e9f-8cae-add1c031336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac90d211-241d-45c3-b579-b9660a2f1418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c853f272-55e8-4c05-a864-48677c33dc3b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f7bd07-b15c-41c8-b921-6c568a50976d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f48373-f696-4539-abc4-1e8b195204c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da88836-29a8-4f4f-b43e-25ad56c81ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79b2fab-4fc3-4ed1-afa0-3e3fa760c013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4415d487-79d9-47fa-bf0a-adbb1bb73140",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2af003-b1fa-4753-ad3d-9ccee4d4d9f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f7f816-fafe-45af-89b5-0c9ea72e92a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32085677-52a3-427c-907f-0c5cc830bc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbed1350-4ef9-4f67-86db-78fa4d05bb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704ec0aa-6f07-4234-a1fd-b1e9d306a466",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0385d9a-8109-4add-a030-ba86cb82482d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cf31b3-a801-40ad-b530-ab7f7db6965c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9502f599-9974-40c7-9af7-f0d36b2ad603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d540e53-ca96-4c19-b473-671275176147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc93137-3072-432e-8dbc-cff37f4b1308",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74570c4-30ff-4d8d-a31a-9445851c2dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e63c8d1-9777-4d83-8486-cbab6e1de93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d51e87-22e9-4e9f-8bc6-def969ea593d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccc3eef-c474-44fd-b52b-1c4ec4ee4768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc534fb7-c1af-41d8-9e2a-5894514753c9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fcf832-d8b7-4cee-8491-c20b24dd3106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f790acc-5ad3-4d0a-becf-d064ee92d5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f748644-cc99-4f8a-9122-dee832b22de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2b141b-77e9-4d81-887d-a07c47307285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b6d934-3a15-415c-93b5-81658043218a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd447dc-9f01-45e3-8036-0ea5eb584c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f22210-a4d3-4732-a2b0-ce2065f2b4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5784b5f9-a34c-41c6-ab08-16242eba22d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5668cf7b-02b7-482b-8d11-7a2aa9d2a451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027a3a8e-693f-43e0-ba6f-880d9e722647",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3945b825-5f51-484e-9d35-5ceaef625b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36350cfb-8388-4f91-a9fb-7660282e3d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f65ec0-e8ee-4974-84f7-929e38289820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d834f83-e73e-404e-9dea-c8be7edc1d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefc1936-9fb4-48ca-9787-5bbbba383ea3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24d8a3a-acf8-4238-9046-b95743f313e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d51af0-5e0d-4c97-a9db-9c9cc074a5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48285a96-e703-42d4-a2ea-51cd83634561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb562f5-a594-4cd6-8baa-f17f4cec4de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4f420d-e857-430c-8b52-67c2aaa6967d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2755bd-2ee4-4f8f-b70f-e6d6ad7d6713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0d3c5b-6f2e-4995-a8e5-79085bf9fc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1719d4-b61f-40a5-a814-b00da881caf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56b257f-3de7-49aa-925d-097d54f7c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9811a691-a736-4f02-b14f-ec27009891f4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73c5a73-3cf2-488a-96e8-4177a931b685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e868d2-4b05-40cb-9acc-4986a93fce28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853b52f8-d008-46ec-a2fc-99e7e918f84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5778761-1aee-43b5-af71-c5f18733f983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd3086-90e7-4bf3-8b6d-9a7c1b14e2ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ee7bcb-098b-4ea5-a5de-ee4a8c77768f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0216ce-6a0d-41d8-973d-dfca0e95d790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbea4bee-999a-49e2-9934-758061296a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50d59f3-17d0-4143-8b8c-06cde2d329ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5db1321-357b-4bc9-bb8c-83ad8c7d3835",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9fefff-d243-4d19-a9e3-816703f09541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c8c7a3-0279-4643-a4bd-5c8bccd8d8d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b3efa1-8e8c-43fa-9497-2f543b36710f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9e5f23-1d0e-4c53-bc8c-f4228bed6fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be07fdd4-7941-4232-aa66-aa055b8a5272",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf37da8-0a6d-4562-87b2-c84e5abd2cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2db02cc-0622-4af9-93eb-5000c9141afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b323dcd5-2b8d-4572-83d3-7ad7b54296db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611a0919-5a70-4c51-bfd6-0c384a28c7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e01e5d-f39a-46d7-9f98-956798fa2623",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633dc2b7-6c3d-4f79-b8d4-d2d973f0e40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4947f46e-ab9f-4b0f-8c86-6cfb9e24296a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbc4669-45b9-43b4-8635-b8ca402ff9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1d99fe-ee88-4e6d-9fc5-1ba65145dfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b014a007-933d-404c-bc9c-7f9c99f8088b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933b0be8-b8fb-45bc-abec-63156862d49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b4a294-d00f-4d07-b768-9c39f2787882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d166f67f-9fab-4ec6-8e51-d743bf222299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50313084-d8ed-4826-873e-cee9041cb0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e478c0e-3a93-47dc-a1aa-11d2fac8331e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43341d24-140d-4f35-9cd4-cb0cc3b3854f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87693d47-89e9-4ec2-b222-b726ec9a7149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2c3335-dd17-49bb-96f9-e6e498559393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767f1756-270d-421f-962a-98ffdca55ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5629b95a-76b2-4f20-a8da-fe908da3d980",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f53b272-1b36-48ff-a943-4a4c01ee5c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4327150b-d603-48ab-9c45-29af5255e284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e497c2b-9ffb-4efc-a8a8-986d447211bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89022e0f-fbae-45e0-ba1e-974affb4a68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595297e1-01ac-4083-8df5-d6d569f83139",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4932d9-a945-4b27-9628-9695b45a5d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85724858-d0b6-446f-9daf-d6b9c36ece2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd6f280-014b-4470-90d6-cdcf4a10302e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b1d45e-e432-4a46-b8d8-e1edede874ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf5e080-922c-492c-b3c2-9543d6dc8b56",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4fbd8b-9b7d-4db5-a04e-569227f51d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f62b5f-0bc8-4f0e-ac1c-546be9c26e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82289151-86d2-453c-89a2-051dcb1566f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e726f88-45a8-458f-b80c-817fb4457390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b0739-a421-4452-a932-a786d5bcacea",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58cb33d-0148-49c0-a9c5-824d2886655b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a820c1f7-29a9-4934-8d37-076290d369e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7515dc62-fe83-4dbf-8c4d-69abb0e5d6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4568a4-99ed-403f-b216-94ccca3d8fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ac3e17-e420-4188-acb7-6428c3cfe10a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a139c56b-eb33-46da-9ecf-ad5ac67bb407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7f2713-2612-4f78-9932-93503c25ab71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fafb3e7-ce66-46ba-be2c-80ef23b4289d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1310d739-d53c-4e74-93bc-fbcdfc5d679e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03460afb-3804-41f9-8e5b-28b1e6556670",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664593fc-0067-49d3-b231-47038f9ec70c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20754b28-cfe6-464b-9666-e6714dfb7943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b011f-ba09-4213-ab0a-3a73b968743b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904ee617-0ca5-4ed7-b36f-c139b5dd2918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68ee633-9427-4164-b571-ecf821442e98",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974b31d0-f6f1-4e52-b77c-fd28d40215e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f97b2d-9a0c-4dc1-8a82-d6b71b22313d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f567e4-66ee-448e-b24e-a957d8711ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061cd555-a40a-423e-a16e-3232feb6c03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017c64ab-479f-4dd8-8b03-4426ce525bf1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857acf4b-d3bf-4ca2-9c14-20d5a130a58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08ea178-d62e-42ec-b66a-5a9357c733bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9866499e-ccc1-48df-abaf-c5a9e7012f1b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437b652b-e4f6-42ff-8e11-1fe587446c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269fcca-f076-4072-a1b9-36596098a2cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a36859-2ea0-4f93-87ba-abadf6d94376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913722f8-10a0-481a-a457-9c77a0111cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6e7a5b-e95b-4929-b41a-2ad7259e74fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaa5ebe-20dd-4078-96e8-98b5c914369c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab32367-3e4e-4a39-86d5-4276659131db",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dba255-9120-4070-bfc4-93fbf3f1f66e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5059f4ec-6010-430b-996c-330a5280f3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2535d4-f649-4934-98f3-3cad5ee1a47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5feab5b6-5c91-4595-91c5-36c251985d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc4629d-a0e2-465a-bb7f-167235d3d516",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa59aada-6c0e-4be0-9ef2-7b0ff500b9a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b72af8e-e578-4440-923f-d669c1d4ac5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67cddae-4d89-46f3-829b-df71a97cdc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf00ed0e-c1f8-4fa5-a58b-045e484a4c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f0cb88-b538-4c22-8c5e-262f3327ad1b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f75bce-12bb-49a3-89b0-59c8f856f37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cfeee1-9e06-4e89-9da0-07f20579f13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba56d1cc-8e43-4152-97eb-8ed631711e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced8399c-492d-4c93-89d3-78893c34cf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f86ce7-e47b-4435-9188-cc49554d20fa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde5a6bb-896c-44a8-8053-d9322dd10cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af3c608-614b-4f64-a8de-6cf2f1210553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ca99f4-f4dc-4225-b9e1-bc7535b7d52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171bc9a6-394f-4cc6-ae26-edf3265af9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc890c1a-801e-4c1f-82ec-06e31db17124",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcf0aa3-a14a-4a00-a60f-837f69e0be66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da0f302f-93a4-48ec-90c0-e8c42d6d24ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a7fe56-beca-4f06-b497-c8e6c5fccfcb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac85087-f64f-40a7-9489-b532c11bfbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e310bf19-1948-42ea-bb2b-213e4117621d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a62df4-c823-4d5f-a919-83453375c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8e2b99-c0d7-4f40-b044-b868a16991c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d438bc-e117-4d58-a42e-febc3a5ed866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b5972c-54ad-4458-b8ca-0317dffe49ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6119b5d5-b891-474d-96d0-fe85a8f578c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5604d5f-8742-4c21-9016-713d16385340"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9afb20db-92ac-411c-b8c0-d6248913a065",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbdfee35-d1c6-4a0e-90bf-39ea9400260c"
                    }
                  }
                ]
              },
              {
                "id": "12f7677f-1b0b-4000-b95f-68fa727bc420",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d61de21-4cc5-4097-b9b6-fd88444ed206",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c88e9d6-e107-42ba-b08d-96f6ae783395",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3c954ca9-55ee-4eb1-a441-42b1f1b29469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b3b1a8-e739-4ea3-801b-2a94c5aa9473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ec629d3-421d-4e6f-87d5-f5def02cb443"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c284059-d2c8-49cb-a99c-cf61ce925a02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7eab4c4-e3d8-4665-8630-6db2bac16278"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb29114a-db14-413a-8218-16511e7e0e4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d2f36c0-a577-462f-b6a6-4d9d198d1013"
                    }
                  }
                ]
              },
              {
                "id": "dd5c4bf0-4461-48fb-9528-9b05e41aea59",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ebb20e32-6c2c-47a2-9f64-647a0c211ffd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47deeab-4dc9-45d8-b58d-a05503b9d216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ea7e0f67-27e0-4f04-a838-63d47fa5e28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea194fc9-de54-4481-a429-eb76c6e0457e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df546b77-b5ed-481c-b5ed-4f4e87847ae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f150bb87-9a90-4639-81be-4152f975b31e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0457b30-b8d7-443c-8504-5efbafe67e62",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c911cf5-bc15-4fe6-a8bd-f93a51f67d29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ef028299-9755-4d06-8b60-663fa7e1db9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6907f125-4548-40e4-8035-af4e0f05c477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2b37523-ecad-457c-bb2a-98ac4536aa13"
                    }
                  }
                ]
              },
              {
                "id": "e3199fea-fc9f-4d3e-97ea-84edfde57880",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce1df8d3-3df7-4d9b-9dee-f1524296e297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "59241391-6eac-427c-9fbb-00a61946afaa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "629aa5b7-aac7-45e6-8f1e-b5ca1a355c41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5518370-7209-42eb-84a6-5e25f7a43839"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e71347a-83f3-45b0-ab19-a9fe8e013f98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e658753d-091a-48c3-88d6-813c632ef5f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7053acb0-9de1-4748-8e01-48d1d7bb926f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbc5293a-e87e-4105-9620-63627b745b3c"
            }
          }
        ]
      },
      {
        "id": "d6908986-8320-44d5-b88c-6a0b7f1f0aae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "58da9db1-4c78-47e2-a5b5-bfd6d7e28525",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e442da33-f8ea-4b79-b752-89d4a8f29078",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aa77335-9f63-4baf-aee4-c4321102a8c9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9367854d-a7ff-406d-940b-805a045be958",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2def819e-5106-464b-9720-ff4dc7fdc6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92df44c-59ba-4f41-858e-40d2bdd71df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fdd9287-03ab-4cea-a876-892606f13a50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d0b6064-7a3f-4a46-9877-5293ab925cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "299bb00a-29b8-4c8b-80dd-77e2ceb9d8fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c1a157-9a80-4ab2-8e32-1115f5bf54ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d8f40ca-e35f-49d5-96ea-98267d9710d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ada8baaa-692b-4463-a786-9daf32d4368b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2748f5bb-391c-4e73-8469-0b2a164498ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09103692-2910-4f98-a22d-46508d37f8bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c3251f6-51f1-489e-ae99-a871d1a22ec2"
            }
          }
        ]
      },
      {
        "id": "11eaed8b-1cc2-4921-aeed-7d19f1fddb72",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2e104ce9-ca49-4c97-98b2-26c15e9be482",
            "name": "Negative Testing",
            "item": [
              {
                "id": "def11351-f5b2-45d1-9636-970e70682639",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2528d930-8e89-4173-863b-23813073f6e7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee11f594-2320-4041-a8c2-229229469540",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46e8b425-5a42-4ea0-81b9-c5e38d5d36db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd01dc4-8640-4ac5-8898-b0dfe3c843f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bd5e5e2-ff44-4b04-9ea7-12194b3f1fa3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d83136b-6464-47bd-9ced-5c4bec650e2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46a0f052-023a-4553-8aa1-ed6d708f6553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f4045b4-fa05-414c-b8fe-16a675566bee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8254106b-d51a-473b-875d-27038aa0b2b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcd8e478-9a97-4552-9801-fcd7c5915451",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8724d0ab-5a6c-479c-a421-fef97f186cf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "948ffb45-44b4-4c91-a87e-efb718a4bfa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7206b974-3392-4405-9bfd-bf488baf4e9c"
            }
          }
        ]
      },
      {
        "id": "d09562be-3c3f-4eb7-9cd5-8857fc6dd73b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1023f89e-1dc9-427f-80ab-2595be3b0701",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ad26de1-fa19-46a2-91e5-c69c20f2200f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "822621be-37e3-411e-a2ea-d2bd299ac314",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d741b0-7eab-4012-baae-b2a8387c65b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69bfc35d-4881-4172-85f5-bcd533ba5a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee3e9b3-9947-4dcb-803b-1abcd5610450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b1f61c2-7d13-4492-a4c9-ae0285d8322e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d49b687-df3c-44db-8ac9-55c7322c3cc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d0a6636-3938-415f-a33a-d8e1f355c47a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a027751b-bd06-4cac-ad2f-2a2dae108e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4c42f73-723c-457b-a7d2-232450e8c278"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daaf88fc-42fb-4857-a106-ecb6ce20d63e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2998299-d521-4c92-a349-ec2dbf55cdef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00a2087d-ea1f-490a-92dc-d1d895a79589",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3dbfcb8-8106-4cc4-bb85-3bda8815e1e7"
            }
          }
        ]
      },
      {
        "id": "78001a61-3477-4733-b5f9-f3e768519e51",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5b3726d-6668-4003-9a13-2c2d9c141049",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0161dedf-81c9-46aa-a779-3a5cd0b3b597",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "747d998d-4744-49e1-a3e1-a45cfaf21666",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc092255-db59-44b0-aa03-02fab22fd8e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc8b3dad-dd65-44f0-8806-b8bc72474857",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 128.84210526315786,
      "responseMin": 6,
      "responseMax": 9128,
      "responseSd": 706.7506667091393,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709166830958,
      "completed": 1709166876919
    },
    "executions": [
      {
        "id": "615bc787-7db8-47c9-9767-7ee34eb76956",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de2b7115-655c-40e9-a084-fa1eab4a89b5",
          "httpRequestId": "f8b45032-2b77-43dd-81b2-6e5dc12b88d5"
        },
        "item": {
          "id": "615bc787-7db8-47c9-9767-7ee34eb76956",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "38ff5d4d-ad40-4fb9-9fb2-ae5817e05b84",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "6a6a505a-f911-488c-8e8e-8266afd08fb9",
        "cursor": {
          "ref": "78511856-0029-4a51-a670-c7bae8b27a7c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "66dbf754-4dd9-4386-af9b-26e98d8af264"
        },
        "item": {
          "id": "6a6a505a-f911-488c-8e8e-8266afd08fb9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc7025d8-593d-4214-a7a5-5db9c1281253",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "9ea8724c-ca9b-4f9b-8ce4-0f8f0cdcaaa7",
        "cursor": {
          "ref": "17278e90-1fa6-4797-a493-e2b17c3575a5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7029c56e-0e74-43e5-95d7-76bbfc04bcc9"
        },
        "item": {
          "id": "9ea8724c-ca9b-4f9b-8ce4-0f8f0cdcaaa7",
          "name": "did_json"
        },
        "response": {
          "id": "64303635-b7ff-4179-8958-8bb523c22517",
          "status": "OK",
          "code": 200,
          "responseTime": 259,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaa974a-e06d-4d3a-8045-08a084dd9e3e",
        "cursor": {
          "ref": "a5296e97-ef1c-427a-9c4b-51539745f1a6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3ff4af9-47e4-48cc-a2c3-3f4ce07f629e"
        },
        "item": {
          "id": "dcaa974a-e06d-4d3a-8045-08a084dd9e3e",
          "name": "did:invalid"
        },
        "response": {
          "id": "663a9352-95c1-44b7-aefe-aa81440faa2c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaa974a-e06d-4d3a-8045-08a084dd9e3e",
        "cursor": {
          "ref": "a5296e97-ef1c-427a-9c4b-51539745f1a6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3ff4af9-47e4-48cc-a2c3-3f4ce07f629e"
        },
        "item": {
          "id": "dcaa974a-e06d-4d3a-8045-08a084dd9e3e",
          "name": "did:invalid"
        },
        "response": {
          "id": "663a9352-95c1-44b7-aefe-aa81440faa2c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2428,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ecad6-f4a3-4927-980f-5694682bb43d",
        "cursor": {
          "ref": "4566dc47-f4ed-4f0e-8311-28fc92dd14ee",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "621f4b70-49fb-41b9-989b-b003e11cd47f"
        },
        "item": {
          "id": "4e0ecad6-f4a3-4927-980f-5694682bb43d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d47c5596-bead-4610-860b-35a708bab9c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41be9dd9-dd58-4880-bf04-52b8726c4c79",
        "cursor": {
          "ref": "8bf01ca2-12a1-4eda-9147-5160a9652c19",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6f89c331-47f6-45cf-b4e0-f7c64e04583d"
        },
        "item": {
          "id": "41be9dd9-dd58-4880-bf04-52b8726c4c79",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "69e819e5-79cc-463e-9b25-1125ad5d4cf6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb09cd3c-6900-4333-a362-b650d2a74394",
        "cursor": {
          "ref": "d56d53f2-8ff5-4821-a6a4-e2cfc17a2217",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "44a8a52e-9219-4347-8a1c-100545b33121"
        },
        "item": {
          "id": "fb09cd3c-6900-4333-a362-b650d2a74394",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "373ef4fa-ddc8-4688-82b5-161ab5491c2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2f7756-e3a1-4f42-9cd2-fdd2c2c8ea8c",
        "cursor": {
          "ref": "031d16e0-806d-4eae-ab7c-bcb63690ae1e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "07954f11-8f44-4687-b558-04fd07c0fb9e"
        },
        "item": {
          "id": "8b2f7756-e3a1-4f42-9cd2-fdd2c2c8ea8c",
          "name": "identifiers"
        },
        "response": {
          "id": "02d225f1-0608-445a-9fa3-43b8ab005397",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881252f0-5866-4dac-b061-326bd92d1b9f",
        "cursor": {
          "ref": "841c8697-0983-4d52-b0dc-181e8b7c6b82",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b8a1c139-e6dc-4ea0-9955-244a0350e030"
        },
        "item": {
          "id": "881252f0-5866-4dac-b061-326bd92d1b9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62b91ad3-4344-4ae7-9f25-ccd14ec7ad1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69797627-fb15-4c6c-a467-818e27795e54",
        "cursor": {
          "ref": "c6fa729d-b158-4bd5-8ab2-fc60fdeabe0f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b85519f3-6c4d-44f0-ad73-1932919d21a4"
        },
        "item": {
          "id": "69797627-fb15-4c6c-a467-818e27795e54",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "285e1010-bb53-4688-8544-6d078d237afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eeb9d1c-e732-44ae-8f33-e1ff5f66d9a7",
        "cursor": {
          "ref": "10c0069d-484a-4584-a398-a7d102c63d5d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a205cb0-3bea-4e7e-b0d7-34c100680980"
        },
        "item": {
          "id": "5eeb9d1c-e732-44ae-8f33-e1ff5f66d9a7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3cccd5b3-a7fe-400f-8795-70dc6f0a9e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5a6dd9-ce80-4128-8df4-e588fe7bb1fc",
        "cursor": {
          "ref": "ab01ac5b-3986-4618-8dbf-1058d4edf0ba",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e0f14dd-a794-4c1e-be9b-14a28e66e8aa"
        },
        "item": {
          "id": "6b5a6dd9-ce80-4128-8df4-e588fe7bb1fc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2d3f3d26-8c77-4437-9331-76145c51b5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976c5254-8e03-460c-b5fe-f01e549c49e8",
        "cursor": {
          "ref": "1db56d1a-ac95-49c2-85ea-58ae3c136432",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c170fb90-ceb6-4312-8a44-e4ad1ef476f2"
        },
        "item": {
          "id": "976c5254-8e03-460c-b5fe-f01e549c49e8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "65151ed5-e652-4053-af3a-5e2023abc6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0d5df7-b475-42dd-8602-75c3f74c9da4",
        "cursor": {
          "ref": "112680ec-1167-4074-8875-ff14f16cd238",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5389bca7-7304-472a-bf57-876d2ea9eb22"
        },
        "item": {
          "id": "6f0d5df7-b475-42dd-8602-75c3f74c9da4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5a30f3f2-4153-4c73-9eca-126f44da7ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db4f0f5-7046-47ee-92c8-9cdb1e8b4755",
        "cursor": {
          "ref": "7c36d973-347e-4084-aa36-bf5a5a5e942c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "169288ae-125f-4f9e-aad5-457c25da7c49"
        },
        "item": {
          "id": "5db4f0f5-7046-47ee-92c8-9cdb1e8b4755",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fcdaba72-ee2c-45d3-8c3d-0f907837e55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9e9a0-08b6-4db4-801e-93fa59019721",
        "cursor": {
          "ref": "4a0f1577-1625-482f-84c2-c6f8037d896c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3ff8bd15-dc3b-4a23-8413-3938c2b3e37a"
        },
        "item": {
          "id": "93b9e9a0-08b6-4db4-801e-93fa59019721",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "72f0c478-4cec-4873-a55f-0ca6ee4b9bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d5193f-968c-4537-bdb6-5c6f0219720e",
        "cursor": {
          "ref": "760c7748-5fa9-4df6-ab0d-cfdacabcf11d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "531abb53-1f7c-4bac-8129-12d321bfc589"
        },
        "item": {
          "id": "48d5193f-968c-4537-bdb6-5c6f0219720e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e75446cc-48a3-4e13-a9dd-8c1908da7e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d4a7e5-fbbb-4652-9b2f-21a772326551",
        "cursor": {
          "ref": "8bdddd6c-e826-4cf0-850e-47b987ee2b1d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "874aace0-f422-428b-ade1-763a4edb12dd"
        },
        "item": {
          "id": "46d4a7e5-fbbb-4652-9b2f-21a772326551",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "71c0b2ed-0161-4b4a-b405-1d42c4b938a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c988eede-6819-4a2e-a853-db02d0057d5e",
        "cursor": {
          "ref": "cc06ea51-43ae-4600-ac02-3303895bc5fe",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7fde7c14-0a4f-48a1-8b0c-623554bad89a"
        },
        "item": {
          "id": "c988eede-6819-4a2e-a853-db02d0057d5e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "18915342-0d04-4465-9c39-9232ecef64a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b02e7a4-b4a6-4fca-b78a-20268c6ed86c",
        "cursor": {
          "ref": "2305878f-38e2-4c55-b1bf-977dc36b14db",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "19dd6d69-a654-459d-b42e-5427429588ea"
        },
        "item": {
          "id": "1b02e7a4-b4a6-4fca-b78a-20268c6ed86c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5ad68ef7-234a-41ba-8e6f-13ee08ecdd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be996a40-e6c3-406a-99c2-70bcca025f70",
        "cursor": {
          "ref": "cb502aaf-7a20-4307-8403-7febd0437604",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3ba34f35-5beb-4790-be04-f9b3c91ce9cf"
        },
        "item": {
          "id": "be996a40-e6c3-406a-99c2-70bcca025f70",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8a5e20da-5983-4aa8-98c4-9ba139315951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca124678-b4ba-4bc6-8709-f35c439198ec",
        "cursor": {
          "ref": "d29a7589-e266-4b24-bb0f-f762fc4d3b78",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "818aa9e7-1060-4786-94b1-c64b5fc2721e"
        },
        "item": {
          "id": "ca124678-b4ba-4bc6-8709-f35c439198ec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "76123d8c-4bff-451c-9675-aa3e338bc751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00420565-17b1-4f58-8c24-a9bbdece7790",
        "cursor": {
          "ref": "7ad2b0f2-7e6a-475d-9210-762dc4e9f313",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37cd5824-bcbd-496b-9166-b19819024724"
        },
        "item": {
          "id": "00420565-17b1-4f58-8c24-a9bbdece7790",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "edafd56e-eb72-4681-9af7-5f39f55504e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c8d284-8bd4-4583-b890-96f9109d2e6d",
        "cursor": {
          "ref": "bfdad0f2-5cdd-4936-9e49-93842851838c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e4a66635-a71c-44f2-bad1-a5adbf1a2afa"
        },
        "item": {
          "id": "18c8d284-8bd4-4583-b890-96f9109d2e6d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "025a59c4-c5fe-48af-b36f-43b06fa4943c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf45ec9-18aa-4857-9504-16d73c8721e7",
        "cursor": {
          "ref": "38c662a0-1d31-4442-9f5e-56868d77d931",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "df6cf09f-1903-479c-b99f-2e110b2ec99f"
        },
        "item": {
          "id": "fbf45ec9-18aa-4857-9504-16d73c8721e7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "082fe198-8cbc-437a-9749-f2ffd0815fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a1e774-cebe-4324-a158-7ce95821c22c",
        "cursor": {
          "ref": "3eb19501-a20a-4b95-bb88-01d3f4f1c814",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "11b2ff47-3be0-49f8-8ffb-7cdc3aae08a8"
        },
        "item": {
          "id": "f6a1e774-cebe-4324-a158-7ce95821c22c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fbac66ea-abd4-4272-9749-5bb5b298bdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8c09a-799b-41b9-8a41-4dace22ac696",
        "cursor": {
          "ref": "dd230fca-a3a3-4d14-9eae-671d395cd90d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "134064cf-31e7-4872-8618-d06b4d27744b"
        },
        "item": {
          "id": "58b8c09a-799b-41b9-8a41-4dace22ac696",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "296e3dc8-7daf-45ce-8f85-a6f4e775d832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e610dca-4d69-4e37-977e-3d27fe2c8f38",
        "cursor": {
          "ref": "55c0596d-fe12-4383-a069-1fe4f9aed870",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "888de260-9871-42b1-af37-2b5eadc9b258"
        },
        "item": {
          "id": "1e610dca-4d69-4e37-977e-3d27fe2c8f38",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "77ded2c8-6a0d-406e-ae21-d2c6e422b386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d415cba-d9ff-4761-b260-1f130b0ff056",
        "cursor": {
          "ref": "6c19572e-51ec-40bf-8a50-2ef483c06977",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "60ee22d2-c8fc-43c8-8629-242157c5647a"
        },
        "item": {
          "id": "9d415cba-d9ff-4761-b260-1f130b0ff056",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bd72db01-9473-4507-99bc-b98a9e3071c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109ae278-ab67-445b-8434-cba2d6be02de",
        "cursor": {
          "ref": "77781cbf-50b7-4964-ad66-abc72c90f3df",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c7060f8f-1bef-4c51-9796-e3877ce123a4"
        },
        "item": {
          "id": "109ae278-ab67-445b-8434-cba2d6be02de",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bd5a2166-49b8-4bf8-86ee-0a83cb7499a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a52804-c86b-431e-a8c0-09f61bc6763b",
        "cursor": {
          "ref": "32d54f4f-d051-4a59-920a-40cb3bde3269",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d652a8e6-09ea-45d7-b0cc-a0c2338cfdcc"
        },
        "item": {
          "id": "93a52804-c86b-431e-a8c0-09f61bc6763b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d98979e4-513b-4fbf-8777-0ac6b9440f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5246865-416e-4fdb-a701-f675969e421e",
        "cursor": {
          "ref": "f6aa5773-ddad-4ef2-b210-8e9490530f2e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "85515938-eccb-4f78-99e8-e731a6221cda"
        },
        "item": {
          "id": "a5246865-416e-4fdb-a701-f675969e421e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f21468fe-88b6-45f1-899b-b9781b756bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a0da8-25f3-499d-8ffb-52277d253b5d",
        "cursor": {
          "ref": "fbc3d631-6e2c-4a42-9c98-2b22453fbe68",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6718de5e-0bf2-4ff3-8505-bb0a89e98f69"
        },
        "item": {
          "id": "7e4a0da8-25f3-499d-8ffb-52277d253b5d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ee05fa85-97c6-432e-bae0-9dadb6ab73a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bfa8af-8adf-4cfd-8497-25d63169f347",
        "cursor": {
          "ref": "83433cc4-388d-4db1-9832-70a23a2f9972",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ecd51165-a029-40c4-95c2-57c475e11805"
        },
        "item": {
          "id": "b2bfa8af-8adf-4cfd-8497-25d63169f347",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c71b2a80-41c3-4e7b-b8f5-6d82886f60a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677ac95d-b4d6-4b5b-af30-a6822720533a",
        "cursor": {
          "ref": "aa05ac06-d9e2-4aac-aa90-d60d2c57d9ff",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d3ef5023-8a7e-4193-bbf2-c06f3fc31a44"
        },
        "item": {
          "id": "677ac95d-b4d6-4b5b-af30-a6822720533a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "28e01c0a-641c-4cd6-b6d8-01bdd395a267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1ead3c-bb2d-400d-b429-237771aff8ea",
        "cursor": {
          "ref": "847d7ea4-5904-41d7-8329-07bdda41b91b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7128b834-84dc-451a-974b-2cfc59cd49c5"
        },
        "item": {
          "id": "5e1ead3c-bb2d-400d-b429-237771aff8ea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "484baffe-6a94-4fd7-95df-d2227b49d4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998ea191-59a6-4f28-8f78-225981d61d79",
        "cursor": {
          "ref": "e2e0f8b2-bcef-497f-a9ee-a070804180b4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "55ef0b20-67cf-4b58-ad40-bbbfa4b935ee"
        },
        "item": {
          "id": "998ea191-59a6-4f28-8f78-225981d61d79",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "954971bf-a9dd-45f7-bfdf-592b6a3f5caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b9625-a908-4af4-8ed2-1db6315386d1",
        "cursor": {
          "ref": "248a104a-a344-415f-994e-71e673444199",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "156cd297-5651-4743-b1ed-c0e6cfe36548"
        },
        "item": {
          "id": "364b9625-a908-4af4-8ed2-1db6315386d1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef0e2e6d-ad66-417c-917a-cd3c4c859a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56781ad8-0e30-4452-b16e-408b1e1d03a4",
        "cursor": {
          "ref": "38bfa571-5453-4373-8f5b-b1243e50df24",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4d8fecea-6de4-4aad-a77a-ed08b0866fdf"
        },
        "item": {
          "id": "56781ad8-0e30-4452-b16e-408b1e1d03a4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "281a1f45-ada5-42ad-92af-737f71255d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d312b67-1b1b-469e-8e85-414eb0649c9b",
        "cursor": {
          "ref": "1c3278f6-1454-4cf7-9274-8dd631ee6a25",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f02135e1-b30a-4660-8fba-b52f64785683"
        },
        "item": {
          "id": "6d312b67-1b1b-469e-8e85-414eb0649c9b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c81ab8d1-7503-4dbc-8882-5d81ea4911c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495197b6-7ecd-48ce-92ab-00eadf3a830a",
        "cursor": {
          "ref": "200cf664-624e-4e5c-a393-0d7b72a7b7fc",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6799d1eb-6a28-459f-b0ae-6c89aedffb36"
        },
        "item": {
          "id": "495197b6-7ecd-48ce-92ab-00eadf3a830a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8f6597bf-8d49-4846-b58c-6d015db29463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514538eb-faa5-4f93-95e8-b5afb928de27",
        "cursor": {
          "ref": "ec2dcbdd-f9fa-4960-abed-36a1e91541f0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5eaceebc-2180-4281-b9cc-d1765f5eb65e"
        },
        "item": {
          "id": "514538eb-faa5-4f93-95e8-b5afb928de27",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b3086c1d-e1da-487e-bd9d-ab08f56dacaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb602e32-bfcb-41cd-9477-6cbd1428c82e",
        "cursor": {
          "ref": "3636ec08-ff91-4611-8e79-d9258e75cdc2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d4b345f4-cae7-4b1a-afac-2d2c85def915"
        },
        "item": {
          "id": "fb602e32-bfcb-41cd-9477-6cbd1428c82e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4ddd6375-90d5-4d21-bbec-7b8d23f86303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8300485-6d1a-4cfd-b667-a2d38509db9d",
        "cursor": {
          "ref": "d61f2590-0196-40c0-9004-37c4820ba9d7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "99f056f6-6efa-4cde-8c67-6ced0dd41c4f"
        },
        "item": {
          "id": "c8300485-6d1a-4cfd-b667-a2d38509db9d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6702509-ce52-4afa-a8a1-ad2915f09c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcb4ef6-33f3-4528-b781-ca09cc6fe4cb",
        "cursor": {
          "ref": "de5344f2-cd51-4bd4-9f76-1d8f2cd2fc8e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "78df2a61-17c1-450a-97aa-59a82947fe8d"
        },
        "item": {
          "id": "3fcb4ef6-33f3-4528-b781-ca09cc6fe4cb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5f47d1b7-17bd-4487-827b-5c0aeda01f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e318393-72b0-4ca1-b243-fe30a4b3648e",
        "cursor": {
          "ref": "fe53afce-776c-4a7c-8f87-30a42cc6bc96",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7ac755aa-e381-49d3-a6f7-fe08397b885f"
        },
        "item": {
          "id": "1e318393-72b0-4ca1-b243-fe30a4b3648e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6a6dcd34-f6f8-4a91-a487-5d9b0ae73eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4121418a-453f-41ee-88fb-5b70de73f02f",
        "cursor": {
          "ref": "4a9ba89e-f672-472b-93d5-3d8049b542c8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1446be9e-4f54-4a1d-91f0-bea6553a064b"
        },
        "item": {
          "id": "4121418a-453f-41ee-88fb-5b70de73f02f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7150e72e-8b45-4818-bec4-5f650130682a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11acbcdc-903c-4eef-a92d-54d2dc021b11",
        "cursor": {
          "ref": "ca326efa-635e-4804-a6af-7882d79890f2",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "558ff576-c55b-4c4a-b8d3-3bb41b269f9a"
        },
        "item": {
          "id": "11acbcdc-903c-4eef-a92d-54d2dc021b11",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3094597f-56e3-4714-87f0-92297e6ae847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a3fc42-18c6-4bb1-a342-5dcf88a4f3d4",
        "cursor": {
          "ref": "7940dac9-0dca-40cd-a774-2057b69dd65f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0a829e1b-0112-4cdc-819e-f4704f0df9e9"
        },
        "item": {
          "id": "d6a3fc42-18c6-4bb1-a342-5dcf88a4f3d4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "33798f47-3a0c-4836-83ff-5b721a9a1841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fce29aa-71bf-4c0f-b194-6c2e9194f1e4",
        "cursor": {
          "ref": "67a93e2d-f5d7-437b-a9c3-325472982d57",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ffd65fb2-50a4-415c-a7de-7f3343cc2a2d"
        },
        "item": {
          "id": "8fce29aa-71bf-4c0f-b194-6c2e9194f1e4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bd1ad40e-d75a-42d4-972e-43a67e977c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fb21ec-bd77-47bf-a37a-e9725f60b5a8",
        "cursor": {
          "ref": "ef7eba3e-cde9-4e14-9d1e-3015148d7ce6",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8cc086ab-1171-410b-9612-cb80573dbb97"
        },
        "item": {
          "id": "20fb21ec-bd77-47bf-a37a-e9725f60b5a8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "db3c60e0-9bb2-4719-857b-b7ddc76ae046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8173c5-3f35-4ed0-ba83-896711f641f2",
        "cursor": {
          "ref": "b9f0248c-7fff-42a6-bb0f-ecdf4ece2735",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d2fc22e-0504-4488-bb4d-9f882b4eb8cd"
        },
        "item": {
          "id": "fe8173c5-3f35-4ed0-ba83-896711f641f2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8dcd7f30-073e-4b46-9c8f-140fba704a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8329702-fdd8-48dd-8a0e-c8c38963bc5c",
        "cursor": {
          "ref": "a944f089-e848-4699-81c4-66fd75aa4dc1",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c2af7cd9-4a1a-44a2-8cad-ebd64dfd7c59"
        },
        "item": {
          "id": "a8329702-fdd8-48dd-8a0e-c8c38963bc5c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c7eb1303-34b0-4cea-8b37-7733433fe7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7282bee-1d17-4881-9379-d81c43bdf10f",
        "cursor": {
          "ref": "ee802fd2-a8ee-48a3-b6f4-8ddf11461358",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cd480b75-1210-4bf4-8c8d-8036b4ae26e6"
        },
        "item": {
          "id": "f7282bee-1d17-4881-9379-d81c43bdf10f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "60554076-bf4f-4f69-b438-ec3f3da8a72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f7cad4-659b-4a7f-aba4-495ced4170a4",
        "cursor": {
          "ref": "cb3efb77-c42b-4a25-ac27-08d5638f646d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "65213758-736b-4c08-9910-f3b52bd5778c"
        },
        "item": {
          "id": "71f7cad4-659b-4a7f-aba4-495ced4170a4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7480ea6-6b23-41ce-a228-d30c2fff65f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831e7e18-8b34-40ed-8e08-0a56907dbb00",
        "cursor": {
          "ref": "a2604f72-f057-409c-95bb-4e96ace9a143",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aaaae28e-83d7-44e3-8cea-ce3f8979d390"
        },
        "item": {
          "id": "831e7e18-8b34-40ed-8e08-0a56907dbb00",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "81f8b666-9579-464e-9e63-6ae30a6c35b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f375758-eb0b-481b-8640-04fc97a4b27a",
        "cursor": {
          "ref": "0119b66c-df1e-4298-90ed-333e5b8a10e9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "28b68c79-71b9-466c-b28a-526fd2cdf396"
        },
        "item": {
          "id": "6f375758-eb0b-481b-8640-04fc97a4b27a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4bb956c6-2c3e-4218-b7c7-0615b26f71a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ca4774-533c-4803-aee4-4a5299048bc0",
        "cursor": {
          "ref": "6208af7a-8224-4666-a379-acfb3a61210d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f22eadfe-6f12-415f-93ff-57435e2fde84"
        },
        "item": {
          "id": "28ca4774-533c-4803-aee4-4a5299048bc0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a4d292c6-91af-4ebe-892d-daf4aaa141f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a26d9b5-4142-4f1a-83fc-e69666493afe",
        "cursor": {
          "ref": "5916c4f5-9ca6-4915-8347-c29319a69cd0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e659dd41-a40b-4c26-89c5-7c8ea2554861"
        },
        "item": {
          "id": "5a26d9b5-4142-4f1a-83fc-e69666493afe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "065e5384-1d0b-4994-94a9-74be41844ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da2bc3a-0f99-452e-ba74-dbbfa821eacb",
        "cursor": {
          "ref": "3d45cde6-37de-47ce-9e63-eb580c76f52a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "01d69194-2044-488a-bb69-a88ef307ea93"
        },
        "item": {
          "id": "5da2bc3a-0f99-452e-ba74-dbbfa821eacb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "51ca5f55-3acb-4be4-b814-1beccafc574a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bad9821-f4ad-4d48-bd86-54709df353c4",
        "cursor": {
          "ref": "bdb130e1-a10f-49a7-ad14-86fb912ed8d8",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "92640c87-b688-4226-b16a-8e87dedc20ff"
        },
        "item": {
          "id": "9bad9821-f4ad-4d48-bd86-54709df353c4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e8ca8e2c-3ab1-44b2-b2cc-6d46ad82b911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c233b00-1e62-43e9-846e-b714d7e173c5",
        "cursor": {
          "ref": "a7177a46-1d9b-4884-942b-25aa8a90349d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2aebfb6e-323f-4f30-9754-17ebed3dedfd"
        },
        "item": {
          "id": "7c233b00-1e62-43e9-846e-b714d7e173c5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6a01ea18-9803-4aba-bd4e-4c5b9fd41728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e88cd4-707f-4d01-93d9-f35fc439a103",
        "cursor": {
          "ref": "6db6ec9b-a23b-458a-a6a0-630be5093407",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "603a48a4-3cd0-47e0-ba14-da1534252c29"
        },
        "item": {
          "id": "43e88cd4-707f-4d01-93d9-f35fc439a103",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a8d29191-42d1-46fc-b222-9fa3d5dd0e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7b474a-490a-43e8-8fa6-363d70767636",
        "cursor": {
          "ref": "30af456c-952a-41ea-ae9b-b3de7c010c99",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5843591a-4534-4453-a855-af0bd3ae60a8"
        },
        "item": {
          "id": "3c7b474a-490a-43e8-8fa6-363d70767636",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dbf3b70c-924f-4883-8456-81219a748ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71d7114-166c-4246-983b-c20e389c54e8",
        "cursor": {
          "ref": "06c840b9-019a-4ea7-a0e8-97115a966582",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0a819f37-2aca-4f9c-8404-3d0ed1589892"
        },
        "item": {
          "id": "e71d7114-166c-4246-983b-c20e389c54e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4eb6b466-e05c-47e8-8615-1b80bfa92d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adbea28-9a1c-45f2-8ba1-acd3abd9dd60",
        "cursor": {
          "ref": "59ba88f5-63d7-45c6-9061-5ced75ea6951",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9a64780b-577e-4560-9ae5-30114e0fff14"
        },
        "item": {
          "id": "7adbea28-9a1c-45f2-8ba1-acd3abd9dd60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1866bb29-158d-41ef-b886-447cf2c9d745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584c4df7-af30-4308-b1a3-8adf8e6c13a7",
        "cursor": {
          "ref": "a7b76bed-ef12-4b4d-9c3c-80017c5e2c12",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7d01893d-f251-4b72-9bf2-21927cb4f780"
        },
        "item": {
          "id": "584c4df7-af30-4308-b1a3-8adf8e6c13a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b966bb59-d5f0-4776-a320-4b0c7c1654a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1e572f-ebbf-4191-8d60-04f54a1c3561",
        "cursor": {
          "ref": "549372f3-c7b4-4e18-99c1-5ba7a9de2bbf",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9fa61005-245a-4690-aa59-5014839a2371"
        },
        "item": {
          "id": "3a1e572f-ebbf-4191-8d60-04f54a1c3561",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ea2bfd89-4fd1-4e76-a881-aa77997a19ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5293a18-c3bb-4f59-9052-f6e5836a9750",
        "cursor": {
          "ref": "35bf3388-8335-4cec-960b-42014773b0bf",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "91ae4be4-6380-4eba-a235-de9d32b03b50"
        },
        "item": {
          "id": "d5293a18-c3bb-4f59-9052-f6e5836a9750",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0bf08afe-1cab-454c-b5f1-e17cc6dd2f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb29f0ef-518d-42d0-875d-882ce3ac6e06",
        "cursor": {
          "ref": "4cb54e9d-7041-4fb7-ae0b-75407048fc36",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "58b228f8-98e2-46b5-b7c3-1efb122c909b"
        },
        "item": {
          "id": "cb29f0ef-518d-42d0-875d-882ce3ac6e06",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "96c29386-a233-4c34-a13e-3ce59ec57c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85304b-f1b1-49f5-9739-d21a916c1498",
        "cursor": {
          "ref": "2b00e74d-014f-4f85-ab86-3eecafde7cd9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca45b0fa-e046-48c7-ab5a-7c08bffe9ba4"
        },
        "item": {
          "id": "9c85304b-f1b1-49f5-9739-d21a916c1498",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9ef55138-fda7-422f-b711-a87b0c685347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c20995-8a40-4601-852b-08ba8d60af14",
        "cursor": {
          "ref": "9f816aec-a668-43f2-ba5e-5193ec6a9088",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1a2c262a-bf22-494b-a104-442e98d50a26"
        },
        "item": {
          "id": "b2c20995-8a40-4601-852b-08ba8d60af14",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "276ae1c5-97d6-47a6-98e8-9821595d8471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9430fa11-c21f-49e3-aa58-fa651ceaa697",
        "cursor": {
          "ref": "39e7f75b-5c42-4cc0-a7d6-077f2d09bd77",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b400c77a-35fb-46aa-b8b5-8bf21f9489bf"
        },
        "item": {
          "id": "9430fa11-c21f-49e3-aa58-fa651ceaa697",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "11bfbc3f-3ddf-4261-9ab6-a89e9975af4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f138c2d3-827c-4705-903c-bfd6ddfbefab",
        "cursor": {
          "ref": "b92ed8df-4484-42f7-805b-3f5aefe7280a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9f64e0fe-51bc-458c-8e95-f330e0be4cc8"
        },
        "item": {
          "id": "f138c2d3-827c-4705-903c-bfd6ddfbefab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "909ae722-bfd6-4fdf-a07a-c4b35b4726e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8aca5a-94fd-4f3a-af85-6cdd126b7a1b",
        "cursor": {
          "ref": "0f17f33c-98c3-4ee2-8fb1-88ebe86d98e0",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a66179e8-618c-452b-99a8-dab8b95db996"
        },
        "item": {
          "id": "3b8aca5a-94fd-4f3a-af85-6cdd126b7a1b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "af5c79d8-8a6c-4a82-af6b-5f59386da1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2da1c70-2d47-4650-8321-187410044239",
        "cursor": {
          "ref": "0760fd57-81ca-430f-b2b2-e65a7ba12c28",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2c95d115-87e1-4bfa-b736-d766d7b5db7a"
        },
        "item": {
          "id": "f2da1c70-2d47-4650-8321-187410044239",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "02c7887c-8835-412c-b560-317ac33b2cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a966590-7565-4bbf-8771-689b1ff98ae2",
        "cursor": {
          "ref": "30639549-92dc-4af8-a62d-a75c9cde25fb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e607dfdb-3503-4955-a919-18ebf8995e22"
        },
        "item": {
          "id": "5a966590-7565-4bbf-8771-689b1ff98ae2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9c6d2539-1675-4e38-9f6a-75d392963ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dc8f58-c2f7-434c-9eb2-659c6108fad1",
        "cursor": {
          "ref": "0985f074-566c-4fe7-991e-90a811b46f09",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5e53c395-e829-47b6-9fa1-67d11a34a66a"
        },
        "item": {
          "id": "77dc8f58-c2f7-434c-9eb2-659c6108fad1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "23694ad3-67fb-45ff-9d3b-6bc46b33e5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e981ea-a6c0-40ca-a68c-5f642c3f0d00",
        "cursor": {
          "ref": "5ed44f1a-098f-4612-9b1e-95d76fa59ef0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "01408a2d-1ede-441d-a555-768c840c79b2"
        },
        "item": {
          "id": "c6e981ea-a6c0-40ca-a68c-5f642c3f0d00",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "62c6af6e-a5d2-421d-a8b8-595364c04984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f36b50-927a-47ce-afa3-aa4768ba713b",
        "cursor": {
          "ref": "a2faf88d-5d80-46b6-923d-7517acd70545",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4535fc78-211d-49c0-873e-94c284d60316"
        },
        "item": {
          "id": "46f36b50-927a-47ce-afa3-aa4768ba713b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fc6a79aa-f809-45e2-bbe5-a6de78c25403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe4455f-2ece-4b4e-97a7-d441d4d39b70",
        "cursor": {
          "ref": "268e27f4-8605-4000-a321-23fc0d061e1a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "04e2e0ed-687a-4be5-b78d-405152a6560e"
        },
        "item": {
          "id": "efe4455f-2ece-4b4e-97a7-d441d4d39b70",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b678723b-32d9-4652-b7bc-44fbbc41b093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbca003-b768-4833-9227-44b9c6a7f745",
        "cursor": {
          "ref": "d3f4d978-e925-492e-90e8-a6ed9578a0cb",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7008229c-99af-4a27-942d-5e4135d9fa7c"
        },
        "item": {
          "id": "1bbca003-b768-4833-9227-44b9c6a7f745",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "259c51f0-f8e4-475e-ab38-43e252d45e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a993c5c-4e92-4e57-9f04-b71574f793e0",
        "cursor": {
          "ref": "6ab94887-3629-4d77-b886-4f91c4886a0a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b8c5ae01-198f-4b23-9be7-c8ff2ca0b62c"
        },
        "item": {
          "id": "5a993c5c-4e92-4e57-9f04-b71574f793e0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "771b7ce4-1e15-4286-a08b-a6b739e5d5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc1d019-4985-466e-afff-1f1d4bc3b9bf",
        "cursor": {
          "ref": "6f790a3f-8526-4b75-9db2-70d19aefcaac",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fd2e5a7a-8567-4458-89d1-89f5cb295040"
        },
        "item": {
          "id": "bfc1d019-4985-466e-afff-1f1d4bc3b9bf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fa3d5b5-93c4-4a07-bc42-0b765ed0e761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18218ff-50a2-4f3a-a621-0951fe68b526",
        "cursor": {
          "ref": "03ec95b8-bf2d-423b-9551-2faf8b8be0d3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5a366d3f-0c5f-4496-afba-8c6e885ee753"
        },
        "item": {
          "id": "b18218ff-50a2-4f3a-a621-0951fe68b526",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0dd8dd37-e120-4196-9589-8d7adb2c67a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff3cb0b-7466-4489-a5ab-21c334526cd5",
        "cursor": {
          "ref": "5aff569e-8e61-47d2-923f-06ffbc8408d2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "048903a1-308e-40f8-a5ec-03022dc051c7"
        },
        "item": {
          "id": "6ff3cb0b-7466-4489-a5ab-21c334526cd5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f49320a4-aa3f-4425-9be1-4a7609761728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095d4c38-311f-4eef-ba22-f283d607b407",
        "cursor": {
          "ref": "5162d90f-35de-420b-bfe7-28ab27fd32e8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cec31299-5335-47ed-a314-6e1da9d3cfc2"
        },
        "item": {
          "id": "095d4c38-311f-4eef-ba22-f283d607b407",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dc016ff8-fc33-4384-aa9f-2dd92f97c7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ea1e5e-0f4f-4725-ae5a-1e44b7d2cb90",
        "cursor": {
          "ref": "33a40196-0f9b-4adf-a42c-24decc8a9818",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "32e0a173-0c75-4902-80d3-09e2e81f016b"
        },
        "item": {
          "id": "45ea1e5e-0f4f-4725-ae5a-1e44b7d2cb90",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "13dd4df4-5d12-44db-992b-264aa5b53788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d97e715-d3be-49ed-8d17-7e2b183c44f7",
        "cursor": {
          "ref": "0835cecc-2ab9-4613-92c4-4aed963e33ef",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1cf7c7f0-e9b4-42a9-9e78-396cb69573bb"
        },
        "item": {
          "id": "0d97e715-d3be-49ed-8d17-7e2b183c44f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "202071eb-c37b-4e9f-8389-8e588580bb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7666896-db6e-4846-a688-00488ebb7cbf",
        "cursor": {
          "ref": "65225428-c4ba-4336-892f-1d7251e9f4b2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72d82692-0bd1-4f2e-8e4e-70b090ad1def"
        },
        "item": {
          "id": "c7666896-db6e-4846-a688-00488ebb7cbf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ecf48453-c84d-4aba-bff4-29e8a3003dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb38db0-07d4-48f3-b2a6-754279024625",
        "cursor": {
          "ref": "330f6e71-875e-4eb6-a8de-1f57c49822a8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b0175e8-aad0-4066-b8ef-44bc44343248"
        },
        "item": {
          "id": "4cb38db0-07d4-48f3-b2a6-754279024625",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7a69e275-6fc1-43ee-ad76-24781d0db14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584a6e4f-9f23-4880-944a-ff82a58cf2e3",
        "cursor": {
          "ref": "da6e21e4-ffb6-4874-bdda-3080b554bf4c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0339d5fc-0aac-4778-8861-a66a307d342d"
        },
        "item": {
          "id": "584a6e4f-9f23-4880-944a-ff82a58cf2e3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "504046f3-1000-40ed-9125-8e3c03fdac8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3bcf0b-d2ae-417a-b1a2-202f4dc053e1",
        "cursor": {
          "ref": "00e81f4d-0c74-4e2d-b287-db0603182cb3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7f82504e-2816-49bf-a42d-4afc944c5b64"
        },
        "item": {
          "id": "cf3bcf0b-d2ae-417a-b1a2-202f4dc053e1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6ca207ca-a517-447e-ade0-cf864367ea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3535e312-1337-4c6e-a991-7d163ea498c5",
        "cursor": {
          "ref": "8e3c9a10-5058-4134-ad58-e59ad14e2be0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7f0f5ea2-619d-45c2-b56d-7fe38b17fd21"
        },
        "item": {
          "id": "3535e312-1337-4c6e-a991-7d163ea498c5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1a9d3e9-10ef-4d40-ae1a-e79622152144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949d7481-e309-4283-8a23-b1cd22ebe843",
        "cursor": {
          "ref": "1175bdac-9bee-4221-a1d6-1ad4a756e3b7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2d0bc4d4-8c3c-4ece-8bf6-3b47a26fc816"
        },
        "item": {
          "id": "949d7481-e309-4283-8a23-b1cd22ebe843",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c43e692e-577f-4f4f-b35c-ac4937412c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd797d6a-ede7-412c-8792-3b614ede65ca",
        "cursor": {
          "ref": "be06fb5d-aa7e-4fad-862e-959528932fc9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cf549094-7413-47ff-b93a-0843571aaf68"
        },
        "item": {
          "id": "dd797d6a-ede7-412c-8792-3b614ede65ca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4673343c-7f7c-4db9-ace5-280a2dda6d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe5b3d3-a495-465a-8337-47ec9dbeade6",
        "cursor": {
          "ref": "5dd8f345-f04b-419d-b935-1dce5cfa226c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f5da6f6b-afec-4c96-a4bd-679355759d3c"
        },
        "item": {
          "id": "afe5b3d3-a495-465a-8337-47ec9dbeade6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9a7eaa50-2bde-4078-a7e0-110c1ce42b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3e0da3-52dc-4400-aeaa-bd121977f0fd",
        "cursor": {
          "ref": "72b38573-1743-411f-b5a6-4c92e45e1f63",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fd1571b5-3337-4895-b29f-e4984709a1f5"
        },
        "item": {
          "id": "6a3e0da3-52dc-4400-aeaa-bd121977f0fd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e5ba9168-0889-4840-8ac4-e1eeeabedf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4a139c-388a-4caf-9d4e-64d5667f22b8",
        "cursor": {
          "ref": "b067cc53-b1cd-4bba-892f-adfdad97aaa4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4971edd0-6941-4ff1-939c-ae82d4776d1d"
        },
        "item": {
          "id": "5b4a139c-388a-4caf-9d4e-64d5667f22b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dfda8ce2-cc05-426d-93fd-1c0b7d535f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5b7012-dfdc-4a95-9cb0-be07dd066ad5",
        "cursor": {
          "ref": "a6779c79-9808-4ac8-bb0b-4ca533e9a327",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "be7ef1c1-33e4-44c8-8a86-5d81706301eb"
        },
        "item": {
          "id": "fa5b7012-dfdc-4a95-9cb0-be07dd066ad5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5c08e967-c019-44c0-bde5-71d798e65ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35ef7f1-885e-440c-96ff-e95a3739e3a3",
        "cursor": {
          "ref": "76535fbd-66db-45bf-9209-5907d6b5a165",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c120b625-52bc-4647-9673-ab5cb0edb223"
        },
        "item": {
          "id": "f35ef7f1-885e-440c-96ff-e95a3739e3a3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3305d682-af64-496f-8d70-c25499351b3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480646c2-cab4-4e18-83ff-796624e7a5ef",
        "cursor": {
          "ref": "72d54730-9a7e-4a3e-b7aa-89419ca73df5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "69de60f4-2fd6-4bfe-b2a0-8de21b5882bf"
        },
        "item": {
          "id": "480646c2-cab4-4e18-83ff-796624e7a5ef",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4fd96b47-6b9d-4674-b596-57e5d15f222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2b0fdc19-6933-428a-9546-c17dfa408097",
        "cursor": {
          "ref": "8b41ddd2-ad5b-4a6e-9fd1-f311350097b3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "16c34541-9c98-43b1-a020-b2b8e045b382"
        },
        "item": {
          "id": "2b0fdc19-6933-428a-9546-c17dfa408097",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ad875ede-b37b-4cda-b5c5-4082f37b7f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "782e8253-5f00-4726-9b94-4bebf0085bdb",
        "cursor": {
          "ref": "681ade49-fe76-46a3-8ec5-5ef380f82f08",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4c105da2-115d-4823-8abf-9a6169abdae0"
        },
        "item": {
          "id": "782e8253-5f00-4726-9b94-4bebf0085bdb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ac5f7b46-52fb-4f35-80b1-7fdb8d1209cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9ed520c1-35c2-41c2-af98-abd396956070",
        "cursor": {
          "ref": "716f8fa4-ce64-4584-90e2-1f7afe5091b1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "74fdfb55-9e3d-4f29-bab0-d8de066ec8aa"
        },
        "item": {
          "id": "9ed520c1-35c2-41c2-af98-abd396956070",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6b1ddc8b-0a9b-4909-8ffc-0cb4c77c4fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ad6689fd-807b-4a56-a63e-4d0d76c3fc79",
        "cursor": {
          "ref": "79563f7a-7b2c-4731-a836-ed057d51b715",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6703d5c2-3f07-45a0-b73c-50c544330d2a"
        },
        "item": {
          "id": "ad6689fd-807b-4a56-a63e-4d0d76c3fc79",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1948d9ac-ef02-4b8a-bc11-73bfab82e402",
          "status": "Created",
          "code": 201,
          "responseTime": 9128,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "417285ef-54f9-4678-972d-57725f2c5a97",
        "cursor": {
          "ref": "cf6efac2-bdf1-41be-b230-98514496f2b9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3cc89801-0aac-4c4c-9744-311c551fbc9a"
        },
        "item": {
          "id": "417285ef-54f9-4678-972d-57725f2c5a97",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "28c16dac-79b2-4867-a15d-ceb880c0c815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "eaea18bd-3c83-4e89-bcb2-d37540fb67e3",
        "cursor": {
          "ref": "caa6da3f-5193-4fb3-ad64-33a922519526",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "67331733-0216-46dc-8171-ce26021892a3"
        },
        "item": {
          "id": "eaea18bd-3c83-4e89-bcb2-d37540fb67e3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5acbfe00-9d90-4a87-a442-e3d0aefeeb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a3609104-35c9-4387-9e2a-1347a6cdb6ee",
        "cursor": {
          "ref": "6e39905e-62de-4623-a991-f0780a0bf147",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eea77b7c-a174-4f23-b0f6-0b67b4679ce3"
        },
        "item": {
          "id": "a3609104-35c9-4387-9e2a-1347a6cdb6ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0beecf9-259c-4ecc-b310-cceacf6ae8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a71d9d-8976-4c33-a8b8-d04d18739b96",
        "cursor": {
          "ref": "ff1926cf-8789-46ef-90f6-76586b945d85",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "86ad7c53-61c0-4b2a-a193-e25ad1ab8fd9"
        },
        "item": {
          "id": "54a71d9d-8976-4c33-a8b8-d04d18739b96",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0ca431f3-5a4d-4681-9515-d78b94bde922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded40276-366d-48e2-a2bf-4e65f078a248",
        "cursor": {
          "ref": "b0491af9-dab2-4935-9787-02ec7e9f8802",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d369bf97-c6f7-493b-9d31-b22f7d8f69eb"
        },
        "item": {
          "id": "ded40276-366d-48e2-a2bf-4e65f078a248",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9599263e-e53f-4fbf-b5d7-40ce31259faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f14cd0-e530-4fcf-a5a1-ab3b8283cba8",
        "cursor": {
          "ref": "9b5269fe-ddbc-46dd-9c29-4fdd4a8589fb",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "03523314-8f45-43a2-be36-229f8ef726b6"
        },
        "item": {
          "id": "f7f14cd0-e530-4fcf-a5a1-ab3b8283cba8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3829129-c082-4675-b786-5193339162b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2def9c68-9c5e-4933-9bb4-4a2939caa0f0",
        "cursor": {
          "ref": "d3528ab7-b397-4eb5-8686-e1ea747127ca",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf8f85fd-8509-4a45-8acb-c7a391754efd"
        },
        "item": {
          "id": "2def9c68-9c5e-4933-9bb4-4a2939caa0f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9bc60e94-0a67-4a1a-8a8a-20766f742627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f013d-d59a-4cca-9e89-957902ada869",
        "cursor": {
          "ref": "4765b0b5-0e90-4868-96d6-648f9c0bacc5",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3aab7c12-66cb-464d-a83d-922fff5db8fb"
        },
        "item": {
          "id": "629f013d-d59a-4cca-9e89-957902ada869",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f9d7ce44-df66-496c-b7d5-9dfedf431f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdf4bee-14a2-4dcf-a11e-4b426f426715",
        "cursor": {
          "ref": "6442740a-c9e0-4791-a6ed-d086418f602f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "97187211-d7c4-46df-a5dc-11a01d028850"
        },
        "item": {
          "id": "0cdf4bee-14a2-4dcf-a11e-4b426f426715",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7c3cdad2-ea63-430e-a478-c1a23e1b0f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7b613e-dc4d-4e75-96d9-8258e352076f",
        "cursor": {
          "ref": "8ca09440-4011-4143-95ac-05ffa09d8890",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "982d2aa7-b47e-49e3-a505-7a5c073fc6ab"
        },
        "item": {
          "id": "cd7b613e-dc4d-4e75-96d9-8258e352076f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "46d3c9be-7c92-4581-80ec-19caa5d5f633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f413fd6-8657-496e-b76d-9c2e6cb02767",
        "cursor": {
          "ref": "da8b23b5-ccd6-444e-99e6-61d2b26bf669",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "903de117-a019-4b30-8d4d-790c0b9ffea6"
        },
        "item": {
          "id": "1f413fd6-8657-496e-b76d-9c2e6cb02767",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "98e20fac-0b39-4020-a33b-ebd4eed4c119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7b1d08-d6c7-4d9f-81ce-4e08bb4978ee",
        "cursor": {
          "ref": "561bef68-73d3-480b-a485-a4aa75f69831",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4d1bf1ed-0e69-4b16-9643-ca535118dc91"
        },
        "item": {
          "id": "8d7b1d08-d6c7-4d9f-81ce-4e08bb4978ee",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e3b9a999-3b91-4eef-a45b-de13e9f5419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfa2ef7-9383-4927-ad2d-0369b843faee",
        "cursor": {
          "ref": "a50f5989-b317-4ae3-9147-c7b399c27d71",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f1396ed2-8ea6-44af-9b63-8cf0468be1d1"
        },
        "item": {
          "id": "6bfa2ef7-9383-4927-ad2d-0369b843faee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d5335af-ba0f-4040-bdb7-da9007a1b913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af44d0a6-a77b-43be-bd72-7b3d6a91b123",
        "cursor": {
          "ref": "ffc497ff-c0ea-41a4-883b-00100bbb7703",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "312b8a44-8f2a-4771-bda2-a8acea0b03f8"
        },
        "item": {
          "id": "af44d0a6-a77b-43be-bd72-7b3d6a91b123",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a112841b-f1cc-4602-8852-022a29063076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7336041-f0e7-45a4-8e47-d587483a7962",
        "cursor": {
          "ref": "999fd836-af8c-4bdd-b34d-b51dbb53edbe",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "08716555-9421-4847-9c1d-6aceeefac439"
        },
        "item": {
          "id": "d7336041-f0e7-45a4-8e47-d587483a7962",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "939295e0-f72f-4045-9e15-d2a3a09de825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdce2c2d-7db6-4747-897d-e1c52d3e8955",
        "cursor": {
          "ref": "7a935c8a-b246-42b0-b53d-a49e010be3c8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c605faee-dfe7-424f-824d-3df92a272454"
        },
        "item": {
          "id": "bdce2c2d-7db6-4747-897d-e1c52d3e8955",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7008ed7a-1705-479d-a3f8-aa74d8759db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1f6e38-f3f6-4226-8d68-b76381fe5c24",
        "cursor": {
          "ref": "1aff2a80-3563-4dcb-ba42-49c4943206f2",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "555e8658-21c1-4dce-a046-5227b645b6fd"
        },
        "item": {
          "id": "ef1f6e38-f3f6-4226-8d68-b76381fe5c24",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "21222f08-a7ce-4b57-902c-c9b57443f5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c74310-ae6a-4c15-8911-0154b8ad1e8f",
        "cursor": {
          "ref": "a2fca66a-275c-4827-bfcc-8d263b0dde8b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c3400eb1-22bf-473a-aca1-1285609f34a1"
        },
        "item": {
          "id": "47c74310-ae6a-4c15-8911-0154b8ad1e8f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b63eb8d2-711e-47d7-9716-a6eabec310c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeadc78d-146d-49ec-8d2e-deae1be2806c",
        "cursor": {
          "ref": "cae05ebf-dd4b-4d9b-a7d0-7393ab0b8e56",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e448096-e8cb-4d55-b25f-8a9798d13fc1"
        },
        "item": {
          "id": "eeadc78d-146d-49ec-8d2e-deae1be2806c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "10f17780-8bcf-49dc-8187-43f5b6cc9915",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c429a4f3-cc84-4b53-8327-97345cecb9f7",
        "cursor": {
          "ref": "9eb30163-2a15-4378-a666-1ddca06e8f66",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cbff899c-8d56-414f-a07d-da0136d2c422"
        },
        "item": {
          "id": "c429a4f3-cc84-4b53-8327-97345cecb9f7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4e7f023c-550b-4e5d-b697-e174869a6371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83546307-f098-4419-961b-a1cb1f10a2d9",
        "cursor": {
          "ref": "9b7ca09c-1fda-4a88-a285-8d6e623b4f80",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "99eecbac-4421-4017-9bbc-3849f895f219"
        },
        "item": {
          "id": "83546307-f098-4419-961b-a1cb1f10a2d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "751a6717-39cd-4a5d-89b1-432387a5db98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f7890-e432-4f48-900b-56197916a6e3",
        "cursor": {
          "ref": "0603426c-b49c-4abc-a473-0de963f0e30a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ee59680f-7c37-420d-88a7-ed956377110d"
        },
        "item": {
          "id": "bb7f7890-e432-4f48-900b-56197916a6e3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2881315a-7827-4118-b1bf-8a7762ee6a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e6eff9-cae3-422d-a92a-1fb5fab3aa57",
        "cursor": {
          "ref": "24116475-4cec-4b04-89e5-84cd794e7796",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bc717aa6-ac8c-423b-9084-285b5fe84499"
        },
        "item": {
          "id": "56e6eff9-cae3-422d-a92a-1fb5fab3aa57",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "be54a4b3-84bc-451d-beff-d744e9ab60cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea98b6c-6c45-46f8-8877-6c10db254025",
        "cursor": {
          "ref": "83dfc38d-d3f1-4f31-9cb7-8df786dd414d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "10455b79-3448-4e9a-ae53-b66c6883ce5b"
        },
        "item": {
          "id": "2ea98b6c-6c45-46f8-8877-6c10db254025",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "895f30cb-5422-4209-8aed-963b62263df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3a035d-16fb-41f0-94f5-e92349f10852",
        "cursor": {
          "ref": "645ccaa6-5d3f-4c0e-af7c-72c8ca132743",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c40fcc5a-e08b-4482-a44f-9c7734f93475"
        },
        "item": {
          "id": "bf3a035d-16fb-41f0-94f5-e92349f10852",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f3f9c68e-f9e6-4b04-b984-fca3dee977ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac58a0ad-3947-416f-94e1-c72e7e03214b",
        "cursor": {
          "ref": "c20d75ff-01c7-4eac-9ae9-e48f8f75f35b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e107d8cb-ec7b-4ff7-aa56-82b51d61a4c9"
        },
        "item": {
          "id": "ac58a0ad-3947-416f-94e1-c72e7e03214b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "81867399-68f2-4d07-999f-d4ee45679597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7191d430-d8ef-44fa-b619-5570899c3b38",
        "cursor": {
          "ref": "b46c0cca-5445-40a6-96a3-e09bce340a12",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e3ef027d-660a-4b0d-a271-d46135703e9d"
        },
        "item": {
          "id": "7191d430-d8ef-44fa-b619-5570899c3b38",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8edf1b87-8a92-46eb-a45f-8da6a10451f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ee249278-8751-438f-91aa-6f23b64e1a1d",
        "cursor": {
          "ref": "89a0a0b8-2ed4-4aa9-a855-870954715b2f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cd0570b9-5eae-45ae-bdfb-b46de2b49bfb"
        },
        "item": {
          "id": "ee249278-8751-438f-91aa-6f23b64e1a1d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c45ee393-be38-472a-9d2f-3d767be06c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618d5ae3-12c8-4af2-9225-512cf4bcfbd2",
        "cursor": {
          "ref": "61d96804-5391-4885-80bb-ec4f7188dcba",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c2b8e191-4744-4e59-b6d9-4db241f99a0a"
        },
        "item": {
          "id": "618d5ae3-12c8-4af2-9225-512cf4bcfbd2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8d8e113-2f91-4a84-81ae-8ae5eaf3ff62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb32401-09e3-40d5-b949-96befb192e3a",
        "cursor": {
          "ref": "323cd4b7-dad0-4da1-b22a-ad34f951537a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "990aee75-dec4-4947-8f87-fee33fb0d284"
        },
        "item": {
          "id": "0fb32401-09e3-40d5-b949-96befb192e3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "58c88043-4081-4d6c-945b-9a6f42aa8f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1719a14-5bac-4b67-958e-fe98323f0db5",
        "cursor": {
          "ref": "83fbd620-3c7a-4600-b898-69d5c0a5cf77",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d759e4b9-0507-4d58-9bea-9f7382747a3c"
        },
        "item": {
          "id": "b1719a14-5bac-4b67-958e-fe98323f0db5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee983e40-6612-43f9-9b6d-602f622962e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b135fc29-ad60-4ed0-8668-140f14acddd2",
        "cursor": {
          "ref": "d5165fdf-0144-413b-ba07-b4ebf65dfcc2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ed4a1930-7582-4b71-b9e3-0adba66502a2"
        },
        "item": {
          "id": "b135fc29-ad60-4ed0-8668-140f14acddd2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9180946f-6cc0-4234-8c71-f02b9aae4ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d2c5c8-ad9f-4408-be04-ac44507f56a0",
        "cursor": {
          "ref": "557d95ee-3880-4f86-b061-edcdfdf9470b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "057fab82-8994-4832-960a-78d9e6568695"
        },
        "item": {
          "id": "41d2c5c8-ad9f-4408-be04-ac44507f56a0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8b22fb89-ac3a-4e8e-9669-eb15cb6a9216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef804af8-eb49-43cf-bb74-8b26f24b8f29",
        "cursor": {
          "ref": "ee3344cc-c41a-4dd2-b493-64608a7048c7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aa915e17-4e5a-46bb-8340-e20fb349ec91"
        },
        "item": {
          "id": "ef804af8-eb49-43cf-bb74-8b26f24b8f29",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "909e8e1e-c77c-45d0-aa51-d56ee73d30f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "3a2f7aad-c9fc-43dc-a112-d35eb812e10a",
        "cursor": {
          "ref": "b144c19d-f1a5-414e-bc0c-bfe9a01e83ec",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8f6677e2-707a-4fdf-b3e1-047523b04ef9"
        },
        "item": {
          "id": "3a2f7aad-c9fc-43dc-a112-d35eb812e10a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2639627c-56c3-479f-8a9d-a089c9e41e45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadef76d-43eb-45b8-9524-eda615799dd6",
        "cursor": {
          "ref": "c22ea368-bd9a-4740-b3cd-f8d1c9983cdf",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1998755b-ec21-4ae5-befa-35080e5d0f2d"
        },
        "item": {
          "id": "dadef76d-43eb-45b8-9524-eda615799dd6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "878ca030-ad07-4787-952a-a31e00e4284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6ad754-e07f-4f72-9407-d754ee3e0d7e",
        "cursor": {
          "ref": "26a0cd02-2b49-4e4a-a74d-9e992ea0b441",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2826852b-8d90-44e6-bbd7-52be8c49afde"
        },
        "item": {
          "id": "3f6ad754-e07f-4f72-9407-d754ee3e0d7e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37d9e2d7-87a7-485e-b527-de63c0cb8fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a4df66-5086-4069-8f15-b5ca6bf7bb6b",
        "cursor": {
          "ref": "8d669dc6-9e03-4f12-b18e-ed4ee1c38152",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "64aeacbd-e6f1-435b-989b-b82c8bd851e7"
        },
        "item": {
          "id": "29a4df66-5086-4069-8f15-b5ca6bf7bb6b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "159cfc5b-edc3-4bbb-86cb-aa0ddade22a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01c229b-b78b-42fd-9145-135a0fc5e392",
        "cursor": {
          "ref": "c4d36b29-eea6-419d-bdae-7c8c9d7db611",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "583c4029-b4ee-43ab-87ea-393731c6d27d"
        },
        "item": {
          "id": "d01c229b-b78b-42fd-9145-135a0fc5e392",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9117c5fd-0712-4e1f-b156-3d3bb46f76c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3aa7667-144e-4fbf-b94a-de9c135a77e1",
        "cursor": {
          "ref": "4f3539c2-83f0-4230-b1fd-60c6dd617688",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "233773b9-7c29-4355-9a53-a1afd60a45cc"
        },
        "item": {
          "id": "b3aa7667-144e-4fbf-b94a-de9c135a77e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8ef2dc6-aca6-4a36-89c6-3b971078b9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ec8fd8-921d-42b4-8d7a-85a480b78224",
        "cursor": {
          "ref": "9f7d47af-2a85-4a4d-b613-b86c0aa947f4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c4507035-9e13-4c5a-99cf-d8fa8fd27056"
        },
        "item": {
          "id": "70ec8fd8-921d-42b4-8d7a-85a480b78224",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f93eff6c-ed2b-4394-9589-8c03e678e83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6313a39c-1696-418b-8831-4e531226b080",
        "cursor": {
          "ref": "dcaae241-aa9a-4ece-b225-54edbbd95142",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a64d82f-70cc-4c11-a349-37b91cbb0a1f"
        },
        "item": {
          "id": "6313a39c-1696-418b-8831-4e531226b080",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7ba22708-1139-465b-9df6-abdb6448f329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae60d12e-72ab-499d-a158-4c01230c17a2",
        "cursor": {
          "ref": "0fff5da8-3cf8-4594-adb1-5e301addc7d9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "03ab82a3-c9b2-44fb-9f98-7f1633c830d0"
        },
        "item": {
          "id": "ae60d12e-72ab-499d-a158-4c01230c17a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "68347223-7d77-4719-ae12-1f0540e26c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7609ce5-ec75-45ed-a942-b63b89b93389",
        "cursor": {
          "ref": "8b8b1951-c092-405a-aa26-3ac04beebe34",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44783259-489e-4a28-aa3f-bd657734a5fc"
        },
        "item": {
          "id": "f7609ce5-ec75-45ed-a942-b63b89b93389",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "973c776d-b1a5-43bf-932b-6f4b3490854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df43fe1e-fb4b-42fa-a79f-9d609f97be83",
        "cursor": {
          "ref": "40ba4406-c206-4659-9572-f138f6512790",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ef41237d-4202-48c0-b75f-52fe0f77b2bb"
        },
        "item": {
          "id": "df43fe1e-fb4b-42fa-a79f-9d609f97be83",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f2ea8a4b-47a2-4931-bb89-ea8d8ac048bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344e57b4-2804-4e53-90b8-a861a843cb81",
        "cursor": {
          "ref": "8fd0761f-36c8-497c-8dda-2048de98708d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fb98556b-a321-4b55-91fb-0024f47e674c"
        },
        "item": {
          "id": "344e57b4-2804-4e53-90b8-a861a843cb81",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "30cf30a5-0c8e-4d6d-ba1a-14c264b0016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d858f286-921f-4d94-978d-ca142501b2ca",
        "cursor": {
          "ref": "2d891ffb-96f8-4a7d-9443-5ff6e173d03d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d2094db9-30b6-41db-9203-c69574b1f770"
        },
        "item": {
          "id": "d858f286-921f-4d94-978d-ca142501b2ca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29abab8b-4b84-4768-b67b-57c23f27a76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463f3f8-862a-4920-81a2-e69d5e7c9af1",
        "cursor": {
          "ref": "e975c525-9fd9-4a66-94a2-b7d5c9d0d4d3",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c2e7ad25-2a30-4dd9-9dbb-b20652f92f45"
        },
        "item": {
          "id": "9463f3f8-862a-4920-81a2-e69d5e7c9af1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c44d242b-2c2a-4bdf-b377-0d22135aaa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d35a5b5-f9f4-455f-85e7-e33ad926686e",
        "cursor": {
          "ref": "78cf5f44-b7db-4477-8c5a-1babd15bd91b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f90435fe-124c-4d57-894a-d68ed7788149"
        },
        "item": {
          "id": "5d35a5b5-f9f4-455f-85e7-e33ad926686e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2611e35d-4576-46d6-99b3-1f168a47f350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02758298-8a10-4589-9ead-f3a28d29df32",
        "cursor": {
          "ref": "0d99a8b2-d646-446d-9ed5-679a182b6f3b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "53784f35-8a76-442c-8ba8-38d1729621b8"
        },
        "item": {
          "id": "02758298-8a10-4589-9ead-f3a28d29df32",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "908bacee-f2b6-4d0b-b529-5b007c2535e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68003bea-cfac-40ae-b1c9-2dffd6072237",
        "cursor": {
          "ref": "7f83746b-7f35-42a7-a591-f487fb9dfeae",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6bff99f7-325c-448b-8a20-c51c3fdd1afd"
        },
        "item": {
          "id": "68003bea-cfac-40ae-b1c9-2dffd6072237",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ce52ac2-cd28-4f88-8460-428fe2ee7655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaae18f-2054-498b-90ce-eb17e0d8df1c",
        "cursor": {
          "ref": "fb2071e4-953c-4ed4-a7af-6168c1f970d6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "de007be2-7a96-482e-beb0-e7ef21de82ce"
        },
        "item": {
          "id": "ceaae18f-2054-498b-90ce-eb17e0d8df1c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8152fad3-52ae-4a2a-b1a6-c16591061cdd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "fcd51744-da4a-43bc-a6a6-6e4115e56718",
        "cursor": {
          "ref": "7796ed2a-017d-41be-9c2f-8edd728159e3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "685be004-66bf-4a64-b264-4a0eee931972"
        },
        "item": {
          "id": "fcd51744-da4a-43bc-a6a6-6e4115e56718",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e6ef6d0-6b35-47e6-8bc8-7309519a30b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27d1e65-cd00-474a-af2e-55fe21872dae",
        "cursor": {
          "ref": "e87f90d1-c1ab-4fdf-89cd-a2e0e0286cd8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "da67ce92-9305-49dd-9906-1391eca5e674"
        },
        "item": {
          "id": "d27d1e65-cd00-474a-af2e-55fe21872dae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "38ebfdf2-25b5-4c5a-89dc-5b3e440865e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638753db-c55d-4438-aced-7b15f4b3d0a7",
        "cursor": {
          "ref": "f3ff8037-516e-4ec8-817f-f0b6e44d44f3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "70426ec3-fa59-4d9f-8ec5-86653f8a238c"
        },
        "item": {
          "id": "638753db-c55d-4438-aced-7b15f4b3d0a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ebb4b8d-6c73-4b4b-9842-d1fee3b54079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02721348-6612-40f9-958c-c5e384789903",
        "cursor": {
          "ref": "ac7e3142-2db9-4632-84eb-2887c65398e6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd60f235-c7b3-4942-959b-46a11643fc0a"
        },
        "item": {
          "id": "02721348-6612-40f9-958c-c5e384789903",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "60495aa3-13e7-4fec-a141-a8fdd9ec3944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be7f243-9952-4232-93d6-de778f7530c5",
        "cursor": {
          "ref": "9c8290dc-082c-4fc2-8905-6d2c5c4e4980",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fdad5cae-a9fa-4f42-9df7-a77e2b515025"
        },
        "item": {
          "id": "4be7f243-9952-4232-93d6-de778f7530c5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9527930d-8387-45a9-8ceb-8bad7cda232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b79a2c-12c0-48fd-bacc-da09799ca58c",
        "cursor": {
          "ref": "18883e08-aa2b-4172-a8a3-d18e68430233",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "28f9c28c-fca1-4a55-9389-59a3a9d8718b"
        },
        "item": {
          "id": "c9b79a2c-12c0-48fd-bacc-da09799ca58c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f2eeb771-a02a-4e99-90dc-2eb4ab608e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa83815-cf7c-41dd-88bd-dc30685ed752",
        "cursor": {
          "ref": "4859384a-5d7e-4594-a749-c906172f5218",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "841d0d44-710a-4622-8629-cfcda339ea5d"
        },
        "item": {
          "id": "bfa83815-cf7c-41dd-88bd-dc30685ed752",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0562c5e3-fd08-4223-a010-f773a6a9523f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc8f391-1c84-4ed0-8449-bc6011692017",
        "cursor": {
          "ref": "e837667f-e5b1-4253-bde8-fbd188e35246",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8d540e4e-20ad-4630-8634-3e93a2022267"
        },
        "item": {
          "id": "6dc8f391-1c84-4ed0-8449-bc6011692017",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7bcdaec6-8ab5-4829-bbeb-6da3feef72d0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "0f3c68db-d4d0-4ab9-9dc2-6ba58b773383",
        "cursor": {
          "ref": "c8633657-b6c2-464c-9bad-05846b9a1ce1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "52794c7a-3662-4369-b532-45e0618cf01d"
        },
        "item": {
          "id": "0f3c68db-d4d0-4ab9-9dc2-6ba58b773383",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2f03eccd-e862-4613-8682-0ea83c2b4f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecf52f7-4d4b-478e-85e6-2f197267ecb8",
        "cursor": {
          "ref": "c7cf7c47-a432-459f-9a09-46fd31ab3d13",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "94d5e325-ef9c-4f2b-a369-3221ed32c95f"
        },
        "item": {
          "id": "5ecf52f7-4d4b-478e-85e6-2f197267ecb8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef139636-06ed-4da9-ab0d-f6addfdfac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cef626-5029-4572-86d5-e6b6e93e840a",
        "cursor": {
          "ref": "6389edc9-969c-4968-aea6-ae5d0dde34b9",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "45e04873-7bba-4b47-8e63-afe555aa636b"
        },
        "item": {
          "id": "02cef626-5029-4572-86d5-e6b6e93e840a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ccd4018-9128-4e07-a748-d869913b6b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca68946-8488-4211-af92-9ba8e59c80c8",
        "cursor": {
          "ref": "eebc101b-8155-4772-ac2c-f31e255cfc40",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "084b66a7-9f6f-47bb-be92-edf025856a2b"
        },
        "item": {
          "id": "7ca68946-8488-4211-af92-9ba8e59c80c8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "207551cb-5de8-412b-a6f5-869c5bf8359f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5938e5e0-0007-46ca-93de-f1363b694a7b",
        "cursor": {
          "ref": "4a57dec2-a468-49a8-bf37-2b4a7f879b89",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fab84742-6f44-4d61-b5ba-f115d3588706"
        },
        "item": {
          "id": "5938e5e0-0007-46ca-93de-f1363b694a7b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f8052a1-9ab5-458a-b3f0-ba9310ff50c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9c69c8-bfb2-4967-928f-390af523a64b",
        "cursor": {
          "ref": "a63a0f7e-3497-4331-98aa-eff51b368a59",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9d261cb2-444d-48e5-aece-41a33ccb5a42"
        },
        "item": {
          "id": "8f9c69c8-bfb2-4967-928f-390af523a64b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6d77c02-4f4e-465d-bb35-21d8be566bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caed8fe4-404b-47c7-8af2-5a319b0fd947",
        "cursor": {
          "ref": "7eca8bac-8de5-4781-b9a7-8ddcbe893dc4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1731df5e-c7b2-475b-8242-558ad6ed446a"
        },
        "item": {
          "id": "caed8fe4-404b-47c7-8af2-5a319b0fd947",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "76c29053-5d2b-4f90-8545-75294892535f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "df8186fe-7430-4aba-9ee3-d02cf8aa292a",
        "cursor": {
          "ref": "ce559641-5502-4214-bb30-cb200976a749",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fb53916f-923a-4a44-83da-71793e51d6b1"
        },
        "item": {
          "id": "df8186fe-7430-4aba-9ee3-d02cf8aa292a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9ea592d-72c1-4019-a11c-4def72e73475",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "71abdc32-9529-4d35-8de5-68113c831ea2",
        "cursor": {
          "ref": "f43e5aad-8542-48d6-ad7d-de2313b7bf07",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7beb0faf-aa68-4c6c-9299-9199517941a1"
        },
        "item": {
          "id": "71abdc32-9529-4d35-8de5-68113c831ea2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9c7110d2-c644-4b66-abe2-0b58aaaa17f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "e505e3e3-6d82-4910-b0d0-a228ade6be02",
        "cursor": {
          "ref": "68610be9-4c79-4ba0-845b-0d91fff915c7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1120194c-c814-4ed8-a53b-3eed9c5c3b57"
        },
        "item": {
          "id": "e505e3e3-6d82-4910-b0d0-a228ade6be02",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a434c747-bd32-4545-8614-7194dc93944b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "9e7aaefd-63e8-454d-9868-8946dd475c42",
        "cursor": {
          "ref": "d9640bf3-2957-4fa3-a7ff-58d3348e774e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "db88800c-28d2-4ee6-b03c-968dd8fc76a9"
        },
        "item": {
          "id": "9e7aaefd-63e8-454d-9868-8946dd475c42",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1746662d-7f82-4041-8e10-afab2ec98859",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "495e5edc-e009-40ee-8510-33e1bc23baa6",
        "cursor": {
          "ref": "534aa1c6-3ed2-46bc-a282-292e96b7cd63",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5afbdc45-a20d-4ade-946e-277691c4c51b"
        },
        "item": {
          "id": "495e5edc-e009-40ee-8510-33e1bc23baa6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c9f238c9-30bf-49fd-b712-f2650107cd2f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "4723ccea-6f8e-4782-89f6-d8011e53feaa",
        "cursor": {
          "ref": "3e4b0d83-c82a-42b2-b628-5bb3b97c9f74",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a036c837-5095-48c9-a0c6-b5cec3b75387"
        },
        "item": {
          "id": "4723ccea-6f8e-4782-89f6-d8011e53feaa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "023613a0-82fe-488c-ab64-b97833ea1206",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0974546d-c7a4-4b9a-a416-c2adfbfe9906",
        "cursor": {
          "ref": "ec724dc0-0735-46ca-a52a-8951bd3ea98d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2e455108-636a-4740-b427-e0449576b824"
        },
        "item": {
          "id": "0974546d-c7a4-4b9a-a416-c2adfbfe9906",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0157007c-44e2-451a-8a50-9d5007af9e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c725c-34d0-418f-8496-386335d4df62",
        "cursor": {
          "ref": "40d90a3d-64b4-4edb-b9be-2b269a31aeff",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9310cac9-1bb4-4ff6-a45b-18a67ef374a0"
        },
        "item": {
          "id": "f04c725c-34d0-418f-8496-386335d4df62",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9dcb5b0d-1188-40b4-a625-d15eb413152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2306cee9-93ca-4ff4-a657-17f65c2025c8",
        "cursor": {
          "ref": "0850003f-b1bf-4aeb-aaee-4e2a6e479930",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e08c14ca-d960-46eb-b27e-fd2a86c82440"
        },
        "item": {
          "id": "2306cee9-93ca-4ff4-a657-17f65c2025c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "89199c63-f571-40d6-b438-5f8f3a372cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64447c5e-ba29-4a3c-8fc2-156e52fa95dd",
        "cursor": {
          "ref": "e91ad919-121e-4af5-97ba-6d6691099a6a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1915ed89-b20f-44c1-ad51-1d67fb33097c"
        },
        "item": {
          "id": "64447c5e-ba29-4a3c-8fc2-156e52fa95dd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ed57b7d-c536-49f8-9538-1649ace8aeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af0b0bf-82af-4678-88ad-99b635c41b96",
        "cursor": {
          "ref": "b32a66ce-59a5-4c4e-a7cd-6995e77b7f10",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "131698d8-8ab0-4213-9552-59e5542f69c8"
        },
        "item": {
          "id": "0af0b0bf-82af-4678-88ad-99b635c41b96",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eb5d6e72-db77-44f4-8fc2-8977c37dde8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d21b426-272e-4207-9957-87b2ce12ac7b",
        "cursor": {
          "ref": "f367ee4f-f4ac-41d8-ba50-79368a9e136a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7b7bb990-39d6-4d3a-813a-284244c0d6a3"
        },
        "item": {
          "id": "4d21b426-272e-4207-9957-87b2ce12ac7b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a352943b-349f-45a9-bb0a-d02d46dcf6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ce1f2c-86ad-4462-9283-6d60277bd82f",
        "cursor": {
          "ref": "2da8f53c-2903-4979-a2ff-2edbda621802",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e87aaf82-e17e-4628-830b-0d193e1ba336"
        },
        "item": {
          "id": "49ce1f2c-86ad-4462-9283-6d60277bd82f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0c987fa4-2f87-4f87-ae9b-fa552f5eb9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b13dc8c-e915-468d-9efe-7c9955a9975f",
        "cursor": {
          "ref": "e08b2414-ebee-445c-ac14-8d98b8eae67f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "44afbe90-9651-4c9a-881e-2d6f2f60e2b1"
        },
        "item": {
          "id": "1b13dc8c-e915-468d-9efe-7c9955a9975f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "05a6f072-9039-4af3-8c17-028f64f83d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa3cff6-73f0-4af2-a5a6-adc64c75b6c3",
        "cursor": {
          "ref": "fe57c1ce-f394-4bf7-b3e1-408d97ffd269",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c5a29811-ad4d-42d6-80c9-82e70857f610"
        },
        "item": {
          "id": "faa3cff6-73f0-4af2-a5a6-adc64c75b6c3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "996ba019-5920-4837-883f-07ced038c34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ab5f13-b8b4-4834-a587-6cf645f51934",
        "cursor": {
          "ref": "692adda4-00e4-463d-9d41-f79372cf0645",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "01481520-709c-440d-b3fd-b1a0f7c3e450"
        },
        "item": {
          "id": "92ab5f13-b8b4-4834-a587-6cf645f51934",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "089234e3-2659-4f0d-ae13-f87e0895e3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd857ff-f9a2-4481-8361-1d6720494b3b",
        "cursor": {
          "ref": "ee7d16b7-f791-479c-a326-044ad2aed2b7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "55d2a9a1-4f0f-4e0a-abbd-a3f86c2a5f95"
        },
        "item": {
          "id": "3fd857ff-f9a2-4481-8361-1d6720494b3b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eed84eef-73bc-44ac-8e8d-a8b473b025e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9ab9c8-ba72-422e-8655-cb1e262d1a6d",
        "cursor": {
          "ref": "9875fe41-344a-4a76-b591-e999a70cd5b8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "872f864d-81c2-4d57-835c-c030984c208e"
        },
        "item": {
          "id": "9b9ab9c8-ba72-422e-8655-cb1e262d1a6d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ee2c881c-553a-49b2-9698-e1c40f0ba1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89344027-1067-4a8b-adbc-144a07ac1d37",
        "cursor": {
          "ref": "c125a72e-ff9a-4141-8861-c773fb84e0e1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "81965e32-307c-42ff-aeb1-ba8ed5ce2ede"
        },
        "item": {
          "id": "89344027-1067-4a8b-adbc-144a07ac1d37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eb034e73-bf9f-44db-908b-acb45ab6a7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1151487-8f5e-412d-af91-fd6c46f0c8a9",
        "cursor": {
          "ref": "c1a1962d-3075-446f-81db-f8df49848b8a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1f50b64e-90ae-4bb2-8eab-9371cf351430"
        },
        "item": {
          "id": "a1151487-8f5e-412d-af91-fd6c46f0c8a9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4d4e7c1e-4b26-40ac-a590-f11841ef7a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff54b50d-6d1c-4ea6-84a6-8f4e3de34f59",
        "cursor": {
          "ref": "a8fdeecf-b00d-4491-998f-4ecf9315fa3b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e66fdd84-e002-4eeb-b58a-961422abd872"
        },
        "item": {
          "id": "ff54b50d-6d1c-4ea6-84a6-8f4e3de34f59",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b61bc329-fdd4-45c1-8864-c1b5a184b68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1894ee9d-b2ff-4167-b026-046255b6c306",
        "cursor": {
          "ref": "4890d926-05f9-4fe9-ac81-751baee9c736",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b7975973-2853-43bf-8623-d6dd6e1cd176"
        },
        "item": {
          "id": "1894ee9d-b2ff-4167-b026-046255b6c306",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "95e7bd29-4d48-48d3-a3c1-722b1823adc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c4ab78-c469-4178-8efe-88309a68e4df",
        "cursor": {
          "ref": "5b7affc9-bf6b-4014-a77d-03c0301c5f73",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eca57b2a-58dc-4ac9-acc2-b2a2a7fd4598"
        },
        "item": {
          "id": "c8c4ab78-c469-4178-8efe-88309a68e4df",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e27641ab-109d-42b0-b34f-83f03003df8b",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5b8cf785-9000-4e2d-8079-c47fd60f0993",
        "cursor": {
          "ref": "727ea5ef-0c0b-4ac6-a246-a7d0b6ed168d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0d56a94a-3d0b-4bc1-83fd-6a2025743aab"
        },
        "item": {
          "id": "5b8cf785-9000-4e2d-8079-c47fd60f0993",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa65cdcc-dc73-4f36-a9d0-526f38e874db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b317a7-9214-4980-9739-a5698dfeb4c8",
        "cursor": {
          "ref": "5e706c64-772e-4f27-a98f-a78df65485a9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bd50ef10-e7ba-46c0-aac0-17f11b588d35"
        },
        "item": {
          "id": "16b317a7-9214-4980-9739-a5698dfeb4c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "31e1d9af-a678-4be8-9c77-11ac63c99374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f36f7d-1601-4cc4-b9da-2d78ca9facfd",
        "cursor": {
          "ref": "e59451a8-bdd2-4c8c-9da0-72523eb1526e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2f66a12e-5aed-4cb0-9ddc-c71d60c3bb55"
        },
        "item": {
          "id": "40f36f7d-1601-4cc4-b9da-2d78ca9facfd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "de6b2814-672f-4a6d-8777-61b4ee197b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eb1112-1ad7-489b-a53d-41326ac1aaea",
        "cursor": {
          "ref": "73fd497a-04e5-425a-adf8-7c30f4367c5d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bfa0ee74-15c5-4a54-a1d8-f13f7b3e39a5"
        },
        "item": {
          "id": "95eb1112-1ad7-489b-a53d-41326ac1aaea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2f6227d0-6297-4a3d-afa5-d95879175550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809cb56-a545-44a6-9d8d-955e1d00b539",
        "cursor": {
          "ref": "ecdce766-1cd1-4f8e-9ba1-c1ebb41a580c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7b2ca741-44c2-4e65-991c-c9b4f98c40d8"
        },
        "item": {
          "id": "4809cb56-a545-44a6-9d8d-955e1d00b539",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3bcb27bc-a1ce-4036-8209-5afb990be60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb56b15e-dad0-4bb3-9d2c-3a9f00bfcc76",
        "cursor": {
          "ref": "8d8c4a47-5252-4d4f-9c82-cac452ca1351",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fab90835-1ea0-4269-b279-e2d70b79f7fc"
        },
        "item": {
          "id": "eb56b15e-dad0-4bb3-9d2c-3a9f00bfcc76",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "049d5ab0-3237-478f-8ecf-b914545f4bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f521700f-16b8-4a18-a136-7d5d3e2dd2d6",
        "cursor": {
          "ref": "f7bd163d-3493-4a2e-9034-f1053962116a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8b5467cc-fd94-4424-b776-3cf743983bc2"
        },
        "item": {
          "id": "f521700f-16b8-4a18-a136-7d5d3e2dd2d6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e4b77589-cef4-455c-9e46-94cfc7431971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facd8870-6b97-4185-9e9e-2770a8d1713c",
        "cursor": {
          "ref": "42fcaedf-04e6-4b41-944e-e162181137be",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "516268cd-8171-4c7e-9cad-16a83b769e8d"
        },
        "item": {
          "id": "facd8870-6b97-4185-9e9e-2770a8d1713c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "218e79c9-cf8b-4660-b39f-2c556d3da3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd53363-162d-4ded-bd83-f5b5d84cde82",
        "cursor": {
          "ref": "19367b75-81fc-406b-8d3e-8549399d8d40",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "64f58709-55e4-4234-aadb-dc6a80179589"
        },
        "item": {
          "id": "1cd53363-162d-4ded-bd83-f5b5d84cde82",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e7649967-4a62-41d3-9761-cd8bdb36cc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808c5ed4-077b-45d5-a656-a273a8ab9c41",
        "cursor": {
          "ref": "17c69ec2-26f1-4987-bf2f-f23e22bc75eb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0b8d7e24-f999-452d-b26e-f4564b271c92"
        },
        "item": {
          "id": "808c5ed4-077b-45d5-a656-a273a8ab9c41",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3b3c9d2e-f9c5-4cb0-aab7-1f5f52976393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e49d3d-1951-475e-a3da-fc6c78fa57b2",
        "cursor": {
          "ref": "f50e9256-ea28-4bcf-a8e9-752c9f664a17",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "22e77fd9-d655-4f9b-8c44-9fad70e095e5"
        },
        "item": {
          "id": "04e49d3d-1951-475e-a3da-fc6c78fa57b2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cc6b32e9-18af-4807-b8b7-ba80301a0709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b5ceb2-551e-4ff3-accf-c1b7879cbbcf",
        "cursor": {
          "ref": "66c31ca3-9534-428b-8f64-84bf7bd7d8ae",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fa393ca6-65b6-4e79-8bd9-6773450a01b0"
        },
        "item": {
          "id": "62b5ceb2-551e-4ff3-accf-c1b7879cbbcf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fa66780b-b92e-476d-859b-fd9215b335e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c7ac29-a63d-48a8-939c-d8c70a44fa73",
        "cursor": {
          "ref": "f122a54d-c590-4309-95c3-ce937a8b5db1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "103a2b1b-7ed7-4433-a109-5c10b6e813cc"
        },
        "item": {
          "id": "e8c7ac29-a63d-48a8-939c-d8c70a44fa73",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d122705e-d1e3-4bf8-80c5-d11acbc5359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fee2fa1-53a2-45e8-9340-5ff095ab3eac",
        "cursor": {
          "ref": "96f6f83d-d475-4ac8-849d-638c4775cc43",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5757809d-8133-41d0-83e5-e069f79dfac4"
        },
        "item": {
          "id": "8fee2fa1-53a2-45e8-9340-5ff095ab3eac",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "74ea7a9b-cb35-465c-8c49-c2d9cb99539c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7372c0-28da-492f-a7c5-3a7d166bf718",
        "cursor": {
          "ref": "75b5bb88-e3c9-4337-9291-44f8f348fc07",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e7086d5c-02e8-49fb-9842-3b45f1d47557"
        },
        "item": {
          "id": "dc7372c0-28da-492f-a7c5-3a7d166bf718",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c18ad17a-cdd9-4f1a-b64e-b486a4410877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baa20d3-dbe8-4f8d-9049-9f89be1891c8",
        "cursor": {
          "ref": "4128c66f-b999-4e98-99d5-21cd4d312dc7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb55415b-5a6b-4834-842f-bdc05cb80b27"
        },
        "item": {
          "id": "2baa20d3-dbe8-4f8d-9049-9f89be1891c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e38bc622-37a5-4c8d-8fc4-2abb01af3849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ad8ab-850e-43e4-ab63-86ce73b0af74",
        "cursor": {
          "ref": "6dd1cdb3-ce5b-4c5d-8916-e48579fb4d68",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2863ab0b-6c19-4ca9-b456-4161a7dffa2b"
        },
        "item": {
          "id": "c32ad8ab-850e-43e4-ab63-86ce73b0af74",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d8f62e1f-7b9c-4ef1-ae8a-3cca56fb6e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425c83dd-967f-41e6-b802-a8034337cdf8",
        "cursor": {
          "ref": "b7df0357-988f-4f45-a663-01c7df232b24",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "29dfbe85-d0bb-472d-bb7e-80f73e8fcef4"
        },
        "item": {
          "id": "425c83dd-967f-41e6-b802-a8034337cdf8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c59e7d1c-1296-4bd0-a38f-d8599314bd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed384ac5-3049-4826-a715-9eca9d82a4be",
        "cursor": {
          "ref": "d823b531-7977-4c6b-ac77-2260126cead5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f0ba2b7e-1708-4350-af57-7c1b1a09d074"
        },
        "item": {
          "id": "ed384ac5-3049-4826-a715-9eca9d82a4be",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e40863c-4cc2-4c9b-9a75-79c07cb9aec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aa27a2-f96d-4013-926e-76348340050a",
        "cursor": {
          "ref": "a7c80984-6f0c-4d83-bd44-949f4700ffc3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0a121374-23f7-44df-80b0-af37c08ff554"
        },
        "item": {
          "id": "e6aa27a2-f96d-4013-926e-76348340050a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7592a782-e680-44f5-8b26-c42e6f2e5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6367508-3435-4e1c-9a0f-ba68ff59bbbc",
        "cursor": {
          "ref": "013b98ce-11be-4ec4-82a6-259adc4c0a79",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f0599ecf-9d24-4b43-92d0-36f0afaca806"
        },
        "item": {
          "id": "a6367508-3435-4e1c-9a0f-ba68ff59bbbc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "35d5d2b3-c5da-4789-86b1-d3cd07899838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0800a54e-45e3-4f36-9ea8-0811bf5d7cc8",
        "cursor": {
          "ref": "af9d7ecb-53e9-4fd8-865b-7403ccdc5b95",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b336a450-d059-4fe9-b2f5-f536de389522"
        },
        "item": {
          "id": "0800a54e-45e3-4f36-9ea8-0811bf5d7cc8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "053eb123-83e0-49ca-970a-5bd547339cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498f53ef-a07b-4429-a400-2a84af861b1c",
        "cursor": {
          "ref": "ad2d08cf-b86f-4925-b01f-b7960fd0862e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8523faac-b25f-481a-b2ed-4e7072bfb9e1"
        },
        "item": {
          "id": "498f53ef-a07b-4429-a400-2a84af861b1c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13258551-959f-4ebe-a32c-5dd59902b448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb064226-ba55-46cc-99e4-7d22ac8055aa",
        "cursor": {
          "ref": "5da58dbb-42b4-4d6f-9118-4773f43b5632",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "967b5f5d-28cf-4099-a039-a66697b6da36"
        },
        "item": {
          "id": "bb064226-ba55-46cc-99e4-7d22ac8055aa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1cea5c0b-4887-451f-af78-f7548843fb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e50b4bf-f777-4e68-8df6-2fafc99c4d30",
        "cursor": {
          "ref": "186bea99-c56c-4d05-90e9-711fae62ec1f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a8e563d4-098d-4b9a-b951-93734ee8f032"
        },
        "item": {
          "id": "7e50b4bf-f777-4e68-8df6-2fafc99c4d30",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ae03ed0f-2aa0-4e61-9540-e17e44325336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77abac8-4000-412f-96bc-b06c46caa62b",
        "cursor": {
          "ref": "efed4ac0-82c6-4bcd-8179-5b08174360ad",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2dbb6733-afac-4186-a6b6-718ef5fc6112"
        },
        "item": {
          "id": "b77abac8-4000-412f-96bc-b06c46caa62b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2dff0680-c364-4b1b-a0bd-4cd4283dea49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e18c7-c876-4237-a193-bc3bd133def6",
        "cursor": {
          "ref": "c7eeec9b-577a-47be-8d25-d77717455d3d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4171e51c-c934-4112-9cb0-6c0bcf0eea3b"
        },
        "item": {
          "id": "602e18c7-c876-4237-a193-bc3bd133def6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "daf51c3d-d6d0-45b3-a801-56df0211345c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc52bba4-201f-4e30-b62b-f491ddb83d4a",
        "cursor": {
          "ref": "31fbb152-b5f9-4a35-89f5-ae60ede6867e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bbe32298-8430-4b90-b82a-cc7f0ba43482"
        },
        "item": {
          "id": "dc52bba4-201f-4e30-b62b-f491ddb83d4a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "de76b653-9842-4b2d-a9e2-9b4159b539fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa791fb6-ff57-44dc-af4c-c3d9e0792271",
        "cursor": {
          "ref": "e07f2e6f-c069-4662-a041-64e2fd78ff32",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4bb1220f-e2eb-4134-b244-9b5125529182"
        },
        "item": {
          "id": "aa791fb6-ff57-44dc-af4c-c3d9e0792271",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9fde6467-0d6d-43e4-9537-a55e14b2b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14226207-07cd-4ac9-a7c7-687eed6cc0eb",
        "cursor": {
          "ref": "40abf692-05fd-4414-8020-8607f6d6c496",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c64013fa-f430-4aad-a738-a4c14ef74228"
        },
        "item": {
          "id": "14226207-07cd-4ac9-a7c7-687eed6cc0eb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8207ccec-c879-4cad-8e07-fcebfb1c4c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2c883-43e9-4aed-9ac6-0da925233964",
        "cursor": {
          "ref": "8775e909-da2b-477b-9a78-67e9b39612f5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "71ed51ac-0133-4a3f-b71b-b09a1ca143d6"
        },
        "item": {
          "id": "42f2c883-43e9-4aed-9ac6-0da925233964",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe00ad6e-4afb-4d3f-a0b5-86b4b34239b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7a90b8-88d1-4dca-bd4d-60a1c6cda303",
        "cursor": {
          "ref": "62149101-718a-4277-b689-e00436e7d525",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7b05e360-370d-4c0e-a643-d77c3ff32450"
        },
        "item": {
          "id": "ee7a90b8-88d1-4dca-bd4d-60a1c6cda303",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0f50a139-b4a5-4ac0-89c6-0ad2450dadd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e83530-5559-4d1a-8712-cfafbc3622e3",
        "cursor": {
          "ref": "2a5b6431-37ba-4bb4-b8f0-6a597fb7d3d1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c7a447f-099b-4aa9-b2ef-6781cdda96af"
        },
        "item": {
          "id": "01e83530-5559-4d1a-8712-cfafbc3622e3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4c1d9e64-c5c1-4be8-b355-fccd5ad497dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e470038-c773-4ace-bdf6-0136eedaeb3a",
        "cursor": {
          "ref": "c9aa1bb4-4d77-4924-9ef2-701b0110345d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5f09b6b1-b497-420f-a788-8e8bce30cbd5"
        },
        "item": {
          "id": "0e470038-c773-4ace-bdf6-0136eedaeb3a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "40759f67-1cb1-4d13-befe-d55c2c1be81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb39a81e-331f-476c-8c41-387d86a8eb74",
        "cursor": {
          "ref": "c5761de2-ae0b-432f-9f27-b7a6ce764034",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2fb6c626-d8fb-4227-b415-7f15e90ce421"
        },
        "item": {
          "id": "bb39a81e-331f-476c-8c41-387d86a8eb74",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6de7dea5-dc51-4a20-a18c-325cf9bb7e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a863bad4-a2e1-47e5-9bda-341cc81556bb",
        "cursor": {
          "ref": "750d19a6-72af-4155-821d-7cf394fd34c9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d8487385-4ec2-489d-849f-289bd565f932"
        },
        "item": {
          "id": "a863bad4-a2e1-47e5-9bda-341cc81556bb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "67471591-c499-49c4-b31b-7d1cb7e4986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39675687-2ae7-401f-b800-9286e5da4405",
        "cursor": {
          "ref": "d7a5128e-97e8-4c34-9b3f-aabf92b4c1c4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "82c673ce-f327-4b72-8a8f-4cd7ea60cb51"
        },
        "item": {
          "id": "39675687-2ae7-401f-b800-9286e5da4405",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dd154022-1842-4176-8d30-6fa4ccb0d66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842a219e-450b-401e-909f-eeff5371ca22",
        "cursor": {
          "ref": "39a51613-64be-4214-b460-f823383bbab2",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "13a1303d-1deb-4490-9c7a-0f78563b79c7"
        },
        "item": {
          "id": "842a219e-450b-401e-909f-eeff5371ca22",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "18adaff6-027a-4b71-8ebe-04b46644127d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70f971b-1221-4bf2-a457-7124ce5c0ddb",
        "cursor": {
          "ref": "28be8feb-5a9f-41cc-9aa4-1277f23f5619",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "15c34a4b-ba7b-4383-99ac-7833fcb4d38c"
        },
        "item": {
          "id": "c70f971b-1221-4bf2-a457-7124ce5c0ddb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "27ecd3b4-463b-4581-9b19-3c794c230a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbae1e2-c0d1-41c3-bed6-903d85beebc9",
        "cursor": {
          "ref": "fa51f102-25a7-4cb2-ac1e-c3d8053ae057",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "976c0ada-6ad8-4ddc-8c3c-1cde880605b4"
        },
        "item": {
          "id": "6dbae1e2-c0d1-41c3-bed6-903d85beebc9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f01f7ef2-3935-4228-9101-65d7ceb6106d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b597f8b0-5eb6-41f3-869a-f04e3c795e0d",
        "cursor": {
          "ref": "79133a47-9b4b-4b36-951b-9a4f06077f8d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "da744aea-b69b-47ac-9e0b-94315043b446"
        },
        "item": {
          "id": "b597f8b0-5eb6-41f3-869a-f04e3c795e0d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "58d33672-a6d2-404d-97bb-b1c6b4477039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1494f8af-59f7-4f61-8f34-62e85f0d63db",
        "cursor": {
          "ref": "d1dbe346-7dfd-4551-8000-b9d2c62f7931",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cff7e134-f0f5-413c-befd-93fb6609c987"
        },
        "item": {
          "id": "1494f8af-59f7-4f61-8f34-62e85f0d63db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8fd59df-10d7-448e-acd5-30e57aea8336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab56a87-a02c-4199-ae62-fbad41b88576",
        "cursor": {
          "ref": "72622166-15b3-4aa7-83db-9376ea1a2563",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2f882453-991d-4866-b2a8-724732e5b7f7"
        },
        "item": {
          "id": "fab56a87-a02c-4199-ae62-fbad41b88576",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "925f05da-013e-40d2-92ed-776f632a7455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dae5298-4e83-4c9f-b6b3-1ceab4bffb8d",
        "cursor": {
          "ref": "7641ab6b-ad83-4ad4-8d0c-37fb5ebaf659",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4f1961f6-1cf8-4685-a571-2d24941a4283"
        },
        "item": {
          "id": "5dae5298-4e83-4c9f-b6b3-1ceab4bffb8d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d4419789-b0d0-471d-9632-85eecbf82e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5d175a-1010-4c71-84b2-83c81bb8ac94",
        "cursor": {
          "ref": "efa153f3-fb6f-4b3c-8ac0-3ce3529a5553",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "61db9322-be5c-44c3-8606-3efb3e6799b0"
        },
        "item": {
          "id": "ed5d175a-1010-4c71-84b2-83c81bb8ac94",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dd66d3dd-fc0a-4750-9316-b421f5a023da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef154bf8-eff9-4d9d-a77e-304012a65a32",
        "cursor": {
          "ref": "a5654ba3-bbe5-4a4e-98a2-f4a5cab16e28",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a5b91300-8871-4ab4-a9e1-d2dc105819c0"
        },
        "item": {
          "id": "ef154bf8-eff9-4d9d-a77e-304012a65a32",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a19d14fb-9c45-44a6-adb0-5ea5c2451d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb187e-2936-48a3-a282-d94f36e5ef93",
        "cursor": {
          "ref": "5873bb6e-27b5-4a48-8534-fce5579807e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dbbf8ef3-1e48-462f-b750-b28e8e9f53a6"
        },
        "item": {
          "id": "4cdb187e-2936-48a3-a282-d94f36e5ef93",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9fbecf9c-9735-4d73-813f-218d128393fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a9d2ef-36c6-4de1-afa4-a242da8874e1",
        "cursor": {
          "ref": "ea06a924-2b63-430f-bdba-a532798942bf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "372613ce-b9ea-4022-a7ac-6ff0432571d4"
        },
        "item": {
          "id": "d0a9d2ef-36c6-4de1-afa4-a242da8874e1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ff9f7437-fe40-45a7-a2c7-090cd4ecd3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8739d7-1daa-4c85-8e0a-d7183b034278",
        "cursor": {
          "ref": "80387bba-f496-4dd7-974d-6ecb0b868c45",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "31867655-ce70-44e1-bb3e-6e3f45d420f1"
        },
        "item": {
          "id": "7a8739d7-1daa-4c85-8e0a-d7183b034278",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ad0b4364-44ec-40f8-b78d-89fe24034dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c853f272-55e8-4c05-a864-48677c33dc3b",
        "cursor": {
          "ref": "ffe9241f-7961-4415-8619-f393210496ff",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "193a03c5-54cf-43ff-80b9-cfee246a4bfd"
        },
        "item": {
          "id": "c853f272-55e8-4c05-a864-48677c33dc3b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "71d0e005-e8f6-4a44-b047-86b244f82379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4415d487-79d9-47fa-bf0a-adbb1bb73140",
        "cursor": {
          "ref": "8752663e-39d4-4e5f-b590-1a73df509829",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa671a6a-764b-4493-8c2f-5b817a22e149"
        },
        "item": {
          "id": "4415d487-79d9-47fa-bf0a-adbb1bb73140",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ab8b99a4-7f29-4d27-ba44-cc28ef5b6420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704ec0aa-6f07-4234-a1fd-b1e9d306a466",
        "cursor": {
          "ref": "d56827f1-7b8a-4e3b-8f27-2e1c751c8e0c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c613d37-94ea-49c7-b139-936b3522a8d9"
        },
        "item": {
          "id": "704ec0aa-6f07-4234-a1fd-b1e9d306a466",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a472dd4c-d711-436c-92a3-92c9eaa86682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc93137-3072-432e-8dbc-cff37f4b1308",
        "cursor": {
          "ref": "56a8febf-1fde-4a23-8862-0060f4fb1c71",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "207d800c-cd7b-43c8-bb82-c8d186e005a2"
        },
        "item": {
          "id": "0cc93137-3072-432e-8dbc-cff37f4b1308",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ee487d93-b602-49a2-8982-3788caa1ba7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc534fb7-c1af-41d8-9e2a-5894514753c9",
        "cursor": {
          "ref": "fa001249-3fd6-4e49-b34c-8982b8383448",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "678382bf-7654-432c-b40c-ba5f6b08c7a2"
        },
        "item": {
          "id": "cc534fb7-c1af-41d8-9e2a-5894514753c9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d3c3e360-d624-435c-b45d-3896ccb81fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b6d934-3a15-415c-93b5-81658043218a",
        "cursor": {
          "ref": "b9ad4186-2d9a-40f2-bb4f-992b8f4555c4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1bdf14d2-9dd2-4dd5-ac88-cd44163fc476"
        },
        "item": {
          "id": "35b6d934-3a15-415c-93b5-81658043218a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d8cb642-79da-493b-9227-c2e24bf9d932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027a3a8e-693f-43e0-ba6f-880d9e722647",
        "cursor": {
          "ref": "3a5560f4-a852-4045-86e8-e5531db1489d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d6ab2a4e-1f15-49e3-9a00-2d7ff0ec39df"
        },
        "item": {
          "id": "027a3a8e-693f-43e0-ba6f-880d9e722647",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2e2016f7-4f2a-4f3a-b4e5-2ac6a78f2419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefc1936-9fb4-48ca-9787-5bbbba383ea3",
        "cursor": {
          "ref": "defde03d-dadb-46aa-820c-a040e20673d6",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5a14506a-2959-4a36-b528-14dcd18b6224"
        },
        "item": {
          "id": "cefc1936-9fb4-48ca-9787-5bbbba383ea3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6de06983-fe6c-438d-a1d0-916249b110df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4f420d-e857-430c-8b52-67c2aaa6967d",
        "cursor": {
          "ref": "e7931846-8c62-4ee6-a59d-223bbc24ba1b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ef892235-f47d-408c-82c9-31875cb16337"
        },
        "item": {
          "id": "fc4f420d-e857-430c-8b52-67c2aaa6967d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c44e97a0-2473-4ca6-9a7f-65e5ccf51bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9811a691-a736-4f02-b14f-ec27009891f4",
        "cursor": {
          "ref": "756564cc-fbdc-4e26-b8fb-fa6359b9ac89",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1e8184d2-ced7-4b16-97a0-2fe86004e249"
        },
        "item": {
          "id": "9811a691-a736-4f02-b14f-ec27009891f4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8d26eb47-e103-449f-8a3b-6cde556d19bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd3086-90e7-4bf3-8b6d-9a7c1b14e2ed",
        "cursor": {
          "ref": "e9643ca6-3965-47bb-bf45-1cb73dedc87e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f77fa48b-d214-4666-bbb5-6d0b0d77bb48"
        },
        "item": {
          "id": "14dd3086-90e7-4bf3-8b6d-9a7c1b14e2ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ccf08d43-bc04-4cdb-878d-35e8fd67ea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5db1321-357b-4bc9-bb8c-83ad8c7d3835",
        "cursor": {
          "ref": "a0dcabdd-50b8-4fe7-b135-d78869c19aef",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b1a13c8b-1b11-43b1-8e3e-46200da5adbc"
        },
        "item": {
          "id": "a5db1321-357b-4bc9-bb8c-83ad8c7d3835",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "02d76786-bce9-43cd-9c82-5a42d8e7745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be07fdd4-7941-4232-aa66-aa055b8a5272",
        "cursor": {
          "ref": "8bf16555-1a1b-4965-bb4c-46e010c8dd54",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "75992865-e685-4902-b0d4-0673f3868858"
        },
        "item": {
          "id": "be07fdd4-7941-4232-aa66-aa055b8a5272",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c7135c53-a4fc-4ee1-976a-aad3020a0dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e01e5d-f39a-46d7-9f98-956798fa2623",
        "cursor": {
          "ref": "e6db5bda-27e7-42b5-8481-32947935c7c0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7f5f8839-18d9-44d8-b1e1-53cdcd19fc1d"
        },
        "item": {
          "id": "08e01e5d-f39a-46d7-9f98-956798fa2623",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1701d751-59f1-4994-bb7b-9376124d9967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b014a007-933d-404c-bc9c-7f9c99f8088b",
        "cursor": {
          "ref": "626c270f-2b1f-4883-927d-3e40e00f13c0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7e5bf2a9-1698-498f-9f42-a09ba43868fa"
        },
        "item": {
          "id": "b014a007-933d-404c-bc9c-7f9c99f8088b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4a55c09f-963f-4a24-8107-a4f81832605b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e478c0e-3a93-47dc-a1aa-11d2fac8331e",
        "cursor": {
          "ref": "0d6ab7d1-00fc-48c6-88a9-afd8b89fe212",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "727fa09a-a84d-4f10-8e1f-5657ff3ced54"
        },
        "item": {
          "id": "8e478c0e-3a93-47dc-a1aa-11d2fac8331e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e18195ea-5280-4710-88d5-e39abc97ce8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5629b95a-76b2-4f20-a8da-fe908da3d980",
        "cursor": {
          "ref": "3e5ec0ab-4fef-4ed9-a00e-9bdabc948b8e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a0e321cb-4e9e-474f-aa9c-a357ae1e4006"
        },
        "item": {
          "id": "5629b95a-76b2-4f20-a8da-fe908da3d980",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a48584b-fb9b-4968-9e09-dbb979f3848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595297e1-01ac-4083-8df5-d6d569f83139",
        "cursor": {
          "ref": "51fbf2d1-21e9-405f-a772-41a9702e4a0a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e09297ab-32c1-4c99-93c2-2aec20980d46"
        },
        "item": {
          "id": "595297e1-01ac-4083-8df5-d6d569f83139",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2035ea19-5249-4567-a8f9-2ad0eb80209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf5e080-922c-492c-b3c2-9543d6dc8b56",
        "cursor": {
          "ref": "b9ac1354-3527-4f32-925a-dacca0953e10",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d26ccdff-60d6-41a2-893f-bdd45114b752"
        },
        "item": {
          "id": "0cf5e080-922c-492c-b3c2-9543d6dc8b56",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5194e51a-0347-4538-8ab0-85cef93efe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b0739-a421-4452-a932-a786d5bcacea",
        "cursor": {
          "ref": "5cf11b08-5ad0-47de-94f0-309a7b8c5687",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2742b657-145d-4da1-9f61-dfaf02aa6598"
        },
        "item": {
          "id": "da3b0739-a421-4452-a932-a786d5bcacea",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b158a596-cf1a-4ac2-8e1a-b9c1992dd6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ac3e17-e420-4188-acb7-6428c3cfe10a",
        "cursor": {
          "ref": "1a6b9d32-1bda-432c-99a8-50eda9016c1d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "85ae0933-3ff8-4298-a338-96629f43e4dd"
        },
        "item": {
          "id": "a7ac3e17-e420-4188-acb7-6428c3cfe10a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8eac7f5-fccf-4b9e-b742-7d6c24797a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03460afb-3804-41f9-8e5b-28b1e6556670",
        "cursor": {
          "ref": "d2528df8-a69b-41c5-97b0-a2d190b1f767",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "96df49b5-7f75-4301-aedf-ca1aa206bdef"
        },
        "item": {
          "id": "03460afb-3804-41f9-8e5b-28b1e6556670",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "22151167-7784-490c-9bbf-414f22a4b07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ee633-9427-4164-b571-ecf821442e98",
        "cursor": {
          "ref": "110dab77-af40-44b5-ba06-e1ac35996312",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d8b09f05-cb53-4860-be1f-7654c8c8347a"
        },
        "item": {
          "id": "d68ee633-9427-4164-b571-ecf821442e98",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3314bd56-d56d-4e4c-9952-02d9ce0eaa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017c64ab-479f-4dd8-8b03-4426ce525bf1",
        "cursor": {
          "ref": "b90a5d8e-aded-462f-bfd3-02beaa684f1a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1be8ba1c-8c09-48f1-a83d-7bfbeb46cf1b"
        },
        "item": {
          "id": "017c64ab-479f-4dd8-8b03-4426ce525bf1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a04561d6-687a-4b94-b7a5-6b1d22c3aaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269fcca-f076-4072-a1b9-36596098a2cf",
        "cursor": {
          "ref": "e6400144-d0d5-4491-a805-351371ea110c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2570c87d-903f-486a-9d56-c76caecda510"
        },
        "item": {
          "id": "8269fcca-f076-4072-a1b9-36596098a2cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a2d27a28-5aa7-4665-998e-c5c5ffa36713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab32367-3e4e-4a39-86d5-4276659131db",
        "cursor": {
          "ref": "257d9641-adbb-4a5c-baee-44af6bad6751",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "944c1a5a-920c-4ba6-a7f1-38564d7c8860"
        },
        "item": {
          "id": "5ab32367-3e4e-4a39-86d5-4276659131db",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "96c6192e-131e-4b7c-9aaa-fa880f9630d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc4629d-a0e2-465a-bb7f-167235d3d516",
        "cursor": {
          "ref": "1819048b-8087-4330-85ab-7a898230af82",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4f4192e3-3041-41e6-853a-ecc4607d08e0"
        },
        "item": {
          "id": "afc4629d-a0e2-465a-bb7f-167235d3d516",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7105efa9-9323-4133-9a0f-e350f817c5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f0cb88-b538-4c22-8c5e-262f3327ad1b",
        "cursor": {
          "ref": "67d7ce99-b00c-4b7f-8a88-37c72600fa49",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2bb45d1b-0543-4b19-b4ce-cdde3f233903"
        },
        "item": {
          "id": "e9f0cb88-b538-4c22-8c5e-262f3327ad1b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "74484a15-a692-4d8d-85c9-f7636dd6af0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f86ce7-e47b-4435-9188-cc49554d20fa",
        "cursor": {
          "ref": "a941054b-ddfb-4f03-846d-1b1024a385ea",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "060e7fe9-6664-4e8f-99f7-1d7571634b49"
        },
        "item": {
          "id": "a0f86ce7-e47b-4435-9188-cc49554d20fa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "69da26c4-ad7c-46ba-a579-a20792dd2a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc890c1a-801e-4c1f-82ec-06e31db17124",
        "cursor": {
          "ref": "c20b50b3-c5ac-4bfd-9552-567c6a7e4c25",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a42dca0c-92ba-48ca-b5df-b9465808225c"
        },
        "item": {
          "id": "bc890c1a-801e-4c1f-82ec-06e31db17124",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "baf40560-5ab8-4b69-b1dc-dfbde5274869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e310bf19-1948-42ea-bb2b-213e4117621d",
        "cursor": {
          "ref": "4aaababb-f1f1-4473-ad3d-989d8b466845",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "faf2fb63-60ef-4d34-b0ac-26db95a1eb4d"
        },
        "item": {
          "id": "e310bf19-1948-42ea-bb2b-213e4117621d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b938ee72-9ef6-4ea1-b0f9-7fa60b763646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d61de21-4cc5-4097-b9b6-fd88444ed206",
        "cursor": {
          "ref": "1a23a90a-c028-47b6-8068-bb2c3dc430b4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2d54eddf-3e48-4892-abed-f55999e14a57"
        },
        "item": {
          "id": "5d61de21-4cc5-4097-b9b6-fd88444ed206",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fe05b4ba-56bd-42bc-8045-ca12bd228812",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb20e32-6c2c-47a2-9f64-647a0c211ffd",
        "cursor": {
          "ref": "1ba11f41-dfed-457b-b173-ffae145454f4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b2eafe18-c3ef-4463-9c48-78cbadc92161"
        },
        "item": {
          "id": "ebb20e32-6c2c-47a2-9f64-647a0c211ffd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "97a85657-e56b-41b8-be6c-cffb84623fb3",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0457b30-b8d7-443c-8504-5efbafe67e62",
        "cursor": {
          "ref": "d1751634-b18a-4fcc-b762-631ffa4450d3",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4d8c07e2-c877-45cd-8bec-4fb1e2090911"
        },
        "item": {
          "id": "d0457b30-b8d7-443c-8504-5efbafe67e62",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c5b43ea4-e0d2-4e27-9a0d-6a11a9595723",
          "status": "OK",
          "code": 200,
          "responseTime": 4858,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3199fea-fc9f-4d3e-97ea-84edfde57880",
        "cursor": {
          "ref": "97897033-2358-4f7f-baf9-86f6cf8b5bdf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a3f9fa4e-78c5-4929-802c-db258c0a0998"
        },
        "item": {
          "id": "e3199fea-fc9f-4d3e-97ea-84edfde57880",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "45fd29fe-7e33-40ef-a49a-992281ecb247",
          "status": "OK",
          "code": 200,
          "responseTime": 3556,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa77335-9f63-4baf-aee4-c4321102a8c9",
        "cursor": {
          "ref": "9d2c0aa4-6444-4ac8-ac0b-b135a25f3456",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0de0e699-e426-42f0-ba29-db60e22caee0"
        },
        "item": {
          "id": "4aa77335-9f63-4baf-aee4-c4321102a8c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe02bdd9-137d-4358-859d-a82e52d70352",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa77335-9f63-4baf-aee4-c4321102a8c9",
        "cursor": {
          "ref": "9d2c0aa4-6444-4ac8-ac0b-b135a25f3456",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0de0e699-e426-42f0-ba29-db60e22caee0"
        },
        "item": {
          "id": "4aa77335-9f63-4baf-aee4-c4321102a8c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe02bdd9-137d-4358-859d-a82e52d70352",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2528d930-8e89-4173-863b-23813073f6e7",
        "cursor": {
          "ref": "bbec19d4-7906-4a11-a257-199d74af1852",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ced2d5a5-9868-4562-ab6d-302776c2f54e"
        },
        "item": {
          "id": "2528d930-8e89-4173-863b-23813073f6e7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d34622ef-05ef-4bfd-bc99-33fd53808bd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822621be-37e3-411e-a2ea-d2bd299ac314",
        "cursor": {
          "ref": "d92a88f2-0387-4514-b847-5d611cacf535",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0b70897b-4db8-4d61-ad33-8648edc793dd"
        },
        "item": {
          "id": "822621be-37e3-411e-a2ea-d2bd299ac314",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9abd6683-f5d4-41f2-949f-32015895bf9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}