{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4001daaa-9d5d-44af-94ba-ec45016035f9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "967c8dfb-6520-4a89-be16-ec529dd714df",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6ad7b0e-d480-43b7-b818-4e99c00c1c4d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "37ff9e60-56e5-4183-bf60-598a843038df"
                }
              }
            ]
          },
          {
            "id": "57464f9b-7aa5-4e3d-9efa-9ca111bf3873",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cd946c0-ee46-4ab1-adff-6fe425b0b10a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "19cd258a-ba8c-4814-a725-fef498a8f596"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "02d961ba-4876-496f-af2a-9c91865929fd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b4809aa3-c2b4-43e6-bb42-e188e298a268",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f70ace0-f42e-4362-b9bf-3c69c1f0c0c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "764ad9a1-bb64-4e29-afa5-2d48783bd9a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "724619bb-2c89-4802-9210-11ac315d9f41"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a229e1e-0313-4c92-acb3-f5607b2e702a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aa62b9a-5dbc-4b37-908c-54f049e52430"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc88b202-94b4-4a9c-b957-076f2f10be41",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a89c028e-86e2-46c0-97ed-91a166f9f3d7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdbff725-21a0-4af0-8807-b94d66a9f147",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bda8d1df-ac35-4e43-ac0c-cf2b6765d835"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1ba5fb9-bfcb-42f7-9e24-80b5da53d9f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "709c5798-eb2c-4b26-b0fd-141a06f6d03d"
            }
          }
        ]
      },
      {
        "id": "40144885-ba2f-4fb3-b529-f830bfc449ed",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "96c52d42-6f5c-48e6-b540-34b819fa2ab0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d036220a-0854-450c-9c61-7d90946ed6e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa76883d-a2d9-4981-9007-98699c12efa4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a669e62b-4b97-408c-9b89-1131be6ee79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d8b29c8-5178-44ae-97bc-ace4c4c7ca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff89874-ce68-49e3-863f-9c33f08b351c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450448bc-1095-4a21-85e1-8bf6ec786ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41f51080-3c55-472c-8c36-50c6ba4befeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed940e1-f6d5-43f3-8159-616de4c8a5cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08433d1-0040-40c8-8a63-408280cd1a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9b502b5-1dab-4809-8d94-8b2e2a14509a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cec20f9d-0f3a-4e4d-81cb-77672f2c96bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dec95a99-a0c4-418b-ad57-1793ac796f5d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daeff18-39f9-4094-b2e6-b0fd52067492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "128b53a5-d474-42a8-9e38-b162164d2a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfef7adc-f6d0-4207-87f4-f0f823f62fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e7935f-ee29-4dc5-ab16-387e1ecc2343"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cc04d107-800d-4f2f-b460-fc2361018766",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c87f416-9cbc-4b55-9e00-2651153453ca",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97801cbf-8b88-4b83-b772-d64994b9850f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d18c5a8c-3c28-4dec-8e9c-ddd33262bee0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59fdfec1-ec95-4d5e-8364-2ab9a3d4ee47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a626b3a4-4faa-480e-9daf-b5bb99535650"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "142a8485-985e-4e3c-901b-d793eba91cce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "589c9d5f-36f5-4fbe-9992-445299a12da8"
            }
          }
        ]
      },
      {
        "id": "23bccfcb-37ea-477b-b0e0-b9c7f27d6d3b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0f63bc33-d3d7-4761-8b16-398cf626088b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "482e7333-6f2c-43a0-997a-b2b0f7d0c1ff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "64c07063-09e1-4d18-b9fe-6af6444079fa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8b709d-7dee-4e54-b24b-07e612ef87fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fc4991-12a1-4786-a67b-84f9942793a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c8e594-39ee-48d9-a8c0-adf505c24b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccb8ec34-ac9f-49c8-9498-b8b4db8f71e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d56e665-dd2d-42d0-accf-23d15472f476",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e9f92d-7fa7-494e-a505-68d5356070a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403b268a-7b29-4450-bc3b-c1980a41d19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0127ee-6624-4c8f-89dd-c44c83d490d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "693c8b3f-05bb-4791-a0eb-ed6b3a3524c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bbc9a6-c5e5-45f4-b3f7-cbe8cb9c5f5b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c3de86-332a-41b2-8807-4664c1bdcc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60cd200-03d1-43ed-b128-c8f7b200f30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dd8801-4566-43d8-8ea3-e3aee7d7b3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e8bc9b3-a196-49a4-97d4-016ba7fb6a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47a8058-c987-4700-be31-d77d56268f7b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8403a5-9856-4183-be04-264f88a03375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6137a4a-22c8-4d6e-bded-ef13ac5a7f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b322116-2791-4d02-8bb8-59fb352c02fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809853af-49c9-4846-abdf-d4cc6f023a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ceeb62-040e-4476-b094-fb8ce09b8b72",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b54b8a1-4aa0-4270-8767-0d440913ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b6e54e-4314-4914-9937-b61a7055b813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57064f84-2d04-4642-a890-9e9d58be992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1cdc6c7-533e-4b6d-ba16-c84da9694d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f3bcde-654a-4a96-94ec-7d177e471bac",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7c2324-4d66-42bc-a08a-a75c201a7f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8067008-8e5b-49a2-8f22-9c8d34fae1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20656c64-db05-4994-a11b-b9dfdd8a1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5c1cf4b-8384-46ea-9edb-18fda46dc82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf8cba-3462-4eab-a644-5350108a50f4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6d1aaf-386a-4913-9cad-d5660f02d640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad4cb27-b376-4ea5-bcba-cd2b8df93e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f674bf5-7576-4070-9d45-8b17e842d072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a97e8f95-ef8c-4575-89a1-dd73dececaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0d4c21-37b2-4b71-a0b4-eb7071509140",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9079d2-43da-429a-8324-127e2827bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9687b4f-da92-4837-b9c8-c4128e50b1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953d54f6-1dc7-486d-8d32-49a87a32e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb53a891-92f9-4c55-8974-d36d83dc4094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838fbc7c-6528-4a03-a802-6ffe9ee63361",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd99da20-9b74-4d92-be02-9092a8dca5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8f673a-8e2c-4591-a7ca-f289b6fd9a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9608507d-84c8-422e-8df7-2f9158b12005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7edfa094-80ab-4613-8c5a-f59423c5cecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb7082d-0208-434b-8461-1ae696f9b4e6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b81eef-817e-4c56-85b4-87cac6a63831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb7cb86-9135-4d80-8f8a-30ff2606398d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80f935f-be44-4833-adcf-4ad233eb4c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44867ce0-d9ac-4ae3-ab56-bb45f5125e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bd8c74-b6e3-409a-a4cb-1ec4d522c3c7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c67e94-ea50-48c1-bc94-965999bccafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffbb145-b1e5-45f5-8db3-80abf071e3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda2f034-59fb-4bd3-abea-2673827aac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d49cf3f-7f30-4e26-9580-cc241c28b4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b7f0a-04bf-4776-841e-8d0bce2c0f9c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc297c7-f09f-4ca9-81fd-84702e4978c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341e2326-c84c-4a66-972d-9ac8b21da380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ed585e-2df9-4fb7-8fd6-ddd804ebc9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81917a44-912a-4d01-b5b0-03a1d96062c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68be5a5-728d-41c5-adb0-f9d4212a159f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2284a0ed-353a-43c7-8735-b697685cb7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c002d1-2abf-4c4c-ae08-3d7956c59c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9714f06d-a8af-44c6-b250-ad404b99652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb0f04bf-f6dd-470e-ac69-e7fbf0187c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7a567a-653d-4d11-bc2e-da93ea1dc1f3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95410501-28a9-4675-bed3-d626eb0ebba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa07dad-7b6a-4631-bb6a-ebb15f113e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64510036-39f0-4a45-a942-1aea16012a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0558ae4-ab10-4636-97b2-f59d61fd453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b846359c-543e-47b4-aad3-4699464ec4fe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371bba8a-e283-4fa4-979a-99a4e3314811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fbab49-e642-4501-bffa-596827dc2ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30942cbe-285c-44f6-8613-3a1ed3c4737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a444c561-9660-4674-9e28-f406badc0e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5747697f-d041-40e0-b20d-9dbb29a3a2a7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c726b0a-e12e-4455-8216-9bc2a2b17692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08461070-b0a6-47d9-876a-cd0273ee90f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca3e213-a5cf-43d0-b7c4-343ffff95b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8610f54-c080-4ecf-805e-de4b3739d8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64065021-83e8-4a14-81f0-51244cda39c6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb7edab-69c9-431f-8cc3-d13650db2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597b83cf-509e-41db-b77a-afa08f293d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c5a2de-9849-413d-9533-1022ce9e3e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f4abed-050f-469b-954f-1457ec295999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80651a7-1089-43c5-840d-5708169f691b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb24a03-a164-413c-a549-65f7aa0d98ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec160b4-bf39-4019-b893-09073761d8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e345b11-4b34-4517-b023-ba9a3a9afbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec375a27-977a-41a3-93b1-4fa0ce4f1e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6232ae35-4a1b-432c-a7ff-8452a7bc6e86",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7f4e1e-4030-4528-96f6-f4455a70e77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e565d22-beac-4d27-b561-dc004fba6c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b000b55c-7134-4290-a923-8a3e6196b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "465468be-c587-41a7-b828-de6ae113daa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d771d5ff-1ccb-491b-8dd7-1ac428519b5f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d4d44f-aafd-4913-9164-0dfdc415d82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7712e68f-f192-43d6-8cd1-0521beb80de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c7c80e-6ec6-47b1-bef5-c9d3d8f937c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33709471-1adb-4edf-8455-501e9d255443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581937cf-8a89-4ab0-870b-11e82dd60b07",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8232ca01-c33c-4142-9414-29d6736bd215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83121aaa-3b45-4033-9f4f-6a6ece0939de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885ae1d0-f622-4112-a888-51fc7e86a48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b8cd15-f7a0-4896-858a-f65eb6698352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fe8209-6dbf-4493-9ca1-4eb20b24bcf4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967c27e7-4512-4eae-8ecd-2d8feaf06961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39559ad-bdf5-4997-98e2-dbf4df157251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46cef63-f18d-4c1d-9e3e-758cda81bf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0dec00-e3af-45d1-a6da-0a42c1861c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d762b1a-3593-4ed7-81fe-6edeeb322fcc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272d1bba-adeb-4f85-bccc-876e555efc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570c34e7-20f8-44a1-b968-f8e81e010f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb60d11c-a588-43e0-8584-9def659350a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8fb5f3-07c7-42f0-b660-ac98eafcc245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6b8679-afea-4ed7-8450-6e8c9f0defba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5484e22c-7fd8-40aa-9e6c-c7c2d8ffd1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5927d4c-5d14-45f9-827f-c41bffb0dd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95417e75-ada0-4287-b621-f79349881526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "78435683-e317-485e-920a-6334b96c0d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dd0a8e-9d70-45fa-ae11-64b3897bd682",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b1c260-c77c-48f2-812f-d1765e1a196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8cb97d-78bf-454f-826c-625e02b13fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9c2b3f-caf9-4d75-a676-d845142ea101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59543778-6086-47c4-9903-8f046ea2530a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813f9bcf-b88c-462e-8fc8-84c659649afe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9e2193-fe96-46b7-9522-c42b1e68be2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a4c8eb-0182-44c3-878d-418881d68c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96992763-ef21-43d5-a6e1-9f26c8e78625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6cdcdf-b688-4724-bfaa-a86f3d562635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845c772b-a144-47cf-aa63-52534e98b753",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f286758c-70aa-4153-8f60-819cb2753d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078baf05-34a4-4da7-b4ec-e03b4e67099d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2971caf-27f9-48bb-b295-09fcf67939cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "526b4f2f-31a8-4e64-8b43-ab43caffd981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593b0f2d-922b-4f6e-9472-8263a48782e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25b0fa4-ebe9-4a4b-9871-75f9d1a7c82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d9ba5d-278a-4e74-9fc9-82009c12b4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a092e745-d4a0-41a9-8018-3b4eb14eb3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "859e7299-5c88-4e94-bed7-075ee2e9ac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158c63d1-c2fc-4096-808a-0eb1a3c2e8f9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d3ad0d-212e-4e01-b019-480f586afcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99519bdd-865d-41c3-b774-50b5f839deba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7283086-6924-4280-9fa7-863a0f4d757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f7c0e3-0db0-4619-b942-8d6eeaff9160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5ec864-cb0c-4642-ad00-83bda2176e2f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d97c324-168b-43e9-a313-bd03df6f5245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803a59eb-ae4a-465b-b128-f92d41de2f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73159365-37d0-4a0d-add5-e2fb83d92c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba7d8cf-8df0-463d-912c-0f1bcd6e0400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fc7216-4672-42ee-88a2-b4809073e343",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3565d63d-98f2-42cf-bc69-aeb5fe2d2a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a30035-51e5-4122-962f-52cc642240ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0abdd3e-b706-49eb-8893-37d66fd88b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed8c8f0-c9ab-4259-a9d7-444e3eef29b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5e29e-914c-4e4c-bde7-8d2b239f02fe",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569bbd70-eae9-4023-8c22-aacefe5ad86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032c4444-3811-429f-b588-6614da73b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5495adfb-ab35-4a5b-b55c-154ffbd8c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a705ce01-5c78-48f9-8d9b-814b89fc0cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e30c23-2118-464f-835b-52c0d2581350",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355d8630-47fb-4def-946d-74419d778916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d1891b-c5bf-4e66-89d4-a654a821bdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52034f65-86ba-4404-8fb8-b36de7ffb421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee9b967-79e6-4b6b-892e-7151e0b5d721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0d3290-e8b1-4d8d-8bf1-05cb393af23d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1056f94-f473-4a03-a979-94dd86e37a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c537fffa-0e70-437a-b243-3a6d4ea16c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeb4877-1e89-4ec8-8c92-1e6607834dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8674c3ce-b870-4a89-8409-e033c06128bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a335558b-b96c-46ca-934b-1a8ba3cdd22f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b2a28c-9729-4e16-8c23-16ffc0fc9e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896e7ece-db33-4ea7-8bf8-49f36443aae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58384874-f5f9-4912-add0-8a1e90443b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c39c5e16-5404-4fa1-9c33-54820cbb4a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a09ec5-1935-4e89-8ea9-fcb584cabb73",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68244f00-eedb-45c3-9577-060012a64783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15fad304-f703-486d-8e85-7f50c208e302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f967e6c4-8553-44dd-9bc7-10102aa3a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a934e5be-4f9e-4e4b-871e-1fde302bac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa9674b-1f80-4837-a8a8-fb283419bb8a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1c91c8-d2d0-4c7d-a67a-8e7ab943a9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb08b572-b0e8-460f-bb5e-bc23562601a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3031a968-ede5-4894-b744-3632e681ea91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "798b567d-3107-4149-98ac-ca00540cab53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6838c1ed-aed0-4e8f-b50f-d1649f036d27",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bafb4ec-eac9-4817-9a2e-13a19cecbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0464954-cbbb-40db-ac6e-fee35236dd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b382bcf1-dacc-4e16-9db6-ab9d97f98fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ced4e7-1206-48c0-b093-bf48d0689864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997613a4-aeea-4070-b1cc-8797bdf1a941",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f10cd4-ee3c-489d-a845-8091a7c06489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515ec6ba-5659-4a26-9255-517b08f4b967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c6c04c-d6c5-458d-af48-e7e02b42f0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44cb3d8c-4df0-482d-bb76-c971701cb618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c250e80-5e33-42a1-bbc2-f03a2ac86206",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7a5f1f-695b-4dd2-86ad-429013363b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1be7efc-7b71-4625-b06b-9e16fb4c41c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6424f6c9-6e44-4c1f-b02d-42537240773b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49d61cd1-55eb-45de-b2f4-3bea71941341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7235a1-9a58-49ea-9da1-5ab35dc55cb7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c5fe56-8628-4670-8ca3-173d0fe46975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7682f368-cabc-4551-83b3-4fdbb1c45136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb784aa-fde2-4868-9f89-676b2f32dd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "892fafa6-e0ec-43b6-8c1f-54a14427bc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783eebe7-1a03-4258-8ff6-878fb35e81a6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf8fa58-954b-4c70-af65-eaf057323289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40729021-7485-4505-bab0-0527625b1edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd506eb4-aea6-4f76-bf94-e966c0fafa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb43fec-24d9-4d4b-b71f-ef5367699e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac2fd7b-4d3a-4d89-9bd9-59f3a18415cb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9753f72-8644-4162-902a-afd30ef7c004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e045dc-f135-4d0b-8960-6212a9c515e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea765365-a771-446a-be63-1efeffd2faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2249117-f485-4e7c-81cd-b2b937854039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2252b3fe-75e5-4382-a8a6-d0666271b67b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa80b2f-adc5-4dc0-b5bb-2e21fe9b774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b361f48-9b72-4e4e-bb55-35e473766a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e531fc-5180-4078-bd4e-efb428f411b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5c3dd8-d860-411a-8a4c-2d674ba6ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c02535-5b6f-4c8d-b35f-3018da216d3f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdcec17-81f5-4c53-9209-4f5e7c420185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501ae089-bd03-423d-9b11-7585514c8057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4759a7-0926-44e7-a81a-86333765100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67bbc48-dc39-4b36-9837-1d55897819c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c8f437-3f1a-4774-b98e-378aa71d2b4e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e1e8bb-f846-4ec0-8bc8-abf459a31e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c5403f-e693-4f0d-83e6-fd0fa3cebbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86f5499-ee26-4bf1-ba26-491a968dea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf94655-e69d-4a64-8579-cdf6e99fc83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f112b039-9eb7-4651-b6b4-840c4760578d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a15d7b8-26d8-4e55-a598-4233f330d70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3c1e10-9a20-4556-8d9c-abec53ec0aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082a2927-c875-4d42-b00e-c05c72a39060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a0a2ad-ceed-4f4a-be50-0976afe5aaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1288cb1d-f62d-4bdd-ad29-fc2bcdcdeb6b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed579f-c192-4ba8-bb6e-35adf78a5ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5e9bf1-3ecd-4fd0-a771-d8d8871116f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d875d4-28d9-4e04-ba48-55ee6f926243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36757e4c-5835-47b4-bd32-13b92880a4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae920bf-8db9-4fe0-97dd-05797f2c2ca9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3128b677-50ea-4447-9fd9-49e2f48a8bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77410faf-1fe1-42ac-9f44-20da0ebb0080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c44fba4-6661-431c-8b18-b0c419518fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e46b7e8-33e4-447a-ae2f-276d10b44b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54e67f-91b0-4ebd-b341-1e7b358a3653",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9679c3f2-0277-4f7d-8497-c193e9572a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc10e2d-f30b-4ac7-be48-69bfe429c7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3189fc2f-1ccd-43c4-910a-c62b27b2d506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b37dc602-80ce-462e-b02a-825c098c9046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e82c128-5cd3-4a85-babf-5da4b9b683fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de957f96-2f74-46aa-bc20-2386c6a80959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730d0a3f-2a08-4aa5-99d1-ecf1c418ace9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef8fde2-cb6c-4b99-b601-1a2bb99d26b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf02e59-d68c-4b94-b4cd-01e44500b78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01793300-aea7-4630-954b-dfe8f1039a2d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524a976d-bd72-48f4-b882-2c1546f47a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c4836f-00a0-4831-b1c0-4aee04679e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9aea1d-2dc5-4300-8de3-8473f587e0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e2f069-4a81-4c61-9621-e83e67a4ba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448ecce5-e2bc-4f1b-8913-5e9286e15a5a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db7b9e-582c-47d1-afb7-0dd7d4ed2f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cb86ea-2f7b-4407-8a49-582535e569f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d61c5b0-183b-4e7f-b6d9-3be26ac96ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f66567b6-2080-4000-99df-be944c3cc088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0760ca35-acfb-4129-aae4-7533a1510360",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914ee806-f46b-441b-8822-6eeaaf5ac1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d045332c-1d5c-4f2f-8ac9-8b0e0f4dd3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc077a2e-2285-4ea6-b405-6d9bbab58892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3651a027-6494-4122-9359-a07acc8ea958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db27b4c-c2b0-4437-9800-a2fc72480c6d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517fee6e-a9fe-4988-a4d8-e6967d15845d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8699fa57-7f3a-4617-9712-4790d9839458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb021f48-9e89-43e0-bc0d-59c15e001c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15ec3d28-388a-431b-91a1-eb69e2281fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b12d8b-7a4d-496c-84c4-3a055df8d10e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862a6f4f-10d6-4c70-8257-0d2b7777d26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b88615-4712-49d3-ba1d-88f27eba91ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8ce166-4084-439d-9d1a-8a5dd8e2a30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "34fdff73-e736-41d3-a729-177c6221e1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eedeb72-adc6-4640-9ac8-1586c77af5b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0393ad8d-81c2-4ee3-bfa0-34a7a5387ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838a1e3c-9654-408d-bd6f-12bf26b489a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80778b36-eb2f-4ab7-a5b6-b05673e19833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b85ac3-fea6-4bc9-91c3-e7975a26f9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26953580-1bd2-4097-a6d1-870d5b707017",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5328b6-d069-4290-b6cc-46377d65b63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e34cb99-7065-48cd-a8f3-e26c88f39347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fb5715-d5bb-4cf1-8924-cfb41fe2d71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47edb6b4-86fc-4773-bfa2-29b5e8d2c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7b6515-e6d6-4d10-9b37-10ebad659ad2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebfa111-aad3-4a28-81a3-b3fcef801ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0a6817-ce69-44de-b07c-7e1dd8767884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628b647e-d3dc-4b0d-a2c1-7f184b875189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e9022a-3733-453d-b25c-716cc4004361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed43d21-290c-4eee-8965-f828c8db5945",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9190c233-f7ee-4716-8928-96f468710dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfe7ba4-1759-4e7f-a510-ab616e28fc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1643ba7-e413-4f7c-bec3-51e0dca0257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5b7891-864c-4af4-a4ab-505567736ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d2fc61-a7f0-4ced-bdba-31030f81c24f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cda7b8-3440-4940-adf8-8f2b8cc1fa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26664960-a22a-4561-a806-cd46bfe026a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3441956d-0526-43a7-81d5-ab85201a7a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba19709d-8187-4d94-b95d-b0fcc1ca1d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb009cf2-3691-4e9b-a8de-43cc240f5495",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842df980-5abb-433f-912e-40db7f72140d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e1dd45-f92b-4670-a030-9f6d4d885de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4343fbea-f802-49ff-8a88-8496da99c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a85de5de-679e-44d5-86ec-9f3cf0de4ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3db5f4b-d7bf-468e-beb2-9a2f5cf3d498",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42e213-abf1-4df1-abee-451efd853826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76609116-be8e-41e3-b906-62f0b072a418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c0a4d2-cd00-4b7c-aaa8-40d2d0c31fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "244ca29d-1ad1-462b-8091-0e1d7f1bf8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b88e8d-d6b3-4359-a719-ad5955da96eb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5243e15a-b28a-44d0-a314-f6c420a4e8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab345098-16d4-447b-8b6c-1ee7cd00bf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe794c5f-b411-45c8-b4e9-3f37cdcdef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24ef719-ff02-4c53-94fb-fa4aefaf732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5f3501-24cb-4217-80b9-d4d04267efc9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99db5cdc-c9db-4cbf-bbb9-b0b74b977704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dea8f0-355d-421f-a547-9ab1e0f4f128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d3c683-60c7-4aa5-b8a5-a122ead4e0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "160142f2-66ec-44b0-bfa8-1e8a501f5351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311c0d16-a8fb-400a-b702-0ff8c1d90beb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429526e0-5610-4fe8-af0d-efa3ffafa829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242f22a3-9ef9-4ca5-997a-45dcbd74a0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e297be64-1ace-4359-8b84-2636e0895362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a94901a-9d4d-4f95-9d59-e744aee024e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5404c1fc-4386-47f8-be1b-80522281403a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf91add-6f28-4638-a868-bbb92a7a5753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0313ac7-9c52-4448-92fa-23378c80a875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f90d5b2-068b-49d8-9439-b699b0529e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f92c428-4546-4552-8aa1-8965d0829ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c251baa5-073e-4f15-888b-e222ab0e2495",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f1d525-5818-454c-b739-5138831e5082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9928f4aa-f5c6-429c-98ba-73a84e3c5692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdf2daa-8b8b-43fb-9634-1de66b909892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a3a8a1-ee14-405d-897b-2da469d4d04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9576b3b5-4e38-4682-89b1-ff811ec906b5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b757fa7a-6b2e-47bc-9cca-d7107bc58a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffef680-d321-4d06-a8e6-9186a7c3cef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38a3ec4-dadb-4c24-8a61-f0f4aa30a392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b6eecd-e159-48da-9624-b617cca3d4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1538107-9239-44b4-8768-6d418cc25ea0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed0a33d-bdfc-46f8-8600-de935c0eca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a53c09-6547-48f7-906d-218d1dad749a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c2c90-50e8-4bc2-9069-a4717277543d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f367fb-3bd6-433d-81cd-62ad83774c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454bd8ee-2cd6-4d5a-b7de-c6bec5d097c0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683f46c7-666e-419e-a09e-403fef87cb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f780f28-a670-44e6-8037-33539e845b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543a2654-ce53-40c1-b03f-901861a16796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c52bf2-b920-4a3b-8f4a-bdb272501ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed4bf39-393d-4d63-919e-e5e3c85e103f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1894c0-de4d-4100-ba78-c4463875891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f1f112-0c81-4b26-8f17-7995b20ac39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4700757b-2470-4bbb-bcce-1f9dea0056ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "744364c1-a77d-4a93-8096-78608f6f2cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03057b7-c59c-4f11-a094-e50551a0dc92",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007e9c8-3e7e-4d08-aed5-90cd8c4cb44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f023359-3fc0-485a-8ba8-e60828f7849e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d173103e-b2cc-42cf-b7f7-78288dde7054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d83ddf-a85a-4679-876e-f92bd47fef91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826876bd-4d47-4132-beb9-2a966ba80e93",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a627d778-f35a-48a5-9e4a-607202f520f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3708c83-ee18-4c24-90ab-d2f4b1f9fc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b985b3bc-f94b-404c-8b56-58e61c5d8bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c7df57-2748-466d-b817-5c79b2dee901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f832a91-5f05-409e-a01b-ea28156e2db8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b507d71-9b34-442b-a492-9fe9751ca469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae72e66c-cd8e-467b-a08c-14d6cd318e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec59601f-86a6-4d17-9193-e70e46daad8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d2d7b7-9eb5-4dfe-ba00-dbaf1a4bb4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163034a5-2618-4844-a78f-241b7128b0b1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1102d4-2153-49c1-bdb0-e5599bd13cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4fa572-ed52-42de-b359-7f5639b9ebbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b7a97e-4702-417a-a3aa-9f69fcd2ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "656048d8-1405-4d73-9160-851dac7b5604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c5979e-de7d-4b50-b6d7-dccd70ff593a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0de60de-acd9-4a6f-ac9c-dd22bd6fc8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ce4fd6-3639-4ed7-8c56-3183230cd41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8046db-aa18-4fbd-b107-aa1f87cf641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cae4af-b147-4256-8aed-2b5d53d9ebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89b6971-1ea5-4167-abf5-41247e804b21",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a6b826-1af6-40d7-8c7c-6ad7e55f11ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241001c5-f2d1-4ff7-9c4d-f7df29f05ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd847d4-3386-46db-9109-7ec4328c7788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c367ab49-d0c1-4d32-bdf3-4da9051f7b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e4a736-05bb-4bc7-a1a9-31d8c086e6d2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f95b7c0-bb2d-4398-8673-ecbffade236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46293802-4156-4966-a105-2a2d95683145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b7b021-0b82-4581-a582-91f0ec08df37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "960bed6d-427a-49c2-bdfb-6067af3aba68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067268dd-dbc1-4952-8291-e6b8efcd07c6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d57e264-f217-4b98-a26d-fb483850608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01a508e-1df4-45ec-8631-0ca09e522dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7183a1be-dd8d-4f97-b810-c36f1b66f17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "941bbd74-6e2a-4bd4-9baf-1dba32baace6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d5a2de-9807-4d76-a6d9-1dea53c3e945",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255f883-5a22-4f48-8204-765df77dfabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1b46a8-5739-4eb4-9597-785b003f6ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39231ddb-eb7d-4036-80ac-e5ef1ef72b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfa99cd-e92b-46a2-a890-93a3131f3aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0130e19-f91d-41f9-88e6-8fc12b27b4bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e770b480-ccfc-47df-a493-ad098b1b1e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d15816-9922-48c0-91d1-4b47bd54f4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c8a59a-c9f0-4a51-98dd-06ca9ea1fdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc60480-23b6-4359-b7e7-4e7e1e77a56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53063d82-3aa9-46ec-9f9b-ff9164d7b3f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c537faec-2934-40ea-8736-30c926f4d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afd84e0-1eb2-4369-bbae-f622b26cf433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35e5bde-2e4f-4bf1-a733-89176018bd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a79bab10-49c2-4bf5-be12-7f5388aaf0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc7af2-66b8-4c91-80bd-db1ba80c87d0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9510e71-5b83-4387-aa5c-30d88507f8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d262bb9-8141-4b0e-86e5-f10d1b9c0ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce41c15-1042-4acb-9da3-86d28c8bc2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb4b0e7-db51-4e90-ae76-3a6075008cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514185f2-b1a1-4a43-88f1-44e8f1b17325",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c7ae7a-dab9-4fdf-a2eb-44d872654065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0830ef99-15e3-43ce-ac82-5dc17339c5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aefe124-f657-4c7a-adcf-3cc7f388083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa5c10e-2c96-4837-bae6-a6c187af612f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bf322f-f379-482e-a080-0b739772974d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0201736-b845-451c-bebf-47440a85e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905f3f12-8cdc-4daf-9ec7-68bbf07eb10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a58ff6b-f083-425b-a306-35ba55423a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8076120-1e5f-4727-b8b1-3c601241a83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb4317c-18a8-429b-8968-5f65f438eb55",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c066f0-1a3d-4d91-9ee7-d4ea00a55d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407006af-99fc-471e-8169-3dd5e492e598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0b7cb3-c5ef-4da9-95a5-ed52cd9a23ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71852737-3929-4f4e-9da3-20ee88f7c426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f050ec6-f322-4eb5-a666-9db97fa42166",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c02332-779e-4fac-9bd6-3acb3600d667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab782cc-45a6-4e96-b7e0-88c14b140498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125c6363-d2dc-4b3f-a58a-38bac5d8d00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b38c5ba-b99b-4097-9036-f82e8ee90401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46104a30-eeaf-4a1e-8fac-16126574ece0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3764ad3-a48a-417e-9679-79e33a8189ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3543125-9700-4607-bcd9-2b6191b0c839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337d9bb2-313c-4eda-9f0d-67d5566c99d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f30d64b-b58a-468c-8b5b-ffb801580beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25d5a60-dfcd-42ab-960a-12a01e42e108",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95efb515-0ccc-4e3d-a61a-beb45866e038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4922d8e5-a1c3-4599-a01c-4ea33dc6fe47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a4326-09f9-48d9-980e-3ad7b7a56841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdddf341-4f2a-4dc4-a0fd-bd82a06b34be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f83c89-23c0-406a-9ea3-2d81e41455b4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e56e66-c951-4d7f-bb88-08eedef7033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b647cac-1806-4a46-865a-fdb1214ef8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f74673-fdad-4b73-8c0f-f386339bfec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3999529e-0964-4b82-8bbe-64c425d42f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5289ffe9-dd07-45fe-b000-1d68c5abed1f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad5cb3e-f38a-4215-9a6d-ff2087f9bfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cedc50e-ec21-4907-803f-15f54575ca25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3034f79b-9781-4874-a30f-3c7a726c417b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d094dab1-a6e2-4e00-a816-c39db5871267"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dafa501e-2507-43f0-98ab-1ccea806feb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f794cdc1-c178-4e74-ab0f-414f2036e2eb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27d2f47-5d3a-45c7-b742-4815c8ee63d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8328add0-8325-4c6a-8291-506ffd62de9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0e1159-04d4-4b5a-bdf3-4d4c05c4fe5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92f79c63-2951-4042-bb83-09b9aaccbf22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b6f7400-e4ad-42d9-b8ca-282e5939a98b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4104ef2-b183-43de-8e31-ecaf540bc9c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dada825-fd23-4808-a963-47dee17d4ae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eda5dd3d-3f19-44b7-9084-14216fc8709d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a55322c3-a6a3-4fe3-bd2e-dc17b2781100",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee8d042c-e35a-4d1f-9958-9a9ee47edf6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1d8d65c-8346-4229-828b-618254448921",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7db9aae-31a3-45e7-99cc-ad056bbae284"
                }
              }
            ]
          },
          {
            "id": "7222e91d-fabf-4a8e-a4b1-721a6821e02b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e20d11b7-2644-4fdf-b9cc-d7b23d3a1e6b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bcf56839-ba3d-4397-a8d1-fb9f3aa384a0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b124765-b9f9-4839-ae00-e2e8880c3ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d6f9ff92-d3fd-44ac-8fe7-b322cdb344e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d7b2b-1d89-4f46-a1c4-a42ea175708a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a863a01-90c3-4be3-95ef-537bb29270aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a27c498-2e6f-4ad8-b75d-3c45845eeba5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b756152c-524f-47eb-852f-5b57eeb45b65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63e8b42b-3758-4ea9-9e25-f8d558fe845e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fde6d44d-4f8b-44a6-8be3-d16163883985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1644733f-4b07-4551-86e4-937a94788384"
                    }
                  }
                ]
              },
              {
                "id": "176546ec-d271-478c-9925-d2d784e1d9c9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c272887b-5218-43a7-b760-a5f7688e8749",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52b9d67a-cf69-452e-934a-db03aef94c00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e038b4d2-5206-4c0b-b665-b96604ccfd22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7db2c759-5ebd-413f-a11f-292c8084018e"
                    }
                  }
                ]
              },
              {
                "id": "5d8804f8-c77a-4671-9703-331bf355f401",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cd36369-7209-4c08-81df-42b3b0d84e2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07dadc9f-3962-4fb6-9aa4-deb02e12f919"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "770453ec-8b74-4578-aebd-80e8cc39f500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9deae176-9793-4fb4-9be7-6c1178c5265b"
                    }
                  }
                ]
              },
              {
                "id": "9d7ffebf-931e-42f0-bfce-e040cff7a579",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dee435f-3a41-4ee1-8a3c-c832bd107bbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed62b77e-fa92-4250-a30f-48909027a806"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ad7ac1-db91-4f7d-aba7-bd0b92eb7a3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8011d35f-c72f-4817-a78f-9961c344ce54"
                    }
                  }
                ]
              },
              {
                "id": "c2f95f3b-4c98-4d1d-b12e-427add7380f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "084da3d0-e4df-445a-99e4-25d1402069a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68876770-3aba-4d84-a108-f1ad9c551023"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c72aa2f1-0937-4931-9e9c-cdc22f010153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ffd9e2fe-6599-4bc7-a6b3-0d888b10af6e"
                    }
                  }
                ]
              },
              {
                "id": "aa052f79-067e-45c1-aa36-ce807f539d07",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e2a094e-532b-4e39-8dff-7c85cc0b7c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3951afe6-3db9-4ab4-8139-7fbac9bcf53d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3734e4e-e9ec-4099-856c-ddc4da0259f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99b6eba9-55d6-47f8-a5ac-f7dffc2bfccc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff88708b-d21a-4bc6-aa76-2ed54853eb82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b754c293-13f3-48db-b310-010a17f9391a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e1bcc25-92ca-4a53-9820-898ba9709b53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cb83acd-dcf2-4006-9556-3b0ca7fdf4d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76e0546d-331f-45cd-8033-0e856cdc757b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d759095e-4fbe-4eb0-987a-4eefda1266bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84107f99-cd91-479b-9241-ea9ee63b0816",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8279dff0-988c-46bb-b2da-9e437657efd5"
            }
          }
        ]
      },
      {
        "id": "3230884d-3674-4dfa-8353-77b8da484cd8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c519e00b-f998-43a7-92e2-e944892a5782",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7651ebc8-e263-47f7-8ee0-553ffd906b7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0be02ac0-9b4a-4364-9103-6b6d4af9d7b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4dff8d-e419-4be0-a8ac-a9ef4d860d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335bc804-c12f-4fe2-9194-c2324763dc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f58cb87-10b4-4b05-ba2f-43978624ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc46b63e-c5db-4aa9-9d2e-c72ef2727fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c0f859-4b75-4cf0-9d55-465d700ea778",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d1b2d9-bb20-43ce-8146-7b26084617eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb62433-82ab-4d38-8fbc-7a1ac463714c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0972d2a-d497-4257-a69d-14e0c08f51f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "266e85b2-f4ac-4802-aaf7-704b86bb7364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4168a5-3b9c-4c95-a6e6-c662c6b92b0b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4757ee6-ca32-43b5-bf48-f260a7e23027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872ed566-2fbb-495e-b6ae-33380863debe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf44887-c7d6-43ee-a31d-1f4557fe95dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f6fc0f-1e88-4d31-ac6d-f0a0e846e0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a0b8d6-5589-45fb-a2fc-2588c3abeac4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1164b9d7-35f4-4879-86c4-b432140a345e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac46c3d6-442f-48ba-9bb4-60b7934f11b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a35ffa-403c-40fc-ac0d-239eb8332c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f339b5ec-aad6-45e0-8ad4-e6aad2dd588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323a7874-82cf-4fab-8a9e-56cc5aaadc28",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8ebd73-5212-47f9-ac9c-e4884a9fbc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558b3148-7ac1-40f3-8bd0-41cd18ab855a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5244063f-40b1-4331-98b3-fba32b0a1f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68f81be-509c-4650-9c95-c98c9d697a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b0ce6d-a8ec-4cf1-8876-84b5167d00e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb41241b-392f-4a84-8c15-d3c8cf31bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1213d7af-d8a8-4dcd-a81b-06a52a9a6197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae6e9bb-976a-4475-8b3b-176bc51b8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df9f8730-df34-4c8b-973b-2ec6720304d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687fd088-2a5c-4e40-898a-3b2fda09a482",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93898f87-ec17-471e-abf9-498eec809241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954b55f4-4968-46bd-b42e-03fbe129dce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd597c53-de64-445d-a77b-3417cd68f61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5b8c80-9716-42f7-89c5-1b19e8f84db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e9a0bd-998a-4723-b1c5-a31f53326f48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662915c2-cb2f-435f-95f4-af9ced98c0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea55c2d-82e9-4a9f-926f-d864defd6e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1949712-96c2-49f1-854c-7a0bc0521eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99f98a6-43c5-42d9-b397-5e521c472d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bfa79d-1339-4480-9a4b-f541f5f6d381",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caef756-5795-460b-ba8b-7a5cd8054dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f036bef-38f9-493d-a363-58bfc090e8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb33586-a6b5-4deb-9a2c-de445fc4ab02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd284641-8f61-487d-b45f-b3db894cf84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b1c37d-ec1a-433a-880f-e09fa0931b36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64314449-b496-4a39-aa75-10c8d0dffa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac13cd54-7580-4ea5-947c-3faa474d0bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a3d29e-8a95-486f-b0a3-1af6d91666a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1ecfed-32ed-4c37-8502-19a6d8abac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a406a8-c64a-4c05-aad3-cda0f979e137",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ee815-964a-4595-b0c8-33d0ebd1ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e7fe76-6084-40c6-8754-8fa4a9316ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166b90b9-fa2e-4f30-b7f4-b72d1e33c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d42dbed0-d1d5-495c-a91f-35d99f5e50ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b32e245-691a-4e2e-ae99-51e648f229fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a37f2f-a816-41b1-af9d-95b0c46c0b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b25e8e-e6e2-48b2-8240-f2a8a8f31225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc674c18-7640-4302-b245-db2338577ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1216d11-8594-4cfa-94f9-ebb5bc409cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898c3a60-b369-4eac-87a9-7fcccd54eac3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51896c6-afdb-4346-8f10-e2de72640d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e093da-5d44-4945-a9cb-ab54e78f99ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e3b83b-6c56-4a3c-860f-ca0b87c57ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0753a86-83e8-4226-94c5-4f3f0eb81f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6374cf2e-035a-4775-a828-f35bc8f34bf0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f8c964-e09d-4af2-ad61-ee09ca574829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442227c5-f13d-4037-b1bf-f23a921f673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cf5aaf-22cf-4a08-9eec-16568291d71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3e0f91-81c3-4607-9595-38502ae50e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859a17e8-3ff2-4484-80ce-c2e7c8e40a9f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8713432c-7761-496d-a600-68f7d7459c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5171b74-dc6d-4eac-9419-cc7269eb2450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe1d559-8d3a-4d0f-a33a-a9db2e3ea9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a54d41d-7bc2-4b7b-a778-643a26a123a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2617c3-268e-43ed-be45-bcafa7dcca1b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11c8b7d-f30b-4e24-b347-98cdd528cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac5ab69-0e83-4779-8137-95c7c0c0793e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024efe23-83a5-4e3e-b38e-f0043c36c7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "90477d20-0596-41ef-9120-c377ef4b3f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce84dfd6-c24e-4bdf-8754-a68f0ed95d2d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cece98f0-2e85-4560-8bb1-427817c96f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937b6e16-0b3d-41a6-af4a-def70c8fce9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc46f080-fdb2-4dc3-bd44-e111a714e644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79d8917-d9f9-49f9-a459-8dd28235dbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22214672-c23e-46aa-ad2e-abf3a5f7898d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332f9ffc-2b1c-4001-887e-7b415a1db0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6912010-48f8-46c9-b53b-b45d314df90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bbd51d-7d1c-4ab1-802d-698cf0921ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6a758e-33d7-44f7-96c0-78ac86f17a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73527cd-de42-4b26-a491-60605d011645",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab270da-d3d6-40fd-8deb-9f1510d8ca7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf2e80e-71bf-498b-898e-30e16846ab46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d63833-8fc5-4be4-9468-44ad400d12c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e41358-cfd8-4fa1-92a0-9647af525a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d69daeb-ab92-4915-85c5-a613230ff042",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9b920f-71c5-4dfb-ae1a-10a3e1ddf6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ff6862-4ccd-4580-92f8-ca9386930b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba44f6f-22e6-4cf2-9faf-db76cb4d2f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3a9de4-0d2b-406a-b20d-d3f7e42dee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b7192c-ef83-4fec-b080-dceb798a054c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f682c89-43b6-4cbd-9b04-124d84502252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7aae38-01b3-492a-8feb-a089de275a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf76c8a6-3bb2-494e-9f90-547394ad8db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "601b096a-0331-44d1-82d4-cdcba81a04df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643f2b2b-cb59-44fb-ac03-4b0594809ae6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f03b41-506e-4f6e-8062-c1d3fe48fa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a72bf8-c5dc-4c51-84f9-c9cc9bd795bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e3d4f1-26ef-4963-b1a3-2ceec57e26ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62966dad-90d5-4656-9679-476fd81925d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e97f19-5f20-4931-b05f-d6355de0c786",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc23869-34c9-4a87-b420-c066e73686b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e3501d-e10a-4609-80f7-9ebb291a132c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d59248-b7f5-4dab-bb2a-9be82a3b213e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ee4cb9-a58b-4e9e-85f9-46a59393392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c9ef9-b4ac-4df0-9be6-b162074bbe90",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42dc308-a1ad-4fee-a297-e665db7fcb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154749b5-2f9e-4be5-b1bf-807b000be692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971e1a79-e602-4053-9834-47b2fdaeb85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0539a5-269c-4715-9219-b77f8a98d56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fac156-58c2-4263-a708-c3255e30f3a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eacd85-8cd7-40aa-8919-6413ca1e4930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efc2c6c-6997-4da9-a3c4-cf75e7dd62b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f88c47b-34ba-4ecf-9689-96e413d2a65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d26a028a-7004-47e7-b0d3-b0cf89d1e5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a66f31b-5824-4641-832a-73df0b345441",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139565cb-fc80-419c-a580-05024d12bd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cc86e5-0e40-417a-9ee6-cecea9151f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149a9fe3-d2f5-4430-ac30-9d3c3bb54dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a880eec6-c40f-4cf2-be86-a329247ca371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8a0934-b47b-4393-9fb5-a720631fcd00",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056945c3-34cb-4d89-b7ad-8b3a4000aada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c349eb-9984-4f08-ae69-9ef35241f800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea62e47-d79c-48d6-bd8b-58f43a4980a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e1d0c5-51a7-4f1c-a4af-5e9705d6e917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e39157-87a7-4a30-879c-55e2e7c19d84",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a1bb71-e692-4ade-94cd-ae7a1983e7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e164c8-4f46-483a-afaa-585052ee2842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effcc220-0033-40f4-9530-b1006d236386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98ccf214-0fd7-4912-9c0f-224eac436057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66fe9ca-32dd-40ed-bd7a-7c6a2f8d187a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125c1048-9b52-4806-9b2f-278849741107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d783cfe1-fca6-458f-993d-7201238d3026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d3df3-6f58-4aa0-877e-af3b9d6e1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8d380c-727f-439a-ad3f-f54cc197f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8d1a9f-063e-4f35-a38b-bc1734fd3ccd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca1640-708f-4a4a-b509-d71ddd4c9289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ae51b5-395d-4bf5-abd9-76a0ccf30610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d63606-d134-4554-97e3-730312bc7ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5382c81-7b8d-4c9d-b4e3-a3b7238285dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d7c452-697c-4334-88f5-f660ee3ccf67",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f07282e-a444-4980-a139-2600a55986c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17ae49f-346f-46ef-9f18-cc5890f5218f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62308d90-0bb2-4622-9caa-82e5bf0411dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c4b35c-f221-413c-8b20-30c381cbac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e644c616-ee27-4cb0-a8a9-389e6136b390",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc363e9-a12b-4c02-9b3b-8cfe01934388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6e3914-93a5-426b-8d47-30509e190bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b248166-edc5-4f67-bb63-b193745eff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc85426-c3b0-4857-a8a7-3e858e862d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb6d11-2f4b-4131-a767-b4dc65e7fee0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d392134d-1723-46fc-aa40-4354c58a71ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd096b8-573e-4072-9546-9d277b3971b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff8bcfd-9ebd-4bfb-a8b2-223c61dfac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4840b06b-68fb-4e2f-b39a-9e17868ce72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df846e95-89eb-47bd-865c-e49b7b4c15b1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f1b442-2a1a-4216-be1c-8e1165ee9390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca13284-f322-44af-b50b-ef4efa8c49db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0356e9-820d-4b25-96f3-0cb02cd508e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417571da-0522-49fb-904c-0be992bddeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9277cb-6783-4dea-8f2c-11e5f18f112a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2406e88-5c2b-4c1c-bd65-765e03775a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5237fa25-bb0d-4646-804b-a210f02dc2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ca856-b5bd-4706-9417-b40187af530f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7210a3fc-8cb3-43b9-acfc-72cc0b3c1cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed6cda1-c312-4637-90b4-a8d8d20b848a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b98e5b7-8706-4783-8073-784cdaec3e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6ef16d-5713-4956-aa9d-3b2e0392d895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4a35e-69c7-4a0b-8172-7cd8b2823413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa782ac-4b5c-467c-8923-4b2feefb8629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c46d4-f02e-416b-8c54-f0a23356c260",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc5db8d-dd11-4f9e-868d-cc794af3f038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c38108-5d3c-4713-9fb1-3f57193190f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f2bc07-36e4-4691-a99a-0d7e97aa51a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc0105a-c9ec-47c8-8275-e687e0f9f76d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abdc0164-52c3-4be1-9b25-20c77cfb2d1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c6a9d0d-a80d-4727-b501-45a0738465e7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3b91aa-4518-4d37-a0b2-d6c6ac946f88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3e6159-47eb-4675-a3cf-45d3edbc6060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46345d72-45dd-4f1a-bdf4-c17735bd7140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a34ba2a5-dd64-44a0-a5af-14b5811a2a40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c17c9f-9007-4b7e-ba99-f6c5afbb1f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bd67c62-b609-45d2-bea3-559f38aee0d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd266e93-dffb-4ccc-8f03-888cf039f59b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba183b2a-d533-4764-9e05-585971a4729f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86e496e9-383d-4ef3-b966-1ba1a5c962fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2b6f810-2ebd-4d15-a9b8-48d0000673d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6df4fc8-bd94-4088-8663-2974eda15515",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ab72099-b9f6-46f9-968b-38079f23c355"
            }
          }
        ]
      },
      {
        "id": "d24e0e50-9bcc-4f76-b620-5d8e8fe6d1d4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "88fd3f88-e550-4c2f-a314-10aa46339be7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80d6d91f-8585-48aa-8e1a-b7784e53b76a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7e27a5dd-00d3-42eb-a99b-070c20b71fa4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2628874-901c-41ae-a87a-0bdeb352db0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4b8543-7769-4cea-9674-23c987df09f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c407dbc2-7e71-4156-b7b4-3127896e2ef7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2755d74-f997-40af-8856-473c73d796b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39851095-91d7-4b70-bee4-907440f55a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ad87ba-f116-4ba2-b829-5560f75dba9b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196e0175-f87c-4308-96d6-166fd310c5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0191e712-df5c-4010-93d3-eacceeab1f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7645579-2cb2-46f5-b104-fd4a5e2cc7bc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88a61c4-cb32-4617-9407-3d081a5437b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51f890b-281e-454e-9eb4-4fb1427dfa39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c1441f-85d2-4f6a-9d3d-ddf53411ef30",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34e6d6d-e3c2-4348-a120-c7c78383a58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e593657-64f9-4362-83a6-bb015973e80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd2d4da-015b-4080-9520-a66aa139fd40",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3271db-580b-4e3d-9577-2d1bba89d4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0249b8-f311-4f49-b178-556fd093b3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3aa111-d2dc-4485-8371-fd01f20df676",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6c143e-59fe-44a6-903e-5ef7438d805e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca978331-2f13-494d-aa17-3dd0765ee1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8615b7b6-9b6b-4ab5-802b-3faec207fb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef2d1be-d574-4816-83d4-70eb930648c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225a039c-8e90-4927-91c6-c44f4e133f0c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002b9357-ed14-4f64-8f2c-264f97f39aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c610d4-57a5-4473-9bc5-e2c770893b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40be0055-a571-4106-b574-ca2210dcaa8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f193c3b1-d306-4aa5-b9a1-57d1f846a0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5775be08-8570-4341-867b-1a52353001d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266c4fcf-0a2c-4501-813f-2382bc4a84d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ee9261-71c8-407f-8f2d-b94118fef953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c41b548-62bb-490c-b5ca-03630c65cb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931d7aea-8dc8-4661-ac2f-b07f4876d627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1a264e-607f-4be9-88f1-7b1ed9def5c7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc075c51-e3b2-4d93-b91c-f171b14d1dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1242b6e1-c5b5-44cd-a2d8-f0b3865e0ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7d24a7-09d0-442d-a146-721307a4285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f036d7b-8cec-4e16-bbc8-180f6b35ef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9526690-e196-434f-a072-2eb293e7c37b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7eaeed-e87c-43c2-b750-503bee7f3483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c400b3e-f2dd-43cc-95a6-4d181ab90c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c999f63f-7b4d-4d4c-8a2f-10f88af8ae68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b02744-7dc3-4c82-aa72-14e00e9d7de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f072c56c-7ea3-4fd5-87cb-6e0628e4db26",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c4b7dc-8383-4545-a1dd-39be573a8e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae46a4e0-f573-4291-8f46-d2f4203c41a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99035c77-753e-4e0b-aafa-5eac171027d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c2380f-c720-43a7-b97a-3c7948705549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be01fed-fd2c-404b-a1e6-da4b069c56c3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c249301-c210-4b97-9a43-a0342b119f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29bbf9d-0dcd-4a1e-9261-6a68255306d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf31b27-0191-4cd9-a8c4-3083fd903db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7972d8d-eb33-4b5d-b56d-09bf18d5b98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758de092-2995-46e8-b4c9-df23f0a8a95e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b63cf2-e707-4fa6-8394-a4bd56757311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0862921a-80a8-4359-b44d-57b911adef7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212cd1da-9548-4cf6-9788-1706f8f87aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862d32cb-5909-4f3a-ac26-5051464d72b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8f2899-2ddf-49b3-b6b5-c54343358a2a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4699f7-030e-4591-b0b8-e86214fd5192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c855e8d-7376-47df-abeb-abe5f44840bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743cbaa7-9ec9-4200-9f67-852cec2a77da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f069719b-ea0d-4a29-85d1-b4eae2c9d612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba24a178-8a5f-4b42-ba6a-93c7cc6072b8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c2ee8c-7c72-4a9c-a709-a7dc53bda687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6fcc62-fbd5-4d3d-8ffa-994427e521a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dde948-62a1-431d-b1ef-5170fc5abc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadc0618-42f4-40e4-b99e-86983e0287fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c57534c-7236-437b-83f4-0801bda722bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569662c0-9ee1-4d0b-94e1-d2b5d4b879d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd932cb6-27a6-4b07-946c-dab12e6bc380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c142cb-e643-4067-bf18-1b3c2df4ada0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5711848e-00b1-4456-a83c-d4435422e4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62b6a88-19b7-4541-908b-4816a9d9c3f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63888f97-6135-43db-8f5f-3e32c1519fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2f7cfd-d91d-44ac-85ee-c23d356c14fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cd96d9-ed00-4149-acdb-291d9e406eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf33011-a92b-4e66-86c6-4c60491d0f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79776e2d-401d-4178-a9df-ed11e2738a95",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c4ab6f-e854-403c-b095-5ba6746a5fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0a04ef-b90f-474e-bbed-1ab85b78e495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a850bab9-48db-4f59-afa5-358664541e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb63c6df-d663-4606-9781-417621bccc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fe0baa-e180-49fa-96e5-588b6792bad5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d9fa87-83b4-4e24-98f5-51620ed32ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fec5a47-531f-49f8-805b-8532d549940a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580eccbb-4c85-4c2d-8f13-1418363bb13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36ae832-ba08-4a34-a75d-aa51996e7bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a5510d-aa05-4d67-9687-308925ee7af9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b5af22-204d-436a-9afd-cad543bb831b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0886b1-ba41-40b6-b8e2-7c7eada409e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2eff15-502f-49fb-b2de-b7095f363357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248f8b2d-52a9-40fd-97c8-b16ce07f92f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a265186d-17a2-4689-b9c8-84315e8dd446",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feb368c-9734-40bb-8258-0738c5cd5b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c53cef-b844-45d5-bff9-796814fe3367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551a667-6289-4c02-b77e-13062c74a2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40b419a-2728-4f7f-9f7c-d286138fa2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfac700-3aa6-47ee-a5d0-e9b17646f2a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b132769f-5a85-4bcf-a863-333677aa8b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60e57fc-ec0a-4220-bb72-c2472d23927c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae30e3a5-7b07-43ea-b246-cc152e6a5b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d908600-540f-415a-9fa7-ae647eb19303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff3e81a-3ff4-410f-acc8-8eb89b2588e4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5a2329-9be9-4a8b-88a2-045fe397aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8da616-e29b-4d63-82b6-ca5b631caa08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88876735-4fec-4d1d-a086-4222abd4c3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932402d7-1bd7-4bdc-a4d4-7dbb969f9a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55103813-64da-43c1-b346-68bfc2bc4857",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9975f8-2cf6-4572-962c-8b4324ccbe98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4cf753a-369c-4f41-b34e-344f646cd0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08928157-821f-4eb5-bd43-1f0c77400851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e4a607-30d2-431a-a25f-7fdb25838987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67fb1a0-d2aa-439b-8536-1a500abc95fe",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72dccc8-19da-4650-8856-84bbd4d3212d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c7cbdb-52bd-46e7-b1e5-d881d794df4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cfff8b-a9ac-45a1-8b49-cd3b8f8e2e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8962dadd-a2dd-4213-afe0-68c529c11235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c9875a-485b-4102-984c-3757dd1b2a3b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81434efa-6f8e-453d-b1e5-fb6f71f9c367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0056773c-5249-4115-9adb-57bf8b0369ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42ddc4-4d48-40c6-baec-759f05e1ecae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b05c3b2-468b-4016-964b-a6eb2e6680db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29297e28-5b23-45a3-946a-efd1c53ca5c4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00a2af8-1b68-427c-87b4-853b4d3d54e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6b78d7-cf68-4e4d-b2e4-cc1649151632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a1860d-0c0f-4063-b699-a3e9bf7c87bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d979df9a-ebdf-4af8-b459-8860f2b8ab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0034871-e68c-4ba8-a23c-8b8682bce63b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c44b5-fed3-4bd0-9df3-b28c2eaf5230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44eb9272-2f21-4114-b526-ad1764e727ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b30a9d-24be-47fc-bbb8-2ba3abf20eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c70866e-7a58-483c-b607-bc9941cf9996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9da18c-13ea-485d-bec9-5464c0705282",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eee839d-1181-4f7e-afeb-0c1c98ddaf28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c72761ba-b5b4-4d9c-af64-a870da9cdf67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5009561-900b-47e8-8e92-b8b965abcaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a88845d-36f7-4c30-af6c-f969a66bc90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1237c0b9-77bf-492e-90d6-fa3ca2aa1c5e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b714f518-2f8a-4fd6-bd23-5bebb1955c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd077e6-11b0-416e-812c-48609eb6870c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d038007-fb56-49ed-bb32-9e257d8d0949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e43d95-7e08-47c9-82dd-3e3feec5475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1c3afd-31d6-4cc8-9b9f-754206683cce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de80ffad-4863-4d54-8219-1d611b1e353f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1b1acf-e451-418e-afb1-da9d0fbfd39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd8bc75-5e33-489b-8ce2-6de76124fa9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6261ed73-656c-40fa-b2da-d4593dd98894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f80a41-9b42-463d-b644-3b7803d46def",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525b6190-7ea8-4e2f-9c07-3f80a9da9fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2cc786-2f08-4479-b12a-1b962185f0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d5a628-eae8-4e65-ae47-1dacbb3d2643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25262aec-2f3a-43b2-ab1c-0f4d4803154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6139ca84-f63a-4219-8522-5d17d96e3719",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a35cb8a-9c04-45c2-b76a-868aeb886a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43fa755-2f48-4747-a44d-3f2df849ff83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8220b73b-7ca6-4cc2-8fd1-de74bc0e8f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfd53be-fefc-4b30-bd56-90ae63337422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a97bec4-417c-4dda-8677-b9e5c7aee30e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2568c-72a4-4658-92e7-0170d6d54bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad410f65-47a7-4b83-91b0-2d2503eb16cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306fa4fe-fd6d-4703-a8a2-d4029f1755a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad38715f-01bd-46b5-ab4c-76ec9bdb5d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f8fadb-3e98-4405-b707-836f26632296",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f2dd3d-9a11-4f37-b74a-57d52a6abeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d26aa5-9d17-4528-b0b6-843b06236147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02522470-5ced-4382-b6d9-ea1b80e21731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2753a6-b7e8-4bff-972e-d0f3842a3e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65d68d5-12e2-41e6-b5d1-1089b8690a8d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b6685c-e04a-4942-bff0-f33cb0eaf941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177fe36c-8e26-4a18-8a2d-af5432972f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc9fda1-cb58-426c-92d7-74e9bc2140af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614a511c-e157-4728-aceb-b62790777b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71074a9-8c41-40ec-a2a1-59042d78cc7d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34bc5cd-41c8-49fa-ba79-6af0b0987305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6093fb6-f4ed-4aba-a2b8-fe781a0048d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011bb6fd-bc01-432b-9cfa-8f45635a7d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d4c323-b33e-46e7-8cd0-b01a49d3c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928d29d1-a365-412c-8f31-4a084922d33e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bece58c-7442-45de-a8b0-b78dce4d3708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce97736-4ebf-4446-b5e9-e2fa3f774c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db99006e-e049-4839-94fb-69d1d56e4e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdf105d-64f8-4343-a789-e299a6d3e7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a99368-15db-4412-91b1-812fe64f48c4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75e2816-3936-43aa-897f-95350f1f0578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691db4b5-c3d0-47c3-aeb0-55c7cde89f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b410d49-d64d-432a-b268-884df3b6e3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569c62ed-de7b-4a36-b28c-5735cd550afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecf5212-93fa-4950-a0e0-116123458b11",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aa4dd2-032e-451b-848a-64fe223e01bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5072ccba-f4ea-4285-aae3-9903dacaafb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15611523-c8f1-4add-81af-54e4f00b9fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3284129-a94a-4f4e-a5c1-bfd87accdbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fafb81d-9f8c-4c2f-b35d-1b2e8c1ce408",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f6ce0a-5f39-4b58-9ee4-72dbae7f525b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeb5d5b-fc9c-4eae-879c-f5755ed766f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c145d64-fc25-43d1-86e7-c6ef373dddfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892aabc8-8826-4ef8-b445-678ff096659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6a154e-7082-4435-815d-a8c768cbf78f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584462d8-d696-4f63-a731-c5958b59463f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ad7a5c-9bf0-4be1-aada-df7c2e1bc29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e82fb-5203-42e6-adb5-ff40b0447489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e406a16c-c813-4d3b-a6b5-7925afcced70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ddde6a-057b-4d01-b496-79ae4b579398",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106ad3b8-faac-4e72-8e55-cae29a43a6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fec29c-141f-4623-9f52-74b7d63f41bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aadb9d-6146-4092-adc9-3f1c359259b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dce420b-278b-476b-9b02-02f47c4cb89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431768be-67de-4637-8d8c-2f591c1e078b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad8aed3-82c1-434d-bdca-a612d4bb604d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8806aa83-583e-4115-9c19-eeec1420408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cbfc1b-5027-4342-a842-f887f9ed9dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eee65d8-ac5a-46b9-b98e-1ff6177f96d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca9ac7b-4c6d-4d11-be66-6795180c1ee9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a9c455-7e60-42c1-8c2e-65470ec271ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbe3389-4f33-4953-b0eb-015750c83598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4eeb446-135c-4b32-a0ff-80f0894e38b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509c7e16-c08d-4e98-9b7a-af41d830026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0582fb72-dbb8-4a25-b759-f167e86563b7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3efd71f-0176-4ee7-8457-4401325a734c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06872e92-00bf-4a9e-8a52-8e487edce51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9c9cd8-9d09-4ed1-bf7a-d05aeb112fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3d4c20-2cd5-4efa-a680-2e79bd4062b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b4b9e0-a797-4d94-8feb-3ae46fc33942",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445262b6-c247-4340-9d20-d0abe5198f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa4bd2d-d425-4be1-a1c8-e8ed90dda358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41611ca-304e-4727-bc8a-0030f7b1e1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a64e0fe-d3c0-4f7f-a741-800ae8a65cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86918f99-a055-4f80-bc63-f8402b33be17",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475b048c-6765-45cb-8fde-485df4cc148c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bcd376-3e2e-4b71-9fc8-0be54371d283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b76471-2a3f-4ac7-a04b-2b088caa6a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2018f3b1-acf5-44a7-89ff-14282294e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47d9bbf-e424-4b13-9b0c-a964e3369a44",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e53fe92-0799-408a-8ecb-609f054f232a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650fbfac-da15-48ad-b346-0ee8f90fe73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433f507b-452e-4fcf-8bc2-46b4da488130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d00cacc-55f9-4145-adfa-84f4bac36398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbde746-e968-4880-abdc-b6bf704842c2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeaa481-cf1f-4ab2-9523-7be9b8dce5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3fd9ce-3315-40a2-8003-0885ce52e471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d62e287-0dd4-4f1f-a039-ccdf187166d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a456927-fd15-43f4-bcb1-bc2e2b08ea77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77740be2-fd25-4d4e-a615-429d930acbcf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31853070-fc44-4bb7-af57-8b86846da79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411e2e6d-83b8-4861-8657-069139df7019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1167c0dc-aee4-42ff-8985-309bd6e11104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33199c9-9a4e-41b8-b3dd-524b423f3839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc286909-7c21-4e0a-a8e0-95a680e0e84f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173e246a-07cf-4b27-8a4a-b1dae24aea80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70141ae0-0e8f-4a77-94f8-79254074e749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c3dd45-ba97-48d8-b40a-0f3fb2938f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014aae99-7f60-4997-b6ba-e8e344b7624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5af8e9-1a48-4a0e-88d4-349f1cad6e41",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e5b28e-0ee7-4488-80e5-9c1bc06b0ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db01b7e-e8c7-4695-a15c-a04c43d570f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fb2b1e-0d64-4875-bbfc-c28619048d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b803bee0-8cbb-4dfe-98c6-8de834e71c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baa6a47-391e-47f2-aeaa-5699ad9b2e17",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efb635d-f43b-4a70-a62b-c0389cc530c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470506be-77bc-45e8-a053-ea17c6115b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d46dcec-0333-409f-86e3-851d6eed9a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5feba3d3-1d31-46a5-b23f-e28b01f7082a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f242fcff-f00a-4913-a80e-8b24d6a26d22",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8fab8d-0d6b-45d9-b210-7e92fa082e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c139df5c-0259-41b3-a375-d4d390811920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff20bbf-51c7-4331-af0e-d8c521c078f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82796195-f03c-4cd6-9e1f-c0f7c915e535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91744b97-cac8-4caa-a351-cf3288632462",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0d681-7fc8-4fa7-ac88-8c37cf5a3fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f950f378-4dff-4655-bcc7-5722192deb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c96954-9188-40c0-996c-1657354217e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd67a32b-d30e-45b0-bec3-905635e07b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b1c94d-0e6b-4b1a-b9c8-85771c5eab19",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272ec4bc-5698-4b89-b155-643747177c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecee70f-fa39-4525-9c0c-b3066e1beecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367604d6-79c3-4ba6-af54-ac4999e06eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efc1414-8449-4c65-9c49-29f634ce61c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad77ecd-7507-43cc-aa93-72deff11939c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5464be2-0e4d-4767-abc7-9d5107a96f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9959aa-9d2e-4294-9cb8-60a4e82b4c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586bf9a7-d2ba-43fc-9fc1-34fe7123f50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7777362f-927a-40d8-9e11-602d187e136a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61811a90-fffb-4ec4-b908-5e605e4cb700",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0668617d-c400-437a-b790-4332065ad276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e71cb9-114a-4d43-a936-e4de821b1886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94391a7d-9909-4d3f-9ebb-88a21e2f2896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a3d227-f002-4618-a7eb-805d1f453838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5ee8c8-8977-44a6-b065-872cec8ec254",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b105c6f0-491d-4896-8a40-0f8280f7f099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8d6068-1436-4f7d-9b30-c259f6e0fb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dfda34-6510-42ab-8244-ceae600afcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5dfb6b-e7ac-4f4b-a6c5-42e8a6f48c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0db3d4c-f573-4a96-9852-09b6fb4dce01",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2760c43-aa04-436d-b497-0c8e63a15cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440ef85f-7a57-449d-ad31-129a510a3fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2cae8b-761c-4219-92a3-337e8da53930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9930de9b-2e3c-4713-91f6-50922e933b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befecc09-8a03-45e8-90b7-c3787be719b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f1f8ac-1f6e-43a1-8839-741c1779b27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7583fe-a6fa-4c0d-9f9b-3912ab477991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fb9526-f874-4cfe-90aa-55db0b684d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d34fa2-b91d-4eb4-b473-35e3e675c163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce57fff9-5c0e-4458-9500-b1465910a225",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89835fb-b058-4fc5-8b4d-0c6de7a84637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c513784-c63e-4c8a-b14f-13cb07d5bae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae1465c-e27f-4ba2-a7f4-6bfbde62bdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8003353-14f5-469b-bae6-c54e3be9182a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c5a0e8-532f-4c86-9bc2-c5c0668be30a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2a753e-246f-4d70-88e3-984289bc8852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "094d8263-80d0-487f-b54d-cb3cc2e368e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c47552c-1af3-4754-b448-634cca2f580e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658cc1fe-ec3c-4da9-b8dd-10e9b9939540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc1405f-bdd1-4386-a804-575668b3a7be",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1cd8e7-4047-4b66-b5f4-62129f3b0a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4b38cd-b1b7-4b6b-bd82-a15c63fdbff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069dbaef-85fb-46c6-b311-caa027d1bd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97d9fa3-1139-457d-8f20-6e47fcc7d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d194a25-18f0-4164-8839-81abebc27534",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af894f4-1ab2-4b2c-8f08-c99fd0d2e4a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b30353-8c9a-44d4-8702-11791f9aed2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5decb800-f7ae-415e-b1c4-66efbbfb25e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180d0636-d1c4-49c3-8c89-be18693a6bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efba850c-8543-4220-b1f7-d02f4c27aa5d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcc80e0-8092-4b63-a66d-786ec561cb03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12eddc0b-fba3-4205-b510-c07c17bfe022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1431746-c08b-4b27-9e1b-578d1d269f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ae9c0b-1886-4a06-bec8-b09c47cf4c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe04d0-b50a-4882-a532-01b1085ccda7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07506fc4-615c-45d5-bc95-6a290f489623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99502f99-6506-4ec2-90aa-eabf3138ed8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce0a4cc-bdcc-474f-aba6-12c05c20941a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ef0bf5-8162-4dd9-b3e5-728bccce2db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9d09d7-d93c-4c2d-bb4a-595272ba2229",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05cd130-fb30-46de-9048-20ed50ee3ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dea7b0-86ef-43ad-ab2e-a2509c5df103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a06e5af-1aa0-43dc-8956-8352b94089ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9ffe48-0371-4c58-a02a-6602ad3f5422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9612e789-8ef1-4d72-95fb-7c04c7b76100",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740334db-e519-422a-8e1c-9055e5eb4f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b59448-ee44-402e-a283-5a43b91091d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0015a3-b881-4123-ade7-d972536a7e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3c3a8e-07ce-42f6-8e60-85d0b04053af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80606d8-96f5-4441-a65f-32aa28bff449",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16adb186-7ba5-4b6e-9910-ca1fa0481ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c08612-eeae-4ef0-9a76-da151cd56990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55c8dc6-77b9-47a0-8393-b474be6625d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a11df2-fa56-4111-80bc-220d4984ebb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbc401b-db7d-426d-9cf0-efd0a7b69a6f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e990926-d793-4350-ac76-621ca2ce570b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16506e5-190e-4f4f-9627-a4c015d23ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb923fba-ea5b-4a3c-a9e1-7d2078c4b477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a5d45c-b25c-4e0a-adb9-db08fbeeff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb86547f-2194-4b62-8381-4dfc5ac029e9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c105ff9c-f9e9-4ca4-b079-5f24802b8f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3af7ad4-1ecf-4675-ae63-0b93e4781170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824a076e-bbd9-4c3f-88fa-968713f027a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f886b137-b6f0-41be-8d5a-9efcb2d52f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cada38-67cf-47a0-894d-b5aa66048dcb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53b00a5-c234-4b8d-ab84-e2197a18255c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b30c835-754e-43a1-aba0-b80f7b89b465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ffc25e-c73e-4ada-8d93-e7b9896efac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0c5836-59fe-4f5b-80fc-09f1974e306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2705c20a-a1fd-4f06-9c78-0f1e802bfc52",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4e5e00-d3ba-450e-87d7-8fc39b9dd172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8960ee-601c-42b9-bb12-b4a167124156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f3129d-9715-4909-886e-11d4d42549a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303d9c64-76b1-420e-b924-9dfb6c8c89f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7db2c5-d1d9-4284-8f4b-3b8f9bf96589",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b742bac8-6bc9-40c0-854e-3f259a6c46ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b4aa17-3e98-4b8e-9fc9-d04932a83e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f08efaa-78e2-4a72-ab3f-3c1bb8fe0f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68650f35-99af-4f68-a3b2-0ff45becd8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909cd656-3ffd-4821-978d-b7f3f98ef021",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dc8c28-9407-4908-b525-91fbd4b6c9b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61900a16-95f6-4e2c-90e4-b3fbb5ff5e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da378c65-e63d-4877-8e92-f5e7e0d6b348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5f4b8e-b8fc-441b-8e55-609ca6b5c57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3915a052-23cf-4748-81c3-a2dbca68167a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee430fe-483d-4819-9980-cc9031c5416a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cfa7405-fd1a-42f6-bfd0-65ceaefb4da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300e475f-72ff-4a5c-a661-72a74cde468a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5494e589-a9d0-4db5-a32b-c3b76a0b4a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d064e2-6656-4203-829a-0f588f936873",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc4a04d-e117-4a1e-ac88-3240c281d13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13fa3e3-f879-4b64-975d-233c4735c973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3ab158-9947-462a-9f57-b061ba28ccf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023ff1f7-e1ef-44e3-8c92-34f288ca1f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba900a5-6e65-4921-b245-4b34fa36a62b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0348746a-7c78-41c6-8a36-15b085c7ad9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a51b22f-b2f6-46a6-827d-4d786d5b53db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff250fee-9629-4965-9b4a-8aa3960faef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f908a3a2-3745-40a9-b1bc-d96833913368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b50328-b7f5-4cfe-8c67-e008cae81961",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56027f4f-ff7d-461d-b747-9bb245435135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3635969e-5308-46b6-b44f-42d292f104f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da145a9-4feb-4732-b31b-a2abf24670c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4820c1fc-cf47-4159-add2-917d251ad526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b231370-5306-4340-999e-18b1ad62664f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e87ab18-306a-44a5-9384-732434f10508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52324b7d-a001-4a69-96b1-fcb5a02599f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16769072-420e-4cf7-aa41-e8264762757c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c98f54-201d-4017-841a-c960503d4e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b4dc56-7e9b-469d-bb2f-d3f9558903da",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b31ed-f732-476d-a94f-19d8a5be9489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93500004-f819-4f1c-a306-d97d7ab0c7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f515d462-a660-4182-91f0-07edfeb11559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f485d64-8f14-4844-9f31-9c2331834be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2589b808-981e-4ccc-8295-7881c29f0d48",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eddde73-7173-4613-bde0-8d5f77035aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a458d632-1b00-443c-8595-13463362f284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a906f83-34ac-4730-b803-ea63f57660e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d6226e-c7eb-4b96-935d-d61e384b31b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2029ad33-9ea6-48fe-a931-ded65fdbf70f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9324086c-9955-4aa0-bba8-3bd1a85146f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc60da7d-268d-4531-9ed2-024582403991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb771462-4c00-4fd9-9a33-680f2fde66ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b3da20-a781-40b5-8515-9e412f334764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3806c4d7-f774-4864-a0b7-c2524ac21aa8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6e96eb-ec86-4447-b927-7b85439654a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00c018c-7d0c-44fe-9a07-4c6b33ea2fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a637cd3-f9ef-4e62-b08e-984ded1b1ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc7ba8b-da8b-47fd-976a-c063bb742f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d3157-3290-4530-be53-225ac56d0d34",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e971eed2-abc0-447b-ac6b-9e0b7369d46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3394c7-1026-47cf-8804-947aca18343d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909999b7-79bd-4fd8-8564-1fe771457741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a301e222-af31-44a6-b619-1c04bc6b789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc36282b-2eb3-4800-9925-537e4d94bfb2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04f6daf-b555-4199-bac1-800f7193aae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40d6255-de42-4844-ba69-31b572f918ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc02831-f6d0-4394-9811-2958f9f91c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bedaad-a2a8-4dff-9470-94879a420a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee90dd9f-0c69-4401-ba87-615a3c19c880",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1ae273-ea91-43f8-9a71-d525588b6d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb7a248-1dbb-4702-b12f-c0958b716014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f91994-1729-448b-9949-6ace45f52246",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7305f4-97fd-41ab-b024-685682727c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0654393-1027-4347-83fd-755e4a070b62",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fb17ed-7918-4e09-9ed2-c2b344490f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33bcd38-e6ae-432a-a0a7-da25ca0754a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acea2025-91b8-43bb-9d25-d87abd8b4806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc16bb9d-a671-4762-9adc-0b347494c7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb927624-de49-4d96-b0b0-ab4563679bf0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e00ea0-b6bd-4c80-9b78-a37a3a201eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66fd483-9678-4847-ac67-b4146356b4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5fc2d4-4453-44d5-9102-c705912b966f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad675eec-3417-44d5-ae53-7720c03c7765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7e510d-4b8a-49b9-a4b8-dfd83ab63ca4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9622198-8942-4024-bde6-7a34e14995c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a21038f5-6aaf-4f19-be56-9c1798597f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8662fb-ab6a-4538-adb5-9fca71083143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc0e9ca-4ded-4386-8d9a-38811c92a349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bb4f2c-b781-4bc5-aaa5-6eb959b53995",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f492dc-a3e8-41da-8d82-e2d32ee0fccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ce5347-0ac6-4496-b71b-b7f76e744278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8270632f-d87c-4215-9f74-d6b465363189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb9f819-11ec-405c-be8c-f2fa25e25708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61225f20-3084-4a41-9e17-7ff68c750196",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6274c39f-e286-4b6b-ac91-7759847ac55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3dcedb0-ea4c-423c-a302-0787e542b161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c96410-7c07-4e7e-843c-eeb09dcc1b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a8d359-2d06-427d-8f66-ee28ba586c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13276235-a9af-443f-8633-0ed7cb569cb5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb04668f-538c-451d-abfc-91e0b4d5e1c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10cd688a-4065-4736-9c7a-21b7bc1f5efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552e9255-7411-4073-91c8-c25866fa5aff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7d5d29-5029-4e66-b318-241b03d5c620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcceb377-60aa-4515-9979-2cc4d1947b5c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3467a27e-c0e1-461e-a25e-4100e467b547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9674ff-1462-4a68-83a1-9fe0ee60d73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a9880a-aead-4952-969f-d264b6a1d193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6ae416-9a0a-4814-a60a-419d36c1a565"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7665d5d1-d669-4dba-9bf0-c3b9a1122958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ada9bebc-3356-4778-bf0a-deae08aca6d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a821e66b-7266-465a-b2a6-fbfab32c1468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc049948-d4f0-4c7c-b67e-7aa1890ae27f"
                    }
                  }
                ]
              },
              {
                "id": "2f92d38e-d6d4-4dec-9393-4e32af171575",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f8d21b0-39f3-42e6-bbd5-387deb93037b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bb091a-e2bd-4bdb-a379-051feaedd082",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "49384157-9343-4ae2-b4b3-552856d85771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2ecb70-9e8e-4184-a63e-3edab1088c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acb0166f-2490-4553-b3dc-1d99f7b4d661"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1d09546-bc77-4b3b-889c-ef13d968558d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f26f864-c9af-427c-9c9f-32bae012a955"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51c82586-7989-4ac7-962b-6cab8cc0916c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b90e1e-30c5-4eb1-9a70-c512dec2453c"
                    }
                  }
                ]
              },
              {
                "id": "866dd000-6097-46cd-9e46-bf1b4db808a1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f30610af-8250-4fef-aa8e-a9450803bdee",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81552272-c5e1-4c19-863f-60a1431a3761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "faab07c8-ff37-4423-b950-ea90bf6caa9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df859e27-4e51-42f1-94ed-0ed3ed61145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2721af2a-0b73-4b07-853f-1ae4d075b7d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3288289d-514e-4fe4-a179-38fc1fdcf9c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82ba9982-e28c-4171-929b-d0ab7d7a7e6a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b066dce-b05a-4913-b2ca-51d343185ae7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b3271760-47ab-4889-8aa2-bfdc7f409f9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de8e7dcf-3976-4e0f-86ee-94d4fe870fc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a2e309-75af-42e8-88e6-6cf9acea325a"
                    }
                  }
                ]
              },
              {
                "id": "898e1b05-3592-45c3-834c-de96fd3c7f32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77f93f75-ffe6-416d-97bc-3ddc3522c8dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "44638272-acc9-4d97-9988-80e527dc1fdc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9940ff6f-cd69-4fca-8ef9-5453271c50e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81000af0-b034-4311-91c3-78cf1faa31b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72ce04f8-7d2e-46a1-8f72-df1fc279d0d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1f66eaef-138b-4a13-84b2-f177680ffe89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d284cc38-1c31-445b-bcd6-1343aedfc894",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed1f2d09-1fd8-434b-b69f-a096998c93dc"
            }
          }
        ]
      },
      {
        "id": "0c19842a-033f-42bb-8cd5-0777180de49f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c72fdabb-fec8-4fcb-aaef-d3b7db27441f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "382eddae-4e52-4de8-884e-38876234f2c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73bfef7f-2fb8-49a5-8101-31e951cc2041",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd66347-0530-4e7c-877f-6796c6df37c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b23f6034-3124-4b10-951a-08c6e6826dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460661fd-9f87-49a4-a877-d00534f94223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2e17a8c-604a-4b4b-8c66-a32f6c10f005"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dd3c1f9-6ec9-4d1b-bb2c-ef9d469691df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b1df199-8a9e-44fe-87dd-82f5e702dce6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "051c0b83-b225-4fa0-a48a-f48352b6029b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f3f65d3-ec1a-43f1-a3ef-471c65591738"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81e37996-6ed2-4699-ab8d-04d182e79ac3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0e51012-a5ab-4a68-85e9-506fc0503e78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b198d76f-00d4-489d-b037-17bfac9f4c7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6308152f-9709-4905-b233-3e3d67a41a35"
            }
          }
        ]
      },
      {
        "id": "3582aec6-6795-427a-88e4-abfe836b9c6b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3a8f6541-6631-4257-890a-d6655ab52013",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01d1031d-3ad5-4c83-9ed8-ff272d98ac20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82215198-6e81-4b07-892b-d2086b31f03e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b821329-a065-4411-982b-f816f8cb4ef1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19e89fb3-26ee-4468-9b2b-3b920c324afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35c6557-87da-41e5-b3d1-cbea24a69de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a47ad3c-26f8-4d2e-846d-6afd87f3ae7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63e3f20e-7298-4c2c-8afc-35ddf9019ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6a72b6c-ed83-4ccb-b060-bfe80f68ba5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a1e4e15-5f16-4784-8347-7aa9bc7fe9eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ca8af33-2183-4195-bc2d-ec3815f19939"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58813f30-a4d8-4d9b-ade1-f53f7edf2a2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd5ec070-0e34-4a1f-add1-c13b1cf9f0c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "731521e9-c851-4b3b-a05e-89338e99d350",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "804faeae-4eb6-40d9-bbbf-cd1c56489681"
            }
          }
        ]
      },
      {
        "id": "42795587-7312-4e51-8fc9-637ecf2a6881",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "16c957ac-00d7-44d9-a034-47e76d0bc735",
            "name": "Negative Testing",
            "item": [
              {
                "id": "344c7fca-ae7d-4180-a577-d932ac78b664",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cbfed0d-46d3-4e74-ba8b-120b1f3d02ab",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dbbc6b-f984-4707-a215-d15792b3c2c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59724ca-4992-4d0d-a620-d46b41c336a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090f31f1-3bf5-4c42-8f09-d21c43823989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52944732-c91b-4ee8-9db8-e95020ec3486"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "788138fe-1c3b-4190-b399-7a0242783e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "949a865a-8e24-40ee-88de-17a8ad97008d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce17b368-bb91-4e55-a6c4-50a52605fefe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac33bbd3-91ac-4e88-a75d-ea772fb3d0de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdca251e-782f-4754-b38e-15d374122d55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f6582db-9f39-488b-bd6a-ca8588104b69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48d7b1f1-71e0-4e4e-a20e-e5b61c07c114",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c80b9637-8c88-4800-8fa3-48bfa4f8e393"
            }
          }
        ]
      },
      {
        "id": "9e72d130-a5cc-4f05-9049-f20d96f4a0a5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1b27c55-9957-43f2-b845-8a499af82bfd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b04a56ab-1d3a-4380-8c8c-178cef4d68d0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "554ff3e3-8f4d-4977-aaa0-d90a47e1ae70",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f119d402-e303-4fa8-b368-7d1418d0437b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09deafb1-47e7-49de-ae80-83ae0c0934c5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 319.468253968254,
      "responseMin": 7,
      "responseMax": 9640,
      "responseSd": 1451.408315464168,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720053534503,
      "completed": 1720053623749
    },
    "executions": [
      {
        "id": "967c8dfb-6520-4a89-be16-ec529dd714df",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "450b8f23-bd8f-4e5c-aa93-8a725242c25f",
          "httpRequestId": "abdfb67f-201d-4a60-b981-226c70228392"
        },
        "item": {
          "id": "967c8dfb-6520-4a89-be16-ec529dd714df",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d4afcc07-2768-4e60-833b-66d1458bcb95",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "57464f9b-7aa5-4e3d-9efa-9ca111bf3873",
        "cursor": {
          "ref": "8c12348e-e179-486c-9697-0e5aded1b349",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "206e6580-ebe2-4814-8cbc-977de97d6d0c"
        },
        "item": {
          "id": "57464f9b-7aa5-4e3d-9efa-9ca111bf3873",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d3938c13-0ae6-4669-a7aa-eae2601edfc8",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "5f70ace0-f42e-4362-b9bf-3c69c1f0c0c7",
        "cursor": {
          "ref": "6e74f2a7-7017-4373-bb0a-ffc6ed94cdac",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a39762d6-cca3-402a-9cfb-15546f626b28"
        },
        "item": {
          "id": "5f70ace0-f42e-4362-b9bf-3c69c1f0c0c7",
          "name": "did_json"
        },
        "response": {
          "id": "b59a7eb7-cfed-4287-bd88-30c6cb733add",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa76883d-a2d9-4981-9007-98699c12efa4",
        "cursor": {
          "ref": "4a549c1a-dcf8-4e41-aa8a-58f1d2d8742e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6bbd63b7-9471-49d6-ae2d-01dad965488c"
        },
        "item": {
          "id": "fa76883d-a2d9-4981-9007-98699c12efa4",
          "name": "did:invalid"
        },
        "response": {
          "id": "0730d5aa-78b4-4be6-bb68-2845badb24b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2002,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa76883d-a2d9-4981-9007-98699c12efa4",
        "cursor": {
          "ref": "4a549c1a-dcf8-4e41-aa8a-58f1d2d8742e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6bbd63b7-9471-49d6-ae2d-01dad965488c"
        },
        "item": {
          "id": "fa76883d-a2d9-4981-9007-98699c12efa4",
          "name": "did:invalid"
        },
        "response": {
          "id": "0730d5aa-78b4-4be6-bb68-2845badb24b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2002,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff89874-ce68-49e3-863f-9c33f08b351c",
        "cursor": {
          "ref": "f4297f7b-2a8d-40c2-9727-d95e9f4fabb1",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e475563a-8168-4e56-b9b4-236f27eeb3aa"
        },
        "item": {
          "id": "aff89874-ce68-49e3-863f-9c33f08b351c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5a957233-c836-493d-a5ef-ad69ca71ddd0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2202,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed940e1-f6d5-43f3-8159-616de4c8a5cb",
        "cursor": {
          "ref": "2a741220-92cb-4f9b-9ec7-420194e7ef96",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24dbd731-9e66-49c7-a57e-8b55c25e046a"
        },
        "item": {
          "id": "fed940e1-f6d5-43f3-8159-616de4c8a5cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "747dd2fb-a7a8-49ed-80c7-56fc26ee1c95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2310,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec95a99-a0c4-418b-ad57-1793ac796f5d",
        "cursor": {
          "ref": "ec6d7ff9-80f1-4b51-b899-9b24e70e37e1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a45996a4-4f19-4d6d-a15a-93e7413bbd61"
        },
        "item": {
          "id": "dec95a99-a0c4-418b-ad57-1793ac796f5d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "edabbdf3-60cb-40a6-a22f-b21f954277c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c87f416-9cbc-4b55-9e00-2651153453ca",
        "cursor": {
          "ref": "cea8ef65-7e86-4c97-870e-9d9021b88681",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c76fc4ef-7b9b-46a6-907e-b10d933c3464"
        },
        "item": {
          "id": "5c87f416-9cbc-4b55-9e00-2651153453ca",
          "name": "identifiers"
        },
        "response": {
          "id": "1fd1e8a0-9643-4ad4-9449-8ec281e91281",
          "status": "OK",
          "code": 200,
          "responseTime": 2683,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c07063-09e1-4d18-b9fe-6af6444079fa",
        "cursor": {
          "ref": "e4ddf220-3d3d-45f1-8086-950e4891131f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3887b548-0ea0-46e5-8d90-8b34b75412c3"
        },
        "item": {
          "id": "64c07063-09e1-4d18-b9fe-6af6444079fa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46c2c2bf-ca45-43e9-aa02-709ba676a409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d56e665-dd2d-42d0-accf-23d15472f476",
        "cursor": {
          "ref": "1bce72e5-7039-4518-81ef-0cf3474359b6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4346bcb0-9c91-4e79-a93f-b1c04dc04bcf"
        },
        "item": {
          "id": "1d56e665-dd2d-42d0-accf-23d15472f476",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7cb1a6a9-00c7-473f-a9a5-2b5287e1de99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bbc9a6-c5e5-45f4-b3f7-cbe8cb9c5f5b",
        "cursor": {
          "ref": "577f273d-6ace-435d-8ef2-85ebcceeac82",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1dfbc5bc-da12-4757-a465-430491a8f7d6"
        },
        "item": {
          "id": "94bbc9a6-c5e5-45f4-b3f7-cbe8cb9c5f5b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2586c666-f881-4194-a297-17d1c30492f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47a8058-c987-4700-be31-d77d56268f7b",
        "cursor": {
          "ref": "c38153aa-6957-40b7-b01b-4004515cd3a4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7ed39bcd-f5ef-4992-8ab9-28552e35ddbf"
        },
        "item": {
          "id": "d47a8058-c987-4700-be31-d77d56268f7b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e24e946d-684a-43b3-8b2d-0bacb2320dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ceeb62-040e-4476-b094-fb8ce09b8b72",
        "cursor": {
          "ref": "1675d312-3a39-4a43-861f-4618f5ef01eb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7134d27c-a823-4c00-8181-a958da2fcaa2"
        },
        "item": {
          "id": "d3ceeb62-040e-4476-b094-fb8ce09b8b72",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4135c421-aaa7-488c-a233-c8f25f12bd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f3bcde-654a-4a96-94ec-7d177e471bac",
        "cursor": {
          "ref": "201916f2-a46c-44a4-bbc7-83d742950fed",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cf1f4d38-1b51-4e4f-a6a5-e43cf2482a91"
        },
        "item": {
          "id": "51f3bcde-654a-4a96-94ec-7d177e471bac",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "66fdddb8-c4de-4555-8f35-6378f09c3ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf8cba-3462-4eab-a644-5350108a50f4",
        "cursor": {
          "ref": "d8adba25-3b92-48e8-86d1-ad836de7fcb0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73adb1f7-7e92-42bf-bccf-64ad92404ddc"
        },
        "item": {
          "id": "5bbf8cba-3462-4eab-a644-5350108a50f4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "36b20366-ec34-4e97-b807-779017b6d781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0d4c21-37b2-4b71-a0b4-eb7071509140",
        "cursor": {
          "ref": "2271609f-efc2-4aef-8f6f-b3e2487b94d5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c3abf4fd-e32f-40e5-a105-bcee741bbda5"
        },
        "item": {
          "id": "7e0d4c21-37b2-4b71-a0b4-eb7071509140",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "68c168eb-ee4c-4480-90ef-2497d0faf6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838fbc7c-6528-4a03-a802-6ffe9ee63361",
        "cursor": {
          "ref": "20110488-aa09-4a21-87b1-be467c929650",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fe59c596-e4a2-45a3-a65c-8b57f3ca7b52"
        },
        "item": {
          "id": "838fbc7c-6528-4a03-a802-6ffe9ee63361",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "884c1ea8-30c1-47e8-b203-85e08ecbe7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb7082d-0208-434b-8461-1ae696f9b4e6",
        "cursor": {
          "ref": "cb10fa3c-0f1a-4f45-88f8-af355dae53c4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03e2537c-ed2d-434d-a190-5bf24eeb852f"
        },
        "item": {
          "id": "eeb7082d-0208-434b-8461-1ae696f9b4e6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4e6adbae-cdd4-4fab-a6db-a87c07d184e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bd8c74-b6e3-409a-a4cb-1ec4d522c3c7",
        "cursor": {
          "ref": "12ee0f2b-ba65-4556-bf83-2618b9d11c37",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b166e2ca-bf2e-4163-acb7-5c740c6c0e1a"
        },
        "item": {
          "id": "68bd8c74-b6e3-409a-a4cb-1ec4d522c3c7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "25a626ab-6dc2-4c68-93a6-bd861b80dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b7f0a-04bf-4776-841e-8d0bce2c0f9c",
        "cursor": {
          "ref": "fb6fdf4a-4546-4cfd-872b-2f28d34da3d6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "35e4fe03-f550-40e0-b95a-f9626e1b8bf2"
        },
        "item": {
          "id": "085b7f0a-04bf-4776-841e-8d0bce2c0f9c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9ac25e59-c1f9-4cfc-8918-48b4d56a9ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68be5a5-728d-41c5-adb0-f9d4212a159f",
        "cursor": {
          "ref": "d1ff6c1d-989e-4cf8-be94-b4861e3651ce",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5326faf4-2aa4-49e4-86e2-95722d2fd984"
        },
        "item": {
          "id": "b68be5a5-728d-41c5-adb0-f9d4212a159f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3a2fb7c3-888b-4f68-b25c-5e0997059585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7a567a-653d-4d11-bc2e-da93ea1dc1f3",
        "cursor": {
          "ref": "5e0a160b-e4ca-496b-ac40-fdc0024d8441",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2466800d-7a70-42b0-9c15-b808466e9caa"
        },
        "item": {
          "id": "ce7a567a-653d-4d11-bc2e-da93ea1dc1f3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "096263ab-02da-4294-830d-45550ba08a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b846359c-543e-47b4-aad3-4699464ec4fe",
        "cursor": {
          "ref": "27f620e5-04f7-4956-a860-9472e8b7d493",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "488e6a09-37b8-4e76-bfaf-aee65c20694c"
        },
        "item": {
          "id": "b846359c-543e-47b4-aad3-4699464ec4fe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d15cbc7d-2a10-4a7e-8594-4ff446368288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5747697f-d041-40e0-b20d-9dbb29a3a2a7",
        "cursor": {
          "ref": "008cd59e-860e-465a-886a-8bb436581d21",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba373131-055c-4fd2-869b-422a94f1ec4f"
        },
        "item": {
          "id": "5747697f-d041-40e0-b20d-9dbb29a3a2a7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b58f9135-c0ec-4b69-982d-8722ffea88a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64065021-83e8-4a14-81f0-51244cda39c6",
        "cursor": {
          "ref": "4f4dac2a-15ba-40f8-9717-459a6ade62f2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "51f6ce2f-e08e-47e4-aafc-1674b31c5170"
        },
        "item": {
          "id": "64065021-83e8-4a14-81f0-51244cda39c6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "42b844aa-e6d9-4ef6-b0c7-90eef4446c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80651a7-1089-43c5-840d-5708169f691b",
        "cursor": {
          "ref": "47c5dcff-8ece-469f-bbc0-d005c697a283",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ffd4ff4-85b5-497e-987e-db24ed6277b3"
        },
        "item": {
          "id": "d80651a7-1089-43c5-840d-5708169f691b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "df69612c-8d5e-469e-8e1f-51541c027fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6232ae35-4a1b-432c-a7ff-8452a7bc6e86",
        "cursor": {
          "ref": "240b9cdf-4db1-4130-bc4b-ce6a3ee90728",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c9feae10-316e-4df1-a391-7ed95bbbbf5a"
        },
        "item": {
          "id": "6232ae35-4a1b-432c-a7ff-8452a7bc6e86",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "360fabc6-bbe6-400b-b079-5f6e5fb99b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d771d5ff-1ccb-491b-8dd7-1ac428519b5f",
        "cursor": {
          "ref": "ee693e10-ab29-43bd-b64a-7ab09d5579aa",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "406acb87-3b17-4597-8b89-e03c5d29398c"
        },
        "item": {
          "id": "d771d5ff-1ccb-491b-8dd7-1ac428519b5f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ffb0137e-8d66-4b08-bef4-40466f75bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581937cf-8a89-4ab0-870b-11e82dd60b07",
        "cursor": {
          "ref": "287eb0ec-ac65-4951-a4c2-ad9be29a4848",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd03dba4-db5a-411d-bd05-7a5884cbaaf8"
        },
        "item": {
          "id": "581937cf-8a89-4ab0-870b-11e82dd60b07",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "71d5f1a4-61ac-4949-9bc6-2929918c8260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fe8209-6dbf-4493-9ca1-4eb20b24bcf4",
        "cursor": {
          "ref": "5270fe79-1529-4d44-bf6b-2d6b305cfac0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1cc6b919-1a76-4dca-b968-b651a1b4c83c"
        },
        "item": {
          "id": "66fe8209-6dbf-4493-9ca1-4eb20b24bcf4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b79c932b-a671-4332-884e-a42fc5ead8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d762b1a-3593-4ed7-81fe-6edeeb322fcc",
        "cursor": {
          "ref": "36aa6f2e-e490-43d4-be05-ea4a84dc68a6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "53842322-eec7-44b6-bf6e-4baa6d345d64"
        },
        "item": {
          "id": "7d762b1a-3593-4ed7-81fe-6edeeb322fcc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4ccef8ac-87fe-47c1-909c-e5463ba0f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6b8679-afea-4ed7-8450-6e8c9f0defba",
        "cursor": {
          "ref": "1b4bec0e-21bd-48a7-ae8d-3c819fe4ad8a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4fc145cf-08d2-4491-b8b1-dd83a2c8dd07"
        },
        "item": {
          "id": "1d6b8679-afea-4ed7-8450-6e8c9f0defba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "64254185-c47a-42df-9e12-08e34e437996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dd0a8e-9d70-45fa-ae11-64b3897bd682",
        "cursor": {
          "ref": "7eb0d93f-fe40-466c-b5cc-d27e67d39a28",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f51ad8b5-a2a7-43cb-9742-8d360754c863"
        },
        "item": {
          "id": "04dd0a8e-9d70-45fa-ae11-64b3897bd682",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e82e4a74-d18c-46c3-9fb4-2d3400c4f250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813f9bcf-b88c-462e-8fc8-84c659649afe",
        "cursor": {
          "ref": "f766ed7e-a4d9-44e6-8cb8-35f386ef78b1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a99540c5-9f3d-46f7-bb66-e00422b62141"
        },
        "item": {
          "id": "813f9bcf-b88c-462e-8fc8-84c659649afe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0b045f54-d687-4d3d-b22c-3ae31b038036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845c772b-a144-47cf-aa63-52534e98b753",
        "cursor": {
          "ref": "639bd317-93e3-472a-9b14-0a055f318ab2",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c34dd79b-1385-411c-b6c3-632ce9877d18"
        },
        "item": {
          "id": "845c772b-a144-47cf-aa63-52534e98b753",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "89ba231c-cf5a-4cc9-bacd-f80f2f72a702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593b0f2d-922b-4f6e-9472-8263a48782e6",
        "cursor": {
          "ref": "59f554f7-6196-44ea-bf80-d8316bcfc0d3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0ba2df22-1239-4ae1-b486-e97848b0e017"
        },
        "item": {
          "id": "593b0f2d-922b-4f6e-9472-8263a48782e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9a4b1401-feee-4ff3-a470-ad0ad260d732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158c63d1-c2fc-4096-808a-0eb1a3c2e8f9",
        "cursor": {
          "ref": "1d317661-554b-4e5a-ad81-187e428896b7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "33e716cc-c2f1-4b92-89d4-6d950a677571"
        },
        "item": {
          "id": "158c63d1-c2fc-4096-808a-0eb1a3c2e8f9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "804a216b-5ba9-4d4b-8c51-9df4e83f4aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5ec864-cb0c-4642-ad00-83bda2176e2f",
        "cursor": {
          "ref": "a6c9a753-863e-4cd3-83ee-9985293d4c7a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ffd889b0-6cf2-4685-88af-1ce12af7bf35"
        },
        "item": {
          "id": "2e5ec864-cb0c-4642-ad00-83bda2176e2f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e8386c44-fecc-4c6c-a291-e5ca34cc205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc7216-4672-42ee-88a2-b4809073e343",
        "cursor": {
          "ref": "395a4c3a-8011-4598-a886-1cd5d2ca3763",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "aab47f0c-96c6-4163-a44f-385ca9baaf04"
        },
        "item": {
          "id": "d4fc7216-4672-42ee-88a2-b4809073e343",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "db1af94d-3425-4bc1-beaa-7b4513470190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5e29e-914c-4e4c-bde7-8d2b239f02fe",
        "cursor": {
          "ref": "5c58ae33-15da-45e3-9add-f2e5a6c6087c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "436b0ee1-4271-4dc0-8bda-666ea5f8b102"
        },
        "item": {
          "id": "48c5e29e-914c-4e4c-bde7-8d2b239f02fe",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "083923ea-1147-45c6-9dce-65c2f7b82610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e30c23-2118-464f-835b-52c0d2581350",
        "cursor": {
          "ref": "44699b4e-5be1-4e79-905a-81d7464c1439",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2a357fd8-3fe2-474f-9eb3-ed6028270878"
        },
        "item": {
          "id": "36e30c23-2118-464f-835b-52c0d2581350",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8668d0f9-6c3d-4c0c-a34e-7617bc6162c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0d3290-e8b1-4d8d-8bf1-05cb393af23d",
        "cursor": {
          "ref": "f865232a-b397-4ca1-8482-4a6ebb821172",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2da619f9-258f-4412-88e2-3b1f9e07cb8e"
        },
        "item": {
          "id": "aa0d3290-e8b1-4d8d-8bf1-05cb393af23d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7502de27-d4da-4e5f-8e9b-d92314802776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a335558b-b96c-46ca-934b-1a8ba3cdd22f",
        "cursor": {
          "ref": "de846d9c-c389-4c52-8a84-3208615b5b07",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "09d25314-b770-4946-921a-b095bccf0938"
        },
        "item": {
          "id": "a335558b-b96c-46ca-934b-1a8ba3cdd22f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ab16ee57-42b9-44af-834a-7f7b575fe8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a09ec5-1935-4e89-8ea9-fcb584cabb73",
        "cursor": {
          "ref": "56189747-59cb-4d55-b4b4-e36a50c1eefd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "628cc35c-43a6-4797-a4ea-6576f23d83d4"
        },
        "item": {
          "id": "45a09ec5-1935-4e89-8ea9-fcb584cabb73",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "97beb531-28b5-4456-a15f-ec4486d02e3b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa9674b-1f80-4837-a8a8-fb283419bb8a",
        "cursor": {
          "ref": "ae295d25-ff68-44bc-8add-f950a9ed7e26",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c52ad1a2-cc69-4ea7-813c-6ee921b55048"
        },
        "item": {
          "id": "9fa9674b-1f80-4837-a8a8-fb283419bb8a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "40720b9a-b3fd-44cb-96ac-cc36db389b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6838c1ed-aed0-4e8f-b50f-d1649f036d27",
        "cursor": {
          "ref": "2dc2b849-bf3d-4a5d-8c3c-6baf870b0a70",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7aab0070-5352-4456-bf1f-61e5a74a22e3"
        },
        "item": {
          "id": "6838c1ed-aed0-4e8f-b50f-d1649f036d27",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "98836800-d2d4-4c1f-b53b-ddb9fb5daa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997613a4-aeea-4070-b1cc-8797bdf1a941",
        "cursor": {
          "ref": "a6b569d0-ecb5-4ee6-ab74-c2583c6cf5ae",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3b4aa064-4fce-4a9a-90ae-f7f31900506b"
        },
        "item": {
          "id": "997613a4-aeea-4070-b1cc-8797bdf1a941",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58240858-7f9c-45f5-8c19-8a5b947f4aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c250e80-5e33-42a1-bbc2-f03a2ac86206",
        "cursor": {
          "ref": "8c0b1085-5d37-473c-9804-57cead8980a9",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "acbe61f4-bace-4a3c-a803-efc5d8a42a28"
        },
        "item": {
          "id": "2c250e80-5e33-42a1-bbc2-f03a2ac86206",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1dc61c06-5df1-4467-89e3-8c680a293ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7235a1-9a58-49ea-9da1-5ab35dc55cb7",
        "cursor": {
          "ref": "f90b53ff-20a0-4c78-9ce9-edc36a6c2ac8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4377dfa9-63ff-4f9d-8aa5-aef6ce16d3ff"
        },
        "item": {
          "id": "7d7235a1-9a58-49ea-9da1-5ab35dc55cb7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "df07ed55-f183-474e-8eca-8a7b745ab6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783eebe7-1a03-4258-8ff6-878fb35e81a6",
        "cursor": {
          "ref": "3627c02e-0a64-4eef-a2b7-1cd58f1f3baa",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "104990ab-3bfc-439a-ab46-d7c929079451"
        },
        "item": {
          "id": "783eebe7-1a03-4258-8ff6-878fb35e81a6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7f4fd9d4-eaed-484d-adee-21d16b20d533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac2fd7b-4d3a-4d89-9bd9-59f3a18415cb",
        "cursor": {
          "ref": "57c1bcdd-6c82-495d-aaf1-7d166281f1d3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ea5f000b-3939-4d1e-9e31-4a29a3b91557"
        },
        "item": {
          "id": "eac2fd7b-4d3a-4d89-9bd9-59f3a18415cb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "39e71ea7-31ca-4411-9d8f-fad27d38fa4b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2252b3fe-75e5-4382-a8a6-d0666271b67b",
        "cursor": {
          "ref": "6235af3c-c681-4728-9796-984b01faa991",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "426abc4f-6fc1-4039-8b54-9ffb8ff2216f"
        },
        "item": {
          "id": "2252b3fe-75e5-4382-a8a6-d0666271b67b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b47bebb0-0e2b-4059-96e7-c301a3d39665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c02535-5b6f-4c8d-b35f-3018da216d3f",
        "cursor": {
          "ref": "ba7a5d8e-dfe6-4f2b-977f-9854286c0b11",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6fc648f2-2eee-4e89-bd7c-6ab02bafc7d3"
        },
        "item": {
          "id": "f1c02535-5b6f-4c8d-b35f-3018da216d3f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c064da75-f8e1-417e-8679-3c4f925d7d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c8f437-3f1a-4774-b98e-378aa71d2b4e",
        "cursor": {
          "ref": "08c9452e-5d68-4820-9a1d-95fc54f9482c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "21b31906-5ed1-494e-b18c-7dc52474c703"
        },
        "item": {
          "id": "b7c8f437-3f1a-4774-b98e-378aa71d2b4e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c88c2bf-b358-46bd-9adc-8c6caca3e051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f112b039-9eb7-4651-b6b4-840c4760578d",
        "cursor": {
          "ref": "5abf61ee-c5f4-4c9f-adfe-348a65b5b4ae",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9db18e6a-8cf7-4039-8d03-960fdfb19f71"
        },
        "item": {
          "id": "f112b039-9eb7-4651-b6b4-840c4760578d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a0a97322-1f80-47d8-8a1e-2e706c4ec1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1288cb1d-f62d-4bdd-ad29-fc2bcdcdeb6b",
        "cursor": {
          "ref": "9aafdc93-e200-49d1-913a-ff090e9726f3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "61d67ae1-2190-4637-ba46-ad37a0d34e5c"
        },
        "item": {
          "id": "1288cb1d-f62d-4bdd-ad29-fc2bcdcdeb6b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "607c1041-3f5a-49ef-b6a3-fe82646e990e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae920bf-8db9-4fe0-97dd-05797f2c2ca9",
        "cursor": {
          "ref": "1c9497f2-53cf-4308-bc82-3be373569ecb",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ea5a44e3-2288-4bea-bf52-cec5da27e3ac"
        },
        "item": {
          "id": "0ae920bf-8db9-4fe0-97dd-05797f2c2ca9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "de27f68c-9cc9-4f52-a82c-90dc60339a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54e67f-91b0-4ebd-b341-1e7b358a3653",
        "cursor": {
          "ref": "7d849898-ccdb-4aa7-93a9-6c073bcb90b0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2d14e808-95ec-45dc-894f-5f74a9a19203"
        },
        "item": {
          "id": "ad54e67f-91b0-4ebd-b341-1e7b358a3653",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7fe46e68-a81e-4932-99a6-c2065eb2d38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e82c128-5cd3-4a85-babf-5da4b9b683fe",
        "cursor": {
          "ref": "be33416b-b472-4e01-a867-48aed4e7579c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2e26a8b0-f7a2-459e-9d90-91a7d77d0ffa"
        },
        "item": {
          "id": "5e82c128-5cd3-4a85-babf-5da4b9b683fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1d715261-9515-446a-bb85-4c3c719ba3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01793300-aea7-4630-954b-dfe8f1039a2d",
        "cursor": {
          "ref": "4f1009de-e449-49f0-91aa-e5bb387d549f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e49df3be-68a5-4e86-aaca-7160868e6ee1"
        },
        "item": {
          "id": "01793300-aea7-4630-954b-dfe8f1039a2d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "28ecd732-9758-4d5c-964d-fe2ab242e728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448ecce5-e2bc-4f1b-8913-5e9286e15a5a",
        "cursor": {
          "ref": "6ac645fc-5a4b-408c-97f0-70423632d3a2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "45f79552-cd45-4a26-9784-16a90a0b7659"
        },
        "item": {
          "id": "448ecce5-e2bc-4f1b-8913-5e9286e15a5a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3e8f75c4-2e14-46e3-b35a-3c35ba6720da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0760ca35-acfb-4129-aae4-7533a1510360",
        "cursor": {
          "ref": "5dc1de9d-46b2-4392-8ae3-fdca6facc026",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2a3d2b4c-f94d-43cd-8124-a22d8d09abc2"
        },
        "item": {
          "id": "0760ca35-acfb-4129-aae4-7533a1510360",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7b965f3d-2b5f-46bc-b8fe-9ff595d84326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db27b4c-c2b0-4437-9800-a2fc72480c6d",
        "cursor": {
          "ref": "910307e0-1ac8-4ac4-b543-5eb2531db1a8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "53787b84-c435-4d55-a6fb-e8180c7119c1"
        },
        "item": {
          "id": "9db27b4c-c2b0-4437-9800-a2fc72480c6d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "90bfc347-cc78-482a-bd55-dcd7a29f7557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b12d8b-7a4d-496c-84c4-3a055df8d10e",
        "cursor": {
          "ref": "a2129052-cddd-4ee3-ad3b-d7c95350dcbb",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ca167e41-5ca1-4be0-9de9-57e88035d1ed"
        },
        "item": {
          "id": "e8b12d8b-7a4d-496c-84c4-3a055df8d10e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "80246253-97d9-456f-875c-8b0c9474132f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eedeb72-adc6-4640-9ac8-1586c77af5b8",
        "cursor": {
          "ref": "631c8e09-9179-41d6-aa5e-529db48e1a90",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "72335099-46d6-402b-93b4-ca07983e2b6d"
        },
        "item": {
          "id": "6eedeb72-adc6-4640-9ac8-1586c77af5b8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ad9b3730-8182-48a6-a4a6-66d2a39c7933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26953580-1bd2-4097-a6d1-870d5b707017",
        "cursor": {
          "ref": "813d6e34-9321-4e90-bda7-42741ed29fa8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c2608f6d-a1ff-4e8c-bd4f-55a4eae2fe6c"
        },
        "item": {
          "id": "26953580-1bd2-4097-a6d1-870d5b707017",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5a13deeb-6d8f-41f4-bae7-88314ece57b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7b6515-e6d6-4d10-9b37-10ebad659ad2",
        "cursor": {
          "ref": "4ae30347-5f77-4b49-bf93-fa9d4d4cd4fd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a1aed3e0-b45e-43d4-9c2d-56e7389137e8"
        },
        "item": {
          "id": "3e7b6515-e6d6-4d10-9b37-10ebad659ad2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5c4b7422-e511-4575-9135-a09046a3732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed43d21-290c-4eee-8965-f828c8db5945",
        "cursor": {
          "ref": "3a4bcdba-e27c-4534-afb8-70d6ebdf2859",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4ed4ddbd-94c7-4587-a589-ad81a37f8a65"
        },
        "item": {
          "id": "8ed43d21-290c-4eee-8965-f828c8db5945",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cde17cf0-04a6-48c1-8931-bd1c02368f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d2fc61-a7f0-4ced-bdba-31030f81c24f",
        "cursor": {
          "ref": "653f0bbb-8323-4fd1-8bbc-12b0ed9bc882",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "38fbe906-c250-4fa7-b194-3f2ad9cb5dc8"
        },
        "item": {
          "id": "64d2fc61-a7f0-4ced-bdba-31030f81c24f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "046603ba-bc3a-4060-89fe-1faffda5da28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb009cf2-3691-4e9b-a8de-43cc240f5495",
        "cursor": {
          "ref": "2bb00e01-1d93-41f9-981e-e89b08d87f1d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3d91e30f-b347-4ecc-af0e-f4170daf3add"
        },
        "item": {
          "id": "fb009cf2-3691-4e9b-a8de-43cc240f5495",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6982fe4e-54f2-4342-b352-4d6f93da0d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3db5f4b-d7bf-468e-beb2-9a2f5cf3d498",
        "cursor": {
          "ref": "2c60d195-483f-46e3-8bee-796d25117f65",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0ae2608d-4bd0-49f6-88d2-e14f8d696535"
        },
        "item": {
          "id": "d3db5f4b-d7bf-468e-beb2-9a2f5cf3d498",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "89924596-ba34-48f7-a916-aca05eb32b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b88e8d-d6b3-4359-a719-ad5955da96eb",
        "cursor": {
          "ref": "82fef2fd-50f1-4152-b7f4-7945103b5e33",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "24966826-b219-4811-b528-5cb166d4a80f"
        },
        "item": {
          "id": "57b88e8d-d6b3-4359-a719-ad5955da96eb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4b997b13-ae7d-4147-bd26-e630ee270685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5f3501-24cb-4217-80b9-d4d04267efc9",
        "cursor": {
          "ref": "fb751569-8533-4292-9876-102aaa17ea5c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3ccb6870-53a0-4571-871f-cc252e29efae"
        },
        "item": {
          "id": "da5f3501-24cb-4217-80b9-d4d04267efc9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9e0b730f-b92b-4c6d-abbb-a2dbd95e1eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311c0d16-a8fb-400a-b702-0ff8c1d90beb",
        "cursor": {
          "ref": "92123a57-8d5d-423d-b566-46edef3ae284",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3f291bcd-93ec-4c46-ac02-5df2d6e573d9"
        },
        "item": {
          "id": "311c0d16-a8fb-400a-b702-0ff8c1d90beb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "db9699c8-7dfb-4963-ba2d-9437c1ff455b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5404c1fc-4386-47f8-be1b-80522281403a",
        "cursor": {
          "ref": "96ae864e-2036-44a3-8117-9b5487deb197",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bae1ab4d-2f2f-43eb-95e7-25690c63dfc0"
        },
        "item": {
          "id": "5404c1fc-4386-47f8-be1b-80522281403a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bd9ab7bf-d734-4ab9-833b-a805d621fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c251baa5-073e-4f15-888b-e222ab0e2495",
        "cursor": {
          "ref": "871e349e-7047-47b5-8e15-0b255605d791",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "99d520d0-b728-4676-9548-e77666e8875a"
        },
        "item": {
          "id": "c251baa5-073e-4f15-888b-e222ab0e2495",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "661cce5f-1e53-4061-824e-77e70c755732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9576b3b5-4e38-4682-89b1-ff811ec906b5",
        "cursor": {
          "ref": "e3ba915c-9a10-4fa5-a762-845fc8692f06",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "77690d98-66be-46f0-ad37-e9976627fd1c"
        },
        "item": {
          "id": "9576b3b5-4e38-4682-89b1-ff811ec906b5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "44abdd98-9710-490f-a615-06b4d9d6d8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1538107-9239-44b4-8768-6d418cc25ea0",
        "cursor": {
          "ref": "e352f41a-4f58-41d8-a771-8916ab0a5619",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "15c111a3-12ac-46aa-a8a0-bf8a196a0dbb"
        },
        "item": {
          "id": "f1538107-9239-44b4-8768-6d418cc25ea0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "67cb0e58-e94d-4293-a613-eeaf3c0e4bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454bd8ee-2cd6-4d5a-b7de-c6bec5d097c0",
        "cursor": {
          "ref": "e7f84bcf-f9e3-43a9-957b-6a061da7d74a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ea7d8a97-f43d-4a83-82e3-c7809de1aa48"
        },
        "item": {
          "id": "454bd8ee-2cd6-4d5a-b7de-c6bec5d097c0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dc6c71c6-8548-4ba1-9b03-bccc5d0adce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed4bf39-393d-4d63-919e-e5e3c85e103f",
        "cursor": {
          "ref": "28a0f5d7-9702-4b2b-8d5b-8a159d17f322",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cc704100-7629-4de3-b229-37c6115d01ca"
        },
        "item": {
          "id": "2ed4bf39-393d-4d63-919e-e5e3c85e103f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "63213e30-9ce7-41e7-9efd-a25d1694f999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03057b7-c59c-4f11-a094-e50551a0dc92",
        "cursor": {
          "ref": "b11059ba-f8d3-44bc-9a67-2f9206b3512d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "387a9c42-1a48-49cb-a8f0-27a6fadb3d2a"
        },
        "item": {
          "id": "c03057b7-c59c-4f11-a094-e50551a0dc92",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ef71b5c4-1341-46a9-9477-cf1d60440505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826876bd-4d47-4132-beb9-2a966ba80e93",
        "cursor": {
          "ref": "83fa066b-a834-4db2-b191-5fb41dc6261e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "67c87dd1-e351-4bf9-b310-19346a4971db"
        },
        "item": {
          "id": "826876bd-4d47-4132-beb9-2a966ba80e93",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e86963a0-de2d-420e-beb7-b12e24284fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f832a91-5f05-409e-a01b-ea28156e2db8",
        "cursor": {
          "ref": "afb43a62-8399-4e7a-beb6-b479ecc97b24",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d0f19994-9a7a-4df0-94f4-f774b45c3c18"
        },
        "item": {
          "id": "2f832a91-5f05-409e-a01b-ea28156e2db8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c65de87e-2642-49f4-bad7-ff2d285b6d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163034a5-2618-4844-a78f-241b7128b0b1",
        "cursor": {
          "ref": "dde5c7a2-7f9b-4dbd-a6d2-99d4ac8f18bf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0452ca7a-fc6d-4bab-a06e-99662ea0fc85"
        },
        "item": {
          "id": "163034a5-2618-4844-a78f-241b7128b0b1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cbbff2e1-b892-4e4e-89d3-c19237b8eebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c5979e-de7d-4b50-b6d7-dccd70ff593a",
        "cursor": {
          "ref": "759b4b0d-23aa-4bdd-b5cd-01f53c8a29c7",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2dbf087e-867c-45f0-b3a8-c6196fd3300a"
        },
        "item": {
          "id": "b1c5979e-de7d-4b50-b6d7-dccd70ff593a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0617b57d-ec25-482d-aa99-77312e5125e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b6971-1ea5-4167-abf5-41247e804b21",
        "cursor": {
          "ref": "06a22790-6c96-44bb-8a74-ab512c0ae300",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4adc658f-0283-4f71-88c6-539b619271df"
        },
        "item": {
          "id": "f89b6971-1ea5-4167-abf5-41247e804b21",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "09bc0c7e-1faa-4900-a3c1-540afe21f2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e4a736-05bb-4bc7-a1a9-31d8c086e6d2",
        "cursor": {
          "ref": "44e0add2-5753-49ba-ac77-8aedabca57d6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ac7418fd-c2ae-44b6-b6ed-b527d61c5930"
        },
        "item": {
          "id": "68e4a736-05bb-4bc7-a1a9-31d8c086e6d2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "925e3d3d-2bc7-4710-b3d8-e2e17e1c861f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067268dd-dbc1-4952-8291-e6b8efcd07c6",
        "cursor": {
          "ref": "65f8bf7b-8a37-430b-9a03-998747136e9e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64128c5a-8688-4660-8e9f-c4eff08d03dc"
        },
        "item": {
          "id": "067268dd-dbc1-4952-8291-e6b8efcd07c6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "611d5b51-1b9d-4503-8bad-f2c681520ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d5a2de-9807-4d76-a6d9-1dea53c3e945",
        "cursor": {
          "ref": "7e849cc0-c671-405e-b0fa-fd7740b08dba",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b9bdb8b1-a8f0-44de-864c-c860f30f97a0"
        },
        "item": {
          "id": "e3d5a2de-9807-4d76-a6d9-1dea53c3e945",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4b1a6a33-e775-41db-8e85-c4fe862e2d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0130e19-f91d-41f9-88e6-8fc12b27b4bf",
        "cursor": {
          "ref": "e8b303b3-df47-4c97-b4b8-74673c696bbd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fe2b6895-9fcc-4ea1-8ebd-9d71fc25fa8d"
        },
        "item": {
          "id": "b0130e19-f91d-41f9-88e6-8fc12b27b4bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aa32de96-96a7-4e43-a8f5-1b1e7b5df05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53063d82-3aa9-46ec-9f9b-ff9164d7b3f2",
        "cursor": {
          "ref": "f15e5be0-fa0e-4fb6-9f7f-f21f05ea7cd8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d017bf95-51b8-4c34-b54d-ec978ce90828"
        },
        "item": {
          "id": "53063d82-3aa9-46ec-9f9b-ff9164d7b3f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f6ec6e45-c186-4459-927c-1c12600c3474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc7af2-66b8-4c91-80bd-db1ba80c87d0",
        "cursor": {
          "ref": "e22b5857-c2d9-47d7-8d5e-c80e356e04c5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c99b9fec-655d-4bfe-9837-f25322c3cddd"
        },
        "item": {
          "id": "d9cc7af2-66b8-4c91-80bd-db1ba80c87d0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94d68efa-21c2-4429-b032-dedf2fc761a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514185f2-b1a1-4a43-88f1-44e8f1b17325",
        "cursor": {
          "ref": "cf26781a-fda1-4e1f-9259-e29aaf30329f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "34247940-ae3d-467f-8c81-13444b96109e"
        },
        "item": {
          "id": "514185f2-b1a1-4a43-88f1-44e8f1b17325",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4b145d78-5c80-476f-9f0d-67b35588fcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bf322f-f379-482e-a080-0b739772974d",
        "cursor": {
          "ref": "77685ad7-100c-40a0-809f-5928b9c7035d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e1511c29-1a17-46ec-923b-bf4322263540"
        },
        "item": {
          "id": "53bf322f-f379-482e-a080-0b739772974d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c966cc84-d98f-4fdd-8a39-b5d1221213ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb4317c-18a8-429b-8968-5f65f438eb55",
        "cursor": {
          "ref": "28204f1c-5ef1-456a-a29d-7d8ca348b17d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "19559234-bf11-4db5-8265-799e14ee5428"
        },
        "item": {
          "id": "6eb4317c-18a8-429b-8968-5f65f438eb55",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c2ccd379-b2d0-4a6a-aa3b-9fcbe7eb826d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f050ec6-f322-4eb5-a666-9db97fa42166",
        "cursor": {
          "ref": "61845e00-d781-403e-8f1a-491b75361760",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "252309cd-7b8a-4d36-bb2a-a115363904e0"
        },
        "item": {
          "id": "7f050ec6-f322-4eb5-a666-9db97fa42166",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1ee32d15-3d21-4cbb-bbfb-ef2ff3285f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46104a30-eeaf-4a1e-8fac-16126574ece0",
        "cursor": {
          "ref": "a25b2e20-29d5-485d-8322-8b75b4f2010a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8f3f687d-1897-4b68-a2b8-edf89d04f7a6"
        },
        "item": {
          "id": "46104a30-eeaf-4a1e-8fac-16126574ece0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "66026ba4-151d-456b-8dfd-a4ba619b15bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25d5a60-dfcd-42ab-960a-12a01e42e108",
        "cursor": {
          "ref": "f73db90a-a5fe-4c2c-9d4a-a22f3a5943e0",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "73d17e12-1f0f-4998-94c5-f2ba01a140af"
        },
        "item": {
          "id": "e25d5a60-dfcd-42ab-960a-12a01e42e108",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "74d8e84c-cf7b-4098-a29f-3416d9c5d9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f83c89-23c0-406a-9ea3-2d81e41455b4",
        "cursor": {
          "ref": "7dc16a74-ae56-4882-b3cc-ef0112888218",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "58f2c493-9560-48d6-a3e4-ba73cbd17d34"
        },
        "item": {
          "id": "b1f83c89-23c0-406a-9ea3-2d81e41455b4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bbe268c4-62c2-4665-ae47-1dbcff947827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5289ffe9-dd07-45fe-b000-1d68c5abed1f",
        "cursor": {
          "ref": "2684e668-3a0e-4600-9f24-f2e2c0bf18cf",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "20df6906-76b0-4309-baf4-af4729153186"
        },
        "item": {
          "id": "5289ffe9-dd07-45fe-b000-1d68c5abed1f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7e88ad12-e7d7-4d74-9930-afc347d3e12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f794cdc1-c178-4e74-ab0f-414f2036e2eb",
        "cursor": {
          "ref": "2a8ce42b-5ea0-4333-9016-b47fbad765df",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f79516f2-c885-446d-8f35-bd47781b5add"
        },
        "item": {
          "id": "f794cdc1-c178-4e74-ab0f-414f2036e2eb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5fcef280-b046-4380-8201-f6dca3590e2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf56839-ba3d-4397-a8d1-fb9f3aa384a0",
        "cursor": {
          "ref": "43288ae7-248c-4651-ab0a-9f27210bd34e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "56a43206-a474-4b4f-b132-7acca1a9b428"
        },
        "item": {
          "id": "bcf56839-ba3d-4397-a8d1-fb9f3aa384a0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "eddc37bd-4cbd-4bb2-a959-76028b26bdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3a27c498-2e6f-4ad8-b75d-3c45845eeba5",
        "cursor": {
          "ref": "db471516-0223-4ec7-8a93-5f1bfc6e6131",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "acacebb9-37bc-473a-b1b9-cb5590ca8046"
        },
        "item": {
          "id": "3a27c498-2e6f-4ad8-b75d-3c45845eeba5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa0f941c-3250-4bff-903e-fa2dd287ee80",
          "status": "Created",
          "code": 201,
          "responseTime": 9640,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "176546ec-d271-478c-9925-d2d784e1d9c9",
        "cursor": {
          "ref": "13338035-4c05-41eb-b15b-282741b7a94e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "06d16454-ad95-4097-a4f2-8c3f830f915e"
        },
        "item": {
          "id": "176546ec-d271-478c-9925-d2d784e1d9c9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3e3ccd7a-ad9c-4e58-bb5f-db025a7cd1d8",
          "status": "Created",
          "code": 201,
          "responseTime": 9089,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8804f8-c77a-4671-9703-331bf355f401",
        "cursor": {
          "ref": "2e29aa8d-e2f3-4c00-82cd-01fedad44b00",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "30399bc7-16df-433d-9daf-e32e70cdf507"
        },
        "item": {
          "id": "5d8804f8-c77a-4671-9703-331bf355f401",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ef29f97a-071e-4139-9322-5840022fa2ce",
          "status": "Created",
          "code": 201,
          "responseTime": 9423,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7ffebf-931e-42f0-bfce-e040cff7a579",
        "cursor": {
          "ref": "4dc551c6-6fde-4cfb-8d53-86ba2adc0e60",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4a1bca51-a4dc-4fa2-85f8-773d111efddf"
        },
        "item": {
          "id": "9d7ffebf-931e-42f0-bfce-e040cff7a579",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3eefddbf-d8f9-4a70-98fa-2123ec5f6646",
          "status": "Created",
          "code": 201,
          "responseTime": 9100,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f95f3b-4c98-4d1d-b12e-427add7380f1",
        "cursor": {
          "ref": "cc31cabb-936a-46aa-812a-591781dfa7fd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e5a0e338-b0d9-4b50-a25c-46582ab74076"
        },
        "item": {
          "id": "c2f95f3b-4c98-4d1d-b12e-427add7380f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a35cf031-615a-4197-807e-173018245faa",
          "status": "Created",
          "code": 201,
          "responseTime": 8922,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-04T00:39:57Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-04T00:39:57Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "aa052f79-067e-45c1-aa36-ce807f539d07",
        "cursor": {
          "ref": "79a74293-aed5-4fd9-8d78-39fbb345ed1d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8be026c7-5020-424c-a5f9-4adb98ab7c67"
        },
        "item": {
          "id": "aa052f79-067e-45c1-aa36-ce807f539d07",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2cf495d1-4261-4ca3-837a-0578f42ba6c9",
          "status": "Created",
          "code": 201,
          "responseTime": 9436,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be02ac0-9b4a-4364-9103-6b6d4af9d7b6",
        "cursor": {
          "ref": "4eb85b75-73d1-457b-8020-3f0acc79c2fe",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0dec89ee-8a7f-4740-8004-47f2f97cc609"
        },
        "item": {
          "id": "0be02ac0-9b4a-4364-9103-6b6d4af9d7b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "127ea119-200e-4a57-aae7-2f9f3dbd283b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c0f859-4b75-4cf0-9d55-465d700ea778",
        "cursor": {
          "ref": "8e3a5597-19cd-4be2-9006-360d71bddbc0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a8532d8a-a5f7-47ad-ac7b-297072a8ae6f"
        },
        "item": {
          "id": "31c0f859-4b75-4cf0-9d55-465d700ea778",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "589d0bcc-d62f-4cd4-9301-acd7a5c98981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4168a5-3b9c-4c95-a6e6-c662c6b92b0b",
        "cursor": {
          "ref": "b2b6f493-2251-49a9-9334-b7d1caaf8ae7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "92a40dad-af94-4dfb-a2e6-1dde9466df01"
        },
        "item": {
          "id": "1f4168a5-3b9c-4c95-a6e6-c662c6b92b0b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bcdb31ac-10f2-4e6a-bf6b-290a0f0d31eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a0b8d6-5589-45fb-a2fc-2588c3abeac4",
        "cursor": {
          "ref": "df01889a-6ad4-4b20-8162-c1d594d276ed",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "96f3b712-7d7f-4065-80ed-0cc032de3958"
        },
        "item": {
          "id": "66a0b8d6-5589-45fb-a2fc-2588c3abeac4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0c818a0d-e500-474a-b8d0-360f92aff155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323a7874-82cf-4fab-8a9e-56cc5aaadc28",
        "cursor": {
          "ref": "f8c2c33b-eb62-44d4-9ec7-9e7166c2e974",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "450486f8-46e5-4c45-ad36-66c73886e13b"
        },
        "item": {
          "id": "323a7874-82cf-4fab-8a9e-56cc5aaadc28",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "10a970ef-18dd-4fbd-838c-665b8c034b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b0ce6d-a8ec-4cf1-8876-84b5167d00e8",
        "cursor": {
          "ref": "ab6892fc-52cc-4a36-bdc1-d0954139702d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "47a566f9-3c16-4615-9591-8fb1dd1e2deb"
        },
        "item": {
          "id": "54b0ce6d-a8ec-4cf1-8876-84b5167d00e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3412c515-a97b-4a54-81b3-7b0e3777d49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687fd088-2a5c-4e40-898a-3b2fda09a482",
        "cursor": {
          "ref": "70acc9c0-f8af-48af-94a6-1cec3a2f4ff8",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5e15d632-cb17-42d2-8905-b52ce6e96242"
        },
        "item": {
          "id": "687fd088-2a5c-4e40-898a-3b2fda09a482",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c3cd6d1a-984d-4bc6-9bc2-3e3dae5d6d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e9a0bd-998a-4723-b1c5-a31f53326f48",
        "cursor": {
          "ref": "98286bce-5fa7-4af0-a9d4-be64aca690ce",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "558de416-d178-4c8e-aedb-fac360e96255"
        },
        "item": {
          "id": "70e9a0bd-998a-4723-b1c5-a31f53326f48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "97c514c6-ecfa-409a-8beb-530bb7c1202d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bfa79d-1339-4480-9a4b-f541f5f6d381",
        "cursor": {
          "ref": "c5b1363e-4369-440c-b4cc-3ad137fb08ed",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "783b7b5e-c935-4fd1-88f7-296e865b633e"
        },
        "item": {
          "id": "53bfa79d-1339-4480-9a4b-f541f5f6d381",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2988db73-aaa7-440c-a8b8-3f9c123f48d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b1c37d-ec1a-433a-880f-e09fa0931b36",
        "cursor": {
          "ref": "e8e87905-3948-4cea-9b93-02cfefd6302e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "17b3f840-f7f9-41e1-8f34-ff96943c9a6f"
        },
        "item": {
          "id": "e0b1c37d-ec1a-433a-880f-e09fa0931b36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6eb6c7f6-34bb-4189-9dba-7395bd77330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a406a8-c64a-4c05-aad3-cda0f979e137",
        "cursor": {
          "ref": "1b935859-131d-43f9-b275-84e909b96ef4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3548f900-36cf-43c9-8603-4ea9602b2bac"
        },
        "item": {
          "id": "01a406a8-c64a-4c05-aad3-cda0f979e137",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d5ae183a-8352-4c32-ba2b-ca245641f61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b32e245-691a-4e2e-ae99-51e648f229fc",
        "cursor": {
          "ref": "1bfdec38-f133-4e41-a410-4c66f61d1ab5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2d6e1612-18f7-4940-8c07-bf8e90320b26"
        },
        "item": {
          "id": "8b32e245-691a-4e2e-ae99-51e648f229fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b91cc852-c927-4272-9b07-d10e20b0c599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898c3a60-b369-4eac-87a9-7fcccd54eac3",
        "cursor": {
          "ref": "980fbda9-8d9f-4d0e-9eb1-f6803a95ef25",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "93f34fe1-4e32-4dc5-81f8-8eff74704ca4"
        },
        "item": {
          "id": "898c3a60-b369-4eac-87a9-7fcccd54eac3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83fff997-da6f-4f18-b851-9744fece64e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6374cf2e-035a-4775-a828-f35bc8f34bf0",
        "cursor": {
          "ref": "191bfb60-7ff2-449f-90ef-72c199f33880",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1a58750e-e4cc-4aa5-8855-9de5155332ba"
        },
        "item": {
          "id": "6374cf2e-035a-4775-a828-f35bc8f34bf0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b847468b-5f9e-4357-a526-9619fb61923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859a17e8-3ff2-4484-80ce-c2e7c8e40a9f",
        "cursor": {
          "ref": "d9a9d008-d217-4ad2-8b95-458a639f665d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e99cf13e-6c84-42c7-8525-e94ddf2a64a5"
        },
        "item": {
          "id": "859a17e8-3ff2-4484-80ce-c2e7c8e40a9f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e8fe9b13-5be9-4c20-a15c-cf2b0dece185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2617c3-268e-43ed-be45-bcafa7dcca1b",
        "cursor": {
          "ref": "621bb2d1-0fe0-49ed-bd00-48381d02a786",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ef181239-2b84-42df-9271-5dbba9c555f7"
        },
        "item": {
          "id": "1e2617c3-268e-43ed-be45-bcafa7dcca1b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "046fe955-f900-4955-bb8b-d73a5cc7cc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce84dfd6-c24e-4bdf-8754-a68f0ed95d2d",
        "cursor": {
          "ref": "44b27ba0-53d2-40c1-97d6-346faea80cab",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "41e1a992-3576-4a83-90b3-5687f354cf97"
        },
        "item": {
          "id": "ce84dfd6-c24e-4bdf-8754-a68f0ed95d2d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b705343c-898b-407c-8cf2-3de85e56119b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22214672-c23e-46aa-ad2e-abf3a5f7898d",
        "cursor": {
          "ref": "9896e317-e69f-4c7c-b440-42f57fa619b2",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4d4b1fc5-1443-4f81-985d-1f21eb87c77d"
        },
        "item": {
          "id": "22214672-c23e-46aa-ad2e-abf3a5f7898d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03667ef7-3a89-417c-a592-7e33592fdf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73527cd-de42-4b26-a491-60605d011645",
        "cursor": {
          "ref": "0b8959ed-b5ce-45dd-a2f6-dc5611d079d2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "97dad565-cf38-47d6-9892-2c14a14653cf"
        },
        "item": {
          "id": "d73527cd-de42-4b26-a491-60605d011645",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d9ad8a6-adbc-4153-a35a-59ba1fc5c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d69daeb-ab92-4915-85c5-a613230ff042",
        "cursor": {
          "ref": "011c379d-8e71-4186-8c0b-e5ff05d5a95e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f766319f-f588-4081-8759-bac7c8c99ae9"
        },
        "item": {
          "id": "0d69daeb-ab92-4915-85c5-a613230ff042",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0fc24502-fea4-415c-8aa8-0e6f0b2292fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7192c-ef83-4fec-b080-dceb798a054c",
        "cursor": {
          "ref": "bb358258-f214-42f5-a2e9-28c0d408c8c7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83460669-e515-45de-a9f4-5360802c1e41"
        },
        "item": {
          "id": "90b7192c-ef83-4fec-b080-dceb798a054c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c12aab4e-fe89-4b16-9ecb-be47369b3004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643f2b2b-cb59-44fb-ac03-4b0594809ae6",
        "cursor": {
          "ref": "4fb9245b-6d4b-4e64-b98f-cc2017e619c2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cfa3af0b-d3a1-4ff7-b416-bb81283abce5"
        },
        "item": {
          "id": "643f2b2b-cb59-44fb-ac03-4b0594809ae6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5dde6593-37fa-4159-880e-6251f291db25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e97f19-5f20-4931-b05f-d6355de0c786",
        "cursor": {
          "ref": "c33ebdee-a3bd-4b2f-b5f0-9dd631685635",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4c930d0b-fee9-41ff-9400-85de0dd56f64"
        },
        "item": {
          "id": "91e97f19-5f20-4931-b05f-d6355de0c786",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7d1da8f-4924-4aea-b971-bb0ce1292ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c9ef9-b4ac-4df0-9be6-b162074bbe90",
        "cursor": {
          "ref": "52bb977d-f25b-4ac7-8d5d-787478350efd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fb985446-1356-40be-a940-b553ec6968af"
        },
        "item": {
          "id": "fe6c9ef9-b4ac-4df0-9be6-b162074bbe90",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8245128b-614c-4383-a5da-1a5e768e092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fac156-58c2-4263-a708-c3255e30f3a8",
        "cursor": {
          "ref": "5d19dde7-cecb-4f72-9611-306cfb51d8b0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4bf7a57c-8557-44eb-ad00-6d36e989e248"
        },
        "item": {
          "id": "64fac156-58c2-4263-a708-c3255e30f3a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca85296c-d86c-4d62-b84d-3b77a4e59b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a66f31b-5824-4641-832a-73df0b345441",
        "cursor": {
          "ref": "b1ac7436-24cb-4ad4-8336-0fd5c0c83a67",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eda41ac0-c3e9-4d5b-8602-ac8392fa6bd6"
        },
        "item": {
          "id": "2a66f31b-5824-4641-832a-73df0b345441",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b7cceb5e-4f5e-4da6-92cb-6b65502fc908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8a0934-b47b-4393-9fb5-a720631fcd00",
        "cursor": {
          "ref": "7ae7d747-cd2d-420a-b82e-d58e01367dc2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "428b4062-281c-4fae-87dd-2a076be1873a"
        },
        "item": {
          "id": "9d8a0934-b47b-4393-9fb5-a720631fcd00",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ebca94a0-8544-4ffb-84bf-141ebc15f383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e39157-87a7-4a30-879c-55e2e7c19d84",
        "cursor": {
          "ref": "c9c50a62-f26b-42ed-90bb-a6390612b275",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cb9d89cf-af33-49a4-9e42-d99a9e3eacdd"
        },
        "item": {
          "id": "c6e39157-87a7-4a30-879c-55e2e7c19d84",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8218f067-0b57-4cd5-af6f-d70e079a577e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66fe9ca-32dd-40ed-bd7a-7c6a2f8d187a",
        "cursor": {
          "ref": "072a2616-cafa-4f9b-a9d7-b50fc7e87fb0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9ed90693-c697-4ff4-9ea0-eebcf7a20f54"
        },
        "item": {
          "id": "e66fe9ca-32dd-40ed-bd7a-7c6a2f8d187a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "22921c35-14cf-4f69-8b88-f0ceb0b4b936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8d1a9f-063e-4f35-a38b-bc1734fd3ccd",
        "cursor": {
          "ref": "3a6399c8-8fa0-4c49-8e09-fe61126366df",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5811f05d-0240-4516-b721-fef09cef9089"
        },
        "item": {
          "id": "ab8d1a9f-063e-4f35-a38b-bc1734fd3ccd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4cd437ce-dc98-4845-a6c6-42fb17d5958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d7c452-697c-4334-88f5-f660ee3ccf67",
        "cursor": {
          "ref": "9529adc5-a7d9-4fad-b48a-33c642cf68c5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6b412cf6-fddf-46e0-b24d-99f6932c81d8"
        },
        "item": {
          "id": "97d7c452-697c-4334-88f5-f660ee3ccf67",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dd669ff7-47f3-409f-8d71-afc664642b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e644c616-ee27-4cb0-a8a9-389e6136b390",
        "cursor": {
          "ref": "b26f2bcf-0f7f-4ad0-927e-d6e6ff3f3fca",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a764fe6e-2b63-440d-9c9f-1d68a6605023"
        },
        "item": {
          "id": "e644c616-ee27-4cb0-a8a9-389e6136b390",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2f646095-0ae7-4245-bffd-b85022b80a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb6d11-2f4b-4131-a767-b4dc65e7fee0",
        "cursor": {
          "ref": "c959fbf7-3711-468e-80cb-ccaae1efee5c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0f2755e2-5dc9-4c96-a7fb-7a0d81e6a469"
        },
        "item": {
          "id": "10fb6d11-2f4b-4131-a767-b4dc65e7fee0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c1667d9e-dd54-4fb8-aff4-012337fcc75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df846e95-89eb-47bd-865c-e49b7b4c15b1",
        "cursor": {
          "ref": "c346416a-4489-444e-bfae-a4935bf513f6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "12e1d15e-8aca-4da9-b44a-4ac0d1f6f9ac"
        },
        "item": {
          "id": "df846e95-89eb-47bd-865c-e49b7b4c15b1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "82f0b2c5-b1ff-4cbc-9d0f-2bb75fc007e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9277cb-6783-4dea-8f2c-11e5f18f112a",
        "cursor": {
          "ref": "e36129f1-4f21-4a4a-b5af-0ef657f5011c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c8b48c8f-4773-41f6-860d-5636d2f53001"
        },
        "item": {
          "id": "0e9277cb-6783-4dea-8f2c-11e5f18f112a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "18687746-ba4a-4e94-b6af-8efdb2a4f2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed6cda1-c312-4637-90b4-a8d8d20b848a",
        "cursor": {
          "ref": "0d0d628c-cf20-484e-8f72-3e288dc2158f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "01b46cd1-eeba-4a81-8d23-78a35c09a3b4"
        },
        "item": {
          "id": "aed6cda1-c312-4637-90b4-a8d8d20b848a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4637b95b-fa8f-4770-aa0f-c09aff769b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c46d4-f02e-416b-8c54-f0a23356c260",
        "cursor": {
          "ref": "07a9373a-a015-455b-bc5d-a5b04c64ef3b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1eb0ef3e-cd9a-4efc-bb31-c70b29a98865"
        },
        "item": {
          "id": "765c46d4-f02e-416b-8c54-f0a23356c260",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f694e993-d634-4ef1-bc5b-143b3de564fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6a9d0d-a80d-4727-b501-45a0738465e7",
        "cursor": {
          "ref": "d56dbadf-e87a-46c8-b29d-86c270411574",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8002b2d3-859d-4cde-8430-7155bdf3fa15"
        },
        "item": {
          "id": "6c6a9d0d-a80d-4727-b501-45a0738465e7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "603aef83-657b-4255-bca0-61acfde349c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e27a5dd-00d3-42eb-a99b-070c20b71fa4",
        "cursor": {
          "ref": "709716b2-4f4c-4025-92fb-6ca3172e9dd0",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "38aa977f-6c11-411e-9848-a6f9e9beb66d"
        },
        "item": {
          "id": "7e27a5dd-00d3-42eb-a99b-070c20b71fa4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "49517593-53c2-4d35-8af3-0f259af8f993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c407dbc2-7e71-4156-b7b4-3127896e2ef7",
        "cursor": {
          "ref": "b4794b7a-35bf-4146-b9f4-0ab5815c724e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "45b40cab-0f00-462f-bf9e-e6c9a0921a11"
        },
        "item": {
          "id": "c407dbc2-7e71-4156-b7b4-3127896e2ef7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b6a40a36-d872-4eee-aea1-64370b1f797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad87ba-f116-4ba2-b829-5560f75dba9b",
        "cursor": {
          "ref": "87f903c9-246c-418c-9bfd-c5f63b4d239a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1e912a9d-d8a3-4c1a-a6f3-096d2b0d69ce"
        },
        "item": {
          "id": "57ad87ba-f116-4ba2-b829-5560f75dba9b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "78d5852e-1b32-44bb-aa7b-7796ff781b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7645579-2cb2-46f5-b104-fd4a5e2cc7bc",
        "cursor": {
          "ref": "1a5ba2a3-183f-4e11-a181-9651636e073a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "423d8b08-83b7-4c36-854a-8fe83fc2c9a3"
        },
        "item": {
          "id": "e7645579-2cb2-46f5-b104-fd4a5e2cc7bc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "72263133-1d65-4b15-b310-707a69d95d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c1441f-85d2-4f6a-9d3d-ddf53411ef30",
        "cursor": {
          "ref": "2c6e8744-2fee-4741-bb58-b9702e15f62f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1bd02502-4b4a-4fcb-a91b-94a63a4aacfc"
        },
        "item": {
          "id": "a2c1441f-85d2-4f6a-9d3d-ddf53411ef30",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "93f5b3b8-d338-42b3-b538-b071c21a49bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd2d4da-015b-4080-9520-a66aa139fd40",
        "cursor": {
          "ref": "e60333de-06a4-43cc-8d44-e16024ba14c1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "585579b4-95a8-4738-91bc-77e20aedcb59"
        },
        "item": {
          "id": "4fd2d4da-015b-4080-9520-a66aa139fd40",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f47a290-79b2-473f-afc1-64dbf9d04c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3aa111-d2dc-4485-8371-fd01f20df676",
        "cursor": {
          "ref": "e6035a7e-0bd3-4fef-b278-ac278b2caa82",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cd5d7ed1-fb6a-4c78-bccf-bf6bb333bc26"
        },
        "item": {
          "id": "4f3aa111-d2dc-4485-8371-fd01f20df676",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "41ad5fa9-adb1-4560-add7-5c561f5029ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225a039c-8e90-4927-91c6-c44f4e133f0c",
        "cursor": {
          "ref": "c1c97c58-0332-459c-8e65-fb188ee7339a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7544e666-129a-413d-b3ea-9466c4ac1f75"
        },
        "item": {
          "id": "225a039c-8e90-4927-91c6-c44f4e133f0c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "940a3fb1-d552-4a66-87c8-a78001d2010a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5775be08-8570-4341-867b-1a52353001d0",
        "cursor": {
          "ref": "c5c860e7-8cb4-4382-bbc4-84cd33cf2c18",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2f51fcb3-8531-4c55-be21-e4d317ecd799"
        },
        "item": {
          "id": "5775be08-8570-4341-867b-1a52353001d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "77e711d6-4d76-4180-ad4b-591effa921a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1a264e-607f-4be9-88f1-7b1ed9def5c7",
        "cursor": {
          "ref": "29f4601b-abae-475a-bb23-da9969e47db1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "55201dc6-1dcb-4367-8efb-b960ca87ee20"
        },
        "item": {
          "id": "cd1a264e-607f-4be9-88f1-7b1ed9def5c7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7878b69e-2bff-404d-91c2-ff688acd1696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9526690-e196-434f-a072-2eb293e7c37b",
        "cursor": {
          "ref": "1cb0d903-6f9e-4c1b-9816-1b3a560f9632",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "04feb2b1-170f-4e1a-8d8f-7d27d1f86142"
        },
        "item": {
          "id": "e9526690-e196-434f-a072-2eb293e7c37b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b0b4768d-60b7-450c-941e-107433096282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f072c56c-7ea3-4fd5-87cb-6e0628e4db26",
        "cursor": {
          "ref": "b323e181-83ee-4266-83cc-02ab73640f79",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e1864ad6-3bb3-4f3c-a763-93bfb81e85ac"
        },
        "item": {
          "id": "f072c56c-7ea3-4fd5-87cb-6e0628e4db26",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4b7ecb5d-945c-4657-9c4f-b3ff3390365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be01fed-fd2c-404b-a1e6-da4b069c56c3",
        "cursor": {
          "ref": "b7c9b71c-46c2-4774-b901-4702f0d6f96e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7a4a9008-1330-4b39-969a-a09f14512144"
        },
        "item": {
          "id": "6be01fed-fd2c-404b-a1e6-da4b069c56c3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b16db165-cf73-42be-ba9f-8d45bd352ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758de092-2995-46e8-b4c9-df23f0a8a95e",
        "cursor": {
          "ref": "89cb6970-e9fd-42ca-b982-41fe246ce669",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bc886b22-6d7c-46a0-831a-547abffa28c6"
        },
        "item": {
          "id": "758de092-2995-46e8-b4c9-df23f0a8a95e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf164b0d-c09e-4438-ae4a-76fef0900ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8f2899-2ddf-49b3-b6b5-c54343358a2a",
        "cursor": {
          "ref": "07a1e533-17a2-4459-a8db-e7cd8afa3ee9",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3cc459fd-4fb1-494a-878f-be2a6323e695"
        },
        "item": {
          "id": "dc8f2899-2ddf-49b3-b6b5-c54343358a2a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f3b21d5-3f33-4c40-802e-c6501c4d46db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba24a178-8a5f-4b42-ba6a-93c7cc6072b8",
        "cursor": {
          "ref": "5ef37c73-00f9-42ff-877d-d8c3ec608101",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8f40bac-3c8b-4d15-8df5-d64b4a421b8e"
        },
        "item": {
          "id": "ba24a178-8a5f-4b42-ba6a-93c7cc6072b8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6469af7d-35d4-4091-8348-50649eac4e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c57534c-7236-437b-83f4-0801bda722bf",
        "cursor": {
          "ref": "6dcd6496-618a-4d00-9469-dfba77a368eb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cf19b26f-d859-4597-b84c-72042fa1b3fe"
        },
        "item": {
          "id": "1c57534c-7236-437b-83f4-0801bda722bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "28ff41b0-97f1-4f55-880f-044251ffa70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62b6a88-19b7-4541-908b-4816a9d9c3f3",
        "cursor": {
          "ref": "243aae43-a83a-411d-96ba-6bb317a63cc5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "59a0a608-276e-4ca1-acfe-de2ea78c2ecb"
        },
        "item": {
          "id": "b62b6a88-19b7-4541-908b-4816a9d9c3f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a924fec2-ac4a-49e7-a64f-6d3eb208c854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79776e2d-401d-4178-a9df-ed11e2738a95",
        "cursor": {
          "ref": "68f8e89d-bcd1-4baa-808d-6697a8f43182",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6ea5a573-9272-4817-915c-025874d1683f"
        },
        "item": {
          "id": "79776e2d-401d-4178-a9df-ed11e2738a95",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c5b70be7-e515-455f-a5ac-c6769e121ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fe0baa-e180-49fa-96e5-588b6792bad5",
        "cursor": {
          "ref": "93dcd736-6521-4f13-9abe-5b4f3dd69942",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "84d6abdf-2f25-4adc-93d8-348b14eea333"
        },
        "item": {
          "id": "c9fe0baa-e180-49fa-96e5-588b6792bad5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aa82ab27-11c6-494b-8457-32f0014b213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a5510d-aa05-4d67-9687-308925ee7af9",
        "cursor": {
          "ref": "41474940-3163-4eda-8661-bd62a86b5f3f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6fb648ac-93ec-45e6-a49d-3893920ffe54"
        },
        "item": {
          "id": "99a5510d-aa05-4d67-9687-308925ee7af9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74f44596-6dc8-4848-b1c3-630e010b4807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a265186d-17a2-4689-b9c8-84315e8dd446",
        "cursor": {
          "ref": "0c6f4bdb-6c00-439c-b06f-9b5d18a3575c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c74c1980-8600-4237-a7aa-e8e9df4caf87"
        },
        "item": {
          "id": "a265186d-17a2-4689-b9c8-84315e8dd446",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "65c718b2-9a5b-4124-898f-4de55953e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfac700-3aa6-47ee-a5d0-e9b17646f2a3",
        "cursor": {
          "ref": "849c9df3-aee5-4eae-9894-4b8211980e30",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "aa013a4b-deda-42a2-aaf0-9f42dd9fd1dc"
        },
        "item": {
          "id": "4bfac700-3aa6-47ee-a5d0-e9b17646f2a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "95649d46-66f1-4567-9d49-dd195c05068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff3e81a-3ff4-410f-acc8-8eb89b2588e4",
        "cursor": {
          "ref": "fc197bae-e5b9-4862-bc21-62e5e07c4267",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c01cc738-c01e-45ff-8582-2c0a73637116"
        },
        "item": {
          "id": "1ff3e81a-3ff4-410f-acc8-8eb89b2588e4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4f82738b-e488-4a01-96d4-cade1da3b596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55103813-64da-43c1-b346-68bfc2bc4857",
        "cursor": {
          "ref": "2aeb0c96-9a06-424f-9272-985c3b2fa1c0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0556ec6b-2b4d-4a41-9448-156bd87192b9"
        },
        "item": {
          "id": "55103813-64da-43c1-b346-68bfc2bc4857",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1db2f185-6bc2-4845-b3b1-97cac5f3502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67fb1a0-d2aa-439b-8536-1a500abc95fe",
        "cursor": {
          "ref": "25b4af74-56ec-4d6a-8313-293433f16b4f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c1663fca-5375-4bfd-a93b-b87a7d95bb7c"
        },
        "item": {
          "id": "c67fb1a0-d2aa-439b-8536-1a500abc95fe",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f0babfc5-7536-4b64-a98c-da32eba053ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c9875a-485b-4102-984c-3757dd1b2a3b",
        "cursor": {
          "ref": "81024bf7-3e17-48cf-84b1-b630c94e42c3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0a9d86df-784d-4b8a-b16a-08f001f993bd"
        },
        "item": {
          "id": "71c9875a-485b-4102-984c-3757dd1b2a3b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e6f569e-3299-42bd-b22b-071a5b861a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29297e28-5b23-45a3-946a-efd1c53ca5c4",
        "cursor": {
          "ref": "c54b70d6-fed2-4e93-8f59-ab420944a5d7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "45306f99-4c8b-4741-a96a-c676f525edbd"
        },
        "item": {
          "id": "29297e28-5b23-45a3-946a-efd1c53ca5c4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "90d4adca-c707-459c-9df4-400ab7da92bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0034871-e68c-4ba8-a23c-8b8682bce63b",
        "cursor": {
          "ref": "f7f01500-3690-4108-a3e1-3ee9e22245bd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "596a7279-5885-4a38-bb24-be93af38643c"
        },
        "item": {
          "id": "a0034871-e68c-4ba8-a23c-8b8682bce63b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c5c561be-c101-4d5a-adb7-e26500742c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9da18c-13ea-485d-bec9-5464c0705282",
        "cursor": {
          "ref": "1d404b6b-9f58-47a5-990b-b624e3e4ef84",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "447ac09f-a582-44c4-aa53-45bea9524d0f"
        },
        "item": {
          "id": "9b9da18c-13ea-485d-bec9-5464c0705282",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "72f23ba5-3e5b-466c-9dbb-c59eefdec0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1237c0b9-77bf-492e-90d6-fa3ca2aa1c5e",
        "cursor": {
          "ref": "75f7ccee-4282-4e87-b1e1-f123aa7042bf",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e05117c1-7a40-4b0a-883f-d5682bb78cf6"
        },
        "item": {
          "id": "1237c0b9-77bf-492e-90d6-fa3ca2aa1c5e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1826ff5e-b892-48a1-ab5a-5f107a042520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1c3afd-31d6-4cc8-9b9f-754206683cce",
        "cursor": {
          "ref": "4d32e0ec-34da-4fc6-af87-bc971a37161f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1f6b0e2e-010a-4c79-b680-c1074d4d4593"
        },
        "item": {
          "id": "ee1c3afd-31d6-4cc8-9b9f-754206683cce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "26de363f-4101-4132-bc94-79a6679f87d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f80a41-9b42-463d-b644-3b7803d46def",
        "cursor": {
          "ref": "def41cf0-ac34-4225-a713-2d7dd191a89e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dc2ac8ce-c984-4471-9113-eb668a7c45d3"
        },
        "item": {
          "id": "f7f80a41-9b42-463d-b644-3b7803d46def",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f3feb855-6733-4073-a77a-577265c38ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6139ca84-f63a-4219-8522-5d17d96e3719",
        "cursor": {
          "ref": "39bc5ad1-6ea3-4e9f-a186-ac77c84205df",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7154c7ea-9e45-4920-8fea-4ba5786d2aa2"
        },
        "item": {
          "id": "6139ca84-f63a-4219-8522-5d17d96e3719",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a153518c-bba0-47e7-8e07-89395450d6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a97bec4-417c-4dda-8677-b9e5c7aee30e",
        "cursor": {
          "ref": "b951309e-bc83-494a-b6d0-4d2808464dff",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3a9c92f3-7b9c-4a4a-8868-120f67f41c1c"
        },
        "item": {
          "id": "0a97bec4-417c-4dda-8677-b9e5c7aee30e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9a717c9d-204b-4d76-ab88-d4a147fbb60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f8fadb-3e98-4405-b707-836f26632296",
        "cursor": {
          "ref": "b1358361-e29a-4e37-9a00-4885a2b8a263",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d2d76af0-5a95-46b4-9503-d46e40c0498e"
        },
        "item": {
          "id": "88f8fadb-3e98-4405-b707-836f26632296",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6db8a6bf-4df0-4f0b-8523-b96afa069a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65d68d5-12e2-41e6-b5d1-1089b8690a8d",
        "cursor": {
          "ref": "b8b06472-61c5-4e28-9e8d-4bfa365cccd8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ed1ae40f-ea7d-427e-b62e-aa88b106eb17"
        },
        "item": {
          "id": "a65d68d5-12e2-41e6-b5d1-1089b8690a8d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "454dfae9-01b0-40ab-bbd5-10686b9aa474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71074a9-8c41-40ec-a2a1-59042d78cc7d",
        "cursor": {
          "ref": "35813786-9858-4963-aefd-a7ee39645d4c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "14e70abc-31f3-4250-ad15-1f9f87e60d85"
        },
        "item": {
          "id": "a71074a9-8c41-40ec-a2a1-59042d78cc7d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5f08bf6a-c0c6-4bff-bf26-4f6273c8b24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928d29d1-a365-412c-8f31-4a084922d33e",
        "cursor": {
          "ref": "e5544cea-de7b-47db-a04a-079cb4efb4d4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac38d298-427c-4e13-92c9-bf6545019284"
        },
        "item": {
          "id": "928d29d1-a365-412c-8f31-4a084922d33e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb2ea8f0-661e-4052-bc4c-b73e535f93d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a99368-15db-4412-91b1-812fe64f48c4",
        "cursor": {
          "ref": "b886e579-e980-475c-af05-a759440f542e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b48aff43-06bd-42b1-8e5c-420ea40432b8"
        },
        "item": {
          "id": "e3a99368-15db-4412-91b1-812fe64f48c4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "796fd108-78f5-40bf-a035-079a6efc6deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecf5212-93fa-4950-a0e0-116123458b11",
        "cursor": {
          "ref": "d1959add-0104-4581-b774-bdd54f78133b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d250c2d3-b23a-49c8-ba2b-da15a0400ef0"
        },
        "item": {
          "id": "6ecf5212-93fa-4950-a0e0-116123458b11",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "81e6fe19-b1ac-4eb5-8aae-e6e8b613d3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fafb81d-9f8c-4c2f-b35d-1b2e8c1ce408",
        "cursor": {
          "ref": "a5e9f80d-364c-4a93-acf8-3f9a9e67f6c4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e95942f-974b-4201-9a47-025964b77dee"
        },
        "item": {
          "id": "2fafb81d-9f8c-4c2f-b35d-1b2e8c1ce408",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3d0b60ca-b61f-4e78-99dc-428284f8ecac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6a154e-7082-4435-815d-a8c768cbf78f",
        "cursor": {
          "ref": "00207e73-abd6-4593-8acd-df881a19f40f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "38f241ad-7210-4b1c-9b01-a6f4e2343e12"
        },
        "item": {
          "id": "ce6a154e-7082-4435-815d-a8c768cbf78f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "69957f7a-cf53-4e13-b766-33948d313b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ddde6a-057b-4d01-b496-79ae4b579398",
        "cursor": {
          "ref": "40943131-7a3b-4f83-bbd9-f68327a920ba",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3c345dc9-0674-46e5-b58c-ab1bf51cf724"
        },
        "item": {
          "id": "e3ddde6a-057b-4d01-b496-79ae4b579398",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ed218304-a723-449c-b1a5-e4d926e4d282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431768be-67de-4637-8d8c-2f591c1e078b",
        "cursor": {
          "ref": "f6a4468c-bf2f-4b67-afd5-227f0266917f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "22c46cf1-53a8-4683-a99e-776548e42be6"
        },
        "item": {
          "id": "431768be-67de-4637-8d8c-2f591c1e078b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0ad401a5-f2c7-4d54-8160-065e8152428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca9ac7b-4c6d-4d11-be66-6795180c1ee9",
        "cursor": {
          "ref": "85a09da0-79ba-4df7-8e6a-14666265ab8c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ca517258-663a-429e-bf66-562168b81b75"
        },
        "item": {
          "id": "3ca9ac7b-4c6d-4d11-be66-6795180c1ee9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9e099dc1-4456-4eeb-8628-40a10459fd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0582fb72-dbb8-4a25-b759-f167e86563b7",
        "cursor": {
          "ref": "a6308080-6e83-41e1-9a9f-92ee693c2214",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8387ead2-671a-41b3-baf2-cd63fb7b5525"
        },
        "item": {
          "id": "0582fb72-dbb8-4a25-b759-f167e86563b7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fceea060-2c83-4697-81f8-0d066ddb52e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b4b9e0-a797-4d94-8feb-3ae46fc33942",
        "cursor": {
          "ref": "87998700-0d2f-4eaa-8b7a-6e1cd18f31c0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d035c26c-ea81-41e1-9fb1-919996855a32"
        },
        "item": {
          "id": "e0b4b9e0-a797-4d94-8feb-3ae46fc33942",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d38ef74e-0619-447e-9924-d9e886908e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86918f99-a055-4f80-bc63-f8402b33be17",
        "cursor": {
          "ref": "80c059d0-5502-434e-8c60-079ce3c98ecf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f1edf58a-43e9-4f10-93ac-40ea4625b9e1"
        },
        "item": {
          "id": "86918f99-a055-4f80-bc63-f8402b33be17",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f689efb3-970a-4f8e-a23d-c8b978ff4cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47d9bbf-e424-4b13-9b0c-a964e3369a44",
        "cursor": {
          "ref": "56d65dcd-645d-43e8-b255-2f3457632f45",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "586bfca1-d018-4fc5-bb1a-bc6a8ce0cee2"
        },
        "item": {
          "id": "a47d9bbf-e424-4b13-9b0c-a964e3369a44",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2bbcca0d-75b8-4877-849a-1bd71b24cf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbde746-e968-4880-abdc-b6bf704842c2",
        "cursor": {
          "ref": "c7acf4cb-c202-405f-8197-8d91428fdd19",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b80ceb21-7909-4a80-9113-9115c1d499c4"
        },
        "item": {
          "id": "1bbde746-e968-4880-abdc-b6bf704842c2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a058e8d7-6936-4836-aec9-18f3ca098f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77740be2-fd25-4d4e-a615-429d930acbcf",
        "cursor": {
          "ref": "1ab9d1ce-91ca-4314-af1a-e622936f6841",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "605ba6be-7312-4877-9bd0-06c015499348"
        },
        "item": {
          "id": "77740be2-fd25-4d4e-a615-429d930acbcf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8cfaeece-d24e-4bac-b426-756497ed4a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc286909-7c21-4e0a-a8e0-95a680e0e84f",
        "cursor": {
          "ref": "fe4d7942-0bb2-405b-9d9c-a1ff0982ec56",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f42250fb-473c-4f81-ad71-14be4eb07ad2"
        },
        "item": {
          "id": "bc286909-7c21-4e0a-a8e0-95a680e0e84f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0e29d44e-e5e1-4f0a-a2b2-15769e749061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5af8e9-1a48-4a0e-88d4-349f1cad6e41",
        "cursor": {
          "ref": "50c8020e-b7bd-4e1c-90af-da810a3dcf2f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "54ef3fbc-5655-4117-ae56-f397d1152d6c"
        },
        "item": {
          "id": "af5af8e9-1a48-4a0e-88d4-349f1cad6e41",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "65aa5e03-a7c2-4ace-bf49-ac40f9537e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baa6a47-391e-47f2-aeaa-5699ad9b2e17",
        "cursor": {
          "ref": "e915c51c-d411-44a4-9f45-0dba94b78f18",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "76d7beac-f214-4faa-b7a7-39560f974f10"
        },
        "item": {
          "id": "4baa6a47-391e-47f2-aeaa-5699ad9b2e17",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "96364694-1bf8-4a3c-9bcf-313cea140675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f242fcff-f00a-4913-a80e-8b24d6a26d22",
        "cursor": {
          "ref": "53ee47f1-e628-4cca-a05d-500f48108862",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6bdac30d-87b3-4cfa-939e-3544256b12d6"
        },
        "item": {
          "id": "f242fcff-f00a-4913-a80e-8b24d6a26d22",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "87da9aad-a81c-4a7f-8651-28c8d780bde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91744b97-cac8-4caa-a351-cf3288632462",
        "cursor": {
          "ref": "102f8163-717f-455f-901e-ca76859fd8b2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "468cd382-1a41-4629-baf1-eacc63f3bb5c"
        },
        "item": {
          "id": "91744b97-cac8-4caa-a351-cf3288632462",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fcc40ed0-b476-4f4a-952c-3a8f4505c33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b1c94d-0e6b-4b1a-b9c8-85771c5eab19",
        "cursor": {
          "ref": "c39ac838-b2a9-4c84-9e31-c82c067de2b5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5ea4e68d-96e0-4c48-be03-56478612dc5b"
        },
        "item": {
          "id": "02b1c94d-0e6b-4b1a-b9c8-85771c5eab19",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "af5424f9-b184-484a-86e4-f42734fc33f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad77ecd-7507-43cc-aa93-72deff11939c",
        "cursor": {
          "ref": "91d08e5c-138d-4f8f-83e2-5bd3b226d6d6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b922221a-e1a6-4205-8a8a-7a01b02bcc4d"
        },
        "item": {
          "id": "3ad77ecd-7507-43cc-aa93-72deff11939c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0458b982-8792-489d-94f4-9688e6d46e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61811a90-fffb-4ec4-b908-5e605e4cb700",
        "cursor": {
          "ref": "641a3e5c-51c0-4ca3-97c0-3aeb427ef005",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "30ad9c46-3629-4c75-8bb6-d0c0fe36dd0f"
        },
        "item": {
          "id": "61811a90-fffb-4ec4-b908-5e605e4cb700",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "145cc3d9-cb2a-418f-aab3-1fffa58b8b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5ee8c8-8977-44a6-b065-872cec8ec254",
        "cursor": {
          "ref": "83bc19d0-9ef0-45dd-af73-9ddc667e0b71",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4151d472-182d-4c17-8769-58046d70803f"
        },
        "item": {
          "id": "ff5ee8c8-8977-44a6-b065-872cec8ec254",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "81439b1d-ed64-418e-85ba-7c72b0bbe5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0db3d4c-f573-4a96-9852-09b6fb4dce01",
        "cursor": {
          "ref": "93c6df72-c55b-4921-8f48-e212d5fc750b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ce7052e3-275c-4d2b-95c9-e1a207a374be"
        },
        "item": {
          "id": "b0db3d4c-f573-4a96-9852-09b6fb4dce01",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c0ed5cd8-322c-4c48-b41d-0b7c8017b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befecc09-8a03-45e8-90b7-c3787be719b6",
        "cursor": {
          "ref": "39b97c06-b8db-4731-a03c-4960a9d8384f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "10180d00-8a9d-492d-9a55-919cbb60d05c"
        },
        "item": {
          "id": "befecc09-8a03-45e8-90b7-c3787be719b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "353a2cc7-37ba-4f5a-93c4-9af97c1f5b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce57fff9-5c0e-4458-9500-b1465910a225",
        "cursor": {
          "ref": "59d009ec-8d38-4bfe-9955-ab56502b129b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "04d21b46-954a-4772-9fa4-32c726da3e39"
        },
        "item": {
          "id": "ce57fff9-5c0e-4458-9500-b1465910a225",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f2795705-f087-4765-b779-f33b0fdd112f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c5a0e8-532f-4c86-9bc2-c5c0668be30a",
        "cursor": {
          "ref": "20fd137d-0ba9-4b90-bfe0-4b7f64a35c40",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a1fa11cd-203a-4fa0-b66f-1c51330bdf88"
        },
        "item": {
          "id": "b2c5a0e8-532f-4c86-9bc2-c5c0668be30a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "25049f18-a162-44d0-8dfe-a7431778597e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc1405f-bdd1-4386-a804-575668b3a7be",
        "cursor": {
          "ref": "0684ecd3-46a5-4246-b2d4-2e4554a65423",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "80e43be0-0e33-48d9-9dac-101c6ee8d7ab"
        },
        "item": {
          "id": "6fc1405f-bdd1-4386-a804-575668b3a7be",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "64dbd7aa-26bc-48aa-ab1e-a0c6cfdc4647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d194a25-18f0-4164-8839-81abebc27534",
        "cursor": {
          "ref": "a1d405c1-659e-48e7-95cc-c4c2c9daf325",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e1cd5edd-b238-4197-bc92-33d8f0098ceb"
        },
        "item": {
          "id": "1d194a25-18f0-4164-8839-81abebc27534",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4ed6252b-02a6-4c98-8105-fcf4ed28a40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efba850c-8543-4220-b1f7-d02f4c27aa5d",
        "cursor": {
          "ref": "3d835fb6-5ca8-44be-959c-4dce099cbbb6",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2cd01d26-9122-4de1-8115-b49d277dfcb6"
        },
        "item": {
          "id": "efba850c-8543-4220-b1f7-d02f4c27aa5d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8c54c86d-d428-4121-9af3-24093a4388c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe04d0-b50a-4882-a532-01b1085ccda7",
        "cursor": {
          "ref": "720fdb70-8068-40ed-bbe9-4c549e042215",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c05a0b05-3670-4ce6-b052-b533392bdbdd"
        },
        "item": {
          "id": "2ebe04d0-b50a-4882-a532-01b1085ccda7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a99eaa90-4613-4bab-bac0-8da683af84be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9d09d7-d93c-4c2d-bb4a-595272ba2229",
        "cursor": {
          "ref": "de7017cb-5bbd-45d3-a914-a5c90dc61439",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9190a60c-d4d6-4e6f-b773-620ae777e89f"
        },
        "item": {
          "id": "8b9d09d7-d93c-4c2d-bb4a-595272ba2229",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "36f439de-5796-44c8-a4fb-e7c9bfeb08d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9612e789-8ef1-4d72-95fb-7c04c7b76100",
        "cursor": {
          "ref": "8bc74ce6-170b-485f-8d01-d4522fbc4201",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e9112e8c-e9a6-4607-ae45-cd79c11a1b23"
        },
        "item": {
          "id": "9612e789-8ef1-4d72-95fb-7c04c7b76100",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8930cf59-0659-43ec-87ba-c90315e2151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80606d8-96f5-4441-a65f-32aa28bff449",
        "cursor": {
          "ref": "f65b89ca-de05-44c7-a201-0af5629d732e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "89720619-6214-4e62-9172-ccb38e5b1b7b"
        },
        "item": {
          "id": "f80606d8-96f5-4441-a65f-32aa28bff449",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "da0cfa30-b9f1-48e3-9ba7-fb04d46e8ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbc401b-db7d-426d-9cf0-efd0a7b69a6f",
        "cursor": {
          "ref": "692f66d4-9109-49ee-bc8b-e95af6bcb309",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "23da341f-fdad-41ee-b2a9-24cde079ee70"
        },
        "item": {
          "id": "fdbc401b-db7d-426d-9cf0-efd0a7b69a6f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "554ef3de-ac5d-4f24-b5cd-e1c50fbe9c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb86547f-2194-4b62-8381-4dfc5ac029e9",
        "cursor": {
          "ref": "a78de1ff-3a63-469f-a500-2b04e6d95e99",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9072cb63-0af0-4113-8ef6-61ec10442247"
        },
        "item": {
          "id": "bb86547f-2194-4b62-8381-4dfc5ac029e9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "094ed1c3-d80d-4452-b347-5a11307e3c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cada38-67cf-47a0-894d-b5aa66048dcb",
        "cursor": {
          "ref": "bae16e10-b6f4-49cb-9154-6d17a78b2e45",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cd85faa1-08fd-4fbb-93bd-7fbaeca6af21"
        },
        "item": {
          "id": "05cada38-67cf-47a0-894d-b5aa66048dcb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c19ff958-e88a-4853-a0a4-3208dda035f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2705c20a-a1fd-4f06-9c78-0f1e802bfc52",
        "cursor": {
          "ref": "c5a1dbe5-02f6-441f-9960-3088c72d3f2e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b9c2db32-e0cc-4df2-9d28-4a9f42126e53"
        },
        "item": {
          "id": "2705c20a-a1fd-4f06-9c78-0f1e802bfc52",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9d06c21d-787b-4f37-baaf-392d049e5b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7db2c5-d1d9-4284-8f4b-3b8f9bf96589",
        "cursor": {
          "ref": "677f0a2f-d2da-4c75-b506-339a14213e8c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be7055ec-bcde-4e9d-a60b-bc03c6b6e172"
        },
        "item": {
          "id": "7f7db2c5-d1d9-4284-8f4b-3b8f9bf96589",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "65dbcc3c-f658-481b-a1c6-a10e03523911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909cd656-3ffd-4821-978d-b7f3f98ef021",
        "cursor": {
          "ref": "9c82ac17-01c5-4d25-b80f-3b0a8ece445b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4e78fe25-a283-415e-9c49-7d089cac7da4"
        },
        "item": {
          "id": "909cd656-3ffd-4821-978d-b7f3f98ef021",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aef7890c-dc3d-4dbd-8a45-bde41644653b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3915a052-23cf-4748-81c3-a2dbca68167a",
        "cursor": {
          "ref": "2c6158c3-0468-48b6-8da5-711b069b6f5f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "17ff2195-c317-43cc-a37f-65cd51569ba5"
        },
        "item": {
          "id": "3915a052-23cf-4748-81c3-a2dbca68167a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2f8056db-3f4c-4f62-a5aa-47b3f6fa5d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d064e2-6656-4203-829a-0f588f936873",
        "cursor": {
          "ref": "41910f96-9fd2-4660-813c-9e702d04247c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9ad7ea9d-3f7f-4ee1-bc23-b0da9fbf31ff"
        },
        "item": {
          "id": "40d064e2-6656-4203-829a-0f588f936873",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc3e34ad-6d24-4971-9c96-ee146a848c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba900a5-6e65-4921-b245-4b34fa36a62b",
        "cursor": {
          "ref": "85473366-2ec2-452b-8c1f-543f4c60df27",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "12409821-7ffd-4011-b274-15d933ae0003"
        },
        "item": {
          "id": "3ba900a5-6e65-4921-b245-4b34fa36a62b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "395f51b4-8276-4bc4-9220-1600cc3f7245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b50328-b7f5-4cfe-8c67-e008cae81961",
        "cursor": {
          "ref": "8ceca576-c81b-4124-867e-06d95635cb85",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cb84c528-aad7-4fa3-87b8-e097a29d3d05"
        },
        "item": {
          "id": "36b50328-b7f5-4cfe-8c67-e008cae81961",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "28a7d478-d543-42b5-98fe-4f0ab97bec58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b231370-5306-4340-999e-18b1ad62664f",
        "cursor": {
          "ref": "1b446447-1707-4908-b5e9-4bcc59242f5b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ded791e5-f492-4e04-9ffe-9f78986a757b"
        },
        "item": {
          "id": "4b231370-5306-4340-999e-18b1ad62664f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "35a0ed8b-5088-46f5-8ee3-d49480fa86f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b4dc56-7e9b-469d-bb2f-d3f9558903da",
        "cursor": {
          "ref": "8c715b5a-f7ca-488a-8cdd-5db91416ebc5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "12e5bc2f-0755-4730-80b3-5bb7ac007063"
        },
        "item": {
          "id": "c9b4dc56-7e9b-469d-bb2f-d3f9558903da",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29141aa1-a71a-48d6-84af-76faff204586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2589b808-981e-4ccc-8295-7881c29f0d48",
        "cursor": {
          "ref": "b16ad100-5ea1-4901-b854-081c29e76a41",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6cb7f850-5b37-4533-a4aa-59b447be77b5"
        },
        "item": {
          "id": "2589b808-981e-4ccc-8295-7881c29f0d48",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d60fd906-649d-41d7-b472-e6909ffa14c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2029ad33-9ea6-48fe-a931-ded65fdbf70f",
        "cursor": {
          "ref": "eb03eadc-deb8-4c54-8641-632ef3cd0515",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "99fccc19-5fbd-4827-bd38-fa6ff375383f"
        },
        "item": {
          "id": "2029ad33-9ea6-48fe-a931-ded65fdbf70f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "56c7a435-b9c5-401e-b799-7c2dc1b57794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3806c4d7-f774-4864-a0b7-c2524ac21aa8",
        "cursor": {
          "ref": "7f7eeaa1-108e-4303-ad93-9b345e2c172d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "04613487-a573-42f9-90db-fcfa308dd00e"
        },
        "item": {
          "id": "3806c4d7-f774-4864-a0b7-c2524ac21aa8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "83995720-6501-4221-9da6-103b5e8b8e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d3157-3290-4530-be53-225ac56d0d34",
        "cursor": {
          "ref": "f7a3786e-08b2-420e-a40d-e6900dc6e941",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c24e6380-bd78-408a-85d3-813594ea3452"
        },
        "item": {
          "id": "845d3157-3290-4530-be53-225ac56d0d34",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "654bf7c5-b3b1-49a3-9d46-e7b4978e301a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc36282b-2eb3-4800-9925-537e4d94bfb2",
        "cursor": {
          "ref": "055857ef-7abb-4bae-b03a-0cf07d6219d4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95515f0a-4426-4ada-aa96-963862f4be7b"
        },
        "item": {
          "id": "fc36282b-2eb3-4800-9925-537e4d94bfb2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef8c6ec5-4670-43ab-9898-bf84fefe222a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90dd9f-0c69-4401-ba87-615a3c19c880",
        "cursor": {
          "ref": "3002d755-8c97-4843-90ba-51042335dd36",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "83b17a81-166a-4643-a068-da3bc069d030"
        },
        "item": {
          "id": "ee90dd9f-0c69-4401-ba87-615a3c19c880",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ac404f64-ef90-4c51-8aad-e061bb260e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0654393-1027-4347-83fd-755e4a070b62",
        "cursor": {
          "ref": "afe9a59d-a2aa-46ce-bf1f-19b13ec7ec55",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a0bc75be-9ae8-404f-900b-a90f13ce793d"
        },
        "item": {
          "id": "d0654393-1027-4347-83fd-755e4a070b62",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26746462-1c5e-4961-93c2-375cd4e92bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb927624-de49-4d96-b0b0-ab4563679bf0",
        "cursor": {
          "ref": "80c7c951-d47e-4664-a74e-917d7ed5b263",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "936409cb-0188-477c-a61f-2b990b09845d"
        },
        "item": {
          "id": "eb927624-de49-4d96-b0b0-ab4563679bf0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "85891f47-ce5b-49b0-9610-a8fbbd97da53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7e510d-4b8a-49b9-a4b8-dfd83ab63ca4",
        "cursor": {
          "ref": "ed30eb33-8911-4425-84dc-c2587c5139a0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6a713f45-b9c3-4ada-be46-1e743805a71d"
        },
        "item": {
          "id": "ce7e510d-4b8a-49b9-a4b8-dfd83ab63ca4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3e994c88-715b-44f9-9c03-c20ad5f1258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bb4f2c-b781-4bc5-aaa5-6eb959b53995",
        "cursor": {
          "ref": "8b9766b8-425e-4246-81cc-5445ef55da04",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b5efc431-af22-4b66-b24c-bcbd7fe23a07"
        },
        "item": {
          "id": "b4bb4f2c-b781-4bc5-aaa5-6eb959b53995",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1b36f2de-d7bb-4cae-8780-64a6a33e17a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61225f20-3084-4a41-9e17-7ff68c750196",
        "cursor": {
          "ref": "840f9591-4cc7-4047-b996-ad4b0eba0e86",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9d22425f-5eed-457e-9414-3bfb90b9cd13"
        },
        "item": {
          "id": "61225f20-3084-4a41-9e17-7ff68c750196",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7136e623-70b2-4774-92eb-d934178d0f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13276235-a9af-443f-8633-0ed7cb569cb5",
        "cursor": {
          "ref": "576a8486-cf22-412b-a9df-02a8faccc0cb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "231aaff4-ebb5-46f9-8fd2-4d462cc06f39"
        },
        "item": {
          "id": "13276235-a9af-443f-8633-0ed7cb569cb5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "40f868c2-09e3-4b2f-9e52-7be46cf4c141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcceb377-60aa-4515-9979-2cc4d1947b5c",
        "cursor": {
          "ref": "5cc4be37-b1a9-46c7-bc57-d55edd1725ac",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b89e1dca-3d53-4c1d-aed3-6707ab8ca499"
        },
        "item": {
          "id": "fcceb377-60aa-4515-9979-2cc4d1947b5c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1857faf5-866a-4ddc-ab38-3a911edcc490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8d21b0-39f3-42e6-bbd5-387deb93037b",
        "cursor": {
          "ref": "37401b6e-0240-40bd-b71a-8de41d73b1f8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b5fbf638-c54d-42b0-9d66-acd7ded9fe2a"
        },
        "item": {
          "id": "2f8d21b0-39f3-42e6-bbd5-387deb93037b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "574bae52-9315-4678-9a70-a0cd40adec35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30610af-8250-4fef-aa8e-a9450803bdee",
        "cursor": {
          "ref": "7f9d0423-e7dc-4f3d-aceb-f630de931e29",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "923cc36b-e83e-45a6-987b-ed81ded64c16"
        },
        "item": {
          "id": "f30610af-8250-4fef-aa8e-a9450803bdee",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d4547666-3d50-42ec-b0ed-0caab67d28c5",
          "status": "OK",
          "code": 200,
          "responseTime": 2275,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ba9982-e28c-4171-929b-d0ab7d7a7e6a",
        "cursor": {
          "ref": "23758215-188f-4e83-9504-5a8ddc499dd0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0bd9639b-c2e4-478c-bd5d-6fa6a4fd929d"
        },
        "item": {
          "id": "82ba9982-e28c-4171-929b-d0ab7d7a7e6a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "16bcb101-d0c0-40fd-a895-19747b2e6ec7",
          "status": "OK",
          "code": 200,
          "responseTime": 2912,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "898e1b05-3592-45c3-834c-de96fd3c7f32",
        "cursor": {
          "ref": "e4889ee2-3307-4b42-b904-2bf3a6650413",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e4f26edb-a534-4d12-b171-96cfe1b3d14d"
        },
        "item": {
          "id": "898e1b05-3592-45c3-834c-de96fd3c7f32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "abd57435-177f-434c-a0c2-b94d9ff9777e",
          "status": "OK",
          "code": 200,
          "responseTime": 2333,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bfef7f-2fb8-49a5-8101-31e951cc2041",
        "cursor": {
          "ref": "2a0c572d-5340-4c66-9fcd-f5664f3dc81d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91af7280-3233-4744-b7f9-4f192d6fec1f"
        },
        "item": {
          "id": "73bfef7f-2fb8-49a5-8101-31e951cc2041",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ba6693a8-b3fa-473f-8bbf-c31615ba93de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bfef7f-2fb8-49a5-8101-31e951cc2041",
        "cursor": {
          "ref": "2a0c572d-5340-4c66-9fcd-f5664f3dc81d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91af7280-3233-4744-b7f9-4f192d6fec1f"
        },
        "item": {
          "id": "73bfef7f-2fb8-49a5-8101-31e951cc2041",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ba6693a8-b3fa-473f-8bbf-c31615ba93de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82215198-6e81-4b07-892b-d2086b31f03e",
        "cursor": {
          "ref": "e8934f3f-32ff-42fe-b92b-3d27c41693ff",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "851a1e6f-04bd-4062-8c34-96fd9b9968ed"
        },
        "item": {
          "id": "82215198-6e81-4b07-892b-d2086b31f03e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4c1f9315-ddf2-462d-9b73-4a6f3bdab635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbfed0d-46d3-4e74-ba8b-120b1f3d02ab",
        "cursor": {
          "ref": "5805d00d-1953-4e15-a5f1-036f476e4140",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1ec3a738-34d3-48be-a95d-3b25f4787bf8"
        },
        "item": {
          "id": "2cbfed0d-46d3-4e74-ba8b-120b1f3d02ab",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "485fefaa-6b3e-4806-9adc-34b10b9a844d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}