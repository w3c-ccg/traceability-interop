{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9b4c5172-a179-41b6-bd44-fdaa4b986089",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c22464e9-963d-45d6-b8d2-4499454bfe2b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05b3fbce-e94c-4565-ac9a-9241cc3d301f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f584c64d-c204-4686-8935-185f7620d467"
                }
              }
            ]
          },
          {
            "id": "4b9c6e3b-9326-4a3d-b96e-8b1c06f717ea",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15264dd1-56f3-4e45-8e7b-2fa9d310329f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e6b2df5-2ad7-4aa8-b183-58c101327942"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "45c2554c-99b7-45bb-8f6a-d8bba30d6026",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4258951d-7916-468b-811d-9cc2190d2512",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d89af4c-5767-42eb-8ce6-a330af727964",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7fe8cf6-9864-49f1-9267-311b005f8f47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc0e540a-be1a-4300-90ae-df3590606b17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c08d5fe1-47fd-4c31-bc15-f3751ee2d687",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "219ebe67-4946-4e73-b07b-8b059158623a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3de68266-349f-4ce9-8916-e9e603865b4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4587012b-3a59-4abe-b7cc-d02e9d9b0368"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff1859bb-80ca-4f63-992a-8f6941e80637",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7b17097d-eb6a-4598-9bd4-8fb346501aed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2069b5f6-eac9-415d-a531-7884b9f9c31f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6520d098-4764-4dcd-a1f7-6b85961a19d9"
            }
          }
        ]
      },
      {
        "id": "ccf486ad-7c63-44b6-833b-ca4c4499a2a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b1700359-429b-4345-83dd-cb50d27b68ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "729a8790-417a-47cf-a21f-aaa61a8c91f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c958eedf-ccfe-4c87-bb81-f384eaefd082",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e835d65f-eebf-4226-a23b-c69e02f18084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42b9091d-90ec-417c-96a5-3a5c9c0abe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c9d3b5-030e-4c66-85e3-c414b9b45871",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac806e8-e4e5-4a57-ac30-1f8965851950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c098e944-f1c7-421b-abcf-0fd2a4e9040a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ade9bcd-6198-4793-8f44-8c5a4b966419",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b962545-bd66-4cbe-8200-4f1ddef115da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20f07ca6-92bb-472a-af34-c6e59b0d2553"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7eab48d4-6583-4d70-990b-3e1d67c401ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cf88e90-c4a5-4dd5-abc7-f090be2c24e7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f35b9c2-31b6-4d41-9742-f6d4d6c10f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02df68b2-8b6d-4e8a-b698-d1314a7aae3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faaaffc-3ea5-4a99-84ea-5cf419910cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847c3f88-e8f1-41f8-a46b-183b3c5339c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c2332f53-f6eb-456e-84b9-f597ff5b2852",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b33c33d-e67f-46d6-bba5-58340b04ab38",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61afddfc-8e92-4c5f-8c12-c6bc7685ae89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "39942258-7c76-4c21-96c9-1371ff130beb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b50e55ad-3658-4910-8870-62a70d459645",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "44131004-4b53-420c-abc6-44467d6b4e6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "674cabe8-dc45-4768-b663-5a26a9978302",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "704736d3-5466-4a44-b05b-6942370330d7"
            }
          }
        ]
      },
      {
        "id": "7d94b38b-8655-43e3-9d5e-570b745c9ae1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "293af80b-e566-41da-a48b-d17a26502023",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7ba65fb-d212-4b0f-b79b-75978a7996ac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3cba7152-88d1-42df-bae9-048ec7ea7be6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132fc71-b840-450d-a893-10c7b2073910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9840b39b-bf24-4081-afde-026a2b04f64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e010ee-e7b5-4539-b3fb-0f70361b17d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eee599f-b2c2-4c8d-a189-410b7adf34b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049d9da6-f2f4-488c-9a51-265fafc6bf7c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fe6bf3-69b9-4b09-9f2b-99ef617738f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d40779c-304f-47d7-a71c-800c3aa6b7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dac5ae-4c38-4ada-99b9-335305eeca6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9eed228-805f-4e95-8354-02ece674de2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52f7f13-a80e-43f3-b36e-6616e345bef9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd89331-f641-4b46-bf26-c9d3ac14b34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5f7248-9cf3-4bca-88fd-c182007e2af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5594b3-c15d-45d1-8cdb-baa015ea9047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1df7d045-7d7a-4497-b231-8db40d336e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28e6a6e-3353-4c4a-af98-6d4a5f5fa152",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be521a6a-e44a-4dbd-a08a-8e8069d886cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f991fe05-a5da-43dd-8dea-4841e1b61fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf1285d-d2ad-45dd-99b5-036746c52d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f855f3d3-85eb-4e6f-80aa-a2d3c26ce111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeca9e2-fa43-4ebc-b9fc-826d296c926a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b99db7-ba5f-4b9e-8741-cd39d77b2e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dde2784-2d01-43c6-9dac-5e666cc01477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaff306-50a6-41d0-9094-a32dcc6eb017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8499d204-afcf-4bc7-a780-b206fd8640a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320a21b7-1cd9-41f6-bcce-020737ca8155",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4247034f-4847-4f3a-bd68-08b7e52ac9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea752b06-ef22-4052-a840-aca0aadca3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ab6821-58ae-4d69-b024-a3f590ea2a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec706c55-1685-406b-a2ae-bce263ddf85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109995de-b04e-4251-8c28-fdb37bc6cecc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9f0a25-86ee-4687-a458-2f784e74a34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d2dca4-dae8-4814-83ee-8f6ae5af69d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0d7797-5cf5-405a-8e94-51e040a42c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a56eaaa6-03c0-4c7c-939f-78aea2d06064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79287dd7-647e-40ee-8a10-32fb3f590fbe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b1b11a-93ec-41d6-bf6d-798e43bd3965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923745d4-e86b-4f54-a188-943d76a3cc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04ecdf3-1193-44ee-a88c-60c5519a5bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dbb4f5d-f254-42b8-b864-2eac3b18d066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c970ebd-e6d5-45f1-8736-171497c2745a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4157fcb4-3a60-40fc-ba33-5486dcd37684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c0f88b-123b-4358-80f3-c6f05775b0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a31019-7f15-45cb-910f-cbeda6cd5668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a0bd29b-1c06-44f6-8e40-15d96b014a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734d19ad-9bcd-4c26-aaef-62f976547e37",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce134b34-9b46-41ba-8ed3-9d8c92094e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f89274-da3b-4c7e-bf83-96fec368a9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f765b67-921d-4eaa-93de-076a654c0888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efea4d35-aa40-4b2d-a959-b446b0748543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ebc01a-a870-4a12-b017-18608215ac2a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4998247b-75ff-4411-b2fc-4e30fcc8490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a23812-f76b-4dbd-95f5-31946e653021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c4abb3-f8ca-4cc5-a26a-73b74d505ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3f5d0af-c632-4eab-97a7-541b5c8d6700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab48d581-4310-429b-a36b-5c1f35bc0ac6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf1416d-2723-473c-8c58-88d0ef158c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1e7119-ba7b-46c1-ae9b-899d1d4431cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1215d264-6a41-4699-a40c-cb36bd6e4051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "936a84b8-acfb-46ea-8e83-d8451bfc65a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0472e470-b7a9-467e-97f0-f8276a46b392",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0367c32-746c-4f80-8d59-fad1a3c38b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3a3c6c-152f-4341-b9ac-3686bc52e21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e1e33-e6e5-4c20-a8de-8e0a4eee5dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43295fb4-5593-4446-8063-3b3ae84e573b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656d951e-f2c1-4f0e-8fb1-60be5355f068",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ad28fd-3072-41b3-af4c-19ac7c7a183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbd99b1-07e7-471f-bb06-e77c40cb1663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1f920a-5366-439a-b69a-a6e707f74ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc623129-19b2-4c55-a853-d779dcd76376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a14505-90c5-44ca-8aa4-d2a65e06695b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2612ce3-d876-4202-8147-1ba27754f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c0cd55-2cbd-4129-bdd9-94f52685ee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6188e190-53b3-456b-abf2-f12c7aa1a85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f43273-0e64-4fea-8ecf-1d11f62f525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e4d9c-71f4-4f84-adb1-09510e343603",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7dad54-84d5-4b28-b70d-7d7fd4367d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d0a33c-9cc4-47a9-9033-67c976eeee66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaf0375-71ea-4234-bf77-900ba5aea750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f435258-cf5b-4d98-8e16-ad576e9f3930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2808f982-356f-4221-a88c-b9ce1d6372eb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f2eb03-d6e2-4e0f-9a84-d99105b5c6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb88d427-d4e0-4c21-bc0f-0acc5b580f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f3836b-f147-4be1-b28e-d2218a933f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65e2e1f8-ee77-4716-8a68-6f36429cd3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403822b5-802c-4dab-be5d-a5fb062df2de",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cb0b13-9b1e-43c1-847a-4e2f0df9e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aaaf131-c48c-4a0a-87fa-5e7aabbfaaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f095264e-8576-4c67-b5be-955d07da6348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f0c2a2-df92-4fce-9b8c-fab1cc8dfe1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c85570-ab5c-4aa6-8857-b5b86f29b346",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32675556-82bb-499b-99eb-99d382b95a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbc09b9-1fd8-4ff7-b5c3-e5b375ddfebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eac81e-b59d-4586-97bb-4de101030639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1378fc27-bc55-470a-9956-dfd3e67e2bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72be02ad-5e49-4151-baa3-cf10d5c1fce6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57f680e-b505-4e77-8a32-8076fe1f22c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061b5b43-11fe-4c9c-8ef8-17222643de74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd98752-badb-4b63-bb79-9dd1fb261627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0909da9-2c12-4616-bc52-624501135ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472546a1-ce89-4673-9549-5775bc4b2400",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c2421-83ef-4294-8f33-0c9b517763ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56656cd9-0f70-4e0c-8763-4b6bbe6bb590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc9da07-82b3-4907-a07d-1fa1302cd07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3936455f-1e55-4522-94f5-9229880c2d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c6732e-9461-4100-af1e-9eec6c4d70c2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35e3b0e-309c-471e-8356-cdf6e3f00981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae1d702-0f08-4501-9db2-0f008b543aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee814e1-6c73-43c4-8d9e-488121e99ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9182caf-cb93-44d8-bfba-23ddfafbe1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc70eb43-858f-4b3c-a72a-0a77234c8b2a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c700f47e-2ca0-4032-a7de-32eff9261a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0d82f7-7194-4e74-a929-6ec94adf7fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95402f02-105d-4be7-bdb0-7286a0abe661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60b732be-8722-444b-b25f-00bb565cc8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ff0e1d-9cb4-457f-96b8-3ca30e17bedd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003a72f6-a231-4984-888e-6be2945eaee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e60185-fafb-44b6-87f7-9d3c04ac4dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2212b3-43b9-4799-85de-56d0ea4dd5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5132d9f4-b9e8-4356-83aa-27af524be5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb979b7-fc09-478e-8860-132075fdabbd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d853acf5-9a60-40de-aa98-aa570e84024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc9c9e3-ddec-4019-bfd3-58e7e8aa77ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3568c650-6701-4325-b4d9-3f0b92c8a2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d9a31f-3cc5-4dc1-bd23-1bcf177ca313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5036b2d3-953e-4448-9fe4-ee200ee64ba9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a40eee-ef7b-4d61-bb0a-cc6675843f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cbcea9-4bfb-4fff-8e8b-e47026628bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450c5213-9c84-4d13-baff-3d460149ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e4270f-80f3-424b-a38c-79c0ec47d924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84647ee2-0fdc-4512-a0df-9ce2165dddb3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e1dca-3f27-434b-bbdc-7847e3054353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f67dea8-96cd-4a2b-8288-df7cc4e9ccce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada0bf0-ab82-4143-9ba0-fce7e43a1ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e65e08af-9618-4f4c-a6f4-eb1d5a9be746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab850f96-4e18-4aad-b084-e86181a46eeb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ac587-3884-46c7-b25c-156d8aa9d54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c9f661-06c2-4b8e-9597-fef230619103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d640f4-7cfc-494c-9386-73159747baaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c758b4-3b38-4fe4-9c10-f66a0bcea22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98687344-8017-4e7f-96d5-6397b9ebd0de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e508750-109c-4c75-97d1-bf7dbaa4b097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aeacb2e-7ad3-4db8-8648-e62b22c7fd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eb6652-59b7-4db7-b416-a06b4d613b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4838c1-261b-40e2-bf79-0f3aee538e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ab4283-7170-4b80-a17f-0b6e5c959036",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8321a3c8-385c-4ba1-a58f-eb2d100e3c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c3c88a-a22c-49ae-ae4d-0eb3d7e8ecaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e549d55d-f8a9-4e3c-b8cf-6f4bb1d09a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc3508a-f670-45b0-88cd-6a19c4764a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6ed5b8-bf69-42c2-8b8b-944be7054873",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fbd0b0-e5ee-46ca-b0f4-4af4cf1784b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49a0b70-64e3-4851-b8b9-42fc0b4a6009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fddbed2-1ae7-4b0e-9e0e-20abfd97e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "745664b5-490d-452c-bdc9-2093f6e7ab02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e8f30-70af-439f-8995-faca91cb1303",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d828615-44e3-4ab1-be6d-06e4b116ba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db41c4cc-a9dc-4f51-a416-28510ac66e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b92f3a-aa57-4ebc-8f02-e1a62fb6f280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab0ca34-637a-4ced-a4f8-3e1d6a46658a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36e1781-1b3a-419d-93d1-55effd25799d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47192b8f-8b09-4ae7-a7a4-74d7ec958529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcd5dbc-c19e-473d-a819-b6cfc600b175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7eaa4-bd57-4a73-8992-d69db7820afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f865b1e-c581-4c91-9256-3a5abd212dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ba6a53-7c64-48d1-8153-346349677119",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef8b445-1326-48ae-9939-401e4f73a0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8417852a-791c-4985-9185-30fb900203ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da669890-9f86-47f8-99d1-27c7beed01b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80c51842-9597-40ad-bdfa-59596a8dabb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af0b543-6985-4a6e-b6e4-34df3c6b8973",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63542cbb-746e-4e58-afb3-018c54fc940a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290d3068-0e1d-4c5d-8cc3-622d488787a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e78f93-5393-4d03-bbe8-29ec4a887438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "341a5e9a-9d44-4984-b697-e9d61508f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9bfc5f-ccc1-467c-bba0-d84c01315aff",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8280ca-443a-495a-99f5-e3c1304b0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59c73836-9a12-4ffa-9cfa-5d74fff16e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a1597e-bda4-491b-8308-c905b50a807e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f445a76-29ab-4eff-8eaa-b9edf9710379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022ae060-3a99-4cac-9133-adc878f8abc8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f720c1a0-86dd-40eb-b0cc-bcc4a6d12ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19f3079-09b4-43cd-84d8-d779ca10d085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e2d2b9-93d7-4f2d-8882-e46bf2b31efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeca599-b5df-4522-8f89-d797a1a819f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f52ba2d-5ac8-4636-9709-eca9fcf8c17f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d50783f-dc65-40a2-8b4e-894847acb128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef61268b-415a-4a42-8065-b0678f6c6d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ad864d-040c-4a86-b1f5-b624c63fe03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a805e53-2bfd-47bf-b872-3e49cbb3f275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934d1564-0cb9-4d34-aba1-f72f57ebdf95",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca39e91-a8bc-4263-9c80-a4ad902e761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33dd903-a83d-4d4b-ae92-d4aca159761d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84077015-ede7-4b4a-a786-637c70257034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f578e3f-2aaf-4681-a086-2e19db1c4cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8430b0-afd7-4211-8331-6b8f47c3bf1f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70147f0e-8242-4c7d-aa85-fa2a0b5d2674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df421314-d112-46cc-917d-a54d9df095a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6ec538-3783-4ed4-b990-113bbde40274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "52b0b2df-8aee-45b6-b562-516681ca2ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47df62d0-3c7c-4c8e-9d2f-e09e14cd2ad0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c488c6c-d7a8-41b8-bb27-aa7f4a3733ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d251bb6a-a28e-4bf7-a5db-79ffb08f55d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e1a5f4-8b96-4e09-8437-849b77dd2bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6389ee00-ab81-45a1-b997-944bc622d4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7ddcd4-0790-4428-9c03-79bca401405c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f0a46-2d17-469a-b0c3-08c93092938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c59c2c6-8a4b-4d30-a0a5-b86f7cf3c898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ac933-8a3a-415e-b21d-d9d021616ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18944d84-5c59-436e-a918-39656700d87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc578ff-3dd2-4c10-a52c-15b4cec7f397",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1919cd27-da9e-49e4-9f44-1fdb3fa52506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe25c838-588e-4991-a9e0-2318ba34e179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab4e1a-5cb1-4def-893f-627328e3227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a9bdda-83d4-4f22-aba3-d0447eabcd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a733ee-6183-4cac-976c-eb8b74d246b3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a34f9c-6aa1-4aea-8cd7-37af14e5b44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0faef3-2afc-4278-a0c5-e17637aecdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab16740-11a8-44fe-a563-8b063289e87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db62219-91d8-49aa-9b79-bc272d659f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b238698a-dc5d-4e04-8065-9823ae6f99cb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f3fc79-5a7b-4afc-8a58-7762c6929856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b90e80b-03d7-4dab-9e6b-8c9cb90a7e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec00746c-a6e7-4859-abe1-f4aba241b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb208fc9-3070-4812-a20f-7b16cc37fdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a737ef02-24e8-4d00-b569-58e1c6dbfe02",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6669f60-31fb-431a-a83b-0276601b2102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87115ae2-f617-4b0a-838f-634b74ec4ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1f91e7-8eb2-4f5c-b015-872752beb2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7342ec40-de53-4193-8c83-da60bf383425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9badfa-3a0a-4205-a475-d15acf291d57",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77db1043-0937-4408-9dcf-91ab8b7cab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b66a296-e656-4379-bf32-951cd1e2d840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c5e105-4cab-49df-82e2-ac0865b026cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b40b51-c974-43cd-bc36-96ffbf329743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0222b318-5f9b-41c3-b287-ad768a3a99c0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2053582a-8747-4c33-9c11-1ca16ada8f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7a5955-5fe4-46b9-8a46-f4af97c949bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f60e88-11de-44ec-a78c-26fd0cee55d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5869eae-7405-4713-98b0-3514c47075ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438da877-f48b-448a-99a6-cdcb8fbfb579",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc550c1b-3998-443d-8dd8-72471d351f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc49deba-3dcf-4480-beb5-3918c979ef60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645dfaf6-1789-452f-9e3d-630fcece8a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8611ec70-2dac-4359-8478-f7c00447bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5426cfd8-cb18-4e27-9df0-89ef2df86beb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5843497e-b34f-4f6f-927c-b96f23e64c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f412c2-26bc-4cfd-808a-18df8e7ce958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f69102-78a9-458c-a268-06136b0a9fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3559f8e2-7663-4a79-b47e-9849f3fa615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6327cb-7c8b-4fd8-867e-620f2b26de30",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cba59a-bdf4-4300-a522-e62bb29ebcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e36f47-2f7a-47f5-a210-9d1786b3b107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb93d8b6-1ee7-49a1-95fc-40df9f0a31ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f002a0-e856-48f4-bc8e-6078e6ed1dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a588e4de-a23b-4dd5-93d4-032a108274ce",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b144c5ff-357e-4cee-9fda-c732c5e85bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5c14a7-9afc-4aa7-8997-9ffc0141499c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42219ef8-8ba0-41ab-a938-7aa9c4a65e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df7c98c-0d5a-44e5-a87b-1901af206342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ece9c27-e6c5-4661-9871-f4023cc9f11e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40262464-2b82-4f14-99cb-a1de8619b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4d5cea-2f6c-4043-85c2-80088edebac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4e2481-ce3e-4a34-894b-6e915a554698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a4b42b-1fef-4509-b664-c758c4ebecfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd72493b-c3c4-4a8a-919a-11ed17650b9f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd818af-ba34-4d1a-ac84-6b40ac210287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa46fdb-e5d0-402c-b028-1e794dc5a49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925bce39-6317-4f8e-b484-135e2fdb1c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e62ad0-4e25-41b0-8f8b-498a6587bbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecdf579-c404-4e01-b353-06f0110d9cf7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cf3701-cbf3-4a08-8173-955c2d3a988e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb561b15-68b7-48eb-818c-1be7be7bbb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f05e1a-fad9-46af-95ae-94378450a238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccaf61b-ae7f-4a98-bb45-64a7082713f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9d0a8d-bbc0-4623-9738-396fd8cbbcc1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a22b7ec-132f-4621-8273-f80efbc53ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510194e0-be64-4a4c-9ec7-cefdf36f056d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dce06f1-1ceb-4d05-b088-4f5a8e57c243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd76072a-0c0e-4f55-9aeb-9c3c1326c372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a20e4cc-83e1-4ac5-962e-9dbe74685894",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7caf12d-8bde-45f1-8869-7334e5ef27d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e5524a-6f4a-4cbc-aa43-3b446c881589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd26bf0-d0c9-448b-a1e4-c496fd01f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d52f9ee3-8433-467a-9ce2-fa6d4f714eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba71bae8-4d99-47e9-898e-783ee081de6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b961e00-8cf6-4d1d-8f41-d9ac2b5e3076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018f5549-7254-4903-81e2-913e945e2686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659f907a-eaa5-4f57-9990-f03d99b05e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72dbdf8-bfc7-449d-acf4-bf8a0b6693ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecc9a39-44a3-416d-ba20-d032a8179749",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee41f42-176a-49b0-9f73-69147576710d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e160cc4-014d-4b27-99e2-f333b85698e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3de5ff-b5de-419c-935f-5df9c1bd4598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e2bd6d-68ef-47c2-908b-2dae670842cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bffff8-e6c9-4196-a5e1-ba854eb9eee0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a9de1d-615d-4e84-8600-957f81d44d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f856e372-6c9e-4d41-8878-f1ceb82a660e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773b9f98-24a8-435c-a75b-0948ef037cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b6735f-23c1-4105-a929-9843ba37db78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b123ff0c-31fd-4ba5-a088-9e7d1a2fa169",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19a235e-0c48-4e32-a8c1-9a763831858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb86f0c-8573-45c9-8e05-231040163790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad6f810-bae5-439c-b243-22a8c961d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "246dad02-f774-4745-afba-6802dab2225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36c562e-9479-4a04-b2e9-e0b995fbb203",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4fe79d-fb96-4fa2-ae7e-3766aab8dabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2ab7c8-6a96-4726-a15a-32176f6e2500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5348b2fa-20fa-43ad-b931-9fc9ee57cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "865e89da-3fee-4cb4-9795-ff40f3dae70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87e440b-1e28-42d8-b035-83e8e930f108",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07b5e4b-118e-4e84-9d87-621ef96f727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50695b9d-e0b6-4c72-8256-f22c426b9eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a8528b-7fb2-4297-b994-363781ff321e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e1b2e5-f958-462a-ab79-98754540ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9856d9-5fc4-4af0-9c3e-f4214ae91bf2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1e7312-5022-4f4b-8329-2536d05d11d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1228b637-8e3f-489a-a7c9-e4ebb267f9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb756dc4-99f9-424a-9794-1baf782d6acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cda06e-57bf-4b8c-946e-5b32dd89830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3e04b-6340-4758-83bd-f69a29986b12",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33598dfa-5174-4aad-94ad-a7cdd4289927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688720cb-001b-40c6-b8ab-47db22d5c601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a37c932-15a4-4c15-a13e-840e4c3b8477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc5b73b-f84c-4ee4-a558-e7f7595f5bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e3f748-0d7f-4781-9155-44cd3b420ea6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c021f2-cb57-409c-98b1-d143b54c5e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3e6b11-5572-4f8f-8f28-34ba186abe36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c1bac9-09bb-47fb-bd2a-8e0e6d442826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42215abb-544e-4858-9239-eb4b5c1b3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4170f476-cf0f-4e2d-9089-14ad9316c05e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6dfc80a-b389-4648-8b85-641e9a39dd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096ac2b7-c354-4455-a6e4-61a2d3a58571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e30c7-78b8-438c-9d8a-dc67a3ece6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b96b8552-896b-427b-b54b-71768ef03265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be556b9c-b1c9-4ebb-b808-444bf8ff73ee",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44194bea-ba6b-4199-91b1-aafa9c6843f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf7b7eb-9c09-4af3-a6f4-5de95fbcb933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b6ab01-a8cb-4c1b-8b00-8392711b4d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc8d4f9-46d8-4cf4-8b7e-22a6537bdccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f197c5-f8a1-49c3-b176-2250d3815ca0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93d2d48-df8d-4c3f-9c0e-3068b5ac6853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9247a86-54ee-4fa8-b2c7-6d991ee7271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008b83d8-4547-40e2-9c2b-ff19bb0b4ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "540ca99e-8383-4742-a8cb-a4208d24e17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b11153-3ca8-4195-8609-cdbda031ced5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69be02b-e3ff-4f23-817e-ef53cc22d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8532e587-cbec-41df-a14b-b570a86645e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c863bc-de9c-4ecc-a340-25dc7a479e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f969b517-c7aa-4505-97c8-d3c19f78f911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4d5c4a-90f5-4692-a684-3ac86253976e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d098f7ab-6c69-48a3-958d-3a505163e351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39dfce1-6a5d-4a7e-904c-cf49d29f1be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c5aa19-baf2-49d2-b9f4-357eb9c55045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab77d61-41d8-4171-bd03-1f2c3094f588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a69a05-f5f0-4997-884f-477e0a8a1398",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcf0fb5-888e-4e35-afbd-cb809f3bfb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6930160d-3baa-4d38-8a2d-d56946dc48e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5558a5-1213-490d-87f5-8a700ccba3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef69fbac-d451-4cc4-9823-1929d259e16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a79d6cb-9f54-4b19-b2c0-8a7702d15493",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a8bdf5-0136-437b-944b-e7701c0fb16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76306541-62f1-495f-a6ed-39eae38de321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d076c2-8751-4b97-a2eb-56e425a5d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd6708a-b29d-4b6c-acd5-c66d72243702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a656c4-68f1-4076-97eb-7103503f7f63",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9024d8bc-6d3a-4d5e-a3fe-e65bf6a62d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81749d13-b30a-40ea-96e4-df23890031ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569e0faa-1e08-4fed-bca7-a751db30c0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc545f13-338d-4790-af37-9b13cb47fe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7160ecd-de73-407a-9345-8189793b632f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25989be7-bd63-4c96-a712-a72657c46809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bf32d4-09d5-49ab-b305-6619206c02d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3e8831-2a7a-4f62-8fac-23c12d2d44dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c67d140-7605-4b39-949b-33075f079553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac14dfcb-e48f-4d32-bb9a-699a70dda497",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e2cdf6-d2cf-4fb5-8c34-be850a099e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1aabe0-8a35-42db-9ea5-6c6751e72e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225ccc7e-6e3b-4e31-9c4f-7b5a0a9544aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8140301-b207-475e-9f84-76b1a0395e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5080e68-9655-4141-afd9-377f7268180a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be33d533-8bfa-4560-9edf-2eb3819fca54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a71041-4521-4349-b84f-79582cd6fe23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08d7ae5-55b4-46a7-8c93-1171d71533f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15fd94c7-6621-4935-9c65-14b99ab8c5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf33792-2871-4345-bc3b-a3ed13b73dba",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c972ba4-4e25-4374-a162-64d1284cf098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9f7506-a981-49c2-a672-9b340cfd9484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0044a6cf-7ca2-4bdd-9f30-ba93fb12ce8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4939a14-274c-4ac2-89e2-aa35ccd4ed8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3b2054-a9fc-4ddf-adf5-9e9959b4bd48",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9413465-8961-4bd0-9097-86312ac8b2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4009937f-5c6a-4915-9c6c-e2b7f0bb1282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4515befd-5fa8-4af5-9e89-5ecffa1923af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2ce518-7520-467d-a7a5-74785613ef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561d12bd-7bfe-4460-924e-7574aa1c403a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc34e20-66e6-4e83-b36c-bceedd64f123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef0f5bf-2ba5-4a63-a407-2b7d712e6181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a39622-9ec3-46a1-9bbe-42bba4fe67a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b2b0db-4fa1-4a72-851a-730ea660e823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c79c75-76de-4918-b985-073c17833862",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79abc8a6-b53e-44cf-a3a8-3062fbaaa013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9db7de-02cb-4241-b560-74d88cb3da14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cc9298-753d-48ee-b2fd-745aafa2a2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb566b2-a420-406d-804d-a535732fb2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dca641-d76c-4d82-9628-dfe149822326",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb74e00c-110a-455b-a8a3-edc1016d2e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24997eec-3f0d-4429-95df-1ec6bb3c34aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd460c36-9ad2-4772-88a2-9255bc787d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f11a623-e928-4824-8701-76970de67eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa0f046-9af4-4527-b4c5-d3d40af0954a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5931a55e-52ab-4d23-9d71-c3f4a43ffa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6f5e28-5d23-48ec-a8ce-39f25d6707c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde62204-d621-406c-be2f-be44563367e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "396b914a-dc60-44be-a6bd-9ba080489557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c0431a-aec6-4c60-ad2e-0ee103a18f8a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eff1db4-c43b-4ac2-b7c9-2afd5815f6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bee423-26d9-4e03-9e69-b4e95ec31ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12856d93-410b-473e-bb31-a1190a0931f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f36bd0-1a95-47d9-950f-1b0f714868b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21731a76-47b9-413b-baee-9dc22e9fc3c7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538370c4-4a22-4400-b660-ab84a765c062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542de26b-edbb-47c1-8ff8-b5748e84817b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4150e777-bbfb-407f-92fe-d17dbfa74282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6423c5-3cd2-4cbf-9c66-446beb18712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072c7a27-e7e5-41a6-a074-49c69543134e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02269c0-24ac-4f85-ac03-76b3fb53f7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8288761-18b2-4241-94dd-6a257fd9535b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3df0ce-ec11-4f60-86df-f0011c3aa06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb3d21c-3777-4257-ad32-ac7b052d4016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e90f40-f6d0-4cd2-b3cf-3194ba871deb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd58cf76-b505-4bce-b5ce-9b592ffa74f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b26577-d1c1-4aba-abca-aa143b270aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52daf66c-1222-4ad8-984e-58ded66abe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c256fc4c-624c-448d-9f72-77eaaeaf73b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1adef7-31ea-4fc1-a701-55bd6591142a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb5c26-b6c1-4372-9204-031d91059016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc287c9b-fff5-4652-a166-01446c4e672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cfe1ab-8ab9-49c7-8596-2d4731f111a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09600ef0-bbe8-489f-956a-fe556c50b642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7fac64-c7eb-4977-8ab3-9581a50fa6f4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c596bf-027c-41ec-a212-6c25eb18d829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c2776e-6e4a-4897-9137-d145838e22c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ce12a6-6d7a-48d9-b61a-70c3e72f9d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67af1ee8-a11c-4087-ba32-68c9fa60cb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e03563-8070-4598-bdc1-e47a631de35e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23b1292-4cef-464c-b409-bb8f34178a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff768e63-2733-4202-8ad8-49eb1678962a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ef9db0-cb5a-4961-b7b8-c1ed53935615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbf879b-f189-458f-aeab-3bfa8cd6cb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce6da1-06a1-4ef0-a195-ea9e51570336",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbe7e31-520e-47a4-8873-f9d1178fdeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45434a6-499c-41aa-af2d-7bbde49b9f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e492aad-8fe2-4f6f-98a6-eb07fe7dbc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5a0766-b448-4536-b7f2-4d1ec28204db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f05bbd-5428-4f77-b1e4-b6b744c59bf5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c77ed33-fe98-4e73-bfb5-4604fbade256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "356ebf2d-9fae-4c62-a102-c88adf64bec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d702228-1f77-4c79-8373-04c55c7b10a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "adb87627-93dc-44bf-a860-939bd5960d20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f580567-2b5a-4081-9db9-4b07ad3e133e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c31a5ba-3a2d-4fa1-a6ef-af87f747f3b2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcd45a9-e084-4d23-a577-9e5e7a0ef895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e21693d2-657a-4462-b7e3-51302be50b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46befe5a-13b1-487c-8da3-07fd38091076",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f9d824-eb97-40ba-b80d-bef6211435a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b378120-e709-4564-96de-03bc64fcaed8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7030291-9d18-4eb4-8f1f-59571bd8c6f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc7d6d01-3b27-4206-b51f-14ed40475c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32c6cfb2-efce-4b25-beb5-8348277f9c42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "258853c4-dc6a-47e2-b293-b3838af9b388",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88462a93-92ea-4340-b3d3-f9ee62fe1eb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "360e53b1-696a-42b8-9e50-051271c9e363",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a7b47a9-3618-491c-971a-1bde88200339"
                }
              }
            ]
          },
          {
            "id": "a5cc5a8a-c2a4-49f6-91aa-05408553f9dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae0205cf-817f-4f49-9833-58e0c2f7e5c1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b160ad8-65ea-49f7-bebb-d367e529b6ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddb726d1-12bf-4b4a-8462-640bc8188ff9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fec946f-8732-4819-a0a5-20853bd8cb3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86da39f1-2eaf-47d5-a0cb-60078e2f360c"
                    }
                  }
                ]
              },
              {
                "id": "4d5b3972-bf27-4f1e-ba12-77c10c8ad3d2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e362582-7bd7-4011-969b-d48e6cc02af1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0545608a-8728-4b89-95ee-4d33dc898384"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e055fd6-32bd-45dd-bb96-e2167e6e1306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fb04d6f-8d0e-4b84-a862-9afc2a8ed8e8"
                    }
                  }
                ]
              },
              {
                "id": "d88fa1ab-35c7-4357-8875-81e0f9805161",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6db99b67-4232-488b-96a3-d54e5572ce9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccc4269e-19ba-4cb8-8073-23c7aed00737"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f77087fd-8096-4179-b433-10e29d037ce8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4cf789e1-8b25-4ec8-b85d-488f178a3bc7"
                    }
                  }
                ]
              },
              {
                "id": "e92d5bff-3683-44f8-9e5e-5dd0e4cd9ef4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c33a8dc2-005a-4d50-8ed9-45bb3165235a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb2af185-b75d-4b39-bf9b-c425eba01d91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2989bb9d-8eb3-4ba1-989c-18b6305251cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5929ddeb-95ec-4c8f-bfc0-2c5fe5b04f95"
                    }
                  }
                ]
              },
              {
                "id": "a355fd78-2639-4c7a-a684-afbadaae64a9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1850273d-2ba6-4cd4-80e4-90e30cdb67f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dacba1b5-d472-4e99-8d24-7e5190f4f583"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10bd1ea9-57cf-47cd-babf-540e25e154ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1b9fad5b-5e65-4772-918e-224989c90e59"
                    }
                  }
                ]
              },
              {
                "id": "a045e4f5-fdc4-47f6-ae90-83837f293f9a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3aba3448-e94e-4b7b-8950-f74b1939d86e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4dc817d0-6a3d-47ff-a4d0-97014f18b49d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7139a048-3028-47cd-9599-4e4ab6be7148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ea2466f-b3a7-498b-8a24-ec1efe2b96e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbdde7a7-370e-41b3-87f5-ff0c5f31ab36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e44e5b75-fdfe-4926-a133-3d344335cb87"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "320aa56f-6cfc-48e7-9c64-72ac33dea7b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e090319e-086b-4185-8477-1c70ec7ae3a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b07fef98-19bf-44d7-990a-220f3d1dba72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eee5bbfe-79d2-4c6c-bcdc-518e01b70865"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b59ecb15-ca2f-47e0-ae8e-ddae69a691b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb458190-b8b9-4308-8736-d7d02d94291e"
            }
          }
        ]
      },
      {
        "id": "1d24aa95-5421-4d47-91e6-486b978bd485",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a83b645-47a8-43d4-9b8b-2c4aaf1fa792",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74701888-df38-47c7-b079-e697b8060966",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55bc2bf4-1b1a-4064-88db-d47a6aba414a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a75dcd-dd86-4374-8868-b5cbb4188b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e7c9f7-2377-4126-a068-0d30a54876f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1099c708-95df-4e6f-a258-0e0e34ec37bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6b791a-daa7-4fa4-93a3-ba37d7a97c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8e29a1-eebc-4dff-be48-56512d640ade",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd59545-83b6-4807-8d07-89002fc5affd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e146ea2e-f40c-42d8-9cd6-aeb817fc441b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e781b0-2dab-4b2a-8cc9-abaf8986666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eda54cd-014a-49fc-acfa-3ded3d90fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2815836-c0b2-4dce-9bd7-8d4bb99a6ceb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc579c0-6e9b-4a41-8198-81dd6a0d5bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e7b9cd-6853-4e72-b41e-f9902e9dd188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963a56a8-705d-4c39-a36e-8d7be1a47ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64015e4b-3e17-4e9c-bb78-aa4296b51661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9399d9-5ce5-40ee-9b07-1fa2dadbb3ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06ba1e8-03ce-4463-af33-b6239a0f0a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89fda51-a73d-4d66-9237-bc1b44868689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51e2dae-134f-4ef4-bf5a-1858c57c83c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "648e7208-d701-4911-a591-a9d60d047733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee70ac9d-03fb-47f5-8383-ae47eec8405f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76627ada-8ec1-42b1-bbf1-05c0bbc48953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa4ffa7-9e6d-4145-9572-a9e514efedf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689f3547-a714-407a-b2cf-74385a98aa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "445c2eb6-48d2-46e5-b489-4c76449f1fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ea98f8-e3c9-4959-bea8-ce2394ddfd4b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abd2909-a024-4467-9c45-2d7573923357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a21e30b-4359-4342-96d5-1b093393e334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f297023-c418-4deb-bbbe-4d7d7693c30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4bb62b-d375-4b29-a027-093149227001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a4e706-da96-4bf2-83c1-3063b3fdd9a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd04346-b0e3-4f81-93fb-0f2049312ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a56dd3-344c-446c-a029-e50ac8867b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de4cf90-bd01-4014-a1c3-f8064d9221af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1f7f43-5365-4a74-850f-63c1647298bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43c694e-600a-4ffd-83b7-19400675999c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6296be96-1ebe-4d0e-8bb9-78e301f62527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4789d6d-5dc8-4b94-aeb2-f90dd78d399c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1651f44-93eb-4aa9-8a17-ecf6bf6edec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd859670-31ee-4039-af97-a4270b1aa546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1812a90d-39eb-4594-8439-414da05b8a05",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039d1001-4605-4b8b-a000-e7eb07c89915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f61f034-1475-4d8e-91b1-9d2a1883219d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc18e3f1-75d5-44ca-bc1d-ad310f4be57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99e36298-eb73-485f-bc18-951bc0cc2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5107d0a-f024-4998-b0fb-208d735a2658",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c961c22a-b0b3-455a-b7c3-a8ea9e4c057f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e49a34-635c-4776-8b90-9fab91e77bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5a76bf-1201-4dc1-9a95-48f43f90776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d072440-e5b2-4a2c-af80-7a0c20e6cef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8163b6d0-b112-4c06-8605-0010b68ec919",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f59a06-3832-4957-85f3-76755cf59f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7c064c-d908-467f-b7f1-8fb4e489f225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f5aedd-f541-4218-9ead-06dea9cd9e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "144a1f27-a328-4ebf-ad4c-59a6bc7b3844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77201ad-f81e-45c3-99fe-6ba13a266f69",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbfc940-4681-41d5-a052-b2c37648d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ff7219-dfa3-4eb1-8f98-6bc73d7671c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73d2744-d8ce-4c6a-bfa1-533678bf9213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf2def8-b2db-4976-b0e9-04ae47ddbeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c45cb3-dfa6-4983-91bd-7d72eec88a9e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f52203-b482-40c2-8e29-35fc17528509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d986bf-8f60-4a40-8915-3425f9693598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737d9c46-a8f8-4be2-97e7-1fcd94d30105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49580e30-0a93-4f58-9f93-be0618207885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c311ffb-7069-4af7-bf4b-0f08984af03b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc39893-96fd-400f-a71d-eeebc5d884bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80688500-3399-49d5-b213-7c3ff4d756d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7e0b6c-35df-4134-81f6-92227e642ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "19402725-8646-4008-bc11-1964bc825e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b843b4cc-b048-4d8a-a88a-502b04457733",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b33ae-cef1-445e-ae54-125e6d2aa5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d84e49-87a9-4251-8ce2-8fea0d6b68be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b594db55-5b4e-4b08-80de-260b723303dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc406023-049c-4379-9ea8-f0963da67046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd93bf80-9d3b-4693-bfb8-59ce49c658e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33223403-7fa7-43ff-8a0b-679fe33f4513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ea45a1-6b13-4edc-a0cb-924fd538a6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff6065e-c5df-4b9a-aae9-8f362064cf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8a4945-f232-4849-bc19-4ee17c6c1259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0962dcd-537e-41d9-83c3-5d9040236745",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6d70c4-43ae-4c19-8830-19bcc8fe6901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1b9c81-37a2-440a-87ac-3fef136c1be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a15dcd-7765-4633-8052-fda2b5eed9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "49cc2846-0aba-41a3-b58d-53d520208dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938bf0e5-9158-4bdb-89a8-4498b7ac1a7e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b739e-68cf-4616-be6b-a568da8d6d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed7188b-abfb-4e3e-809a-926c19ba17ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7525b3e9-60e6-4b3d-af02-38e066bcd656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b24ed2b-a18e-4858-9ffb-afe59a239249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57c5c58-aee8-43f6-bb6b-5c741fb846f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ffc45-7bfe-4857-962d-87644c265353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271c24b3-538d-464a-847f-ad9718ff4424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eb6868-0c50-4e78-b2df-36983b5301a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f150988-02f1-4c49-8046-52e3d7575775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c8a88-77ca-4996-b51a-b6d182944696",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982e279c-c756-4db9-90cd-c2a292381559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b2eccd-6369-4246-be46-1a72a7247ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4e73e0-f1df-4f60-90aa-df6a100de964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd29c4c-51cb-4644-92ff-96154b8bed1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504f6270-8cb5-41ba-9abd-ed090e5f4f91",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed425fee-15f2-4c9a-bf0e-d5a8b5e9978a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ad65ac-d853-49a3-9f5a-c60541bea010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8aed32-6449-4407-a2ff-b324ea12c050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d35011-b6e9-4058-95c9-50befc66d5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1641e5fc-1ac8-41e7-99ae-a49f2870722c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2950b4-8e9a-4e8c-be9d-37044c60d0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738191f4-956a-49dd-92a7-1662d1c0634b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9db1fc-4bee-4316-987f-ea26e9100cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2e1ea8-3339-4e04-a0cf-27b8cc73e821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24c633f-58ef-4d5a-b2a4-75719dd19519",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a4f23-d66b-4038-b501-902870c76c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba907a22-17b8-4b07-b0e6-37462c11d674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235d2836-b969-4b27-a192-01e5744ee628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67f3da9-8288-46b0-b5d5-f3470c280d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77164204-79fd-41e5-b3f1-40ddc4f4baf0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c876238-655b-446f-ad35-7059d1e69b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc7d32b-cbba-48de-af56-508046fa9455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f0887a-b1cb-4988-b57a-f968b7931da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffb6a67-b3a7-470a-b70c-82e5460d3428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9ade4c-5e09-49f2-8215-bf391882e876",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845f4757-ab45-4e86-9d4c-cd4e4e61acdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd923f9b-a702-4da1-82bf-b9bca64951d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a84b4c-435c-4653-b534-f2e801d8ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1dd672d-661c-49c2-b5f7-d273ca7f0688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b754e93-a440-4f4e-b292-205535d2e95a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bc1a4f-372f-49dc-8a66-727378376886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15cc8b0-b10f-4cc9-a3cb-b13c94820bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2282e6-482b-41b9-907e-723e407c7095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd7f218-1e2f-4d16-9f53-8a87158c4a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03de193b-522f-48b4-b201-deadf2cf7eea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026050ba-e739-4c12-8c94-75a7e2f4d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9538378-4c10-478a-abf5-10000255c223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e693762f-7086-4b4f-9ada-2aa5deba7169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d2266a-52aa-47b4-b828-89e2865dac00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bdc123-6926-4363-b612-46168affca25",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05cea73-8f18-4939-9789-900c0322bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8933ab-ccff-411d-b37e-2d916332e0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca003ba-d55b-4807-a84c-7f07c837ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa41df3-95bb-4fdc-af48-b598a2d170d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30c9f77-75ae-436d-bcf6-7c216b9bec44",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acb57b3-9369-4a0a-9c74-5fb60e9afa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fa8a8d-b57c-42e0-92af-ec7c38d7c30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c885636-22ca-472a-ab65-07fa97a20374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eef3620-7c90-4391-b93b-9ca737cad8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4628ab4f-ba91-4984-8870-c0e4f57b0ffb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe9ac5a-1f26-4012-a44b-c1f14b0beb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858a1207-067e-4264-9049-651ed04c0c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfffa8ae-b377-4343-9e54-dd6b9504432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6cdd71-511b-4a61-8b42-ec5f05b480fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904d5f75-4712-44be-88f8-b3151bdb25d8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4846cc85-69c4-4adc-b286-b535eeb525a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be593f9-3a5f-4f6c-b696-236083978b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756d53a2-bebc-4dc7-ac7d-c345356ea9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e244c5-94f5-4421-8a24-54934a8afb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af184bb1-7c60-4d44-b2f5-dff0b7c00345",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699d734e-2351-476a-a290-f5e0f06762cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6010d9-4f10-4c6c-b9a6-e0a6046a1af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f3d760-7f10-4928-bcd0-a687fcc53270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b1077a-0dd1-4178-94d6-b7807affc55d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "950b036c-2654-40f9-8518-72428d4f637e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dba731d-daf8-47e3-a862-07856f67be7c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8995f6-fd45-492d-84f2-31df0a639187",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a5b026-5eca-4266-a497-fcf23a0579ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4c1c7e-2740-48fc-b418-abcc2e898219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38bee2fb-05d9-45ca-a5f7-94b730e350db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb2ef141-8bb7-4c51-9e7e-56db7af47d6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98922575-867f-4bab-992d-6b94d4be4fe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69c00301-f9a7-4f4d-b6b7-1aafff2a285b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56868e89-9a82-451f-bfd9-0f8ac79195e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba96f2b-d59a-4f1d-9e3f-1b7b6bb79847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e34fb2b3-ff2a-4d05-8900-f9037e88ef67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2073466-5dbd-4a6d-8f6f-29f6bdf20188",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "984c1b88-084e-44fc-b37e-dee8e6806ab9"
            }
          }
        ]
      },
      {
        "id": "55547714-c026-424a-bcb6-7a42ebdef267",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "488dc38b-aaef-4f4e-a9d0-ac0f80205bd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b11a97ca-257e-4121-944f-5ece38231fe4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7bc5b46-ef9d-4da6-a8be-83ed90c87075",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089136d1-bce1-48c2-b7ca-41aeb596c3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3602b3-dc2e-413d-9b56-2d035c1ca535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a680c-0ad5-45e5-8f93-8ccc286470c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff693024-5296-477f-936e-ecd7829a89aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3095e435-858a-49cd-a1b0-dd222c5bada4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b0ab6-6032-409f-bef1-e674f56a198e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef79a36-9866-4fe4-a7b5-4e481086d730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fedb0b-eb00-48e4-ad97-716c45f7ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1891af-d624-4781-b3b7-665fabf4b269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209194a7-5a52-44d9-a19c-bd789db0c5de",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bd3b72-f01b-4c07-be9d-abfbff2f222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7fd13d-40fd-4689-bc47-017dd4449634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5761b0d5-076e-4500-a3ce-e2ace2ff6fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce04dbf-1636-4e28-b7ce-4f7ce91b5439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4d2b04-e0aa-450a-b288-837cd1c43046",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f343034d-9686-4b7f-afe8-b293e5ad643b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc32edd-0b76-494d-88c8-2938fbffbe38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf33cdf3-3b4f-4251-a258-cc7af02fc719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c9c781-24ad-4ff0-9c9f-fc48847edc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a8bffd-0b57-4e6c-836a-4a9923d5a121",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf8b7b6-b1b5-4fad-a2cb-5cda52936880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06b2279-4894-4e26-8424-31e3f6970fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813fd0c0-3ce5-40ac-8350-516ca7e9e59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1acbd5aa-6d1b-49e5-bc66-4c1e37d17ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b426141-2081-4243-b622-be5c95e9fdbb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3d6aba-077d-4be4-913a-5841f81546a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eb9bea-3f15-4751-b359-21dcba852c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5aa9c86-393d-4645-a32e-e09b3b006449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6519b9cf-0c04-409d-8d28-e44adb364e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f51127c-4dd5-4917-9afd-34b74ea09f65",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f736878-8aa3-4e6a-99ea-dbd640ed2adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa91ebf-45ae-4ea3-8a6f-1d3924b844c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8430b340-91c7-43ec-88c4-13635b818ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c38b6b1-65b6-4129-a015-499a71fd2368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780ddae6-f353-4333-89a4-3f206cad240c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840dbae8-7d19-44d9-84a4-bd6972fb8678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f90e85-bd7b-4217-9b7c-d3013b628524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbff95d-6865-4cfd-a416-fe016b70ce22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8c1ed4-16f0-4d71-9821-81acd49fe92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95f8641-1192-4587-ab62-4e4b14b6d660",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885d89ef-cd29-4c78-8816-41e9aea32a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5923c63-ed5d-4e24-8120-09399665bb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d9bc4-fcfe-4b7a-a711-13fd17c4df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc7b28e-1c91-4b14-bff4-a8a4fe6a71ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b039e1f6-7c6c-4ae0-8523-19d1f8f21d77",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c933f66-610b-4033-9514-db11b1ebb62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a9338d-ad6b-469e-a313-346045a3d937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5208fbf-bd2b-47ec-be34-e26f204730cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5e9be4-b713-4952-a13b-73cb2ccc3262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dc9bd4-f60c-48c2-92ec-8b802b0afb0a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe8445d-05ba-4267-b5da-de12e3a8c48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1422a2e-48a7-4d5d-894c-f87e6d04775e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320ef87-af23-41f1-afad-0a7b64588cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d24a2a36-5ba7-47b8-b1a6-91ae9963d651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c74d20d-e820-499d-8bad-4f7339eed202",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0381c7-6532-4fe8-accb-5915586eb142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7b6a77-f56d-4cad-ac18-0a70d701b05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7400444b-e96a-45a5-bf4b-6aa7c36f7dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05be1612-e12f-469a-8aee-9f62fa5ab35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eb579c-091e-4dda-9f64-2d51deaa2575",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1fb7ad-22f0-47f1-b102-03e5045b2da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755eff27-cf90-47c6-97f2-d8e81a7ab232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b877ba3c-217d-4435-86de-10ff7c44ab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eefe117c-503e-4821-9998-eb9d75b4b4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ca6cb0-5b2d-4236-9a99-a9c0633e9bc6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15d759a-8468-4cda-9e75-677d6ab2e68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e201adf8-dc56-46e6-ad2b-fc2ce98dbdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cba204c-1215-4aad-b44b-d6994797ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc10251-5a3b-45ba-bb1c-0ed4beda0c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8810e50-3b5d-40ce-b9e4-956fe514675f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26933506-25b2-4116-887a-83a4ab023993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1fa98f-fe46-48bf-8d6b-5bf59a3abe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e12cae3-65c9-4200-8abb-bbc4a8ea9011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bfc9fd-c8b9-4459-97b0-bc4f886a8468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0c92f-6bb6-4924-b1cc-678e331e0c73",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08e04ff-d666-4145-90f1-28fddcb7d96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efb5ac6-84c5-488b-821f-a2dea249face"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f674b4-1d3a-4d4b-b75e-1ac5af520bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f7a943-16f2-4d29-9a3f-3dec9debb5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58e5823-95f1-44f5-be2c-f168954dbbbd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3d74af-ba03-4bf5-afd1-bc76ee9663cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284b5b20-4fa2-4954-857f-7b13214468ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acf508d-1f05-45ed-b992-453f1b09a5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b01071b-4edd-41bb-9b8f-b64a78deae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fb6b57-800b-4ed5-99a0-39b103ea0a02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de74606-a32b-45a5-bd83-fe1ff39b0df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ea620f-f421-4c3d-81ac-16b91c331273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512bb42b-9d29-4893-b67d-1f19b068cc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "046a4dd0-3ac2-439e-aa71-29532f3ddf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8be25f3-8eb9-4107-b116-88c5c6b77278",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef8b982-46d7-47ba-a930-96820a4cfcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d972b0-ece9-4ef6-9f2d-8079d6d422a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72c934e-c8a6-47f7-937b-8040fdfbb7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7feb59b-52c1-41d2-a034-5157917de771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92362864-172b-4401-8ae7-344b4bae3d39",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004158c8-196f-4c1e-856b-d8825fcefe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851987dd-0cca-40db-a094-159052a45c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8d7c06-1734-4e0d-adaf-bdb3eeeb3ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36511612-9fb1-4e00-9556-371dbceed18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07da37cc-359b-4a76-8c04-e66fa88029e0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57134ac2-f079-4d03-a09a-5f3bd9737217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cbea5a-9363-4542-8dbc-092cdd87125d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b605ac-95b0-4a5d-80a6-8d9700640d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53900d0e-692a-4198-84e1-58649b767761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d081707f-7cf4-4bc8-b227-72638340c8b9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85070972-d303-4a97-b56e-db0f6cbcd1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b60be3e-a276-461e-b110-0e5586eaa4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33dc461-3e8e-4328-855f-5b01578eeb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "612a52eb-e012-4010-9dbd-98a1e4a96e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d4029f-0ba0-4939-9a26-51efe05f98d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42769825-3c26-43ee-a1c2-a1453bd6b5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cf4de8-453e-49c7-a8d6-cb9a38c2c8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b1a057-25ce-4cfd-95f5-ac8a356e2b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4023557f-bd88-4354-a8c7-ebb14353612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f508e5-f8e0-492d-97ec-9cfe57949c49",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7941321-43d2-4b1b-9525-a84e52cc749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe345b7d-ff9d-424c-ad98-b971880990c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2326a135-9d5f-479c-aaf3-3610007bcc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6065bd3-518c-4b6d-bc84-ab340ed5112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f232ce3b-2a38-4c6c-820e-81dbade4f3a5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3595cfa8-4122-43a9-bded-087efdf9ff51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b501e7be-6a44-4661-a74a-1ade218840b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f76193-3c37-491b-90d7-5b2048d1e46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a17dbd1-d2ac-45d9-bac8-4abe531d503f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1519998b-718b-489a-9189-516e03686df5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae6bef8-5151-4164-aff8-af0aba30fe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d770c635-0aba-437c-b0e0-e8f79a972b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e188dbf-cb97-4ab6-a261-29a8ac225a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5df182-5499-4bfa-9a14-e8e8aaa77c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e6cc0b-ed26-4a67-bdd3-568f4b70968e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889cc13e-d2e6-49ec-a8bf-0b9f27e15934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e62bc1-1d84-492c-9ec4-95ee47338d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2234d43-9216-407e-9358-e0a2e06e492a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e006e9-ee24-46cf-b2f3-2cf0d028093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c07bc0-5137-46c2-9d1e-5ee817d608b6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f09b7-53ec-45a3-9845-976e8ef86e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5cd732-1db0-408b-8840-9f7deb232fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d369576-7be8-4ce9-a1c2-c22793f41f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1e739a-2f7e-4b86-bc9b-f90f0be5da91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82039b7-4549-448d-974e-9018583f5953",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e4d153-3149-4fb9-baeb-082d253ad562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e0abfb-7e47-49b5-94b2-f0a21de79707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf6b38f-8e36-456a-b551-6240a3bec323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15da5216-47d6-4ad6-9049-7b0d3dfc0801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edbecac-6bc7-49b4-ae0e-dd8be7afcf36",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2550e585-47c2-49d6-bde6-48bb16f651a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b8a805-9ca6-4d53-8a0b-7bae19c8d92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3015c3e6-3f3d-46e4-9292-84dcfc540588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "079c9dd9-601e-46b4-9c10-afbe96a46a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4d8a0b-61fa-40e1-a9f6-54956b4f36e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee627eef-609b-4e7a-a489-e37b8bf4b474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1264309-111c-4ac9-a76d-f84aa63def33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbc5fc1-3c22-4415-8fa8-65822b315a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dad2baf-9aae-41c3-9c3d-d3b815473f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a99328-7f85-49b2-a7ec-56ce20b4ba46",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbde7ee-4404-4295-bda1-f733c6c7ca55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7038ac-f49d-4d8e-be62-3c7a24bf1463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34df7de-99e5-40db-9bb8-30997a04df82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2599717d-2a37-4c23-a658-a3931d5c1229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5fb6cb-cd82-43ea-ad2e-f52c02d308d7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efeefc9-df68-462e-9d4c-050fa14b6f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d94623-d37b-4e9f-8e4e-83b9a1c64194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ec8a2-a7e4-44f2-8a33-9c2cb54c9760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db699a4f-e365-452d-8060-5b2c11025113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad2fa61-0eb9-42d0-9fe7-77d118edaa89",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fd42d7-2d1a-4b15-af38-b6ab2cf02adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed708a9-95c7-4c6f-82af-3d2173ccb367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d85e7-ce2e-469a-a0f7-c645868faad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ca0ef3-4539-4095-bf2d-e1a85ca0aa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20d7b7b-bdf6-4ed3-b543-935634ee2db9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54882c47-7d4a-4c0c-943a-8cde2006c743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db75156-12e9-4463-b82a-93cfe03e02dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b224257-ce2d-4b7e-884a-451b89315fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e210007-6c63-4869-8bd7-a6d7cefb514c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7061e73-6a72-4992-abd1-6942c0f9bf3e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3885fb3f-35de-49e5-afc8-e7c100e3cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a162cc23-c372-47fc-beff-05f3115c1743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd22496-65c6-43be-be95-2ca5ffb918d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb4fd01-843d-4f3b-89b3-56b205adc281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4627efb8-f481-4520-997f-268c38203b41",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3bd53d-0c61-44e9-a1fb-75ce84c4dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c072f0-e5d5-451c-b886-e3354c75e233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415114f2-f1d6-45c2-95ff-fbdb433575f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780487c4-5ca8-4ca9-a1bf-643716d9e7fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01d7c4dc-5195-4589-b622-b94c06f7d657",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "962e9624-5d5e-4922-b1f9-da63e52c1da0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6a1692-085c-4c6d-9813-b057be5526f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fd801a4f-6017-4cf4-84d2-e84d546a5e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c178765a-0983-4c23-a56e-888d7610c251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "052db96f-8626-4187-83ca-af46b576346e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c59229ab-b2ac-4686-b4a9-6a37a2ad3b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9cf1878-3692-4257-885e-37fc1066a829"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef05efe5-7ba2-46a0-9e2c-09e7b2fc04c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be7ece72-f602-4447-a9a8-7f3f8d14e31e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "626e7a48-f1f5-4ee2-a332-052acadc816b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a58c689d-c250-485b-9f42-7b6b1e4d5a56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d607854-f1c1-4950-978f-73f6e51e3b49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f27cb377-2b02-4b36-b9ee-4f93b9ece4e7"
            }
          }
        ]
      },
      {
        "id": "5e6c8987-b507-4123-93fd-d2c5c9bfb847",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c2a05fc-cd65-4f5e-ae0a-972a5e63084b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5b2a850-41bc-4f50-b066-76f9e1c2f6ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcafa0cb-5d6d-40af-9837-754bf15a2372",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f9cce6-de39-4655-b932-a4981c3b173d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a07d71-5500-4dd2-a53c-138343b5f98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e17003-360c-449b-8b92-eca9d7427f42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ead12c8-d470-47e7-917e-e749c345b5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f008543a-6222-4209-af56-00e9f980604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd3d69e-a397-47ba-9faf-0e9b434fb2f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3530a9-37c4-4d3e-9cef-98efc3ae33cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40afa98-e6f4-4824-b91b-059739995cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3373da29-b0b6-4e6b-b4e0-be9ff35fe928",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae9ee48-3503-49d2-a60b-4e4273435204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157de704-9605-4d44-a295-696ac35a863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a035fb-125d-420d-92f9-115fbca623fa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83a62b2-96bb-46e5-8d4d-44d4e6a35cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40a97d9-94dc-4ca5-a9a5-70ea55a324c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db72afc-3173-4378-82f2-12a4941d6cf9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38545a87-b625-4149-8753-340dacb68679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1117e0-3608-4e5b-a672-82667f1b4aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e50b45-470b-4e89-aa93-ec3f9e321677",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb599030-8d37-4698-9942-2e755ab9cc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ace8c7-2861-44c8-afab-8db8d4dc51c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eefb0cd-8fb7-4850-9d18-e4bee869ce17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4296b7-dc6d-4ff2-b99d-972b82fb66ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4762549-ef70-467d-b350-a59fb762c6e4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5c255-60c0-43d5-be51-efd32a8df335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada33c33-9a8a-4155-b2d1-d73e7168e7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afe9f56-fd38-4823-afc0-b00f0247b812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6476ab34-7402-45d7-9e7e-f8868fe8d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352d9c8d-8f1c-44c2-bbf1-82be92627466",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80e932b-b6a0-4682-9ab6-fe95f4666bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27309621-45db-4557-951b-b23983656e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3375f0f3-0358-4844-bb33-36e777dc3777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe058121-9600-4da3-b699-7b77f0d5b725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcd2a60-e1dd-4f35-9bc3-8533a9c94c01",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1482bfd5-372f-48c9-ab70-3bf42484ff55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00096350-4db8-4725-a609-6fe7bf95f0f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9136e341-88a7-4d5a-aa7d-ef8622d984c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734faa5a-c2a2-495e-8089-262f35e725e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca8050a-ba82-493b-97d0-ccb91437cd0a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b734cb64-a615-4bbd-986e-d2fb7c242c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e98af1-35a7-4bc1-b391-e732e0134148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8f00cd-186e-439a-a9a4-679cbd271067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41c0923-0f63-491f-9775-0680f6def846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcb10d9-ecba-4355-8621-110ba7d055e3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feca5753-06a0-420a-aac1-44c152ed0827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099d5599-c9c5-4ea4-a873-108af481161a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dd96f4-187d-4f48-8b07-a5a483ce4d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7ea509-a75d-4cba-81bc-2026e3f9c3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f2807d-8cf7-4368-8d2b-ee76d31ff85d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb7c65f-0d00-4c9a-8a9e-55453c321b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c6e27e-e8ba-4c9a-bc52-d814e4e595d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9789f18-a967-414e-8f1e-197ff582fb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38de9d65-ff50-4309-a826-bc6648b06e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d2ec2b-5875-45f3-9e8e-e9713fac8a2c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a420433-7fe3-4a53-be30-9054566d220d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910caa01-efa1-4e65-8cb4-bb0b6d87f759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e365f21c-fb25-44ce-a0ee-33253062dfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf12951-8266-47a8-b183-91fe9056cb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebb62f0-a7d9-4045-bff9-4fa9e21283e0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d717d570-9175-4911-bff3-63bef590ac09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c837516d-3244-442f-a50b-64c2fa260b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1de2743-bd43-40ff-87c0-d6ebb9ec20a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aa754a-9ce1-4350-98a9-d86fb6661fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a0f275-5f6a-477a-bd98-65b1e2ca0fe0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d4f0ac-ceda-4bee-9b58-87fc7d4b2195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28b1688-4509-4bd3-85e3-9293bc69f4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197b76ee-8a59-47ad-8747-03dfab59bde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaa1de4-e565-4336-96fa-a42ef5b4c46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85dfd12-7831-47ba-ab12-03ba7c8a7ca8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62d4123-2f42-4480-9c6e-551e5a6111d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bbca8a-9015-48e1-b7a5-bf63c6e4a80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27256905-934d-4ab6-af00-82e66346b21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893e37ac-8d0c-452f-9f9f-a4e15d349162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc118007-46bb-4259-b8e9-6935030abc37",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101d46c6-1ffd-479f-9ea1-e0bf820a8f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a777debb-4a70-41d7-84f9-db15e75810a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1a8141-7320-480c-b48e-69c16c0703e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222ebae7-06e3-44d0-8802-08831c6d95d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90ce669-cec6-47ef-9960-610fe614d545",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac723ca-e4cb-459a-bc24-dcf85241c43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0d5a5b-bfc7-494f-86fd-5c28dcfb18b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84ce3f3-a0a5-42ac-afb9-8e0a26596af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f68e3bc-07c9-443d-8527-c2e9cb3211ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db05d326-634a-4624-abc3-a7a59adfed40",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1eb30-9eba-4aea-9c33-63cf2dea288b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f59eb3-2f58-4870-b465-82b729c6e48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7057fc9a-e718-4cbd-84bf-9db7756e1b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766c05e1-ffdf-4cd8-829b-b4cf4ced8f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca0895d-f0b1-4603-ad09-bb5f4db406cb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b2cc53-b2ab-4fe6-8a52-fd8d7b84c5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e19470-dd24-49c2-a628-7ece583eec81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74c5d7d-98ff-4153-b443-6bc924a0b288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430d8c94-0f81-4988-8b20-f89894563237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50930448-7e5f-4069-bdb2-5f0546b8622b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7306909e-bb32-4567-8364-b9599dd4dbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978e8b23-bf79-4f4e-a34d-91787ce4e1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cb0703-c803-44be-9cbd-27e60916ab64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581f157b-718a-4898-b333-5f27b34fb2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a12e7-3e2a-4111-99c5-372a70256699",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d4c9cd-473f-4c5c-942d-3227fbcc81d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f4d2cd-2408-4a18-bd3a-44921bdeca06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c71d26-c426-441f-8b3a-464e3a69dbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1458eef4-60ca-4d93-8493-f059b3b2fdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e171b0b-e961-4383-9d1d-c5bb4e742d7a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836f99e8-b131-421d-a3a4-c6f12a68300a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f03cba-0778-4b13-920b-08d44aa8a828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eace03d-e244-4856-ad08-65bab37465f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7a4897-d3dc-4899-9b5f-768717ffe0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb40b4f6-1a6c-44b8-a352-929fe4970cbd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36f021e-aa73-4950-8509-8a5ecc1d1960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a026879d-e133-47d7-b7b5-c28aa9b187b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d46d560-230a-453e-b236-cb9b0d9255dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dfbb97-6406-4c0e-9a52-3dcaddc9cced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84afecb-80e0-4844-8486-175daf812093",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aee705a-6010-4e70-ae6f-f7438b18b08e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df731d63-165c-4a6e-89c2-0781cd6c7a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ee00cc-65fe-4be2-b1bf-5e53fa3ecda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b16208-7a85-4b12-888a-417009587632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f0c97a-ef08-490f-a96a-ae573cdfb186",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4df84f-455d-4703-a639-f187f0378bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52473a1c-935f-4adb-b120-f79c3580a66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f2bd6e-8197-478c-aa58-dc9c010dc5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdf5360-676f-4559-92c1-0f8fc8e762a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97334b2a-2e87-48e8-9e6f-7d3880cdf2ee",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff92029-0b50-489b-9d2a-98a0f84eea88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24d5ed4-fac6-4d04-865a-7fb1bbbc1f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf0cede-4ddb-40d9-ae15-aa8a20c84065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea2606c-94cd-42a7-9ed5-51841d698d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c78a5f5-927a-4d74-8e70-935f7f448cd2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6b7c38-cac8-4cdb-9491-214f42c7d0f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33a9014-5559-4cd1-abc0-277130f20bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f99b9ed-225d-4fb9-82cd-cb7794f30fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1dd1b5f-ed6c-4b7d-b4d9-e48a5caa655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6896870-e067-4c53-8bdf-808c9387ee50",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1413e0-fe2e-4a5e-9e7b-0de04615207b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db1f670-b51f-4c27-9b26-3a1fa23ad612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f5066-56d4-48c7-a0d4-2e0eb0a5c32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1209255c-c12c-4fcb-a6c1-832123d5e426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e320740-223d-423a-9662-9f8a1529f9ee",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7be09c4-498f-40e9-9a8d-48ce0dcf2c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c34c33-bc11-42cb-babd-65cca74c052e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e15efda-5046-49c8-ae21-ca02c161b2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffa680e-60d1-4eeb-9f76-918e0f65ccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c7a08-e5bf-441b-b0d7-48da56301cf3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01004dde-3b74-4974-a6c0-b9f913ceba03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5887b131-efa0-4c49-829f-8924b94d97d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a60f42-6ba6-4423-b87c-59f2780f9a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62f8724-910f-486a-bcb8-4c303ca87a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53acadb-704c-4d23-9a8c-00fd7925f946",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e99bbc9-036a-4112-9120-773691cc015f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfed3ca0-c4fd-42f9-8469-9770d34c7e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39be1bd-4243-48d0-8bef-f074f6d30614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af02f54-9ab6-4e5f-bde0-d4179fbb21b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b596994e-edaa-4944-8ef6-80162d068444",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f178d80a-365e-462e-bdd8-e8eea3ef9813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6777ed7d-4a75-45da-b43c-db83b47ac51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6e2a32-1c13-4af7-acae-1d31028c30f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070f7d2b-949e-4a62-a97a-d9441f16537f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe9ff73-e29e-4753-ad16-45594f03012b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769394e2-bdab-4a61-b889-346a2f70d88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc3edd3-806e-4e4f-ae6c-022d837ceca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fd39e4-710f-4e93-9218-b30a3822cf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233641a9-a434-4853-bcfa-82a1d24cc559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd32076-d6a0-4e4f-b9ad-3b9e2eee7f0c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ddb523-7ad9-49f9-a809-b84ba9c958dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec3e15a-6490-43be-9e92-fb8589b8bb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d6a13e-d11d-4fee-8f3a-789dd977f557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c3f2d8-dffe-4076-a561-abc076107328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55474dd-798b-4530-977d-0f9c44b87daa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b170f219-f2f3-418e-b4a6-c567547dddf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea6d8e1-0fe5-4ff2-95a8-4f43a83ce07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303651a8-195a-4d0c-964d-68a8f3b24aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5e129b-f3fc-4f8f-ac4f-47f7a181a24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8cbf7a-605a-462d-86a6-e402c8896b99",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4374a7-86b1-4d8f-a1c9-7227ca057090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a560d8-8897-434e-a3dd-e9d56758ec1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23908510-b502-4f44-94df-d9911c1bcf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc8ffd5-f33e-4e9c-81f0-3877fe2ffd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2bd511-e189-4631-89ad-d93aa2c1da04",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c257b3cb-a5ed-4b99-9c15-3d72935caf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253da4ac-9b42-41bb-af7c-2987c8b288de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77092ad5-92ca-4aa9-842e-95343253a553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cf6b9c-f0c0-4a87-9fc3-6e213303c027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2ca2c0-99da-4aa6-9a36-c1a2b778a6a8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7225be-575d-4f99-83da-00819eee61fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b5a3e6-592c-45ae-bb7f-43ea3de7db8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93063929-f47a-4e9a-b997-e53f9032b49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd436d9-b7fe-4ca9-8c32-7b0c84c81a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046107cf-2154-497d-b9df-7858a72d6f21",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c24d7d-6259-49f1-8efa-263358a4cce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e53853e-7e3b-4f8f-9cf3-33f2a930b494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e93ed79-c930-4fb2-a7b2-a36a5c55cbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4f7914-ac0d-45e6-925c-a4871f64e39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c277a19b-6522-499d-84f6-04427e789aeb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa47f2-0fec-44d1-9072-4aaa9a54ab5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af58cc7-2d22-4f37-9aad-bc4f5d692dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0392d75c-37f9-424a-ac23-8104d036a146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb98ff7-87e4-4b81-89b1-daa057fc75c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4585e0c-426d-41c8-870a-a5e66f0e672d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5ab311-3067-41e7-b888-618039436351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581f99b7-074e-4eba-80e3-9a859d80eb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9621d86e-2329-4cc7-9949-ff0e4b585f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7cc30d-7ba9-4f48-856a-9535eeec1350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad129d8d-773c-4b8a-a885-cf51e1b0b235",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a4fba-9a4d-4271-88f8-a9b57da56651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c74a26a-b333-4b0e-84d8-20273b2db4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4396cf2e-f4c8-4040-b555-9ff7d0080022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428f99f5-bda1-4328-a603-08282bb6f154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af996cea-0b1f-4ed6-8942-10097658014f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c874fda-3c1a-4e03-bf66-82658b2fbc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7f5d41-6704-41b8-85ec-5f5cc5a17963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360bd1a3-5b95-4032-827d-1b2a38ee3753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965e9d4d-b8ae-46de-adaa-cab3b8614aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b498f0a-3ff5-4b9a-a6df-4fc56dac303e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c69df2c-dbeb-42d9-bd1e-839d238ee513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f46e253-8ebd-4f93-9675-4d7467b6154b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8682fe51-a225-4913-8d3f-5ef209909670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f67692a-4b0d-4db9-afad-c000047f53b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26871a53-9b5b-4ad2-b56f-8e8827bc4f65",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c85a7f-f65f-483f-8334-6e69286e7bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761b44ab-4938-441c-8898-14fd78a3aaab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e3f98d-1cb8-47b0-8f49-1666cc3d8dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99fca4c-a227-4585-8b98-6f8b32696253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940c0616-3e54-4d34-b7b1-9e70725d7928",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df63bb3-7ba0-4b11-a343-004342971cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f78d0bc-7b09-472e-a981-624f97089042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef8eef-ea69-46fe-a37e-1707ac269e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f73280-7175-4992-95b9-0de7228db2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0fb8f3-35ca-41f4-9f28-68d265fe9efa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000bcbb5-ec87-4713-85a2-cbf2327029fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e61e4e2-c37b-4a6b-a4dc-d5123d0230d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553117a2-9a19-414c-87ee-08f7db2fb107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b81c89-32e1-4c4a-aae2-1e1102b03daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a84ae3a-2d79-4b15-9e21-136a0f517415",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd81a9-5d35-420c-9c9b-09bcd6fa56eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3368473d-ce25-465d-a98a-0e2465f6c10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5fce36-5759-47de-a3f0-2460705f108d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb6f40d-46c8-4d14-a510-8d2b1f32644e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90bf83c-0563-46b9-912d-b82c53c7c2e7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2027e5e0-e673-43f5-ac5b-4c4027d65660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ce5a18-4000-4ce0-9b77-88056bfd5fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e96349d-4e25-45c3-8538-010a58956823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df899e1-f148-4108-8e26-71261fb28e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0342da78-e9c1-4f3b-907d-659520eff8ea",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec492cd-bb0f-4a87-9ecf-1785721742ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55dc172-1385-4c89-bd39-28004a13893a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f24b6c-37b4-45a9-98a8-f6f28613217e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2c4f1b-fa72-4c22-a53e-9b11ade5332a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc68555-5668-4d49-bafc-dea7768e009f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a3b69b-a0c9-44ee-8c55-2e9d15fbfb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd6f670-e2b4-43c6-ab88-0be3d52836b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce01d4e8-6142-44cc-a3f6-e29e87a62639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e241e4bb-0a0e-4ca4-93ae-b155352ad4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b21d163-d957-44bb-879f-b5ee8b9f74fa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7c05ee-85c4-47ba-aaf7-df0aadbbb2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61746cb1-4b3e-4023-8405-ade20e71cf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b580ea8b-80b0-4678-ac8d-998618d7576b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4350618f-9df0-4d94-ac0e-6ab0060b81ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8bad64-908e-45a9-acb1-48887d15dbf7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1adc099-a3a5-4926-a0a9-d42fbf0aa4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e723112-32a6-4fe3-966d-c57d185f7cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5fca74-dbfd-4d06-bf1a-8aca59086b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08baa8a-0c7a-4eed-9996-7c34d567f8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25b26a2-35c6-4f8b-a0ac-3eac474661a4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b692ee-7f38-4f0d-abf0-d6ab9bec57a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bc66a9-7d4d-4d8e-b72d-f61f4837418b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ba1240-2272-4814-a6ef-a4db63b25e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d33a235-9535-4de1-a807-94b7fc7af232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afeb04c9-0a32-433c-a43e-7f319cf98118",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953db373-7ec5-4d56-85c2-2aa9932fee75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490de863-a6bd-4223-bef9-3cd5e0925b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cba387-6d6c-4ff4-b12f-eb52b63ad483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d7aedb-8962-4e1b-805d-0bdc50d5c89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0bf6fa-b838-4ebd-85f5-0ae544f8d93d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b552432-9e55-42ce-ae09-277ab3014071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc2d4c5-4fa0-471a-9ac4-e13ca1c83d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc494c-5851-4557-b2d2-baf53c2e05bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe8092e-621e-412c-b2cc-de9a0f86979a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6cfc25-dffe-4cb2-9650-d5b99b3d9bf5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbb6f72-efe0-4fc7-af00-62013d8084fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07e29cc-1d5d-437f-8354-4604b38b43dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcbd5e9-347f-4cfd-953f-0e5d15f8a4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8086bd3-eef6-43d7-8ae2-d2e4bf4e2ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ceae6-c118-4a4a-b0e0-d8a0315538a1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d86df5-53cf-46e8-837b-d9604d02f0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be4d80f-79f3-4de7-b4de-f3b83e66a909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41538c0-abeb-46c7-aa76-9debaadb9564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482d8d6e-21ac-477b-988a-c7cc78c7a820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efd5ddc-3039-4306-a9f6-1dc807c21352",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59774637-2e93-44d3-906b-88fe63e4c3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b6fa2d-0716-4548-b378-4edae2598068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10be3ec-20b7-43d9-b2ab-7275df699068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f739254-4513-4e75-b262-17d5df93bd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964026dd-73a5-490c-92e0-95179fa0cd88",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18764ded-e63f-4991-930f-6a799e50dcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731ed338-232f-4453-af68-0ab839bbf8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8044ab52-bc4f-4c02-9aa2-dc66fe87282a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401eb686-d84e-48c7-86ad-8762bf335c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c48ea6-24f5-4875-abae-62bb141d07ba",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ee9e8c-d6ee-412d-b712-12408c4e073d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9d2222-53fa-4e19-bfe1-ba99c077a484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25631efb-8212-481c-9e8c-ca446a188d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c1752e-00ac-4bee-aee1-749fe05cc6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf31b9b-0a0f-4b30-8c08-64bf662ff3e5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b445912-6b1b-4ea8-950e-f2730f3879f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7dc62c-6839-4f12-af42-a97722961f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a661292-667c-4bd1-ae63-f87e2d6f0a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361b102e-9cbc-4535-9032-72ee0da7a369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1efbce-d4b0-4237-b560-99522d80d859",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8573f1c-6e87-4547-9300-75cd80480af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5dcc5f4-b277-4442-bbfd-72809fbd0795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72c5f86-2873-4102-a0de-5f351305515f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf65545-b9ee-4c18-a176-13a1d68bf533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4b01ce-6084-42de-869d-bf524025ff86",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7745bb45-99eb-427a-b7f9-76304f241270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c73e205-7cd6-4e2e-a946-a0c445d0f21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95add5cc-ff81-4ed4-99c0-a4297d8e9f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa14ce2-f723-4fcf-a812-5468b7112d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b920ba10-71ce-4c0c-9c2e-c9deb2457850",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5025b33f-1e3b-4e34-977a-12d96e1eb3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4993d5df-3e13-4685-bc41-3c12b5d0a7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237bccbf-f30d-4d59-bae8-ae5005d2bda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0096ad96-4935-4d27-8440-fbcf2ef73b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a168ff-c8a8-4e8f-beaa-2239fe6bb7d9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b261ea01-6c60-48c9-9020-d7dace9d862f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f836a4a-a504-4d65-bb43-fc1d2afb8a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b9d98b-0081-44fe-ab69-b10ed80fbea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226bdbb4-f47a-4f81-8b0a-8ea07abcb162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb9ba84-a2cd-410e-9c6b-cbd1d0c05925",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40220f95-d2b7-4650-9b6e-969f4e57e069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec6b19b-c4e7-4311-8003-88f887d138f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ec1013-1260-4c91-a7ae-2319c1caf062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97472769-2408-4a8c-ad11-13bf25c07b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b452da-f2b6-412b-a30b-4c876c63e1ae",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b634f24c-6280-4ec7-873e-331c4ec83e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32663e57-e61a-4830-862b-8886b4f2092f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe0c80b-444d-4c33-b330-7f7f7e9797aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0394591c-e822-44d8-a23c-ed66c269e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c36c0fc-b271-4ace-8046-e0c1e7bc91a3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a25b3e7-81a8-41f9-8732-109da91e70e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6f127a-e40a-410c-8760-7be821b7d342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4e2391-02ab-49f0-917a-080ffc4a76a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bc315a-90aa-4a4b-ae14-361c11b62d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbb31fb-ee48-48b4-9b5b-882618b7050e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c982c19f-dc37-4571-81a5-9b088e390022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40acc91a-228a-4c01-ab68-93bbc46ba3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47300c9-68cb-47ab-9179-9c7e65452264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fc2834-4dcc-46c7-a3e5-c58a51fad7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0473625-5aff-42af-9b61-aa05e6302960",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f0ccf-083b-4a98-9aea-3899ba4dde93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdafeb9-b72d-4e9a-89f8-7ccad75b0083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f9a194-b293-49f9-8ca1-a3e9cd7f2401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6055696c-7adf-4d1a-b506-4f3311bc8bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810c17aa-18d3-44db-9346-a8290496e0e6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c3f94b-37e7-40a5-b0d0-c6ee74b30b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6334d9f-5181-4eb0-ad92-3c8545132542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951af85f-8d27-4e27-b016-0b0bfd000c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97120336-f1ae-457e-8906-d98fb2bf0e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb6eeb1-9325-4d23-b3e3-7ac109c0e5bd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964f7bfb-4b1e-496c-b9ff-9514814e2208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe414e4-8bc8-4206-afdf-15b5771c429a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fddba8-1d00-4563-a2e5-7c03e2c691c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d63d5f-823e-45da-adb0-fd9b7da777df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0903a44d-6c8c-41db-b994-08fb973178b2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20a869a-be15-4d33-8566-86079df4c094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16afa26a-7509-4b47-8ece-76ff43e14448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c3329e-5e0a-4d7e-9681-5cafec044df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102263c6-49a1-4602-b664-9d584da3c62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b8fae6-e3ff-4b85-aff4-6cd8faa06b00",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178deb99-ff43-4f1c-9422-b87a2b3526c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ad7d0a-89c4-4259-8c8a-74c91ef78b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f13a41-ba35-4945-ae46-812904611967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c749c26b-fbef-44dc-bf52-f592918a1b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49192ad7-410c-4b53-9fbb-4c053d6431e0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbf7155-50f3-4e96-a10c-e6b4a937c08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a76535-c94d-43a2-8395-75422e66d8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3e63be-47a3-40d0-8e52-c0be693a10b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d4c03e-5095-4d58-930a-da864549c7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b38267-3df7-4c6b-adcf-1dc4f7da07af",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c3c04a-70e6-4a4e-9262-4e2d19dcd1ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea6d09c-41d9-43f9-88d4-93bf66ee341c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc472b8-3294-4b07-8dc3-d0cfcd6a5760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fe65df-3789-4b3c-89b5-f3268ad9a7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd3808f-1896-410d-b5e3-ddaa33b754fa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7cb758-3f6d-436c-981c-1e0a333303d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b012073-ff00-4635-a240-9eb21dc1ba33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408b9786-5f34-4744-b29f-af2b8487a808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6b3867-04b8-4444-b3e0-522460e8bc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921986ad-49d0-4810-b691-95182db4be5a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df12dc11-caf9-4fcf-b125-a9cd8340cd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1daa5f-c45a-47ea-90f8-c841f2a31ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545e6da6-8710-4253-926e-17d346053500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff1af9a-bfa3-4268-a3b4-b9a360648bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d52291-ca58-4089-897e-9a9a3201bd33",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a428482b-fd32-4ca1-9252-58a900cfcbdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd51b7a5-79df-4cb1-bffc-6ccba39ddb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f559ca-2583-4b17-aa2f-2fed8e749f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3244044-e636-4c56-a637-8dc55f44786d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad8db18-e772-4fc4-8bdf-f7e16a59a64d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e6fbae-e100-4cce-bf71-5aaa936779fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "672d0bd5-7df8-43f6-b20d-8ed685651515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6504eb21-109b-48b1-a45b-8f20afdd84d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b59f45-b4f2-4cb5-be5a-62f80702d246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d0651e-298f-439a-9f86-883fdcf05460",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acb9db2-f818-4fb5-9cc7-79b4f4955511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ad9fda-9dee-4f6f-9ca8-d147dfb7d5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370765ba-8bf7-452b-8d46-d982063e09a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66763711-f362-4d18-aa03-2740e099e2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897edc2f-3c18-40cc-a2c2-1afa2ca968a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0579f3ad-80ad-4b66-91ec-7b40c075efea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea1eaee-87d8-4cd7-b7bc-242b2283ba71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950561f4-3196-4103-973a-20f29118a313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b288402e-0e04-4e84-930c-2b34a9e93987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37901355-b5b3-4bbc-a32f-3a739cd6031d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8939ffa-1512-4a67-adc5-dedcefe924fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81427cbc-5e04-441a-93fe-eb095e61dc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb79dd5-fdbd-4c45-b213-842914bc909c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bf5dc5-fb0e-4654-9740-45179b23ef8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157be6c7-8889-4407-8399-7093547a9040",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235ed70a-a9ec-46b8-8991-9d38a26f061b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4bb1718-11b5-4ad8-aa71-cd52bb8965f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa781716-ef76-45c9-a258-8b5d23c7d27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1748dfa7-7f58-4d69-8de7-ae099ca1cf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a78995-964c-49fa-8a6d-65c94d4c1495",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede9c9ba-9f4b-4e93-86ef-cb0d700abbbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56a6c6ba-29a4-47ee-a038-b3e315c22a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfcd97b-f2f3-4b09-9b2d-10f4a516f5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a96ab4-3910-444e-a2a9-cdf9e7a4aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394ac1ef-2ea4-4541-8ea4-8860bd754b66",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5349c145-bad5-4418-b5e9-3530fa7a2c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817ec0ad-a089-4f5a-b3fa-dce214a7ef0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40194ac6-d66b-4f01-a70b-c3f80d415684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372ea902-aabd-4f5d-98ba-495073d7cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0972edf5-5b9b-41e6-9406-d94e0ac4d111",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abbe08c-6236-4163-ad12-f3b72908e6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390e5f56-296f-480f-804a-3bbc1ad13fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc529112-5801-44c9-9404-db5e6bdd76d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9922c3-628c-4848-b55d-41dc85759208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1e91cd-0c5d-4fd0-b8b7-51847aad70ef",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25beb5d-749a-4265-9bda-f452554480e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99bfb96e-231d-4661-a0b4-0597ae0732ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b663f25-dcbc-4b56-93ca-fcb9bcf127c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f307b0b7-6591-4ed4-8554-bdb7df605b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c127296-808b-4439-bc34-294790f7c51b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc215a7b-89fa-4a3f-b3f8-ae0a0ec670a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e1d074-4faa-4cb4-a43c-b58836505920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8d2415-ac2f-436f-b796-8e493cccc45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f86154d-422c-4ad4-bd88-7d8379cd9033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f38238e-0da2-49f0-a7c0-d6938852254c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd7108-b7fb-4e22-91b9-af34bcc0618f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3bd25ea-fa79-4ab0-a6b9-3665eed57b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4172841d-9161-4c0a-bfdc-661d660de86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044d4e12-0784-4939-938f-23af307a92c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bf21ab-4ee0-4b52-9b67-52ccec6e237a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca3e4e-6fff-40b6-9ff3-2520935f108d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09fe6b43-5d99-4160-b573-c184110dbee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285e0a66-e7e7-4e57-ace8-3e9d749d1676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5a4eb9-6d7f-4c72-a564-21ae1cd9feb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04707f4-252d-457e-b279-5dccfbf12f18",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d8900-fed6-4c43-9d01-ddf619a0be79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c52f38-7839-4b96-9921-dbd759c8e9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d88ddf-7386-4fd0-b83f-f2496baf5311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69b74d2-1197-4103-92e5-c71478af9893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4eb1ee-03cd-4d12-a86c-58ca4b277c24",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4471d2b1-440e-4425-927b-474f7553e5ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60764141-5dd6-4416-a501-8866f126701a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403686f8-9512-49a8-a5b2-aed6c714fcb9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9998ed30-2bdf-4fb1-ad19-cd19406417f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb996c19-8000-40cc-9c22-f0fa82408358",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5335cf93-a105-4007-bfdd-8e05c9d4c8e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e05e47b2-7ad6-4f88-a713-58ab57c757e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd47d636-b17c-47b2-b8a5-e976dde54b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d3108b-8b35-4f4f-8546-dc8e02a5b34e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23eab9a0-1ff2-4b1d-995d-8da9421a1e91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32830275-118b-4af9-9e24-b6be2e032d50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc2530c7-ce67-4dc1-b290-fc83d092e899",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cc6f142-361e-40ab-991a-25efb20b69a6"
                    }
                  }
                ]
              },
              {
                "id": "e88f6a19-daa2-4843-ad8c-e3d5e510f3c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6170ca5-a9c1-4e03-8c9e-fc8660405f85",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a924c4a8-dded-4112-b443-729d27e7d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b3b61f48-867d-4b15-be66-ab43881a3069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4338856-08a6-47cd-ac97-d6c7e2e7e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "544bf1cc-49d2-408b-97b7-94f981a7afc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd677efb-0c8c-49f7-aece-723b49c9f7a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c20764c4-5af8-4457-8f82-fe4be66a5115"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8ff5d2a-936e-45ac-bd46-c14ccb3d63f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5948d358-3ce3-4d9b-a6e1-984aa457eee7"
                    }
                  }
                ]
              },
              {
                "id": "1e794cbe-fd09-4bb3-9b30-6dd63f7b7e04",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "75d543b0-0d9f-4795-a8ca-2bf6320e2358",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4559b0-4bfb-4e0d-849b-f16b2be0b1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49fb5b6a-5e0b-4249-9a95-b6ef152110b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6252619-e327-41c2-8e21-2fb721d49b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36c4214-4ea1-40d3-ad50-be8a116a2226"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "611322c5-fbac-4bf1-b3a1-2c507567cd70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0e5e09b-7aa4-4fa2-965a-334c68df7cca",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea38db3b-9c26-4c6b-bcdb-af47c3d18fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea7e4176-5b4d-47b7-92b0-a16452ed9a1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a65ef446-237f-40d8-8df2-1b6985409ec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d43399e-fafc-41f0-9759-0a637e70a509"
                    }
                  }
                ]
              },
              {
                "id": "dfb52935-4423-4e2d-a326-0b55076fbcf4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "001badd6-ad20-4c7d-a99d-d791a1dff832",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "85a03598-ba6d-4afe-9b7b-92f32c030296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a80c5dc0-714c-45d3-b079-c1b26a17b351",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "091aadea-d914-4344-b307-000d0e040a41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1172be73-80dd-43fa-bd47-e4bf07c7a8df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "98485fdd-0de8-4217-a77a-638fc5d601dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "013677a2-71b4-4efc-b02d-4d76963de755",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e2c8456-c139-4378-9829-af6509225bc5"
            }
          }
        ]
      },
      {
        "id": "15f87154-d78a-41a7-a4b8-0f4a97cbcb83",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1fd168e9-a82d-45bc-8126-bb3a62767a9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a40efc7-1737-4f3c-be66-f55adc35e1d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a09583e7-ab09-4e7f-9199-55e02fcb5eae",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431cd249-9847-40b2-9457-974fceecc1a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f4a546c0-1655-44bd-8e26-8679773435a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bec7228-2500-49b5-a2db-1f884360783a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f348f31-0cdc-4534-8871-9174489fe371"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de9aae2a-f1f0-40ea-8597-1f699def5033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "859f6eb4-4cbf-4877-ad2c-55a0ca2b097f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e348058-81c2-4e7d-8fa6-f836c96871ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e939c58-9a95-45fc-9d5e-f8dc883bb611"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e207d00d-33e4-4194-b226-9d9933d30b12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d55be4b-8d59-46f7-a8a7-e6f8ade0296e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4992ce74-2bdd-4dd4-be48-5ce4a20640ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61c28bc1-ec28-4c8f-8fa0-3a0e0e5d35e2"
            }
          }
        ]
      },
      {
        "id": "60568111-fe4c-4f9a-84a0-6761bc341864",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "95ee6805-6298-4a16-b9dc-74bffd94c183",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fcaae59-57b0-4d67-9394-98681ae8687d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "164b5cf3-ff8e-46dc-9f3c-34fcc523a326",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eab41d-31d8-4ae3-9091-7ad83668ce51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "156733a7-5fca-4a12-b114-0312a1d21073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad720a8-95ca-4c42-b244-185f2799c9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "557baa88-b462-48be-b60c-10010d7a0987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50c7345e-e580-4863-8ac5-dc156ce34cdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de63d677-04a2-4dfe-a0dc-54ecc2b8b01e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e54431d-a8d3-42a5-b264-d9918bca1a67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95852958-0d3c-4202-8dc8-f5b7f10fc179"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "411d3389-d140-417d-8c8b-3df446e5b497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a14df4e6-c3c6-4643-af22-451fd46c3199"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d65b0241-6011-49b6-b3b7-460ebdda41cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c59b7abe-22f7-44e0-a3c4-d75443c9d923"
            }
          }
        ]
      },
      {
        "id": "03c7925f-66ea-467f-8166-53ad8ad0c3d3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ba4b7a71-04c0-4b4a-978b-b9c22a5acd67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c8d30f1-a5f8-4e41-b52b-ba25b07bd4df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06e6837a-c70e-4fde-8c3f-dff2936c1545",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b12277-c694-4b37-9e92-61da36a99d67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4eeaeae-ae03-4dc7-927f-9c5a7d59f83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ab3fec-084b-4e0d-b025-8011f7e44304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32d4f8d2-73fd-4507-a8a4-b3d19ca5ee3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4e39bbe-0930-45f7-bfbe-daaa142f2f91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7929254-fc7b-40c4-8c58-382d62a2ffe3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1fcfe17-fac1-45c1-baec-e3909285127c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae8964c1-7cf1-4231-a145-c4fe0e9affd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25947148-78b8-4525-947b-9f236790ee2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7b45cea-8a3f-45a4-8308-8b17bd62344b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42fd77db-c9fa-4939-adc2-2a8ed4b0b6a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3428b83-1b41-4aca-aace-214df4c6df62"
            }
          }
        ]
      },
      {
        "id": "a9994d4e-5f9f-4c66-9e3d-70ed9009afd3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3a1c597-6bbb-4a87-975e-26094f4f3806",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e29dc94-27cf-4d43-bf88-a5ded95b6b03",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a69d64d3-f55d-4e2b-b1f9-9ab84e2959a9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d2eb307-5ae5-4d5f-b9ab-d4bca9361b61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "943b58eb-8ef5-4e40-9131-d846f5f80ae7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 305.2147887323945,
      "responseMin": 14,
      "responseMax": 6669,
      "responseSd": 815.2146392767701,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691628076216,
      "completed": 1691628175579
    },
    "executions": [
      {
        "id": "c22464e9-963d-45d6-b8d2-4499454bfe2b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "37fc0a89-777f-46b1-b2bd-9395eeec16b1",
          "httpRequestId": "e683e61f-9365-4667-a892-5b4b2110dc76"
        },
        "item": {
          "id": "c22464e9-963d-45d6-b8d2-4499454bfe2b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9fb5e76c-8cdc-48a5-8ccf-b4647d49adb9",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "4b9c6e3b-9326-4a3d-b96e-8b1c06f717ea",
        "cursor": {
          "ref": "d7d09bd8-40eb-41a5-b76f-0e237a799d38",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a1b358ec-425a-4da6-9975-6ed6a6428b61"
        },
        "item": {
          "id": "4b9c6e3b-9326-4a3d-b96e-8b1c06f717ea",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "38a57fed-7dda-4c5a-8faa-a395249a356d",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "3d89af4c-5767-42eb-8ce6-a330af727964",
        "cursor": {
          "ref": "d4b719b4-3912-431e-8546-af9c68c443e8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7229f71-e62b-436f-a333-9f0ec6b8412e"
        },
        "item": {
          "id": "3d89af4c-5767-42eb-8ce6-a330af727964",
          "name": "did_json"
        },
        "response": {
          "id": "70c7fd92-babe-436d-9ac5-a70a18ff0d7e",
          "status": "OK",
          "code": 200,
          "responseTime": 1411,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c958eedf-ccfe-4c87-bb81-f384eaefd082",
        "cursor": {
          "ref": "df3fb378-dae8-4c0d-bbe8-398f520d8697",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b333235-b22a-4d4b-a723-8ea72c6cc4fd"
        },
        "item": {
          "id": "c958eedf-ccfe-4c87-bb81-f384eaefd082",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0d4c9b2-0c70-43b1-ba05-3665b54bb6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c958eedf-ccfe-4c87-bb81-f384eaefd082",
        "cursor": {
          "ref": "df3fb378-dae8-4c0d-bbe8-398f520d8697",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b333235-b22a-4d4b-a723-8ea72c6cc4fd"
        },
        "item": {
          "id": "c958eedf-ccfe-4c87-bb81-f384eaefd082",
          "name": "did:invalid"
        },
        "response": {
          "id": "e0d4c9b2-0c70-43b1-ba05-3665b54bb6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c9d3b5-030e-4c66-85e3-c414b9b45871",
        "cursor": {
          "ref": "ee48e621-3cca-4d4a-830f-8ba9486204ba",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "837b87a3-b823-432c-a44a-bf83b35a4ea0"
        },
        "item": {
          "id": "d1c9d3b5-030e-4c66-85e3-c414b9b45871",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69477ab3-83ca-47f2-9795-b7152dd3ecfc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 393,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ade9bcd-6198-4793-8f44-8c5a4b966419",
        "cursor": {
          "ref": "b4d21a9c-ec38-4b44-9de0-0874be3e9210",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6d021018-e832-43d9-997d-72e5ca66e6ae"
        },
        "item": {
          "id": "9ade9bcd-6198-4793-8f44-8c5a4b966419",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "66283cec-8b62-46e6-927a-01fd9e1432ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 265,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf88e90-c4a5-4dd5-abc7-f090be2c24e7",
        "cursor": {
          "ref": "224b1077-7858-489a-90f1-541f24e56020",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7bcfd6fd-09c6-491c-a26e-9d924253c238"
        },
        "item": {
          "id": "4cf88e90-c4a5-4dd5-abc7-f090be2c24e7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ddd95425-c756-4af7-83af-bb7d3455fd91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b33c33d-e67f-46d6-bba5-58340b04ab38",
        "cursor": {
          "ref": "fcea43e6-2ac7-4f72-bb4f-a567395e00b7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0848d84d-8360-40fc-8d92-c8f6a951f936"
        },
        "item": {
          "id": "9b33c33d-e67f-46d6-bba5-58340b04ab38",
          "name": "identifiers"
        },
        "response": {
          "id": "bd549111-4ea4-4e88-8b57-eba76816f4bf",
          "status": "OK",
          "code": 200,
          "responseTime": 1164,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cba7152-88d1-42df-bae9-048ec7ea7be6",
        "cursor": {
          "ref": "ec25bd8f-8700-4bd9-b7db-24f897b849b8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bb9d06fc-7ac9-4d2c-b641-7198d4b24893"
        },
        "item": {
          "id": "3cba7152-88d1-42df-bae9-048ec7ea7be6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b2d3750a-6967-4c40-82c3-75e3b9120bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049d9da6-f2f4-488c-9a51-265fafc6bf7c",
        "cursor": {
          "ref": "18f8ef0c-d936-4627-b817-b366f7618cd1",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b38b6d59-2bef-4c06-bcca-66726efb736f"
        },
        "item": {
          "id": "049d9da6-f2f4-488c-9a51-265fafc6bf7c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d627dac6-1069-48bb-80a1-bd2531a854f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52f7f13-a80e-43f3-b36e-6616e345bef9",
        "cursor": {
          "ref": "177dadaa-1507-4409-9d2b-988debf6f9de",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "21f67025-f8ba-466a-afd8-86bbd645bca4"
        },
        "item": {
          "id": "b52f7f13-a80e-43f3-b36e-6616e345bef9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4edfd9ee-c022-4afa-b9f8-fd9aa8701966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28e6a6e-3353-4c4a-af98-6d4a5f5fa152",
        "cursor": {
          "ref": "f0f5d96b-2833-49d4-b781-b7b59dfaad13",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d3d10f1a-4989-44ed-ae92-84bc4b1b9773"
        },
        "item": {
          "id": "b28e6a6e-3353-4c4a-af98-6d4a5f5fa152",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2396dc7f-095d-41c8-b2b7-7f7835c60dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeca9e2-fa43-4ebc-b9fc-826d296c926a",
        "cursor": {
          "ref": "37922231-6d0d-4fda-a80d-3241ddbc0e4c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1e52f26b-1016-4cf4-9d92-8c7286f280cf"
        },
        "item": {
          "id": "6eeca9e2-fa43-4ebc-b9fc-826d296c926a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f99fd5ab-1b28-4d9b-8f15-469c8a735b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320a21b7-1cd9-41f6-bcce-020737ca8155",
        "cursor": {
          "ref": "902db860-0bf8-433f-9ae0-5e07c2194582",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e0754db2-d411-4ea4-9e7c-387dea85b65e"
        },
        "item": {
          "id": "320a21b7-1cd9-41f6-bcce-020737ca8155",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6fc2bcce-911c-4be6-80a4-ed032d5c3314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109995de-b04e-4251-8c28-fdb37bc6cecc",
        "cursor": {
          "ref": "7f2d1040-29b6-4491-b6d1-3fcbcb2305fb",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5b8ef0c5-b2db-45c2-82e7-2c3a36525afb"
        },
        "item": {
          "id": "109995de-b04e-4251-8c28-fdb37bc6cecc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "daf05e01-e0bd-4b14-beac-02a5297877a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79287dd7-647e-40ee-8a10-32fb3f590fbe",
        "cursor": {
          "ref": "9c2191c8-6d0c-47da-b08d-07c50cafc2d1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "44d59494-10bf-4d96-9adc-37cccb696923"
        },
        "item": {
          "id": "79287dd7-647e-40ee-8a10-32fb3f590fbe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53add135-0a3b-40dc-ae88-668c2936a31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c970ebd-e6d5-45f1-8736-171497c2745a",
        "cursor": {
          "ref": "2e500086-4638-44cc-8c10-163ae7f18108",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "56c3f52b-3da7-4e10-9032-f9d477f562ac"
        },
        "item": {
          "id": "6c970ebd-e6d5-45f1-8736-171497c2745a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "11f66dea-5cf8-4468-8538-3f320db1a210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734d19ad-9bcd-4c26-aaef-62f976547e37",
        "cursor": {
          "ref": "49a05b20-8421-47bc-9d0b-0bf61e2a29ad",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "38e1bb76-3b05-423c-8c48-593566aace60"
        },
        "item": {
          "id": "734d19ad-9bcd-4c26-aaef-62f976547e37",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d617f484-3395-4f87-8e3b-4a5f965fc7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ebc01a-a870-4a12-b017-18608215ac2a",
        "cursor": {
          "ref": "761689c4-1b6c-401f-bf9b-68d4060d0dfc",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f00a086b-dd1b-4471-963d-26a724c2329a"
        },
        "item": {
          "id": "42ebc01a-a870-4a12-b017-18608215ac2a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f9e58f44-80ce-4a44-9a34-4d2b506abe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab48d581-4310-429b-a36b-5c1f35bc0ac6",
        "cursor": {
          "ref": "30408103-154d-401c-bf79-5a6d258de7cf",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f3a694d1-77cd-4476-9621-af159d0c0982"
        },
        "item": {
          "id": "ab48d581-4310-429b-a36b-5c1f35bc0ac6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "34c4b793-677f-45f4-b719-93f4cbdb8ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0472e470-b7a9-467e-97f0-f8276a46b392",
        "cursor": {
          "ref": "db1e1064-ac00-4f55-a539-c4a7c0ca6745",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "39bfc9b1-e689-4880-b0e8-b394c1706107"
        },
        "item": {
          "id": "0472e470-b7a9-467e-97f0-f8276a46b392",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "02117e9a-1e57-41aa-bfc3-74f9a38b3cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656d951e-f2c1-4f0e-8fb1-60be5355f068",
        "cursor": {
          "ref": "631aa7d5-aa59-4b38-8967-b10f0d61984b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4be77598-64d5-4f90-9e0f-a1ba729b2bad"
        },
        "item": {
          "id": "656d951e-f2c1-4f0e-8fb1-60be5355f068",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa325f26-d494-4f0e-8da1-adfbc5559aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a14505-90c5-44ca-8aa4-d2a65e06695b",
        "cursor": {
          "ref": "c85e5a49-18e9-4e99-8c6b-a0c0b282cd39",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "225b3bb8-e846-4468-bbcc-cbf0e51f3c85"
        },
        "item": {
          "id": "95a14505-90c5-44ca-8aa4-d2a65e06695b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "78580fb7-5b0d-4e38-93c8-08f881940bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e4d9c-71f4-4f84-adb1-09510e343603",
        "cursor": {
          "ref": "2046237f-a32b-439f-b2a4-14c95f4e43b4",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "60a4cc7f-97b4-4722-b182-d0ee69507b4f"
        },
        "item": {
          "id": "af9e4d9c-71f4-4f84-adb1-09510e343603",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fbf6de6f-5908-4354-a29d-d1bc20760acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2808f982-356f-4221-a88c-b9ce1d6372eb",
        "cursor": {
          "ref": "2263c90e-fc5d-4fc5-a0aa-6c0a07a2c23b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "afc019ec-cf8e-4db9-80ad-e42390c3e01b"
        },
        "item": {
          "id": "2808f982-356f-4221-a88c-b9ce1d6372eb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5d99bff9-8129-4a16-830a-5aa229406578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403822b5-802c-4dab-be5d-a5fb062df2de",
        "cursor": {
          "ref": "ad665d71-2256-4671-ad30-f4d99324708c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "73299ce2-5039-40e4-9b50-df0467f08150"
        },
        "item": {
          "id": "403822b5-802c-4dab-be5d-a5fb062df2de",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "25e9353d-47f9-47b6-bdb3-6a6522251a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c85570-ab5c-4aa6-8857-b5b86f29b346",
        "cursor": {
          "ref": "24ca025c-d401-47a0-bbe1-0d47d1b08ee2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "75e21e93-d2f5-482c-b189-d2ab1b369598"
        },
        "item": {
          "id": "03c85570-ab5c-4aa6-8857-b5b86f29b346",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "27790143-3e84-4140-ba5e-0699c45603d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72be02ad-5e49-4151-baa3-cf10d5c1fce6",
        "cursor": {
          "ref": "0419aa25-0677-494a-a3f6-93645b5b825c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ec0b6a4d-4dce-4452-b6d4-d09c09835ddb"
        },
        "item": {
          "id": "72be02ad-5e49-4151-baa3-cf10d5c1fce6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "40f4a595-01ac-4f8c-9a0e-75640ba11523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472546a1-ce89-4673-9549-5775bc4b2400",
        "cursor": {
          "ref": "520e7b33-cd05-4c38-83bd-5af81a70284e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f603c64c-534b-4224-a744-3be1207c86f8"
        },
        "item": {
          "id": "472546a1-ce89-4673-9549-5775bc4b2400",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "32aeb302-42dc-4ebc-a5fb-96ffa055b889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c6732e-9461-4100-af1e-9eec6c4d70c2",
        "cursor": {
          "ref": "eda810cb-f8c1-4c22-9ecc-a119e8c85674",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8862ed03-9652-4bf1-a66e-4a341d797615"
        },
        "item": {
          "id": "e3c6732e-9461-4100-af1e-9eec6c4d70c2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "922a7623-6a66-4f1a-80c4-05a5bfa6e3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc70eb43-858f-4b3c-a72a-0a77234c8b2a",
        "cursor": {
          "ref": "c44f424e-2b48-454a-af2c-c84a2841bed0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "888e948e-997d-45a4-b981-95aaf22df29c"
        },
        "item": {
          "id": "bc70eb43-858f-4b3c-a72a-0a77234c8b2a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "397f1c34-4ba6-400a-a448-13cc3d9aba0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ff0e1d-9cb4-457f-96b8-3ca30e17bedd",
        "cursor": {
          "ref": "450698d4-0008-4c72-aa5a-b67235a5f4c0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3b27c120-88df-47d4-968d-943cd41b0157"
        },
        "item": {
          "id": "50ff0e1d-9cb4-457f-96b8-3ca30e17bedd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5bc6cfb2-cdd8-4396-9287-07fd9f9f29a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb979b7-fc09-478e-8860-132075fdabbd",
        "cursor": {
          "ref": "e5862872-966a-4a9a-bb95-866ea95e18de",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7a28fe49-625f-4649-b114-b1aa233ab3c8"
        },
        "item": {
          "id": "1eb979b7-fc09-478e-8860-132075fdabbd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "62150559-6127-4764-aaa5-64168eab0704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5036b2d3-953e-4448-9fe4-ee200ee64ba9",
        "cursor": {
          "ref": "dd0045b7-9f52-489e-af33-36f723784278",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7cedc918-16a4-4529-bc9f-b9e0adc0e3fb"
        },
        "item": {
          "id": "5036b2d3-953e-4448-9fe4-ee200ee64ba9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "58e5367d-1159-43ad-b914-a0a8f4e94bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84647ee2-0fdc-4512-a0df-9ce2165dddb3",
        "cursor": {
          "ref": "cb7e4ec3-b4b0-4c31-ba17-a0a829c487c2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ae36a076-ab77-4db5-a31f-dd4ddeaa5956"
        },
        "item": {
          "id": "84647ee2-0fdc-4512-a0df-9ce2165dddb3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b67f16d5-bc47-493c-be86-1e1a03e30f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab850f96-4e18-4aad-b084-e86181a46eeb",
        "cursor": {
          "ref": "6ebef8af-e7ac-4453-bf93-58bba19ccd74",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eedce20e-5220-4420-9a90-bd12ce3a2d55"
        },
        "item": {
          "id": "ab850f96-4e18-4aad-b084-e86181a46eeb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0d7505bf-2789-45d3-8516-e3efbd8c6409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98687344-8017-4e7f-96d5-6397b9ebd0de",
        "cursor": {
          "ref": "bb9e15e0-aa03-4b65-aa14-c9ecfb0d81ad",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "321e9a87-b874-4fa4-ab1a-00bce9561b39"
        },
        "item": {
          "id": "98687344-8017-4e7f-96d5-6397b9ebd0de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "97be8e3e-6a7e-4f82-ab7c-cae190a67e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ab4283-7170-4b80-a17f-0b6e5c959036",
        "cursor": {
          "ref": "de70b87a-ee1e-40e8-8d81-23c7e4f1e899",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d110c292-e80c-4710-8c54-2af97b065768"
        },
        "item": {
          "id": "f7ab4283-7170-4b80-a17f-0b6e5c959036",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e9c35bc9-a7d4-49a1-9846-4a4f898641ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6ed5b8-bf69-42c2-8b8b-944be7054873",
        "cursor": {
          "ref": "4846a680-2301-49fa-993e-181888e18b31",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9592ca19-cace-4a4f-b38c-f42f336adb14"
        },
        "item": {
          "id": "aa6ed5b8-bf69-42c2-8b8b-944be7054873",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5f68b667-bc67-4f6e-8571-d4a72f984f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e8f30-70af-439f-8995-faca91cb1303",
        "cursor": {
          "ref": "6ae26abb-1bd3-4ea2-9279-5d569533623a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a08de5bc-3761-41b2-80ee-69caa19f7e43"
        },
        "item": {
          "id": "d41e8f30-70af-439f-8995-faca91cb1303",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c7308695-db4c-48d4-bc7b-14bab6596236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36e1781-1b3a-419d-93d1-55effd25799d",
        "cursor": {
          "ref": "953313ae-a8ea-4ac5-bed0-d030da72bca6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c44cdb09-0acd-43ab-9278-bf8f763da9d3"
        },
        "item": {
          "id": "b36e1781-1b3a-419d-93d1-55effd25799d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8035ae24-3641-405c-acb0-5017842255a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba6a53-7c64-48d1-8153-346349677119",
        "cursor": {
          "ref": "1f886e74-45d1-4e18-813e-b4148a5edeab",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b09a8402-b312-46f7-b176-55553e7a8d2d"
        },
        "item": {
          "id": "21ba6a53-7c64-48d1-8153-346349677119",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c373b4ca-8b05-4e84-8197-bc2940e9ca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af0b543-6985-4a6e-b6e4-34df3c6b8973",
        "cursor": {
          "ref": "d7a37881-030a-4983-9c13-1523c24c6e3b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "09ea7776-ac9c-4ba2-8886-231eb25f30c2"
        },
        "item": {
          "id": "4af0b543-6985-4a6e-b6e4-34df3c6b8973",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e4822bfe-53da-4d7c-9c29-af0de80f6a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9bfc5f-ccc1-467c-bba0-d84c01315aff",
        "cursor": {
          "ref": "b2db3e89-7ce7-4c76-964e-a976877dc2ed",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c47a7a66-a43a-418d-97b3-2dde25f2c35b"
        },
        "item": {
          "id": "bb9bfc5f-ccc1-467c-bba0-d84c01315aff",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "61c55eac-a769-43c9-ab2f-14bee8e85a8b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022ae060-3a99-4cac-9133-adc878f8abc8",
        "cursor": {
          "ref": "2637937d-98a6-4844-b7e6-5ff745610809",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c5fe8d5c-fe54-49c2-bc26-203ccd6a0658"
        },
        "item": {
          "id": "022ae060-3a99-4cac-9133-adc878f8abc8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f55b2bab-6045-4432-8594-f74c4d5c4a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f52ba2d-5ac8-4636-9709-eca9fcf8c17f",
        "cursor": {
          "ref": "7515a689-d643-4e48-a212-2b9df6446af9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "17c188d2-bdc8-4047-a847-8813cf55f076"
        },
        "item": {
          "id": "1f52ba2d-5ac8-4636-9709-eca9fcf8c17f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3595783a-c9f2-4e9e-86ad-6f8726be0b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934d1564-0cb9-4d34-aba1-f72f57ebdf95",
        "cursor": {
          "ref": "1ae05c20-4b68-4715-9d3a-5681b85ba2b3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2bf2d564-b91c-4a4e-9543-99fd83ab36f0"
        },
        "item": {
          "id": "934d1564-0cb9-4d34-aba1-f72f57ebdf95",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1f7c4b55-4243-412d-b399-0ac37275ca93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8430b0-afd7-4211-8331-6b8f47c3bf1f",
        "cursor": {
          "ref": "c2b6c69b-d7a4-448f-813b-fc09c3abee35",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5b47ceaa-b466-4006-bac1-2920a54a173d"
        },
        "item": {
          "id": "4c8430b0-afd7-4211-8331-6b8f47c3bf1f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "55b7103b-0d91-4d52-bf15-626c682d838b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47df62d0-3c7c-4c8e-9d2f-e09e14cd2ad0",
        "cursor": {
          "ref": "7d6ac35e-942c-454d-bad1-5579c80c6ff6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "48236690-b3ee-4e58-a21f-a47222c36fc5"
        },
        "item": {
          "id": "47df62d0-3c7c-4c8e-9d2f-e09e14cd2ad0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d5e2a7a9-9607-45b4-b27e-662ab0212f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7ddcd4-0790-4428-9c03-79bca401405c",
        "cursor": {
          "ref": "64f2e076-5849-401d-bc39-a5b1846b0ffe",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5e47e2fa-634d-41f2-bb0f-908b4467aaf2"
        },
        "item": {
          "id": "4d7ddcd4-0790-4428-9c03-79bca401405c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8f5409bd-8dda-43a8-9343-be21ed2de6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc578ff-3dd2-4c10-a52c-15b4cec7f397",
        "cursor": {
          "ref": "47911dc4-135a-478d-a736-49f882e1bffc",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "532c5c86-4e58-4b0b-907a-ef11b6fc3f8d"
        },
        "item": {
          "id": "bfc578ff-3dd2-4c10-a52c-15b4cec7f397",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b65322a6-6ba9-4a0e-a819-26621731aa77",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 571,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a733ee-6183-4cac-976c-eb8b74d246b3",
        "cursor": {
          "ref": "363afb1d-38b2-4ada-9c1a-48c0dbcf5787",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ad4d5af-3c1e-461f-ba02-735fe17cdf17"
        },
        "item": {
          "id": "b5a733ee-6183-4cac-976c-eb8b74d246b3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5bc89da5-abc9-4c45-8b72-8484272be260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b238698a-dc5d-4e04-8065-9823ae6f99cb",
        "cursor": {
          "ref": "e1f10a4e-1b9b-4b87-8c60-fc487b624efe",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "78e34364-4533-4442-ba77-f5bebe393923"
        },
        "item": {
          "id": "b238698a-dc5d-4e04-8065-9823ae6f99cb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dca1534d-d292-4f54-b95d-4d055b586aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a737ef02-24e8-4d00-b569-58e1c6dbfe02",
        "cursor": {
          "ref": "238692c7-15a2-4517-8664-13deb51e3c25",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4ce034a5-0aa4-4384-8ada-f8ac0921640c"
        },
        "item": {
          "id": "a737ef02-24e8-4d00-b569-58e1c6dbfe02",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5d05ed4f-d72b-4f16-9971-63b70abfa73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9badfa-3a0a-4205-a475-d15acf291d57",
        "cursor": {
          "ref": "a1275753-0b54-43c5-9406-bb53246dd44a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9dea4de-9626-4539-b372-33964e8f7afa"
        },
        "item": {
          "id": "7f9badfa-3a0a-4205-a475-d15acf291d57",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "827f0ff4-2873-421a-afb6-f062aa23dbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0222b318-5f9b-41c3-b287-ad768a3a99c0",
        "cursor": {
          "ref": "acd790e8-8c54-409b-a96d-6a9931f5d00c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2890d8f7-3d8b-4107-8811-3e6dc049f56a"
        },
        "item": {
          "id": "0222b318-5f9b-41c3-b287-ad768a3a99c0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c9f3486-eb9b-4215-9f79-34d000351ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438da877-f48b-448a-99a6-cdcb8fbfb579",
        "cursor": {
          "ref": "637bad13-a817-418d-ad5d-b5f98076a1c7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6ac2dadd-0c04-40b5-b829-8bcf2c90d84c"
        },
        "item": {
          "id": "438da877-f48b-448a-99a6-cdcb8fbfb579",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6a7c3015-1cda-45e3-a397-04de2111c099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5426cfd8-cb18-4e27-9df0-89ef2df86beb",
        "cursor": {
          "ref": "714ca82b-9fe8-4a69-8293-27497ad35d16",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "81cf6351-1ba2-46f2-a173-1feb44b2c3ce"
        },
        "item": {
          "id": "5426cfd8-cb18-4e27-9df0-89ef2df86beb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0bc18097-16f8-44cc-8c94-f17a06cb51d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6327cb-7c8b-4fd8-867e-620f2b26de30",
        "cursor": {
          "ref": "ebe842b9-95fd-4aa7-a29e-ca73868f15c9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "157b4dc3-f075-4579-b696-424a6a5240a3"
        },
        "item": {
          "id": "bc6327cb-7c8b-4fd8-867e-620f2b26de30",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "098392bc-c56d-4242-9823-693864ddb432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a588e4de-a23b-4dd5-93d4-032a108274ce",
        "cursor": {
          "ref": "c868fa4a-1ade-493a-81f4-a40b7e5002ef",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "db93b253-8bac-4967-8d43-5cf48cdb0f49"
        },
        "item": {
          "id": "a588e4de-a23b-4dd5-93d4-032a108274ce",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5a184b24-029b-4bbf-9d13-0b51402d68cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ece9c27-e6c5-4661-9871-f4023cc9f11e",
        "cursor": {
          "ref": "6f4fdce0-650f-47ed-9711-6cad98d98b25",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0d403898-325f-46a6-955e-1ea44183d2a4"
        },
        "item": {
          "id": "9ece9c27-e6c5-4661-9871-f4023cc9f11e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "47f1f076-9f1c-4303-920b-b71df916b255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd72493b-c3c4-4a8a-919a-11ed17650b9f",
        "cursor": {
          "ref": "3659e570-3a75-45a1-8b4e-6e3704d56d7c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bf8d9b93-e115-4e3a-b404-a2ba8fd4eabe"
        },
        "item": {
          "id": "cd72493b-c3c4-4a8a-919a-11ed17650b9f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ad58b989-e7e9-466b-a614-40f8f200692b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecdf579-c404-4e01-b353-06f0110d9cf7",
        "cursor": {
          "ref": "15c1dd5c-1cc3-409c-bef7-8dd074900ffc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "acc57473-89f1-45d3-b095-e754dcfaf88b"
        },
        "item": {
          "id": "2ecdf579-c404-4e01-b353-06f0110d9cf7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "92604912-22c0-462c-99c6-0dde0566f49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9d0a8d-bbc0-4623-9738-396fd8cbbcc1",
        "cursor": {
          "ref": "1e07a269-076a-4463-b6ca-cc6592194a65",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7b3ca295-df86-45ae-83c7-3353c2a5cc9e"
        },
        "item": {
          "id": "7a9d0a8d-bbc0-4623-9738-396fd8cbbcc1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "21c6f76d-a349-41a2-9842-0f4f3d318c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a20e4cc-83e1-4ac5-962e-9dbe74685894",
        "cursor": {
          "ref": "d757bf3d-51c0-4833-a785-9709e22e8487",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cf3863a0-31a0-477c-8d8c-73fa7e4fc977"
        },
        "item": {
          "id": "8a20e4cc-83e1-4ac5-962e-9dbe74685894",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "296efecd-65bf-4d37-9ac7-9dffbf929aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba71bae8-4d99-47e9-898e-783ee081de6c",
        "cursor": {
          "ref": "ed7c20a7-9a0b-4e7d-a56f-3229feaf28d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d88e873b-b70e-42e7-9af1-e3f0f76b9a73"
        },
        "item": {
          "id": "ba71bae8-4d99-47e9-898e-783ee081de6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "95eb3777-d610-46c6-a836-a453bdde6f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecc9a39-44a3-416d-ba20-d032a8179749",
        "cursor": {
          "ref": "3844fb47-2315-4327-817f-2f04691478dd",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "999fee79-0012-406a-a7c1-4032513fca96"
        },
        "item": {
          "id": "7ecc9a39-44a3-416d-ba20-d032a8179749",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a080eb1e-58fc-4e88-9b7f-78297b0ceaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bffff8-e6c9-4196-a5e1-ba854eb9eee0",
        "cursor": {
          "ref": "bccb47c5-8060-4a1e-9bfa-35310045861a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "505bf635-628e-457a-8bc6-5548a965cb0a"
        },
        "item": {
          "id": "07bffff8-e6c9-4196-a5e1-ba854eb9eee0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "28c452e4-1560-4a8c-95c9-c53d0ad2e855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b123ff0c-31fd-4ba5-a088-9e7d1a2fa169",
        "cursor": {
          "ref": "803e9c08-d09b-4520-93d4-35ca6eb46a09",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2ec86f2e-d478-4816-8d86-b177afeede7f"
        },
        "item": {
          "id": "b123ff0c-31fd-4ba5-a088-9e7d1a2fa169",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e8e700c6-4869-4db6-9f22-72bac0ca3145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36c562e-9479-4a04-b2e9-e0b995fbb203",
        "cursor": {
          "ref": "927787bc-aaef-404d-914c-335c03213610",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6b5c0394-bb6c-4831-832a-011512d07320"
        },
        "item": {
          "id": "f36c562e-9479-4a04-b2e9-e0b995fbb203",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "120e2274-5b60-4d2c-909f-8b73f18f19bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87e440b-1e28-42d8-b035-83e8e930f108",
        "cursor": {
          "ref": "dfaf9c60-0e46-4c40-9529-236c299d929a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d0aa0446-b0c0-4ba6-9f1f-682320168b59"
        },
        "item": {
          "id": "a87e440b-1e28-42d8-b035-83e8e930f108",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1ab85252-2fd5-4ab2-ab3b-56d4b7e32ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9856d9-5fc4-4af0-9c3e-f4214ae91bf2",
        "cursor": {
          "ref": "96a3050c-e0a3-452b-8590-341e911023a8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ca39421a-2c8c-4671-b855-2eec3a58f8e7"
        },
        "item": {
          "id": "8b9856d9-5fc4-4af0-9c3e-f4214ae91bf2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab92665f-cf8e-4a45-8b01-7c8d4cfbe353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3e04b-6340-4758-83bd-f69a29986b12",
        "cursor": {
          "ref": "e28b1237-3d53-4adf-856f-e7ff661c393e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e01e18a2-5a9a-44e3-a5ff-a75e1f549a97"
        },
        "item": {
          "id": "2ff3e04b-6340-4758-83bd-f69a29986b12",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "88a01e92-05b3-4487-9b55-79a6ee6bf44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e3f748-0d7f-4781-9155-44cd3b420ea6",
        "cursor": {
          "ref": "7bef4463-9cd8-4828-9638-cca7a8556e33",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4e9d634d-7f0c-49ec-9d43-50f02217b046"
        },
        "item": {
          "id": "22e3f748-0d7f-4781-9155-44cd3b420ea6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1c068b53-a49f-400c-a858-d792c01d2988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4170f476-cf0f-4e2d-9089-14ad9316c05e",
        "cursor": {
          "ref": "cf54839f-e23e-4e7a-b090-aa3e853f2b72",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3a46476a-46ba-45a7-a781-25f96b9793af"
        },
        "item": {
          "id": "4170f476-cf0f-4e2d-9089-14ad9316c05e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8693a892-89aa-41f2-b8f9-879c6742b431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be556b9c-b1c9-4ebb-b808-444bf8ff73ee",
        "cursor": {
          "ref": "83dbbaf6-82be-41d4-a9ab-73f5436750d3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8e9cf1ed-8bbb-4264-8db3-959feef87999"
        },
        "item": {
          "id": "be556b9c-b1c9-4ebb-b808-444bf8ff73ee",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "01d7d0b9-2c7f-4c51-ab2b-a838c47a3e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f197c5-f8a1-49c3-b176-2250d3815ca0",
        "cursor": {
          "ref": "3cc4ec6d-a0a7-4b29-9492-5efadb919da5",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3c637d57-00b9-4600-b92c-bbc38ba55189"
        },
        "item": {
          "id": "b0f197c5-f8a1-49c3-b176-2250d3815ca0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bdff8dec-1ce1-43d8-b31b-aea1580e9b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b11153-3ca8-4195-8609-cdbda031ced5",
        "cursor": {
          "ref": "58727ec2-87ff-4908-b20c-2fbf80709102",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "57e82b88-bc1e-47d4-8c89-0c352ddd82c3"
        },
        "item": {
          "id": "03b11153-3ca8-4195-8609-cdbda031ced5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a301b8e6-9fc6-47d4-9319-b590e9517faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4d5c4a-90f5-4692-a684-3ac86253976e",
        "cursor": {
          "ref": "30a4d8c9-b2b0-4676-8904-c1fa057854d5",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f233a2cb-5ed0-4cbe-9786-ab0a6ef67cdc"
        },
        "item": {
          "id": "ed4d5c4a-90f5-4692-a684-3ac86253976e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c813d41c-80a5-4442-9cd7-5cbeceeb0480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a69a05-f5f0-4997-884f-477e0a8a1398",
        "cursor": {
          "ref": "a64ef3b7-c95a-436d-bf29-d0facd9a9fa9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d86e4e17-26ae-4cda-9471-bc2b8c2b43dc"
        },
        "item": {
          "id": "43a69a05-f5f0-4997-884f-477e0a8a1398",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee023868-7e30-4435-a754-1dcb31e6e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a79d6cb-9f54-4b19-b2c0-8a7702d15493",
        "cursor": {
          "ref": "f500fd2d-fd2c-4273-8ab8-7a02bf5f05be",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0691b835-f15c-4eb8-bbb9-f2d34d7a83b9"
        },
        "item": {
          "id": "1a79d6cb-9f54-4b19-b2c0-8a7702d15493",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "705c4423-392c-4994-845d-f5f6b36b553f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a656c4-68f1-4076-97eb-7103503f7f63",
        "cursor": {
          "ref": "6fea8dcf-3881-498f-a873-d0ac96d896b6",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "08f92b47-b275-40f2-a741-a24126ac3701"
        },
        "item": {
          "id": "b3a656c4-68f1-4076-97eb-7103503f7f63",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "df2f2d11-d850-488a-94c4-19375babe896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7160ecd-de73-407a-9345-8189793b632f",
        "cursor": {
          "ref": "81ec0284-4643-4061-b916-07796ab742b3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2aeeef40-f2cb-4ec4-8b2b-0f6927c4a24a"
        },
        "item": {
          "id": "b7160ecd-de73-407a-9345-8189793b632f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bff2a592-caf8-4943-bcdd-b86ed1ced801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac14dfcb-e48f-4d32-bb9a-699a70dda497",
        "cursor": {
          "ref": "c6395b75-3816-41df-b42a-23f0975bb497",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd77fbe7-8b84-40d7-b7fa-74c1dfc7bceb"
        },
        "item": {
          "id": "ac14dfcb-e48f-4d32-bb9a-699a70dda497",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "acd2a0a0-eddd-4d55-8c6e-666f50a5b064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5080e68-9655-4141-afd9-377f7268180a",
        "cursor": {
          "ref": "4dbdb75c-98a0-4b6e-ac54-0de841ef4cf5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b60ddc3-7337-4870-8e52-8a3595e29b25"
        },
        "item": {
          "id": "c5080e68-9655-4141-afd9-377f7268180a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dc8f8515-0ce2-4a94-959b-24d74a133ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf33792-2871-4345-bc3b-a3ed13b73dba",
        "cursor": {
          "ref": "892afbf2-8c4e-43e3-bd72-f2808c80e11b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3844474a-d1fd-4c46-ae61-701a380e1caf"
        },
        "item": {
          "id": "3bf33792-2871-4345-bc3b-a3ed13b73dba",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5088ccd4-7bb9-41e2-89a7-420d33f66965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3b2054-a9fc-4ddf-adf5-9e9959b4bd48",
        "cursor": {
          "ref": "668f7561-6308-4529-a2e9-9e0d99175c42",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f7e15b35-02b2-428a-b7d4-42e09502d2de"
        },
        "item": {
          "id": "7d3b2054-a9fc-4ddf-adf5-9e9959b4bd48",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c8396199-0720-444f-8cf5-08db07d5b857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561d12bd-7bfe-4460-924e-7574aa1c403a",
        "cursor": {
          "ref": "d31b5a65-01fd-4fac-a2e5-eadf8f44376b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3343d437-ddef-4230-b7a4-db420cafcb0a"
        },
        "item": {
          "id": "561d12bd-7bfe-4460-924e-7574aa1c403a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "23783f1e-082d-4a8a-9bf7-6eb0a686f993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c79c75-76de-4918-b985-073c17833862",
        "cursor": {
          "ref": "8bb90972-ecdd-49f6-bff2-9b44cad523ef",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1b506961-f9e3-42c0-b158-3048838372f9"
        },
        "item": {
          "id": "06c79c75-76de-4918-b985-073c17833862",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "99f2ce75-be86-44d9-b3d0-24519cac9b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dca641-d76c-4d82-9628-dfe149822326",
        "cursor": {
          "ref": "344747f6-dffd-4e96-be72-fc0909e967cc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8e32acf6-e8ff-44a1-9f02-3a2602993fe3"
        },
        "item": {
          "id": "98dca641-d76c-4d82-9628-dfe149822326",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "60050c6d-9b4e-42f1-b4b8-399af997ba54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa0f046-9af4-4527-b4c5-d3d40af0954a",
        "cursor": {
          "ref": "58bba032-3060-4c76-99fc-749b291fd9f7",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "27ec0ed1-30d5-4704-9c69-7804dc835fa8"
        },
        "item": {
          "id": "aaa0f046-9af4-4527-b4c5-d3d40af0954a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "777576fe-8f87-4b1b-bbf9-4fd58a38c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c0431a-aec6-4c60-ad2e-0ee103a18f8a",
        "cursor": {
          "ref": "489a6e68-701a-474b-80de-7b6e40bbe4a9",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50ee3c7f-7794-4920-a3dd-df0c26bb3bf4"
        },
        "item": {
          "id": "04c0431a-aec6-4c60-ad2e-0ee103a18f8a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b601a735-9f74-4aed-86f5-214983fd7cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21731a76-47b9-413b-baee-9dc22e9fc3c7",
        "cursor": {
          "ref": "c047f842-76cf-4f71-96fd-3d3c7bd37845",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2fec70f3-6828-4a24-af80-50aec858c7eb"
        },
        "item": {
          "id": "21731a76-47b9-413b-baee-9dc22e9fc3c7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a8fdd58c-debf-4c59-a066-a0fb17f72c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072c7a27-e7e5-41a6-a074-49c69543134e",
        "cursor": {
          "ref": "e7ab41e1-b88a-44aa-ab69-5beced979f17",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8c97f43b-2f71-4157-b106-d58201c5a7cd"
        },
        "item": {
          "id": "072c7a27-e7e5-41a6-a074-49c69543134e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6a24eaff-8a2b-4e5b-a758-1d42d17705a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e90f40-f6d0-4cd2-b3cf-3194ba871deb",
        "cursor": {
          "ref": "baf40e68-8e5b-4070-a447-f736be6abd63",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "00d97816-796f-463c-b337-846f67ec5c5c"
        },
        "item": {
          "id": "84e90f40-f6d0-4cd2-b3cf-3194ba871deb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d2a4ff6c-b64d-422b-a737-c6b1add687f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1adef7-31ea-4fc1-a701-55bd6591142a",
        "cursor": {
          "ref": "fc1af8ea-2006-4b18-a3b6-1e0d4c962b64",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "83f596d6-1e98-41e6-a135-e39ec9fa1884"
        },
        "item": {
          "id": "6c1adef7-31ea-4fc1-a701-55bd6591142a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "465a72ca-ec7c-478d-b8ba-1f060dbff22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7fac64-c7eb-4977-8ab3-9581a50fa6f4",
        "cursor": {
          "ref": "b45573d8-5624-49cd-838b-87687bd0c7b5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "989951ed-3793-4bd9-8735-16ef265dc709"
        },
        "item": {
          "id": "ec7fac64-c7eb-4977-8ab3-9581a50fa6f4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "862e8c50-5282-4850-9b26-3633d40ace18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e03563-8070-4598-bdc1-e47a631de35e",
        "cursor": {
          "ref": "2fcec28c-3b6b-4b49-9678-b4dc44af565a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "00840c48-4d01-42d7-9496-ebb018e27df0"
        },
        "item": {
          "id": "19e03563-8070-4598-bdc1-e47a631de35e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "32bb44bb-e004-4782-9c86-86ef753f54e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce6da1-06a1-4ef0-a195-ea9e51570336",
        "cursor": {
          "ref": "cfecccc5-6b5f-4864-8eed-df03bb3efb89",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6725eba7-1484-4c81-9379-a99af61e2970"
        },
        "item": {
          "id": "c4ce6da1-06a1-4ef0-a195-ea9e51570336",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98129ba1-8a59-4600-ba71-8b7970a44f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f05bbd-5428-4f77-b1e4-b6b744c59bf5",
        "cursor": {
          "ref": "9f4db58a-7d5d-4305-95a3-d70c6c115b9e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "78231fd8-937a-4c9a-90a1-7d6167261248"
        },
        "item": {
          "id": "f9f05bbd-5428-4f77-b1e4-b6b744c59bf5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "26a397fd-8cc4-410e-99b0-07762ad77682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c31a5ba-3a2d-4fa1-a6ef-af87f747f3b2",
        "cursor": {
          "ref": "c1d8dc6b-b35d-4e55-be53-0bb9155bd22a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f93705d0-4195-4412-9319-975e0594fcac"
        },
        "item": {
          "id": "0c31a5ba-3a2d-4fa1-a6ef-af87f747f3b2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e1297194-5621-4158-bd66-9690a2ff5da2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0205cf-817f-4f49-9833-58e0c2f7e5c1",
        "cursor": {
          "ref": "b734e067-8728-4e8d-9789-53c29ee717ef",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "33858ef4-586f-4f25-aa59-30879cd47159"
        },
        "item": {
          "id": "ae0205cf-817f-4f49-9833-58e0c2f7e5c1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "72d46d97-3f7e-47ad-9583-ca97ffdb2766",
          "status": "Created",
          "code": 201,
          "responseTime": 6669,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5b3972-bf27-4f1e-ba12-77c10c8ad3d2",
        "cursor": {
          "ref": "868d5caf-7bb4-4eb8-8d17-1c03afb009e3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a7f852d9-3f92-4ea3-9db1-a8001754e8e5"
        },
        "item": {
          "id": "4d5b3972-bf27-4f1e-ba12-77c10c8ad3d2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "46a1b03b-c0b0-4a51-903a-cc1f13bc3635",
          "status": "Created",
          "code": 201,
          "responseTime": 5973,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88fa1ab-35c7-4357-8875-81e0f9805161",
        "cursor": {
          "ref": "f02ef2dd-cb80-4c30-b738-d17118a4634c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5ecbedca-5b21-42cb-a974-76f890461730"
        },
        "item": {
          "id": "d88fa1ab-35c7-4357-8875-81e0f9805161",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cc8f57a6-1c55-4741-93bb-67ca5558c674",
          "status": "Created",
          "code": 201,
          "responseTime": 6534,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92d5bff-3683-44f8-9e5e-5dd0e4cd9ef4",
        "cursor": {
          "ref": "063c754a-9732-464d-b027-164f3a01ec6d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4b6e1652-1ba5-4896-97e7-ecae727715c5"
        },
        "item": {
          "id": "e92d5bff-3683-44f8-9e5e-5dd0e4cd9ef4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "25ad9424-1cd5-40f9-997f-55e3e2a3fd8a",
          "status": "Created",
          "code": 201,
          "responseTime": 5946,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a355fd78-2639-4c7a-a684-afbadaae64a9",
        "cursor": {
          "ref": "c2b04729-87e4-4dbc-b66c-f17cebfa804a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3f02cddc-382e-400e-8e1b-24073dd1467d"
        },
        "item": {
          "id": "a355fd78-2639-4c7a-a684-afbadaae64a9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "63bd79bb-0031-4244-93f0-696bcc84d40c",
          "status": "Created",
          "code": 201,
          "responseTime": 6004,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a045e4f5-fdc4-47f6-ae90-83837f293f9a",
        "cursor": {
          "ref": "e20d2ce9-469a-4a57-85ac-5f3fceaf5844",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "df835df6-cfce-4438-b3c9-b7b6bea341ca"
        },
        "item": {
          "id": "a045e4f5-fdc4-47f6-ae90-83837f293f9a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "28c26146-3297-4f6b-ba69-f03782842910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "55bc2bf4-1b1a-4064-88db-d47a6aba414a",
        "cursor": {
          "ref": "43c90482-5f89-423d-85c7-08eb3536a415",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b33cf642-ede5-4f4f-8cff-52086388fc09"
        },
        "item": {
          "id": "55bc2bf4-1b1a-4064-88db-d47a6aba414a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4210a87b-a88e-4384-b16f-721bf47410f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8e29a1-eebc-4dff-be48-56512d640ade",
        "cursor": {
          "ref": "af6d7977-4cfc-450b-bd8d-4a0e172b7dc0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "66d82765-c387-49fc-bccf-97acb9408055"
        },
        "item": {
          "id": "3a8e29a1-eebc-4dff-be48-56512d640ade",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "839ef0f2-eff0-4d45-b74f-365bd5500e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2815836-c0b2-4dce-9bd7-8d4bb99a6ceb",
        "cursor": {
          "ref": "948de990-0fd3-47e9-ae2e-183941f1d931",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c5f5343-362e-4602-8e87-bb118730d780"
        },
        "item": {
          "id": "e2815836-c0b2-4dce-9bd7-8d4bb99a6ceb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "900f1ee9-b3ed-48c4-a350-8551154f9013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9399d9-5ce5-40ee-9b07-1fa2dadbb3ff",
        "cursor": {
          "ref": "e0e74fa8-7408-4333-aca8-c75512cd82f2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2553e0ac-dead-485f-91b8-0ea909b00f74"
        },
        "item": {
          "id": "2d9399d9-5ce5-40ee-9b07-1fa2dadbb3ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e3a57f9-946f-4007-acb5-8d48ee523e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee70ac9d-03fb-47f5-8383-ae47eec8405f",
        "cursor": {
          "ref": "df4db0d3-6b9b-44c6-a2e7-ce6142c3d48c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d33697e7-632d-4b39-b384-fa9f36b0af76"
        },
        "item": {
          "id": "ee70ac9d-03fb-47f5-8383-ae47eec8405f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "288cc531-3b09-4c0f-9459-c9ec031506f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ea98f8-e3c9-4959-bea8-ce2394ddfd4b",
        "cursor": {
          "ref": "9a367f0c-8087-4443-a7aa-db685a80d34e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "86967015-f04c-4c14-a963-00f595de6069"
        },
        "item": {
          "id": "90ea98f8-e3c9-4959-bea8-ce2394ddfd4b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc07450e-1b4d-481f-b0df-61718a1692d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a4e706-da96-4bf2-83c1-3063b3fdd9a3",
        "cursor": {
          "ref": "e92b20cf-95c7-4892-90f7-79e2a0c02940",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e3ce016e-37af-4d82-bf35-8d157882bb66"
        },
        "item": {
          "id": "e1a4e706-da96-4bf2-83c1-3063b3fdd9a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "99c285f2-2313-4a56-a5f1-330534e0c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43c694e-600a-4ffd-83b7-19400675999c",
        "cursor": {
          "ref": "bf0d8dad-748e-4a92-bd2e-28f9b85e1612",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "68dd914f-8e58-47f1-a010-19ac995edba4"
        },
        "item": {
          "id": "d43c694e-600a-4ffd-83b7-19400675999c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cfdc3d36-59ee-4985-9726-e39b1496f0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1812a90d-39eb-4594-8439-414da05b8a05",
        "cursor": {
          "ref": "22d08d5a-4c23-4e4b-a1cc-e0e732f38a16",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f619d532-1e3a-4273-9c7a-a3e9c9acc9e2"
        },
        "item": {
          "id": "1812a90d-39eb-4594-8439-414da05b8a05",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0edc94ad-9ce8-4374-b16f-66004aec0b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5107d0a-f024-4998-b0fb-208d735a2658",
        "cursor": {
          "ref": "1d6dc571-c62d-450f-b988-fcf164cc3abc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3e92bf05-1633-4df7-8449-3df810986082"
        },
        "item": {
          "id": "f5107d0a-f024-4998-b0fb-208d735a2658",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad82db06-240a-4a07-90a9-ce34b115e560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8163b6d0-b112-4c06-8605-0010b68ec919",
        "cursor": {
          "ref": "af4f70e0-4334-40c0-be14-05b39ed98216",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0192d985-807b-40a3-9db7-f278f3643bcf"
        },
        "item": {
          "id": "8163b6d0-b112-4c06-8605-0010b68ec919",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "59fc6d58-df1a-48ad-8587-a9f98b5d1e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77201ad-f81e-45c3-99fe-6ba13a266f69",
        "cursor": {
          "ref": "4db72f78-e691-4026-89ce-25ac4de83eb3",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0222b326-5dc8-4fa6-a9f2-844700c9d12d"
        },
        "item": {
          "id": "b77201ad-f81e-45c3-99fe-6ba13a266f69",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "63610269-b947-4f4d-ab32-b57ec8d92c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c45cb3-dfa6-4983-91bd-7d72eec88a9e",
        "cursor": {
          "ref": "1e5dd762-6128-4c5e-85cf-fdfdff0987c6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4173b790-5bff-4caa-b46f-d86579bac1bd"
        },
        "item": {
          "id": "51c45cb3-dfa6-4983-91bd-7d72eec88a9e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "621e10b8-90f7-4d57-a75f-14e602a14d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c311ffb-7069-4af7-bf4b-0f08984af03b",
        "cursor": {
          "ref": "c122011c-cfad-4005-950a-450ed624773f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "856451fb-2d9c-4bdc-ac40-714faf0d25cd"
        },
        "item": {
          "id": "0c311ffb-7069-4af7-bf4b-0f08984af03b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c994465a-b2c2-491f-b92e-13dbdd17a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b843b4cc-b048-4d8a-a88a-502b04457733",
        "cursor": {
          "ref": "f61b3499-9b2d-4d0f-bee0-40949a577347",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c42ba479-688a-405e-846d-2950a0501228"
        },
        "item": {
          "id": "b843b4cc-b048-4d8a-a88a-502b04457733",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "665a462d-faa5-4359-9334-5ff6ead23a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd93bf80-9d3b-4693-bfb8-59ce49c658e7",
        "cursor": {
          "ref": "1d5f1d04-dc20-4c67-81a0-450111397605",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ebf9db91-1e30-48e9-91f0-adb88e9a0f81"
        },
        "item": {
          "id": "cd93bf80-9d3b-4693-bfb8-59ce49c658e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "817c8477-0214-465e-a62d-e9b536a492bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0962dcd-537e-41d9-83c3-5d9040236745",
        "cursor": {
          "ref": "42092c3e-1417-44c8-a07d-5a78a6abe356",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "62568f1a-950b-4fba-ae9c-a8cfc58f9901"
        },
        "item": {
          "id": "d0962dcd-537e-41d9-83c3-5d9040236745",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "64d7ff1f-df17-413e-a5d1-88397e1bac94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938bf0e5-9158-4bdb-89a8-4498b7ac1a7e",
        "cursor": {
          "ref": "52ed3c40-ea9a-4e3b-8c67-20bc0e2b4eb1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ef4f27bc-d4a0-48f6-b4f4-3bf8dbed1c6e"
        },
        "item": {
          "id": "938bf0e5-9158-4bdb-89a8-4498b7ac1a7e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6688ee31-1814-46e8-bd99-7c732626df86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57c5c58-aee8-43f6-bb6b-5c741fb846f9",
        "cursor": {
          "ref": "e27c361a-9d1d-4a93-a485-c8363d0a6fbe",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6554d1b2-f702-4823-ad45-9469edf5edb0"
        },
        "item": {
          "id": "b57c5c58-aee8-43f6-bb6b-5c741fb846f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ae5425a9-2780-4a26-b23e-309f8d366736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c8a88-77ca-4996-b51a-b6d182944696",
        "cursor": {
          "ref": "fafac522-3f39-4eca-954b-2d98bcea37e1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60a79fa4-fe3c-46dc-8a21-041336b9b9fa"
        },
        "item": {
          "id": "bf6c8a88-77ca-4996-b51a-b6d182944696",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "34538150-8540-4881-95dc-b4d254e4bac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504f6270-8cb5-41ba-9abd-ed090e5f4f91",
        "cursor": {
          "ref": "4d95987d-3b0d-48e8-ac1f-797740816bae",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5f14189b-06f1-48e7-81f5-2d95c82cd546"
        },
        "item": {
          "id": "504f6270-8cb5-41ba-9abd-ed090e5f4f91",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "013a8def-86b1-4317-95fc-7429dcff3c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1641e5fc-1ac8-41e7-99ae-a49f2870722c",
        "cursor": {
          "ref": "33c9d085-5a20-4560-adcd-544bc39ff6e4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2672d7a3-261e-450c-aa55-e06c48425ecc"
        },
        "item": {
          "id": "1641e5fc-1ac8-41e7-99ae-a49f2870722c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ed12ea8-5608-4fdb-a753-f68e48f9fd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24c633f-58ef-4d5a-b2a4-75719dd19519",
        "cursor": {
          "ref": "47dd0ee5-0f10-46c1-b4cd-21c7a79293da",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e27a59bf-745a-45e8-b950-ff360c3bab9c"
        },
        "item": {
          "id": "d24c633f-58ef-4d5a-b2a4-75719dd19519",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8576281-da1d-4e0d-bcc9-dbfb48035321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77164204-79fd-41e5-b3f1-40ddc4f4baf0",
        "cursor": {
          "ref": "4bbca4e3-c861-412b-99aa-975542bf6bbb",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9252d638-ac24-47e6-a2f2-090d03914d20"
        },
        "item": {
          "id": "77164204-79fd-41e5-b3f1-40ddc4f4baf0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8eaaf4c9-da8d-4b6e-b9eb-e3c1410b66ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ade4c-5e09-49f2-8215-bf391882e876",
        "cursor": {
          "ref": "32b7f82a-b52c-4f6d-8dc0-2ac9a92969f8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "70f15a4b-f5a0-4d6e-804e-f6f5064d3a8f"
        },
        "item": {
          "id": "aa9ade4c-5e09-49f2-8215-bf391882e876",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4982e5d7-9ae7-4cc6-a644-2427d28d2591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b754e93-a440-4f4e-b292-205535d2e95a",
        "cursor": {
          "ref": "8f82703e-b93c-4704-b588-e039062fcb08",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2ae587cc-a772-46d2-bb41-7a274602e2d8"
        },
        "item": {
          "id": "0b754e93-a440-4f4e-b292-205535d2e95a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bf3683d8-4e7d-4458-baea-5758dabb7b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03de193b-522f-48b4-b201-deadf2cf7eea",
        "cursor": {
          "ref": "bee8fee8-a61a-427c-b67e-9ed1b7cb28d9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6304b26a-1435-4d57-a856-e6823fc050e4"
        },
        "item": {
          "id": "03de193b-522f-48b4-b201-deadf2cf7eea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0c72c6d0-5e53-48a6-b74d-547ee91b5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdc123-6926-4363-b612-46168affca25",
        "cursor": {
          "ref": "42e68ad9-f711-4f76-9eae-4ab776707fd4",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6406195d-4efd-4b1f-ade6-ca6a63e37965"
        },
        "item": {
          "id": "d6bdc123-6926-4363-b612-46168affca25",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3a41c796-9217-423d-9715-c83cfa615379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c9f77-75ae-436d-bcf6-7c216b9bec44",
        "cursor": {
          "ref": "7228c9a5-3fc8-478c-9d37-7b9f0530f088",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "897f2e77-9d0d-4e67-a29a-fc4ac450f9a4"
        },
        "item": {
          "id": "e30c9f77-75ae-436d-bcf6-7c216b9bec44",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6c049a55-1a64-46b5-95c2-0191ad1f8b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4628ab4f-ba91-4984-8870-c0e4f57b0ffb",
        "cursor": {
          "ref": "df289c4a-8ef0-45e1-a457-868262df33ef",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a58c676e-0dc3-4a96-b090-60c498aa557f"
        },
        "item": {
          "id": "4628ab4f-ba91-4984-8870-c0e4f57b0ffb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1d29f408-f5fa-4ddd-983b-95f84846d898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904d5f75-4712-44be-88f8-b3151bdb25d8",
        "cursor": {
          "ref": "dd5b4c3a-c88d-4a6a-a131-a062db34da7e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d605469d-8f28-4c3e-8a3a-9cc83f640378"
        },
        "item": {
          "id": "904d5f75-4712-44be-88f8-b3151bdb25d8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1244c91f-4b48-4caa-a3a7-72196db3d09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af184bb1-7c60-4d44-b2f5-dff0b7c00345",
        "cursor": {
          "ref": "1b124d06-25d9-45e3-87a6-825db99d2abd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "19febbb9-ba12-4862-b286-870c307876eb"
        },
        "item": {
          "id": "af184bb1-7c60-4d44-b2f5-dff0b7c00345",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "73a1b526-13c1-4802-bdfe-d12bf4180174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dba731d-daf8-47e3-a862-07856f67be7c",
        "cursor": {
          "ref": "7987ed69-f57e-4453-a887-92c31ff3d891",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "16134e28-6bb2-435a-8524-e0c6b57df677"
        },
        "item": {
          "id": "6dba731d-daf8-47e3-a862-07856f67be7c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3b84fe0b-7ab4-4f8e-91f1-ba08192775cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bc5b46-ef9d-4da6-a8be-83ed90c87075",
        "cursor": {
          "ref": "6f3d397a-5493-4c31-85d9-7782f5457883",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4081ad55-9e2b-4b4c-bb68-d97772fba0fb"
        },
        "item": {
          "id": "a7bc5b46-ef9d-4da6-a8be-83ed90c87075",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "665563fa-0f7e-4bf6-9fc5-30fadea808df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3095e435-858a-49cd-a1b0-dd222c5bada4",
        "cursor": {
          "ref": "103a5776-637b-4f32-b7c0-810cd6025d7c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "965e9284-2e3e-4438-a170-9c0f824d531b"
        },
        "item": {
          "id": "3095e435-858a-49cd-a1b0-dd222c5bada4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c7fa5ee-845c-430e-ba4c-da8f1a17c2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209194a7-5a52-44d9-a19c-bd789db0c5de",
        "cursor": {
          "ref": "08d13f2f-c5af-4c5f-bad8-c45e11b04ddb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "73509f1b-7fe8-46b1-aa09-92c5bed03c94"
        },
        "item": {
          "id": "209194a7-5a52-44d9-a19c-bd789db0c5de",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c6c5ac15-de7e-411d-94b1-aaf205236bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4d2b04-e0aa-450a-b288-837cd1c43046",
        "cursor": {
          "ref": "176b04e5-422f-40d7-bc15-5b8b85115b57",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "772d5e83-6fd1-48ee-bdaf-60a315c8eec1"
        },
        "item": {
          "id": "1d4d2b04-e0aa-450a-b288-837cd1c43046",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e90dfa4-8c44-4c75-803a-bedf9d971f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a8bffd-0b57-4e6c-836a-4a9923d5a121",
        "cursor": {
          "ref": "cd8a6510-809d-4261-b15f-7605ccc428ea",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5f5075d0-c875-4bf2-af26-1f3f9e6880cc"
        },
        "item": {
          "id": "66a8bffd-0b57-4e6c-836a-4a9923d5a121",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2162a710-75eb-45ea-b0ee-f25cc7ee8840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b426141-2081-4243-b622-be5c95e9fdbb",
        "cursor": {
          "ref": "60fab7e0-32ec-4ab1-ac73-692ddd95da60",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "40879e73-5eb3-4ac7-86b3-b54ede992f19"
        },
        "item": {
          "id": "7b426141-2081-4243-b622-be5c95e9fdbb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a0842fcf-8db5-4728-99fc-ca0f3ad6e8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51127c-4dd5-4917-9afd-34b74ea09f65",
        "cursor": {
          "ref": "d613f0ba-883c-42c4-b854-73d7dadf304a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0df5674a-1cd5-4809-91a8-574ed6087c2f"
        },
        "item": {
          "id": "7f51127c-4dd5-4917-9afd-34b74ea09f65",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3e3f40e5-72b7-4fbd-b339-d9fa765424db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780ddae6-f353-4333-89a4-3f206cad240c",
        "cursor": {
          "ref": "1ed10c65-b0fd-4fbc-9550-085c332b930a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "12be1442-0a8d-4d2d-b07d-15b73857b823"
        },
        "item": {
          "id": "780ddae6-f353-4333-89a4-3f206cad240c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bb6703e3-b9f3-43a9-8fc0-26dc9a36b530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95f8641-1192-4587-ab62-4e4b14b6d660",
        "cursor": {
          "ref": "e1696742-3100-44fe-9bcf-ca3e24f2620e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ace4293a-6bb9-456a-a49a-2478c1a54d75"
        },
        "item": {
          "id": "f95f8641-1192-4587-ab62-4e4b14b6d660",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3ae0ac1-da56-4d18-8bab-52ad1dc92be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b039e1f6-7c6c-4ae0-8523-19d1f8f21d77",
        "cursor": {
          "ref": "d04fc1de-f49c-493a-b105-6b79b5ebccd5",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d5473b47-d246-483e-b2e8-4a981bb75f85"
        },
        "item": {
          "id": "b039e1f6-7c6c-4ae0-8523-19d1f8f21d77",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8bb0d903-405b-4d05-8198-1c374612b3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dc9bd4-f60c-48c2-92ec-8b802b0afb0a",
        "cursor": {
          "ref": "89745f4e-e33d-4426-9e59-c5fa9540f846",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0a202726-4b8b-40c8-a896-e17f370d43cb"
        },
        "item": {
          "id": "f6dc9bd4-f60c-48c2-92ec-8b802b0afb0a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2225d5d0-47b9-4f51-b5b2-816a1cbab76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c74d20d-e820-499d-8bad-4f7339eed202",
        "cursor": {
          "ref": "1629c35b-ac43-436b-8fc6-434348578b4a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9d36095e-4f3d-40db-b367-2750ce48c50d"
        },
        "item": {
          "id": "2c74d20d-e820-499d-8bad-4f7339eed202",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a12d4df4-f337-4625-af5a-e828ad6f2832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eb579c-091e-4dda-9f64-2d51deaa2575",
        "cursor": {
          "ref": "15165bdf-9362-4666-9728-c5c47fee1cab",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6e53c563-9ab8-4bee-a774-585f6898c756"
        },
        "item": {
          "id": "59eb579c-091e-4dda-9f64-2d51deaa2575",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "590903dc-595c-4152-bf75-bbbef5f78ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ca6cb0-5b2d-4236-9a99-a9c0633e9bc6",
        "cursor": {
          "ref": "2fc8b023-dacd-4f06-a156-1a45eb561480",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "273220be-e267-4feb-bdee-77ffa0793b10"
        },
        "item": {
          "id": "85ca6cb0-5b2d-4236-9a99-a9c0633e9bc6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "db2500b5-b350-4da1-88b7-4c03e3f86951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8810e50-3b5d-40ce-b9e4-956fe514675f",
        "cursor": {
          "ref": "3b3c24a4-085e-4f77-850c-6b00c5630187",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "86200897-7d53-4899-ad9b-53ef53265eb3"
        },
        "item": {
          "id": "f8810e50-3b5d-40ce-b9e4-956fe514675f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4bb0d7dd-a968-439f-957c-5e2eadfcd845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0c92f-6bb6-4924-b1cc-678e331e0c73",
        "cursor": {
          "ref": "7f995727-ed87-41d2-87a5-a8a192fd15ad",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c958d01e-1082-406c-a02d-f145f140ab0c"
        },
        "item": {
          "id": "f1e0c92f-6bb6-4924-b1cc-678e331e0c73",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e5540651-9df2-4338-a2c2-93fed171b81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58e5823-95f1-44f5-be2c-f168954dbbbd",
        "cursor": {
          "ref": "10b189f2-70b5-49c7-bdf6-10afe6ead462",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "09cf18e5-91af-429c-a31a-d1c12fd1d2b5"
        },
        "item": {
          "id": "d58e5823-95f1-44f5-be2c-f168954dbbbd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5bb003f1-0747-4e9b-97f4-20ce8c0179b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fb6b57-800b-4ed5-99a0-39b103ea0a02",
        "cursor": {
          "ref": "1ec633c4-7ca5-405c-94f5-ff75c47bcf1f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9d117436-9b8f-4c63-bb32-ed64e2e6593d"
        },
        "item": {
          "id": "84fb6b57-800b-4ed5-99a0-39b103ea0a02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d0e4e863-c881-4c2b-9601-6157537c4087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8be25f3-8eb9-4107-b116-88c5c6b77278",
        "cursor": {
          "ref": "c0f4c72d-1ad5-46ed-8b30-072d7e7677dc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2500daaa-a295-4721-9e7b-80c62ce84dcd"
        },
        "item": {
          "id": "d8be25f3-8eb9-4107-b116-88c5c6b77278",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "73fa9447-80ab-48d6-bf6d-93eebdf7ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92362864-172b-4401-8ae7-344b4bae3d39",
        "cursor": {
          "ref": "c634d2d9-80f0-48a3-b188-283c1c8c877b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "04937533-5a79-45ee-b30c-d0dc3bca6bf2"
        },
        "item": {
          "id": "92362864-172b-4401-8ae7-344b4bae3d39",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b7300dbd-9c41-4fa8-a3fd-2ccdd1878691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07da37cc-359b-4a76-8c04-e66fa88029e0",
        "cursor": {
          "ref": "dafc5c21-7563-4dd5-946c-5307df3e9c87",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d0a10dfa-0475-41c1-81a4-b35ce313b3ef"
        },
        "item": {
          "id": "07da37cc-359b-4a76-8c04-e66fa88029e0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5e7c974-383a-4c81-96cc-ea59e0eb64b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d081707f-7cf4-4bc8-b227-72638340c8b9",
        "cursor": {
          "ref": "c8c57438-7b6f-4069-99f0-d568744befe2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d4b15b77-8c85-438e-a839-d832b9b1bd19"
        },
        "item": {
          "id": "d081707f-7cf4-4bc8-b227-72638340c8b9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "be8e7056-445e-4891-8883-fc534cf7d4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d4029f-0ba0-4939-9a26-51efe05f98d7",
        "cursor": {
          "ref": "bad5e5c4-6e14-4da9-9b07-037d988fd618",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87f7fef3-408f-4b87-802a-a835ba5006ae"
        },
        "item": {
          "id": "94d4029f-0ba0-4939-9a26-51efe05f98d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f4a591f5-28c5-47cd-9196-716afa6c44f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f508e5-f8e0-492d-97ec-9cfe57949c49",
        "cursor": {
          "ref": "7bd94e68-662a-4910-b55d-fe6c002616b6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a964fde9-1f05-4586-8325-89358eae613e"
        },
        "item": {
          "id": "39f508e5-f8e0-492d-97ec-9cfe57949c49",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2604196e-c7f4-44fc-a623-0c4bc07dc99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f232ce3b-2a38-4c6c-820e-81dbade4f3a5",
        "cursor": {
          "ref": "3de0815c-58bd-4ddf-bf94-92da2db87b2b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58cc44f7-9b36-4e5a-a717-f502a20a7eac"
        },
        "item": {
          "id": "f232ce3b-2a38-4c6c-820e-81dbade4f3a5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77ecd310-1a90-4684-9914-b00a04a174ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1519998b-718b-489a-9189-516e03686df5",
        "cursor": {
          "ref": "6ae61664-d879-4e35-b308-15ecd918ab60",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "96690b2f-163f-4c32-bd01-a163b7641a9f"
        },
        "item": {
          "id": "1519998b-718b-489a-9189-516e03686df5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d7fb0e1-6a32-474a-b2d9-df04d823cad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e6cc0b-ed26-4a67-bdd3-568f4b70968e",
        "cursor": {
          "ref": "c2df107b-df3d-480f-9b23-4bd9e387dd39",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e6479185-e7a6-413f-aba5-c5b414e92b12"
        },
        "item": {
          "id": "e0e6cc0b-ed26-4a67-bdd3-568f4b70968e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9717f212-4fc9-4c2d-a100-96ead8b77b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c07bc0-5137-46c2-9d1e-5ee817d608b6",
        "cursor": {
          "ref": "a4f169e5-2d4b-4011-82cb-36cc34730564",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "03ec4059-0ab6-427f-88c5-01db41ff9417"
        },
        "item": {
          "id": "05c07bc0-5137-46c2-9d1e-5ee817d608b6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa615fe8-5936-4277-824b-6e6a62f99606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82039b7-4549-448d-974e-9018583f5953",
        "cursor": {
          "ref": "f1b18c6c-a835-49ed-87b0-5192a0a825ca",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "498e39bc-27c8-4b26-9022-cfff002b6a05"
        },
        "item": {
          "id": "a82039b7-4549-448d-974e-9018583f5953",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "033652bf-4c11-4385-9652-5601f4dcb68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edbecac-6bc7-49b4-ae0e-dd8be7afcf36",
        "cursor": {
          "ref": "d83d10ad-1e1f-41b5-ba14-262936ed1139",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2fd07c8f-e2e3-49dd-b75f-8a608657a0c5"
        },
        "item": {
          "id": "6edbecac-6bc7-49b4-ae0e-dd8be7afcf36",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8fa7a469-62a7-4984-9bd3-056952df4460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4d8a0b-61fa-40e1-a9f6-54956b4f36e3",
        "cursor": {
          "ref": "d95895f1-9d2e-4fa6-b2d5-d69eb1a16dfe",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "98441f4d-3385-45f2-8d20-62d5739e5b02"
        },
        "item": {
          "id": "5c4d8a0b-61fa-40e1-a9f6-54956b4f36e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2a021ec4-ecf1-4e3d-aa15-aaa88a83324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a99328-7f85-49b2-a7ec-56ce20b4ba46",
        "cursor": {
          "ref": "1e9762c8-939a-45e1-804c-1d4c3862e294",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d4ec0f56-6c52-406e-a1f5-4f410fbca0ae"
        },
        "item": {
          "id": "d1a99328-7f85-49b2-a7ec-56ce20b4ba46",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5aafb520-41c2-433a-834d-b8448204101d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5fb6cb-cd82-43ea-ad2e-f52c02d308d7",
        "cursor": {
          "ref": "154686f8-c543-4a17-b9d2-dffeb18c7e31",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "91035a97-9040-4ff5-b0ce-21184bacadb3"
        },
        "item": {
          "id": "4b5fb6cb-cd82-43ea-ad2e-f52c02d308d7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "835f06e4-72b8-4575-b8be-35a321ad5d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2fa61-0eb9-42d0-9fe7-77d118edaa89",
        "cursor": {
          "ref": "cf51bf36-5ef4-411c-8a85-2693707b41ec",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e6982e2f-d948-4a32-81ca-313e4f998aea"
        },
        "item": {
          "id": "9ad2fa61-0eb9-42d0-9fe7-77d118edaa89",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "90d9312d-d76c-414a-a9e4-ec7ebfd076c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20d7b7b-bdf6-4ed3-b543-935634ee2db9",
        "cursor": {
          "ref": "1b53ecf9-fe00-45f0-84a1-3fdca26441eb",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fbbf2383-c17d-4cde-a870-e9b9d1f884bc"
        },
        "item": {
          "id": "d20d7b7b-bdf6-4ed3-b543-935634ee2db9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "53d4106a-f4d0-4750-bc5e-4a5ad9636776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7061e73-6a72-4992-abd1-6942c0f9bf3e",
        "cursor": {
          "ref": "fc38b1f5-c34c-4f66-a902-f834f34f3e50",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d40d0938-1175-46ec-a25d-a95ef1674165"
        },
        "item": {
          "id": "f7061e73-6a72-4992-abd1-6942c0f9bf3e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1f09ea27-e978-4528-aa58-e55bd8e4e738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4627efb8-f481-4520-997f-268c38203b41",
        "cursor": {
          "ref": "0dc477b3-3cfe-4a6d-9d2f-a88729db43e6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1fab7393-0303-4bbf-9100-7713701f3009"
        },
        "item": {
          "id": "4627efb8-f481-4520-997f-268c38203b41",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2df1e4d0-7578-4a25-8772-fca957acf02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962e9624-5d5e-4922-b1f9-da63e52c1da0",
        "cursor": {
          "ref": "a9c949e4-74c0-4183-95fb-c81578f64fb8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "70213304-5423-4a0f-80de-b2fc0f1ed4f9"
        },
        "item": {
          "id": "962e9624-5d5e-4922-b1f9-da63e52c1da0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f85c6562-111c-499f-ab72-14200b1ef4d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcafa0cb-5d6d-40af-9837-754bf15a2372",
        "cursor": {
          "ref": "e2bf4007-a12f-40d0-a4be-49b717b5a298",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9cb2410-3162-4dbf-a2bf-cc76b997af90"
        },
        "item": {
          "id": "fcafa0cb-5d6d-40af-9837-754bf15a2372",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "37d7555c-26b0-48ea-bb4a-450b8c19c0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e17003-360c-449b-8b92-eca9d7427f42",
        "cursor": {
          "ref": "c4a1b87e-ed74-4345-a012-997a9ffdbccf",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "63557a98-a6f3-4f3a-b35d-94e321da1ca1"
        },
        "item": {
          "id": "12e17003-360c-449b-8b92-eca9d7427f42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d00f343f-dd1e-4c83-a0d6-948daa3b6716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd3d69e-a397-47ba-9faf-0e9b434fb2f2",
        "cursor": {
          "ref": "3f1bbb40-c39c-423f-b331-6bfab228a231",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "04a94442-2fa4-4ea5-829f-8c24c2ed73bb"
        },
        "item": {
          "id": "3dd3d69e-a397-47ba-9faf-0e9b434fb2f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "78971585-37e4-4905-b278-4a65ad04c85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3373da29-b0b6-4e6b-b4e0-be9ff35fe928",
        "cursor": {
          "ref": "74508864-8a6d-430e-8d6f-cab9dd08a835",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a0ea6434-b7a3-4bf5-ba9a-81779ab29c64"
        },
        "item": {
          "id": "3373da29-b0b6-4e6b-b4e0-be9ff35fe928",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "30a4fe6a-812e-4f1d-a3b6-04e726b2e0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a035fb-125d-420d-92f9-115fbca623fa",
        "cursor": {
          "ref": "45696902-4f60-4b25-b1b8-d92886185d67",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "23b9d611-461b-43d8-a7f0-d328278fec9a"
        },
        "item": {
          "id": "b6a035fb-125d-420d-92f9-115fbca623fa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a5fd69e7-7589-493b-9f01-7cb115784838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db72afc-3173-4378-82f2-12a4941d6cf9",
        "cursor": {
          "ref": "67c897e6-ef56-4d36-90e1-63402d654212",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "83d21c99-27b1-4c41-b857-bdd00d02690f"
        },
        "item": {
          "id": "9db72afc-3173-4378-82f2-12a4941d6cf9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "56035928-b868-4005-b6d2-e9dfe1d38893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e50b45-470b-4e89-aa93-ec3f9e321677",
        "cursor": {
          "ref": "d2003e78-d1c7-495c-adc9-dc063537bc9a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bec5932b-a751-4d55-9e3d-807f7f963faf"
        },
        "item": {
          "id": "08e50b45-470b-4e89-aa93-ec3f9e321677",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e93d5ccd-ffa8-4b6e-a03a-3ba95a9ae52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4762549-ef70-467d-b350-a59fb762c6e4",
        "cursor": {
          "ref": "48ff7e3d-5524-4d79-9e4f-813d62da5ea2",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c104b6d1-17eb-4855-8177-370b827329a7"
        },
        "item": {
          "id": "c4762549-ef70-467d-b350-a59fb762c6e4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab053b09-7190-4b3b-87f5-c12070c051d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352d9c8d-8f1c-44c2-bbf1-82be92627466",
        "cursor": {
          "ref": "e0ba0fc4-62c4-4159-89b6-ef5a40af6688",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f6d74f5-61fc-47f8-8acf-fcf878247bb7"
        },
        "item": {
          "id": "352d9c8d-8f1c-44c2-bbf1-82be92627466",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "76c94aff-fdb8-497a-997f-80eca8b50057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcd2a60-e1dd-4f35-9bc3-8533a9c94c01",
        "cursor": {
          "ref": "55d29c44-afe6-4079-b259-dcda371da307",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1874e1b0-8e0b-4b38-a463-a7bfd55e2e22"
        },
        "item": {
          "id": "edcd2a60-e1dd-4f35-9bc3-8533a9c94c01",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9c7d59a8-7860-4468-b01d-ac459c073872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca8050a-ba82-493b-97d0-ccb91437cd0a",
        "cursor": {
          "ref": "f974b98a-2d7e-440d-b09a-8709da25c549",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "647a784e-6991-4834-9535-568b35ad35c9"
        },
        "item": {
          "id": "bca8050a-ba82-493b-97d0-ccb91437cd0a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d3d0a00-69e0-49dc-9327-19c2fef32267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcb10d9-ecba-4355-8621-110ba7d055e3",
        "cursor": {
          "ref": "3aee890a-73ea-4684-94fd-14906ed269f3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "606b4bee-b38f-4cc5-81ab-f4f317d9d010"
        },
        "item": {
          "id": "0bcb10d9-ecba-4355-8621-110ba7d055e3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b5134b8-366c-4235-a324-cd3f0d9952db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f2807d-8cf7-4368-8d2b-ee76d31ff85d",
        "cursor": {
          "ref": "10a5dde8-6ef8-40a3-bf64-087af4841b10",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "115e2637-e43a-40cf-af61-1e5a852ca1fd"
        },
        "item": {
          "id": "48f2807d-8cf7-4368-8d2b-ee76d31ff85d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "26f508ba-34fe-47a5-a6de-ee210b2120d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d2ec2b-5875-45f3-9e8e-e9713fac8a2c",
        "cursor": {
          "ref": "5c27ed7f-013b-4e39-9b10-904918d9e56c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bdaeeb4a-a316-44b1-9a50-17067dae14a9"
        },
        "item": {
          "id": "61d2ec2b-5875-45f3-9e8e-e9713fac8a2c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ec3dfe6a-a5a7-4120-9f6b-5f4309a4d883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebb62f0-a7d9-4045-bff9-4fa9e21283e0",
        "cursor": {
          "ref": "951dca9b-aed5-4170-8893-fd0fcf7ebc98",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c82034b1-167d-48c9-95c5-af4a27bde513"
        },
        "item": {
          "id": "0ebb62f0-a7d9-4045-bff9-4fa9e21283e0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "94edc7ac-b2f4-40d2-b1e4-739741625dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a0f275-5f6a-477a-bd98-65b1e2ca0fe0",
        "cursor": {
          "ref": "8b59ed4a-00c1-41eb-9506-2d66a0549e8b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e6824930-e756-4d5a-88d9-c87ebdc2a52e"
        },
        "item": {
          "id": "b2a0f275-5f6a-477a-bd98-65b1e2ca0fe0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "195633f3-7574-484d-bbfe-d76be51b0fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85dfd12-7831-47ba-ab12-03ba7c8a7ca8",
        "cursor": {
          "ref": "cadaabb5-043a-4b15-956e-050e17e02a8b",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "07c8486d-efe1-404c-9929-c5e71ad27eb0"
        },
        "item": {
          "id": "d85dfd12-7831-47ba-ab12-03ba7c8a7ca8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "951588f5-8d98-4a45-9655-7cd4a3ee7406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc118007-46bb-4259-b8e9-6935030abc37",
        "cursor": {
          "ref": "2d0ba9d6-c9f6-4017-b7a3-77e30120fab9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f4485671-086f-43ac-8cc7-4592636a7733"
        },
        "item": {
          "id": "bc118007-46bb-4259-b8e9-6935030abc37",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a622a42c-5aeb-4ff0-9bd2-6f18e8db1b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90ce669-cec6-47ef-9960-610fe614d545",
        "cursor": {
          "ref": "c6d58ca4-cc20-4001-b7fe-7e3626f7ffbb",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "119132f1-0bb3-4975-b3ee-1af9111533ca"
        },
        "item": {
          "id": "e90ce669-cec6-47ef-9960-610fe614d545",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "931bc086-f074-4f79-bcb5-269d17c7349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db05d326-634a-4624-abc3-a7a59adfed40",
        "cursor": {
          "ref": "3f9681af-97e9-4178-8c46-b6e204c35b1b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b31c4fe6-1589-42bb-a5ce-2fb1bf4697d0"
        },
        "item": {
          "id": "db05d326-634a-4624-abc3-a7a59adfed40",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "165b0f14-8663-4934-bae0-1f9629464e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca0895d-f0b1-4603-ad09-bb5f4db406cb",
        "cursor": {
          "ref": "f2a9c5cb-5da9-434a-9439-b120a62f6195",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dc0f6eb4-a8b8-4d94-a103-658daa4b2f74"
        },
        "item": {
          "id": "eca0895d-f0b1-4603-ad09-bb5f4db406cb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d1f3ba33-31d6-43b5-b833-929f51255a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50930448-7e5f-4069-bdb2-5f0546b8622b",
        "cursor": {
          "ref": "dbe0b261-2408-4988-8610-83450f41154a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3df12709-77f2-4023-af81-424dabdce66e"
        },
        "item": {
          "id": "50930448-7e5f-4069-bdb2-5f0546b8622b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a7d0d734-19d9-46dd-a854-0cbc9f71e0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a12e7-3e2a-4111-99c5-372a70256699",
        "cursor": {
          "ref": "7de15409-d5de-46b0-8463-0d66aca263a6",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a9028bf5-2374-4ad2-ade6-6ad1a4dd98d5"
        },
        "item": {
          "id": "a86a12e7-3e2a-4111-99c5-372a70256699",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ad450616-c8c2-4d36-a168-c1c0e3a8d3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e171b0b-e961-4383-9d1d-c5bb4e742d7a",
        "cursor": {
          "ref": "7758876d-74a5-4972-b5f2-998cdc8fdc7b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aa4f9492-3688-4e7e-bf09-871b147be50d"
        },
        "item": {
          "id": "9e171b0b-e961-4383-9d1d-c5bb4e742d7a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94caf872-9815-41d8-87b8-35dd9edd9a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb40b4f6-1a6c-44b8-a352-929fe4970cbd",
        "cursor": {
          "ref": "a4eac928-ad69-427b-8fc4-553b2dde4bd0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6ca6c613-ac93-46d6-b5a4-141a6fcee044"
        },
        "item": {
          "id": "eb40b4f6-1a6c-44b8-a352-929fe4970cbd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "abaaadf6-019f-4a71-bc56-08b22130b8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84afecb-80e0-4844-8486-175daf812093",
        "cursor": {
          "ref": "abfc80d8-dc0b-45a6-b272-4aa3b8e530e0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ae7acee0-c988-438b-a505-1bf69a8a9843"
        },
        "item": {
          "id": "f84afecb-80e0-4844-8486-175daf812093",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9a34f6b8-51bf-4ac5-ac50-82225a71b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f0c97a-ef08-490f-a96a-ae573cdfb186",
        "cursor": {
          "ref": "ebfc603b-cfe6-42fd-ab26-e04646003777",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "132587c9-e7a5-4235-87eb-d8ce929fb75e"
        },
        "item": {
          "id": "d4f0c97a-ef08-490f-a96a-ae573cdfb186",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "550a3743-9f08-44c4-9e46-a8882b3b63f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97334b2a-2e87-48e8-9e6f-7d3880cdf2ee",
        "cursor": {
          "ref": "b81c41e4-c7db-4835-b8b3-8d17d1b81a71",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2beb8bf7-fa99-4c1a-b21b-178f99907906"
        },
        "item": {
          "id": "97334b2a-2e87-48e8-9e6f-7d3880cdf2ee",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4414baba-7aa4-4f4f-8295-62d0b41a61f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c78a5f5-927a-4d74-8e70-935f7f448cd2",
        "cursor": {
          "ref": "a0c9dc4d-e3a8-4f73-983c-602cc3d80ebc",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "afd78211-7cf5-4bfe-a0b3-92ef8ef706b8"
        },
        "item": {
          "id": "5c78a5f5-927a-4d74-8e70-935f7f448cd2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ca91e0dc-a4ff-453e-9258-1fc42152489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6896870-e067-4c53-8bdf-808c9387ee50",
        "cursor": {
          "ref": "f1d1e0fe-485a-44dc-93f5-9c2d5e2c1ad6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0773a608-13f1-4ead-b431-cecc9fea8882"
        },
        "item": {
          "id": "d6896870-e067-4c53-8bdf-808c9387ee50",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be53d33f-37c0-4db0-9ade-1a255cae7fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e320740-223d-423a-9662-9f8a1529f9ee",
        "cursor": {
          "ref": "b9332efe-c167-4faa-bc74-767f6c79410b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2ac73a6f-65ca-4477-82c3-280380b002d7"
        },
        "item": {
          "id": "4e320740-223d-423a-9662-9f8a1529f9ee",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bc4256d4-9701-4829-9b45-37e05514bd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c7a08-e5bf-441b-b0d7-48da56301cf3",
        "cursor": {
          "ref": "89ed597f-6e60-41d3-9c11-8f7f54f2953a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "48d53d14-3572-4b36-93bc-0d252fa0ce66"
        },
        "item": {
          "id": "a91c7a08-e5bf-441b-b0d7-48da56301cf3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "da0691d7-76f0-4fb3-9ebb-0af39934f256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53acadb-704c-4d23-9a8c-00fd7925f946",
        "cursor": {
          "ref": "ef44e46e-d0d4-4aaf-ac32-b07edb885bb3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "611ed36e-f3ee-481c-9041-e79b896ff941"
        },
        "item": {
          "id": "c53acadb-704c-4d23-9a8c-00fd7925f946",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "952b9439-33e9-4484-a6c6-a960346533db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b596994e-edaa-4944-8ef6-80162d068444",
        "cursor": {
          "ref": "08f5c167-7357-4f84-9b7a-50832fc5b05a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d43e37ce-80b3-40f2-aef6-6cf8228c0416"
        },
        "item": {
          "id": "b596994e-edaa-4944-8ef6-80162d068444",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "21b19786-d470-4aca-b72a-2104ed8b6708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe9ff73-e29e-4753-ad16-45594f03012b",
        "cursor": {
          "ref": "c847eefe-a3f7-4bdd-9144-b0c740d1c48e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a7d525c4-5bc0-4c89-8bed-6c786d5a8434"
        },
        "item": {
          "id": "ffe9ff73-e29e-4753-ad16-45594f03012b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a44641b6-9b10-4014-9867-1daafb957bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd32076-d6a0-4e4f-b9ad-3b9e2eee7f0c",
        "cursor": {
          "ref": "369dde33-8d98-4c9c-9d27-936dcd2263c7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "082ebcf2-d1d1-487a-b40e-51dd8ef2b8d8"
        },
        "item": {
          "id": "cfd32076-d6a0-4e4f-b9ad-3b9e2eee7f0c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bbb3701b-5272-4067-b808-2bdb61a9b9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55474dd-798b-4530-977d-0f9c44b87daa",
        "cursor": {
          "ref": "9d4e624c-36cd-4451-ae80-57cfee302329",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9f14860-d590-449b-8ca4-48b7b8c181ad"
        },
        "item": {
          "id": "e55474dd-798b-4530-977d-0f9c44b87daa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bc559c27-b102-4e26-b317-02b04b6c97e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8cbf7a-605a-462d-86a6-e402c8896b99",
        "cursor": {
          "ref": "94876488-73c3-4153-a8c8-23b544ba53d9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f3e620c6-9dee-4a07-b96c-c704a216cad2"
        },
        "item": {
          "id": "0b8cbf7a-605a-462d-86a6-e402c8896b99",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24072285-65c9-405c-a08c-d007a660ee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2bd511-e189-4631-89ad-d93aa2c1da04",
        "cursor": {
          "ref": "f343d9d1-f865-4eee-bba5-925fba3f6d7c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "abfaabf2-afa2-451f-a4c1-4aa5f7d62077"
        },
        "item": {
          "id": "5a2bd511-e189-4631-89ad-d93aa2c1da04",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a347e0c-00fc-44cc-8986-7644abbe3fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2ca2c0-99da-4aa6-9a36-c1a2b778a6a8",
        "cursor": {
          "ref": "1024d8be-b102-49cf-ad41-ed3618c53c48",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dacb4655-61ac-43d9-8f15-3aa4611d8a48"
        },
        "item": {
          "id": "5d2ca2c0-99da-4aa6-9a36-c1a2b778a6a8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e18436eb-d965-43b2-8531-3d6852c34264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046107cf-2154-497d-b9df-7858a72d6f21",
        "cursor": {
          "ref": "dca47be5-80e0-454f-93c4-85d8bf14ac27",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a5ad246e-e83f-418a-b048-c4b5ccb78b43"
        },
        "item": {
          "id": "046107cf-2154-497d-b9df-7858a72d6f21",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b52b642e-dd69-4588-887d-ea80f325e344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c277a19b-6522-499d-84f6-04427e789aeb",
        "cursor": {
          "ref": "0569edf7-ea5f-440b-8438-0552a971c4e6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1625e868-6e6a-4f08-bae2-825ac1d8a899"
        },
        "item": {
          "id": "c277a19b-6522-499d-84f6-04427e789aeb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "691f35d4-76e8-4226-91a3-e33dc2119657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4585e0c-426d-41c8-870a-a5e66f0e672d",
        "cursor": {
          "ref": "cd2f9a18-f350-4230-b659-f57a72a303a9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ca5c82c-2884-438d-869b-a9af305a0962"
        },
        "item": {
          "id": "a4585e0c-426d-41c8-870a-a5e66f0e672d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4c339b4c-81d3-450e-b55d-cd90c59bfe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad129d8d-773c-4b8a-a885-cf51e1b0b235",
        "cursor": {
          "ref": "7c4c7cf2-5830-4d7a-bab7-e99649136000",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4df4a455-0e83-4780-a491-0dfb8e8a8eed"
        },
        "item": {
          "id": "ad129d8d-773c-4b8a-a885-cf51e1b0b235",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b53cec60-dd45-4538-9c76-5f93b40edf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af996cea-0b1f-4ed6-8942-10097658014f",
        "cursor": {
          "ref": "40f8ccb9-560c-40fd-b28c-c18705412c1d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1fff31c1-f75f-4ac9-a5a8-481790e839f7"
        },
        "item": {
          "id": "af996cea-0b1f-4ed6-8942-10097658014f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d1a0e30f-42b3-4955-ae88-55578af718d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b498f0a-3ff5-4b9a-a6df-4fc56dac303e",
        "cursor": {
          "ref": "4fe4e1f9-190e-4f45-97f7-e61173feaf22",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "02a241cc-17f9-4903-9faf-a1f02dd2653a"
        },
        "item": {
          "id": "6b498f0a-3ff5-4b9a-a6df-4fc56dac303e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5dac2d30-c37c-4d89-825c-ddf197719ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26871a53-9b5b-4ad2-b56f-8e8827bc4f65",
        "cursor": {
          "ref": "0dc1f810-77f6-478c-9f60-733c491ffaa1",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "60d2bd11-651f-474a-9325-21bd96fd7071"
        },
        "item": {
          "id": "26871a53-9b5b-4ad2-b56f-8e8827bc4f65",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c5635755-e65b-4946-80e2-5201e56cd0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940c0616-3e54-4d34-b7b1-9e70725d7928",
        "cursor": {
          "ref": "bc33bd18-af53-4482-8324-47aba753c6c0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7122572d-c5ba-4eed-97db-76ce842bcddb"
        },
        "item": {
          "id": "940c0616-3e54-4d34-b7b1-9e70725d7928",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b8d23cee-f839-44aa-b146-97420a36f6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0fb8f3-35ca-41f4-9f28-68d265fe9efa",
        "cursor": {
          "ref": "6c558ed1-6565-4ccd-8fe4-39db7eeba11b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0ed1efc3-af7f-4bbb-88b7-201815b3de24"
        },
        "item": {
          "id": "6c0fb8f3-35ca-41f4-9f28-68d265fe9efa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0dec33a5-1b65-4f3f-a9ea-2d15e580e3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a84ae3a-2d79-4b15-9e21-136a0f517415",
        "cursor": {
          "ref": "a4c259b4-2d7f-4517-b019-18f3a2938a36",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e926ae7c-152d-4f36-803d-3f1c1d3842d2"
        },
        "item": {
          "id": "0a84ae3a-2d79-4b15-9e21-136a0f517415",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e72fc697-06ed-4e8e-94cf-5b64e5986af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90bf83c-0563-46b9-912d-b82c53c7c2e7",
        "cursor": {
          "ref": "2e13e4b8-7b0e-4855-a838-c7a077d96446",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "09c8415c-8667-45c1-971e-180fd7f287af"
        },
        "item": {
          "id": "b90bf83c-0563-46b9-912d-b82c53c7c2e7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b1fc0d9b-c220-4cc4-b86d-a17f087ae47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0342da78-e9c1-4f3b-907d-659520eff8ea",
        "cursor": {
          "ref": "31a27917-3a86-49a1-a803-68f919aece6a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "027ce51a-a070-4ef6-b3ee-1b4155bbb047"
        },
        "item": {
          "id": "0342da78-e9c1-4f3b-907d-659520eff8ea",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b438dab4-eb88-4d4a-bfb4-4d2d83ef0284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc68555-5668-4d49-bafc-dea7768e009f",
        "cursor": {
          "ref": "ea3567bf-0487-4ad3-8aaf-d774d1c51d57",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4f41b9dc-0afb-492b-b544-f45db2b2c35b"
        },
        "item": {
          "id": "6bc68555-5668-4d49-bafc-dea7768e009f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "85eb45cc-6427-4837-89ab-e14a8b892ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b21d163-d957-44bb-879f-b5ee8b9f74fa",
        "cursor": {
          "ref": "57e1d809-f2ee-48af-a6db-600838cdd1b8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c01b3567-4a73-4f60-8245-cb2280a8c200"
        },
        "item": {
          "id": "3b21d163-d957-44bb-879f-b5ee8b9f74fa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7a66446a-1115-40c4-a9c0-efdfc1ce3d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8bad64-908e-45a9-acb1-48887d15dbf7",
        "cursor": {
          "ref": "fa2166ac-a902-48c1-b3d9-58888debf9cd",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5bf0b14d-e0e3-4f1f-874e-7d63679ddb63"
        },
        "item": {
          "id": "fd8bad64-908e-45a9-acb1-48887d15dbf7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "df9b88d7-13fc-41d1-b8f1-fac9adf8cb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25b26a2-35c6-4f8b-a0ac-3eac474661a4",
        "cursor": {
          "ref": "9f396556-6a7a-45b6-a0c5-e4f95aefac0d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "05b2b6ca-5e20-40fe-ab89-d39e9802223e"
        },
        "item": {
          "id": "d25b26a2-35c6-4f8b-a0ac-3eac474661a4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e2e814f-eed7-4f5c-85ac-87c26470857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afeb04c9-0a32-433c-a43e-7f319cf98118",
        "cursor": {
          "ref": "5b04d2f1-fb03-44cd-b116-533ca674c954",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "10146c17-ab06-4cce-bd6a-ab2cdfbd1841"
        },
        "item": {
          "id": "afeb04c9-0a32-433c-a43e-7f319cf98118",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fb10e5a4-5dff-4b06-8cc3-85bc374ba98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0bf6fa-b838-4ebd-85f5-0ae544f8d93d",
        "cursor": {
          "ref": "c334b05e-dd2a-40fe-a3a4-edb9f959fe2e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6bf04b04-b03c-499d-a3d1-960893d1567b"
        },
        "item": {
          "id": "ff0bf6fa-b838-4ebd-85f5-0ae544f8d93d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8986c539-a247-4147-b6dc-c6b4a78b13a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6cfc25-dffe-4cb2-9650-d5b99b3d9bf5",
        "cursor": {
          "ref": "b5c1a388-208e-4ba2-9324-9d4c1fb81dca",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "94826dd1-1baf-4383-95d8-d91981ac1ea1"
        },
        "item": {
          "id": "bf6cfc25-dffe-4cb2-9650-d5b99b3d9bf5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e81c2681-e520-47d0-b750-de4be546d876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ceae6-c118-4a4a-b0e0-d8a0315538a1",
        "cursor": {
          "ref": "54ed01fa-8f3b-4eff-ba69-30dc12471b00",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "67060d69-dff7-45f0-a95a-794c6986de16"
        },
        "item": {
          "id": "c42ceae6-c118-4a4a-b0e0-d8a0315538a1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c0fc8835-870d-494e-a2e0-cfa52906e4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efd5ddc-3039-4306-a9f6-1dc807c21352",
        "cursor": {
          "ref": "acf9d9d1-da41-4689-82b2-abb401a83e5c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e1dd2cb-3efd-4728-a059-498d4e945003"
        },
        "item": {
          "id": "9efd5ddc-3039-4306-a9f6-1dc807c21352",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f479d758-ca94-4132-b912-61bd4c587ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964026dd-73a5-490c-92e0-95179fa0cd88",
        "cursor": {
          "ref": "6693c232-7d16-4125-b2b5-73448c97e915",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "739ac3a0-8fcd-4bcb-8524-9dc3ee894563"
        },
        "item": {
          "id": "964026dd-73a5-490c-92e0-95179fa0cd88",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ff017604-cb85-41f0-bb54-9d5e6159c6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c48ea6-24f5-4875-abae-62bb141d07ba",
        "cursor": {
          "ref": "a8e12b1d-e2e1-4ae2-8ff9-621d4eddcdff",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0d625adb-2fec-423f-9e8f-db0f6d0a6053"
        },
        "item": {
          "id": "f6c48ea6-24f5-4875-abae-62bb141d07ba",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fc7bb189-20e7-4ed4-b8a7-fbc0bd49467b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf31b9b-0a0f-4b30-8c08-64bf662ff3e5",
        "cursor": {
          "ref": "8a0ad165-f1b3-4fb3-9bcd-de7cc1ccd55f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c4e05335-4bf7-45f0-a2f5-911187eb1aaa"
        },
        "item": {
          "id": "4cf31b9b-0a0f-4b30-8c08-64bf662ff3e5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "89dce989-08ac-4d1f-88c0-01f3f0ab3d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1efbce-d4b0-4237-b560-99522d80d859",
        "cursor": {
          "ref": "add39e09-ce6e-4cde-ac81-4186d5c828f9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f2fc8fc4-1de5-4a20-85ca-e9f0a91f6a75"
        },
        "item": {
          "id": "0c1efbce-d4b0-4237-b560-99522d80d859",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4ae379c5-9eec-4742-b436-244bcaae90f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4b01ce-6084-42de-869d-bf524025ff86",
        "cursor": {
          "ref": "4a2cc163-9b8b-4add-a94c-f1b65ca704b4",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9aa99d3a-4891-4ff5-bb8b-fd534fcda93b"
        },
        "item": {
          "id": "7c4b01ce-6084-42de-869d-bf524025ff86",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e78b163c-b891-4061-a6e6-837b5f4aa27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b920ba10-71ce-4c0c-9c2e-c9deb2457850",
        "cursor": {
          "ref": "02a12b6a-a6ba-4b4b-b351-8a61397cab63",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f3cdd181-0835-49f7-aa07-56ed71e38b17"
        },
        "item": {
          "id": "b920ba10-71ce-4c0c-9c2e-c9deb2457850",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "70dba454-778f-429a-9908-70bd206901e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a168ff-c8a8-4e8f-beaa-2239fe6bb7d9",
        "cursor": {
          "ref": "282d43d0-9720-4658-9c69-d455f586978f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c721225a-d4a3-4630-95b0-6a197214cffc"
        },
        "item": {
          "id": "94a168ff-c8a8-4e8f-beaa-2239fe6bb7d9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "34b76c26-1281-4e39-863d-2216d5aa44d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb9ba84-a2cd-410e-9c6b-cbd1d0c05925",
        "cursor": {
          "ref": "265b6321-e7ed-4f01-8ebf-7a64a30f541f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3511409b-cd15-4d3e-ba80-669d8a1d348b"
        },
        "item": {
          "id": "edb9ba84-a2cd-410e-9c6b-cbd1d0c05925",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dbe02bf5-62e5-4b8a-b9e9-44eef38c987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b452da-f2b6-412b-a30b-4c876c63e1ae",
        "cursor": {
          "ref": "9c41a9bd-7501-413f-b8f5-0d91de0fec76",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3fa5705c-f5c5-4c7f-88b3-3e326a033e9c"
        },
        "item": {
          "id": "40b452da-f2b6-412b-a30b-4c876c63e1ae",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2e4ca159-e2e5-4c2d-b2c9-310a43622eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c36c0fc-b271-4ace-8046-e0c1e7bc91a3",
        "cursor": {
          "ref": "86587be2-74ca-4e6b-a5e6-80fe22c0ba6e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "522ce1d6-0bb0-4fe8-8680-7c3d09cbc26b"
        },
        "item": {
          "id": "8c36c0fc-b271-4ace-8046-e0c1e7bc91a3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f2fc02bc-851f-4f84-96d0-affd2ca5d0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbb31fb-ee48-48b4-9b5b-882618b7050e",
        "cursor": {
          "ref": "56899934-d8d1-4a96-8e86-a910d370cddf",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8c98dc1b-7978-4afd-beb6-243c41f16f44"
        },
        "item": {
          "id": "2bbb31fb-ee48-48b4-9b5b-882618b7050e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "48b7a3a4-fefe-4572-8b76-1327ceb4bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0473625-5aff-42af-9b61-aa05e6302960",
        "cursor": {
          "ref": "a67fb924-5158-436b-b0a0-03afd7088eee",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "66429f83-5ee3-4b37-a818-b1b58d447f65"
        },
        "item": {
          "id": "f0473625-5aff-42af-9b61-aa05e6302960",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bef55b6f-0424-4e91-9589-e9388c913b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810c17aa-18d3-44db-9346-a8290496e0e6",
        "cursor": {
          "ref": "94cf0d43-e75c-455e-ac18-72027f5d1eb9",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7f2610a6-94ff-4021-9faa-ac59b5350a15"
        },
        "item": {
          "id": "810c17aa-18d3-44db-9346-a8290496e0e6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f3e62108-a735-4b2a-a4f4-a18555e950c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb6eeb1-9325-4d23-b3e3-7ac109c0e5bd",
        "cursor": {
          "ref": "45b58c78-544c-4139-825f-7efea22a72e3",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4e54c56b-50f2-41b2-b586-24122429f45a"
        },
        "item": {
          "id": "8cb6eeb1-9325-4d23-b3e3-7ac109c0e5bd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "84801bfa-6eef-4fbb-aaf5-f672e42c6048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0903a44d-6c8c-41db-b994-08fb973178b2",
        "cursor": {
          "ref": "e270712e-9c6d-4655-93dc-5118c9b03a29",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b897ad81-2a32-4835-bd5c-8904826648c0"
        },
        "item": {
          "id": "0903a44d-6c8c-41db-b994-08fb973178b2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bd6633fa-f1ff-4f19-8276-de1bfe5a2e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b8fae6-e3ff-4b85-aff4-6cd8faa06b00",
        "cursor": {
          "ref": "1cca68ce-969c-428d-acea-90bb7b5c62c0",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "58bde2e0-d3a1-4d51-9685-b873d898605a"
        },
        "item": {
          "id": "07b8fae6-e3ff-4b85-aff4-6cd8faa06b00",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a9ac7fe6-8ac7-477e-98d5-52afa2c4a38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49192ad7-410c-4b53-9fbb-4c053d6431e0",
        "cursor": {
          "ref": "fb8affb6-4062-40af-80d9-26cae6825dfb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6ec1f504-21ce-4ecd-ae2a-e8302f6be00d"
        },
        "item": {
          "id": "49192ad7-410c-4b53-9fbb-4c053d6431e0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bf18a309-bff6-46bc-a920-c50a9de37746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b38267-3df7-4c6b-adcf-1dc4f7da07af",
        "cursor": {
          "ref": "244edd57-01d7-4943-84cd-3105515561ba",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c543da6c-e1b0-4900-b70a-f3d0ed52b327"
        },
        "item": {
          "id": "e4b38267-3df7-4c6b-adcf-1dc4f7da07af",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e408b4b0-20f9-470f-8f9a-cb8e3dd2638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd3808f-1896-410d-b5e3-ddaa33b754fa",
        "cursor": {
          "ref": "e1cf1f7b-08eb-4cf7-a621-1ea64e6a0d5d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "29df5c4f-f309-4771-bbcd-d416b14e0c1d"
        },
        "item": {
          "id": "cdd3808f-1896-410d-b5e3-ddaa33b754fa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ce71e9f9-484d-4a48-9d3d-078d5eb846b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921986ad-49d0-4810-b691-95182db4be5a",
        "cursor": {
          "ref": "f79ae19b-5ba5-4929-a65b-90e8dfb397f0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "40fdd964-a61c-422f-bbd4-0c1166622aef"
        },
        "item": {
          "id": "921986ad-49d0-4810-b691-95182db4be5a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2161a170-4cd4-4270-bf7b-de9ddba8425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d52291-ca58-4089-897e-9a9a3201bd33",
        "cursor": {
          "ref": "ac6a3e67-602a-4713-8cd2-058667dac61f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "969bf245-3932-44e2-be76-6fe135bfb4f1"
        },
        "item": {
          "id": "e7d52291-ca58-4089-897e-9a9a3201bd33",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3d181114-9971-48c1-92d9-d358333a365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad8db18-e772-4fc4-8bdf-f7e16a59a64d",
        "cursor": {
          "ref": "e49f36bc-17d3-41b6-9162-cacc821bc220",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7b148d84-0d41-4225-8df3-7142c770bf57"
        },
        "item": {
          "id": "4ad8db18-e772-4fc4-8bdf-f7e16a59a64d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8de29672-a97d-445c-affd-67e03bb54683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d0651e-298f-439a-9f86-883fdcf05460",
        "cursor": {
          "ref": "8d31a3f9-0a60-4900-aae1-ef15e3274061",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "53c92614-73ff-4f02-b5b3-22af98ba706a"
        },
        "item": {
          "id": "97d0651e-298f-439a-9f86-883fdcf05460",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "33171041-ac90-41cb-ab72-6d0db0719e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897edc2f-3c18-40cc-a2c2-1afa2ca968a7",
        "cursor": {
          "ref": "64a2fa63-71d6-4729-85e5-f0511094bf37",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "18419a07-831f-46ba-bab9-7a8490027bd9"
        },
        "item": {
          "id": "897edc2f-3c18-40cc-a2c2-1afa2ca968a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "42472c35-544e-4ed3-b043-2cdff855c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37901355-b5b3-4bbc-a32f-3a739cd6031d",
        "cursor": {
          "ref": "61625c73-611e-4226-8fbd-1c4c9e2ee7ca",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c456cf86-0ce6-4628-b5d3-5c51e4425112"
        },
        "item": {
          "id": "37901355-b5b3-4bbc-a32f-3a739cd6031d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "be0f0e05-52e6-45b4-84c5-2d26a8372a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157be6c7-8889-4407-8399-7093547a9040",
        "cursor": {
          "ref": "78d49dad-b153-44e2-ad89-c655a4c2923f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "846d5756-d812-4243-8825-3d5e14173f27"
        },
        "item": {
          "id": "157be6c7-8889-4407-8399-7093547a9040",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a46561e8-010a-400b-bf97-f0854a10951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a78995-964c-49fa-8a6d-65c94d4c1495",
        "cursor": {
          "ref": "172e928f-abb8-4f1e-ae03-e6b32270a5b9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c5631bc3-b7a2-4849-9f17-c16c6d7f58d4"
        },
        "item": {
          "id": "93a78995-964c-49fa-8a6d-65c94d4c1495",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8420d786-2a13-4f5c-8cc6-b8e1bdb75488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394ac1ef-2ea4-4541-8ea4-8860bd754b66",
        "cursor": {
          "ref": "de1e1fd9-5dd8-4ecd-98d1-d22f936acb04",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c8b1077e-413c-456f-b33f-eda61bceb39a"
        },
        "item": {
          "id": "394ac1ef-2ea4-4541-8ea4-8860bd754b66",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c9b5f606-3380-470d-a583-4a295950c22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0972edf5-5b9b-41e6-9406-d94e0ac4d111",
        "cursor": {
          "ref": "9c148a53-3446-4131-b9fb-39f3777e1cc7",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1ed05ec4-d544-4ff3-b074-593c82413ff2"
        },
        "item": {
          "id": "0972edf5-5b9b-41e6-9406-d94e0ac4d111",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c9be85c9-3aac-422f-8945-44aa01ef53a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1e91cd-0c5d-4fd0-b8b7-51847aad70ef",
        "cursor": {
          "ref": "b0ec987a-ff1a-4b24-81d2-386228a62345",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9f45f7b2-e585-4c8f-a582-cd0d899afdf9"
        },
        "item": {
          "id": "7e1e91cd-0c5d-4fd0-b8b7-51847aad70ef",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "99ca0db6-637f-4550-a06e-f78914106aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c127296-808b-4439-bc34-294790f7c51b",
        "cursor": {
          "ref": "baede9ab-7b51-49a5-a50f-146fd69d0d85",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "97beca20-2fc3-4088-a74a-5727924a89df"
        },
        "item": {
          "id": "4c127296-808b-4439-bc34-294790f7c51b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "14ab6b99-3762-4e5e-949b-448fb0aa0c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f38238e-0da2-49f0-a7c0-d6938852254c",
        "cursor": {
          "ref": "71ac5c92-2135-4c82-9a5d-c7724a39cbc2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "12dfc319-0ac1-43f2-8c07-0f46a9bada82"
        },
        "item": {
          "id": "6f38238e-0da2-49f0-a7c0-d6938852254c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "de716389-2046-4879-9c69-ccefc550933f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bf21ab-4ee0-4b52-9b67-52ccec6e237a",
        "cursor": {
          "ref": "6ae2dafb-964e-4806-86a8-b8b64c30fdb8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "364dc8be-7dd3-4453-b8be-8e6ed6eca0c2"
        },
        "item": {
          "id": "99bf21ab-4ee0-4b52-9b67-52ccec6e237a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "47f50263-ed73-47cc-87ab-1f10a3c483fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04707f4-252d-457e-b279-5dccfbf12f18",
        "cursor": {
          "ref": "3b887eee-fbd6-4869-b2cd-0f1af9f05d1f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a193e7af-cb1b-45e3-97f4-b181430122d3"
        },
        "item": {
          "id": "a04707f4-252d-457e-b279-5dccfbf12f18",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7a7210bb-f1ac-419d-849c-70bf3499382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4eb1ee-03cd-4d12-a86c-58ca4b277c24",
        "cursor": {
          "ref": "2e1fd3db-4109-4839-93a0-3ad9cb2bb6e8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1ef33dd6-09d6-4cfc-a6b1-57f6c91ee9c7"
        },
        "item": {
          "id": "3d4eb1ee-03cd-4d12-a86c-58ca4b277c24",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "785ac25d-8d99-4287-8acd-6627b210b7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb996c19-8000-40cc-9c22-f0fa82408358",
        "cursor": {
          "ref": "60f6ed62-dfde-4c14-8028-243bff99f758",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8b3be7a7-7a80-47ac-b421-565f43f6bf37"
        },
        "item": {
          "id": "fb996c19-8000-40cc-9c22-f0fa82408358",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d5db698-e9c6-422a-aa82-9c5b6a4cf466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6170ca5-a9c1-4e03-8c9e-fc8660405f85",
        "cursor": {
          "ref": "954779b8-fe43-4080-a1b5-34ea6dcfb80e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c48080f7-6456-466b-a684-2f745dfc49b9"
        },
        "item": {
          "id": "f6170ca5-a9c1-4e03-8c9e-fc8660405f85",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd55f3ae-794c-46ab-8627-d0951ab33bcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d543b0-0d9f-4795-a8ca-2bf6320e2358",
        "cursor": {
          "ref": "3a2818b1-e7f4-4bbe-9c1b-d621316555e8",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d2f019ff-d073-42be-a21d-341d41fa38be"
        },
        "item": {
          "id": "75d543b0-0d9f-4795-a8ca-2bf6320e2358",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a93b464-71bc-4a19-8cbf-5c5152fef339",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e5e09b-7aa4-4fa2-965a-334c68df7cca",
        "cursor": {
          "ref": "6b1756f6-2937-426e-8117-1a0c0c917056",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3bde62b4-b3b0-4066-b251-303e69c92c86"
        },
        "item": {
          "id": "b0e5e09b-7aa4-4fa2-965a-334c68df7cca",
          "name": "credentials_verify"
        },
        "response": {
          "id": "63673e36-deba-4d0f-b7d3-56547420b779",
          "status": "OK",
          "code": 200,
          "responseTime": 1541,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb52935-4423-4e2d-a326-0b55076fbcf4",
        "cursor": {
          "ref": "457d83c8-6dc9-4887-9ecb-c9536f2ef6c7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "585774fe-05cb-4017-9103-2488c20687d8"
        },
        "item": {
          "id": "dfb52935-4423-4e2d-a326-0b55076fbcf4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "222919f9-fd05-441f-98b4-2468096a0348",
          "status": "OK",
          "code": 200,
          "responseTime": 1583,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09583e7-ab09-4e7f-9199-55e02fcb5eae",
        "cursor": {
          "ref": "9b9dc1b9-cd21-4ce5-a40e-2d71439fb227",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d40cbe45-bed5-4b04-b14e-77487c6317e8"
        },
        "item": {
          "id": "a09583e7-ab09-4e7f-9199-55e02fcb5eae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40d1450f-1392-4e3e-baeb-29213ff1d04a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09583e7-ab09-4e7f-9199-55e02fcb5eae",
        "cursor": {
          "ref": "9b9dc1b9-cd21-4ce5-a40e-2d71439fb227",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d40cbe45-bed5-4b04-b14e-77487c6317e8"
        },
        "item": {
          "id": "a09583e7-ab09-4e7f-9199-55e02fcb5eae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "40d1450f-1392-4e3e-baeb-29213ff1d04a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b5cf3-ff8e-46dc-9f3c-34fcc523a326",
        "cursor": {
          "ref": "e3a677f3-cfc6-46d4-ab2f-eac57f227b0c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4e479546-09e7-4ab2-841e-4e988f14d9dd"
        },
        "item": {
          "id": "164b5cf3-ff8e-46dc-9f3c-34fcc523a326",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f380aa3d-31bd-4f84-a8d6-e6c2ec134175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6837a-c70e-4fde-8c3f-dff2936c1545",
        "cursor": {
          "ref": "5ac18d16-258a-4ca9-aa40-5e0a70cbc58e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0ee7f877-fc43-45c9-a18a-5095a6c4f79c"
        },
        "item": {
          "id": "06e6837a-c70e-4fde-8c3f-dff2936c1545",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8f02b174-917e-4f33-a0e3-4380ea8ec8f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}