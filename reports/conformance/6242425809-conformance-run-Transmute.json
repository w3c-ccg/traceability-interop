{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8c1efbd7-1785-45f8-ad20-0a8fd8d093f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "37fe360d-74b7-4023-adaa-a7e87dfcff45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3581251e-4521-466e-a0ab-db5c44850f3d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a9f8a4d-d16f-4b46-8e6c-c27fdd82b156"
                }
              }
            ]
          },
          {
            "id": "c4b0a813-6c23-4f64-80dc-21cbf202aa8c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f5c6d30-83e8-427d-8396-776c4f3d6d26",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d1a44c44-4bb2-4706-ba23-ef37bd735907"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7f75faa9-38e0-4edf-99ba-bc28dcc3b034",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dd8d4caa-8389-491d-bc51-7a1806b0e62e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3ca1b2f-cce3-46fd-ac13-b87cf16fe2a9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ecfa235-5589-408e-b251-4235f4462181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29c2129b-a032-46e4-a92a-c19a1c593172"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc4d3f56-f3b4-44e7-a9b8-8190c7968692",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "288552b7-5504-4433-9460-442cb1869838"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfeff2e7-04e3-418e-871b-066c69bdeff9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c576a37c-0a97-4a03-94ca-0b8a96e927a7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cda75134-5312-4453-9120-9f7403775339",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c8fb0d2e-02a8-4f23-a89f-ea21e88149c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "326130e1-1096-402a-99ae-2ab67090048e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cecd014-340a-4f34-96f9-1063d1d55351"
            }
          }
        ]
      },
      {
        "id": "4ec6be6d-a67b-48e7-a143-0633d7f4cbd7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3322ebbd-2a0f-4d92-a7fe-7c96d9982474",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53a1e3a9-9849-4abe-85d3-a6988b250201",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c258af8-4e6e-4fa8-bcad-4bbbdb92cd8e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c834b1-ded7-40bf-a813-051cbfa25e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "025a4d4f-44f6-4841-bba5-41335b4606ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74366dfe-ad9b-4435-80fe-62dd77a530b2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e7e108-a9fa-4b6c-bf54-f335adf817b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e555a23d-1792-49f1-abd0-0923b382a508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506eb735-d0bb-403d-bc55-b4439edbb2ef",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b980d1cd-0ea0-442d-bd22-a14d4904af2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a17a8465-2c43-4601-84c9-cfb4f5ee98e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85f5afd9-0bdc-4efc-886f-fc185e7e1af8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "add174a2-c7f8-42b7-9fb2-48e6087a876f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec14008e-0fb3-49ae-b0b5-837dcb44afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0624af79-2edf-4f99-a8c8-1c8472e7f8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ad1a18-5d9b-4d91-834b-c7555f33dbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439fcdc3-2e4f-4062-8f2d-b05c4f6a5fce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0eaa753f-e2e3-4862-abbc-ec012905d6d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86739f0a-fce4-42c3-9d72-b2614a714e2c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc3a92d3-074a-42ea-8a44-d69e0666a0cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e6dcbc64-f4db-4056-8568-7b19346aa360"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b70d16d0-a791-45c7-8959-2ac064ce8747",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ee89cb3c-f584-473d-a56f-9a1a93c7a8ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33d4fd44-5cc9-4c23-be57-c0067a206ac9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bf781d6-58b6-4b03-ad66-225c3bcaec61"
            }
          }
        ]
      },
      {
        "id": "15b112f4-8351-4897-9aa0-59bd181cd402",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7107214a-c704-4de2-bd16-d6f2ea489107",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a40db014-a73a-4887-93a8-a632bf463a23",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "145b0d40-f55e-4b4c-9025-17075cbd4f31",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeb164e-bbc1-4f4b-bf8d-5d7b943af657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5910184e-8b26-49b2-830f-ebc90c2cff2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2262da15-70e3-4821-988a-66efe3302911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f533519f-a16a-4daa-9696-33d67af58534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafd0e69-8a6f-4590-859e-04630856e29e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15db8ecd-f90c-41ad-a182-46fc2ef09ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6831eb-2279-4814-b388-9125b25c218e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0da842-5960-43e9-a817-ce98fb4c7222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3022dfc-0dd2-4d0e-bbd3-85d09e562dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b9aef-b279-49c8-b847-81f09864540e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12800a27-1a0c-4961-ac38-faddbdd8bc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df093a85-d49e-41bf-955a-7dcfdd4be3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229f9fcb-0b94-442e-968d-599c71d11521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "266c1ed9-4ae0-4124-88f1-6856746db75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e5cefd-1fa6-4832-bf13-b527cbbc00a8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e2942-bdea-4abd-bea0-eeead5804b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c36c66-eb43-4582-bb5a-c1e5032f62b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c5456-c73f-45bb-9b8c-7ec1b9af84fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da14ba11-6b5a-4517-ba30-1bd7b658cb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3541383-d0d8-4acb-893f-977b9b2e9964",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40207b4e-179a-4920-b616-5f0c65141537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33553a7-1d8f-4271-9e56-a78fb65dda9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5b0cdb-2e27-4e06-86b4-2630dfd8c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8998b0ca-0baf-49fa-8601-81f779ca00d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cd291a-1d51-4c5a-8b17-6050ada5beda",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa35b263-58e3-4804-baf0-9ffad0f8a98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc68be4-8d82-4633-aacf-679cf2d507a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c132aeb-9253-4f9a-91aa-e853b38ae277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e15181a4-de91-463f-8eeb-87750fc276a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dfa71d-cba9-48d5-99c5-f88e91aae12f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258fedd0-6e42-4e90-89af-9a8a1ac9e890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ffab45-fd90-4ccb-a6c6-548efa3ea5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeae90c2-166c-4598-9e91-33e7c8c777fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c88594d-d36e-4dd5-b677-55a6dfe8091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dac9fb1-c051-44b8-aff9-a21af1dcaedc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9318f4e0-164d-4701-a1a7-f26adc4a4a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc133ec1-97ef-4dc5-91c8-912bf50d2182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816f35ab-519b-4683-aaf4-caf26b8aeb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb1618f0-0200-48b4-baef-ce4cac15ab95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810606d8-6316-4e77-a5d1-fb9e6f45e876",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4826f1-2db4-4f9d-824b-1f38eac37bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a541984-2f3c-441c-bcc4-13f3be8d2d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560ace1f-4184-4eda-81e7-4ed2a2bb9cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a9e0fc3-8244-445b-a6c5-835491b363bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380da13d-610e-4095-a237-90c460d0802a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b927ee0-f49a-4a76-b52f-8a15e66f9188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70574a80-d7c1-4bfb-856b-6f7c91b68b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b2a23-2d7d-4857-b3d0-07c1f6824521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc99c446-5150-46a9-910b-ee03747cb44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b017be-9200-4290-a567-101f18af08c5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fafa709-fb97-4aa9-86ca-abb5191ed805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddf093e-0b37-4758-a9ca-2e0cbe9a2066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b62fea-19ba-4492-a7b7-2b63926abb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99197c33-80d8-4a3d-88f8-13d3ad6d142a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5713f0-bbe7-4923-9e84-27f12c713624",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4e26e7-8d9c-444d-8148-ac5a9bcd0630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb059638-efb1-4b84-823a-86d0c6867692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a56891a-2210-4cd7-9b29-d0286c5d722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b1a81e8-401f-42fd-b4b3-9d3c9cdf8f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312e9830-83a4-4c7a-8ad3-3d366fb416b2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd37e8f-901b-457a-9af5-87230f88e5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad63cc1-302b-4ed4-9012-358f134426d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ad44c4-a884-4726-ba80-7d79ae78b5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06eeaae9-9a46-4833-aa63-ab6cdedd29a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae35ab23-1aba-476d-aa52-1be3dc48ab90",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf626d5-24b0-4a52-821e-b353c405b392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15da3a7-97b2-47af-8fe7-52c442ce7f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c8cd0b-a02e-41f0-ae17-2d98fa9b583f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f957884e-d48c-4a22-b9cc-c9d7f84cc6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425ab7ec-a10a-4ceb-8b57-34747ecdbd9c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930f797e-9e06-46bc-bae7-3dbe53fc1a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccbd9f0-0cb2-48f7-bb15-7e1925d8f360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d515aa-b628-4b5c-9803-11a02bde9b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7618d273-f97e-4a3a-8432-9b551d85500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b136f9-3f42-4699-82f5-8ed9241e1e25",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1502df92-e6bf-4034-a06b-23d4b2f8602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e6b4d9-9e21-4a07-ac66-fedddebb5b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedf814b-f316-42e4-aaaf-00a570034620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da5dc2c8-0c69-4c81-bed7-2cbf18f1ee96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9033c21-5a72-4936-9570-e960e4db57ba",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b6d809-a1de-4b51-9ed3-7deb8fa63010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9ccc4f-e4ef-44e8-abde-97a7cdedef7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88116c5e-55a8-4b9d-b06d-616b6d214419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef9c7525-f6a5-4f50-b004-c4749af81541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aa9b4e-6314-4104-b73a-56c2edf601ea",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1393e13-46e0-4006-8f91-925bff7fb149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0068a8d6-8ede-49c5-b9a8-f4802222b067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c673ef49-9a3f-4638-b116-96832e385428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "684e1d56-671b-4fac-8647-7e4843dd7864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbfd391-1613-48fb-b1d5-8ec439e01421",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128a42e9-75ee-40b7-ba17-917d5f21b3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa38f789-b97e-4193-9355-e67404aeb256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa87033-970c-4612-9072-73f65692a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a986fd-6c04-4abf-a12c-ce86446e345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc56233-f59c-438d-aae8-e592c3ecb6c3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea4f6c1-df35-4158-a107-c927e96db5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e3b730-c63e-4683-9b62-a68ab61c6eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6b3322-924e-41a3-a102-9e4df62e93cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e678bb1f-9e18-4330-a909-78278d34e274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78917992-10a8-4566-b8e1-991beee5f958",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2407261-1e18-4c24-be2f-825964111b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f9d0a3-6f62-481e-9f73-d94dad734dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24dd29a-1f16-46cd-bbd8-b26626cd77e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c0bb6e-39f7-44d8-8e4c-038ac9f8a97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793502d9-d365-4d51-ac85-da22782b4188",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d88e8-1b3a-4d9f-bab2-30c04bd99604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ab3241-73f4-484f-a10d-3d703e76b2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c735790-a8f5-48b5-85ae-8026292ffc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8314dfd1-46f8-46e7-9774-b7e28c8f537f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da83530b-f61e-45b2-8410-9546bac884ad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64334a78-74b1-49e4-a686-7949c08f95b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edc4c39-47de-40ad-8510-bc5ebe72f736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a988a2-a6d0-41fd-a357-e0d5ee9cbb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c962aa41-f896-4819-9b36-9d28a4b12d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc30a02-1292-4450-ba85-faa83b92babd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe38a9c-4cd0-4ed3-af4c-a6a2688f4051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40da4ec-916e-407c-8bc0-767f45135640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b1aef9-29b9-41f5-8ea2-f2841fa11ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4965ae-9c8f-4e02-9606-a22311001b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d36894-02b0-49bc-aae3-d198603eb2b1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f97a4e2-b335-4e2e-af0a-b2ef25181318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca52c8a-72ab-44c9-ab38-13b94e365d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6b176d-c045-486e-844e-f1051515ed31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ce7aff-b198-448f-9aef-9470819afb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15df5d5-1de1-4cb2-a7dd-b262e0d58e75",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d9607c-2f49-4739-bde6-c5089104664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19731c55-e01a-4730-b32d-b49ba4380b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f851da7-30a4-4266-b4b2-8d2c98567b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "368a9aea-5ba3-4c49-b217-547d026a3090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cb1ba4-31fc-484a-bc68-727a2ae340af",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26434320-0795-4e3f-b0c7-d3dc647dd1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707a7a98-c8ad-488b-8a03-cf6e1713eba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ec51fc-cba8-455f-b3f3-49daa75d6017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0addb8-3e10-4366-9a41-91ed236657b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec1b5c8-fe5d-4bdb-adac-e42ef306ee42",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82782a08-7ccb-4768-b5c4-cd67e8e56d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79b8b14-ff90-4393-b3cc-80cb19932cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c33bf1-7865-46ae-acfc-250d26b0a9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f5cb55-bea2-4b05-977c-4330ecfffe71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcaa607-fb56-41bb-98ec-36a888aa245f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9316a22-3cbe-425e-b36f-a4978eb47ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bea22b-81db-4bf8-b265-aa1478f952cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe69e06-1515-483e-bee1-77c9b0efedef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbace322-6bdd-414c-98e5-d8e5be23f6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2151b9-a076-4ea3-a1b6-7ac4cee91952",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f85c68-d8d8-4abf-8a05-972e6c449b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb711465-6433-476d-9f19-c43e0f8d4a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019d8cf0-2de4-4d9d-9b79-9f44b9220a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9d6a5b-7e9f-40be-8b9b-31b89273179f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a54011-f707-4902-af80-79536d3d807e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d741a168-83fa-4a0c-813a-fef83c218494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b649b3d7-6c23-46b3-8f35-7241c0017c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee63513-1ad0-4ae8-b22c-a60a02e0380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "687b7d95-f2a4-4347-a6d5-9d8c43693385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca735a38-0e74-43c3-a5f9-7dc857e7fcb8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199b344a-d7c0-4eab-9ec3-0e563a84c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4b8f88-dbf6-4fb2-9144-f9dfad2968de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdb176d-ca32-4c03-a6f3-aef89559dcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4de68d3-9b8a-46cd-a851-ee3aa41e57f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172043ff-acd5-4953-8601-7db6889e14fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a0ccb-9b15-4546-9af3-645dbea8ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bb9c86-f8e8-4833-bad9-681158e57496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c66e556-be25-47fb-975a-d5b163d0a3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "338582b8-d1a8-4416-a037-efecbab5b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4e73a7-fe58-42a9-be5d-b72f0bb4f75b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a31552-ae90-4e03-9275-a170e9d1949c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f1688d-b0de-4bf5-a3b9-4a4d92424553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faf419b-344a-4078-b50e-4a6412921553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afcdd63-edbe-47c9-9503-8892e109510d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e19a6bf-084a-45eb-af88-740fff63c185",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23611a02-746a-49ca-8546-7265b1396a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27773b6a-f387-40c2-9726-3c0358517643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cceeea-7377-4dd8-bb8e-b0904d0496ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7a56b2-d1d3-4e8d-9f50-a46a2f033631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f901be63-62f0-430e-bde8-52e514fc3471",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955542d2-60bb-42f4-87bc-90a065d208d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be0cdba0-d5cd-496c-a9c4-8e96c44cdbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7001d88b-5319-4147-95cb-c84727b9f025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6e3eb4-ed1f-4b6f-8cdc-2659154144dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a107d6e2-6e3f-42fa-9918-f93afd7238db",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de966bdd-f47e-41dc-9533-8090a3750aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961778fd-c858-462e-b90e-90974bbb281c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b955a9d-8a81-4533-b736-ebf8689aad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23e0beec-df8a-4977-a611-1ef63f5d1c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032532b4-e9ea-443e-9fef-96ade73461d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16daea6a-ae9e-4608-a4f9-255bcd25b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fff9c0-4219-489f-a57d-5f0a6eed02b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fe22ba-87f3-4b5c-8849-07bc0539ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18899416-6178-4927-adf2-c259e5d970c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816608ff-9ff6-4552-a4a6-1582924c0d54",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbaceb9-18dd-49b2-979d-c8992c2668fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe13a16-6c18-48ca-a457-720bfb465e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbc2a9d-b431-4026-ad1e-7be95f800bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f1f601-0b50-40c4-85fd-d0f24319fe6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b8b283-60fe-4689-a77d-555b0e5cb360",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940aac14-b8be-486b-80d6-1b7b119a432a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56963eca-49b7-4c5e-a162-8f15045e9096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b40c991-24ce-44c5-847a-17eeb4bf0ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b790e3b-c0e7-4a26-b7c5-0c12aae1bb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080027a8-a87c-44ef-96ee-7d4ed4007ccc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba2424-375d-4604-9310-f8159a3ff5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08d2010-4ddf-48f1-8fac-93843e6ea58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c62548-5315-475b-b31b-85be783fb12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f09774c4-0ccf-4ff9-a86f-a3b3af4f0188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10528680-8de1-4e6e-b245-b28ea74f4129",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b5cb6-4cbf-43be-b972-c9ea67322601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b513112d-3358-4feb-a503-eeac9245cc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d295c7-4cef-495b-b107-ee2eedce638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e11db5d9-ba2c-45d1-9672-d68c69a527f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9369bcbb-8300-4f7d-a9f7-75b25b017729",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a869895-b2c5-486e-923a-79e99754a579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b39649-3245-4625-9c7f-32c7cfeb7091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c441dfdf-43fd-4001-9188-399937fe870b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd90efa-858d-4c0b-a301-ac8d6b9d0d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea2674e-67d9-4fb9-935d-c654637cf89b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a789a5-531d-4227-9352-6759b40efa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf5e279-d7f6-4c15-bbda-6782d33265e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15140632-4e27-426c-a80e-615dd17e8a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41fc50f-7120-4348-b5bd-217dc4aed6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbc3cc7-9aa9-4d8d-a4c5-f27332951ab0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76e22c1-716f-4b82-943b-b37034c53d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e91c146-412c-4156-976e-c24a5f239da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8432e5e7-7b28-42c1-853c-8dffbb896358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11fa66c-d462-428c-9f0a-5ea20023c852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7356ebf-6634-4e7c-ba6e-147709a02db9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33785378-188b-4d0e-ba93-f84d48b0632d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b058ed-a429-46c3-82ee-ad43c70056b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c865c9e1-f41d-4365-861d-b17e70857f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e551f9c-aeb2-4b78-ac3d-6758d3e0ab81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a82283f-4561-4a39-90fa-0d9550bd7d71",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f77c4f8-849a-45c2-bbc5-64cbd77e89a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fbc571-9a95-4200-95a8-a46646a42d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a4b9bf-3b5e-44c3-a37a-f1f5fa19d28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca090069-7155-495a-af6d-5414bda5de9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ee0245-29de-4b5d-a89c-a8bec4a2ea0b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593e1b1d-e63f-473d-931a-812519bb758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3168b546-616c-4a6a-9d5d-6e1e63cdc2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982253d6-8b9e-4bac-878d-c6509a8bfdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "299ef87a-aecf-4950-a8dd-bad294b30352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606b2a57-6bf1-4245-834c-eaa8b296e2d1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a557aaca-b5a7-4a18-83af-f584c0625829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82325eae-efff-46af-8f7f-c73376c01f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9714d4-8f35-4625-b77a-0a21b076ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb2897f-fb28-49a8-af40-80610b52a88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a594d2d1-00e0-4e07-b33e-f9f78d47b232",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee23cc3-d9cb-4a69-a33e-8b87158f7ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3c82c4-b64a-468d-b3be-1fe581c4c702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40100a50-1170-429f-9568-1d9e13a503eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b89aff0-915e-471e-9f95-3da703e7caae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7251713-1696-4dd5-aa06-d6d156a542a9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d888ba-997a-4a0e-bc29-bd0a8a70ce65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac789b9-81d7-47ac-985a-0932cdfb93cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd5cfd3-7eaa-4551-ac09-345c5ebda350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcf7596-e8a7-4803-bd39-9952d38b53f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dc6019-63cc-4ceb-9cf0-92e27aaa5854",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2648c46-04ca-4cbd-b3e2-f8b7f52589a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4346503-d5df-4552-95b8-28b0c46335fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8155ac4-61f1-4d91-8770-f03c16e06c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17dce83-0421-4912-bf8a-c94fceff7eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1010511f-7ed4-4fa8-8567-cd30d685b45a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a7852b-dc75-4ee8-95bc-273196a987cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aae4a7b-2354-4c5f-b62a-70b2cdaee1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b613216-ea45-42bd-82e6-97d4e1ba2f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fea046-3c2e-42aa-95ef-c0caf71be8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353358c4-f5b9-4ac6-b13b-46ef46645fa4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885887c7-4595-40ca-b455-a2d47aac6987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a17ca3-1fad-441e-9b7d-3cdd245df914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92be0e2b-6f40-4229-80af-9a2ce96d874c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea12eba8-baa9-4a87-badc-0ffc02bdc7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef69f0c-f90c-45d7-abc8-7d28786e44e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a375b70a-c33c-4ceb-b0b3-59f7ba293d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dd472b-fdf3-4894-bed1-72e09cb03fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dc94ae-cd1e-41a0-ab8a-83837cd2a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3c27ef-f66f-4531-9041-3f33a3e2c748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce79bee5-025b-4347-8f42-da954a775b02",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddf64fe-989e-47d9-a226-9ab616c38b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71aa29ae-2456-4a04-ad1d-f0015567f5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85065184-5aa5-4820-b9d3-4fb2ae8c6394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6112ef4d-4163-48a5-a286-97e8d1a67dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9a8ed6-4808-41d0-a7f3-5fd190b7e98d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a429da-93cb-4cd5-9fda-65b1a4a05bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397efc29-c016-4fa3-b71c-ddfdd5abce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191272b4-f305-4531-acd4-d5405cc65904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acf567be-b527-4c4e-ad7c-4c6ca05ed023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3727e9-09ff-41e0-888a-2a12fb308dde",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bb5f73-314e-45ea-abd6-15b758fd7749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb8b22f-9f4c-4568-9bcf-6580ddba26de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6f0167-3256-41cd-9133-8cdb58d8c669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d90222da-1871-43f9-ae93-1d132e78d8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b0a1fd-0ea0-4560-9723-563738c04d96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3539d6f1-b146-4b10-bcbf-c85c93f30b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d216e462-c27b-4d58-beab-63bda4742150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeba3744-8427-4266-9d04-234a7d4423e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3c294c-0b64-4122-978d-b54c97ad7be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4fd46e-c5f0-42ba-b7ea-19693d1129a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc60af8-8239-4d2b-a0f6-0a131d67aaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a1d6d0-59dd-4756-bf98-7bcbd20fc7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f300744-2d90-49a4-a03f-d0b42950c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9efe89-d2a4-4f91-b99a-3d1ae1ca9d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c27818-275e-4431-aa25-eacf2bbd3690",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a677d5-eeaa-4058-a8f4-f88f3ee83f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928afc09-3ddb-4b73-8970-815dcda35acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b636b426-e151-472a-97e7-559bad50debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0988ab-d8b4-4d29-b710-2040b9f4b434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e00888-f525-4cb0-b082-1d62e8e0bac9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411a0621-539a-4e09-a3bf-e61d1fb9313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e64badc-3336-4fd0-8c97-ec97662817d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae257d1c-19a5-4bc4-b126-d0eb4c1c495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb2c1dd-406b-4c70-be74-145b303c635d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8981272-c59a-4099-946a-1517e193431d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c38b59-72d4-4428-9a8d-9fb9a33cb784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bdc8e6-2301-4fe2-8d7a-3ae3b5fa2f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f43dbd-14e4-419d-9767-28fecaf0cee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb8c596-d956-4c2b-ab98-658e37835aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabf69aa-8d85-4d6c-ba82-1685379faf4c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7776b52c-af1c-4e72-864c-79c222836c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff06f57e-d574-4d12-a26d-9d806d47a1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f51d77-f97b-40ea-970d-344079182b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "feef572f-2a60-4dea-a87b-9df3e50bbdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f05f329-841e-46ae-8030-29c452ea404d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0ab47d-04df-4cf5-9ffd-c8ab69fe5059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a09cc95-8c39-4298-8844-8740b3c33c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d4cb7-1756-4337-8168-4e7e916ebd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "903523d2-0107-4e9d-92f2-80805f00826a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c04ee3-99ad-4d04-89ea-dd2af658b3ec",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71137d0c-ff88-47a3-9d05-3aa3056215a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51008d9-2fae-4fff-a936-852875f7db2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bc7bf5-793c-4dbf-81f6-02633f52f0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a205d60-969a-45de-814c-1e0f97f62e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e018f-a0ff-4857-be7a-a3ef9f9ef357",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e0559a-e218-4e39-9760-be9f9e7a2449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100af787-a2e3-41b1-8966-a20fe1ffb02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c02914-8754-46df-a878-26ea4f395f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3906dd50-fc46-4f1c-8a06-7557be2a130f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2054fc-bb03-4622-9167-d70d428790d1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f57b05d-0743-4241-9500-6e934e1426e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139ec423-8e78-4c84-a92d-13f9e6f0bf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd313dce-60f4-4301-8709-fa61893ebb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8160bda8-660b-490e-b22d-51c8c62d7a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ee4302-3411-46d7-8794-07acaf8570e1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fe40b8-f37d-4542-a1b8-a2790cbd7506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56fc2fc-a7ac-432b-9247-cb8d40bbf062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bda09a1-e1af-495c-9238-fa43425afbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "050af8fc-3370-4cf6-9ac0-05b2135cc8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beac0484-7524-473d-9e6c-f6c0b10de83f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dbe8f5-239f-4db8-93d4-096ec0bcc8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d06b752-b250-4740-b04a-eb368424bee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb9445d-662a-4c5b-8a9f-70a98645edb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b6d825-2019-454c-908e-324e2c8e29d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee720a0-c843-4a4f-8e8b-813810bedfc7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f620cc1-f11b-4829-8bf7-ab848bf27e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7721919d-f702-44cf-851a-9376a33cbbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d28522-f61c-42c2-8f2c-03e2f0268776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b908fb-3a0a-4928-b05e-863966e769f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e598e2ba-b6f6-45da-bbbc-8b22381bdb13",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c526e51c-9d71-44e1-aad1-c36a5831e317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b07226-b25f-4bc9-a2a3-a3e82a76930d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb74664-e4b8-456c-a516-5d1004e1fbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3172b8d-e185-4769-bf73-e2b8389e7764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c9f15b-8d8e-4007-ac2f-93d9a122e1d7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15330e02-0e36-4793-8042-41361c341839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9127f9f9-ea1f-4616-a133-c43f0f3c5dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a9c93b-c1f5-49b1-b290-08e87dc7b7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ea0968-fe65-4ff8-94ff-e821577ddc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ee7368-38b7-4cff-97e4-df5c118adfe0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ee73e4-7244-49ed-b174-16496fea8dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ffe359-3eca-4781-96ff-58328a349110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b24571d-e51a-4951-95e6-3f5f9a4cca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de5d970d-16c3-4e95-8437-72b4402f7576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2170389-6898-44ff-a8ca-751d3e8047ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5da9fa-8565-4616-9e17-486251301699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9def84c6-cabe-48a4-b3dc-13893efd80a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a4fee1-7a5e-4911-a414-904e2b000a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fe67ca-f5ab-4de0-a4fa-1f0c19e5b399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95fc12a-3241-4f60-9196-02c34756a926",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b4b7d1-1584-4d5f-9cdc-f4a35a08e922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21d8663-9cb4-4cbb-97c3-665c5d46700d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b543d5-35b9-4cb6-a9a6-2033962de6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c10db5-fb65-46b3-b699-c88720de0abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8debcf-006c-4919-bc42-fbefb83e50af",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e889a8df-d107-4861-ad91-a240d7a6071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03587176-570b-435c-8471-d200e632e384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b563a040-225b-4a18-bdd1-78281975425d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4405dc-4704-4bc1-93d2-2ccb6e903767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903c3905-17b0-4e22-916d-4f8a1e1a9665",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc1e45f-1e32-46e5-8b87-d3975a290efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a42763-d0f1-4154-b939-d015f6f532b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053c376f-fd13-4d40-9dd0-68dc6d185f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec133b54-0589-4436-b289-4a50a49493c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011d79dd-4c59-4884-a12a-cca3a9eada45",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d595f09-2e79-45c5-864f-7e89966d71f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a20181-bb6f-48e6-a1fb-d966f2d0183f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42ebddf-c761-4fd4-9e89-11b0ad707ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d2f35b-99eb-4d70-8f89-19c4b983d91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6013ec57-4b32-43f2-a608-e0d38e0eb0d6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7d273b-86bb-4a0b-ae7e-95ddb190da99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59a3404-ee89-4b6f-bb3f-c45cab3375a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de5387f-d886-457a-87d7-f0f8de8b22e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75f27ec0-3674-4faa-a614-8f3c11df60d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26da1df1-63c1-463f-b444-22f3bf3131a2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7690b381-2e32-401a-8eb9-e38031a65f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0f4671-8ca9-4014-8849-9cac9f8a549a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4600e1-1397-412b-a2bc-9226aa6f0393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b61c988-ecfe-4797-a067-3512c17f7e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf67770-96e6-41ad-8ec5-8a790b773ae1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f25422-e6d5-4e14-a893-bd4a9d92ee3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c78633d-500c-4cfb-895a-b8f39254e21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb3b1d6-db03-417b-a315-594b6a577738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f02ac49-a129-4343-a722-9e1bd465a296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5427699-e8de-4677-b00f-565b9c7152f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bd83e9-72d7-4b1a-ba61-cd0f31b934fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a35dc4-846c-46fa-813b-b421f1812309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5929fb6-17dd-4883-b387-35254478e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8a4bdc-948f-4870-9a32-09763bddc05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f0b8b8-9f75-4ad9-b735-648abd3a0e73",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f059576-1018-4584-a4d2-5a2b04442944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8355c762-ba3f-46b4-a87d-390db1db5975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d764d8b9-5c01-488b-a5f0-399fa5701f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2677092-a9aa-4d1e-85be-272185e7b2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a780cd05-f2e0-4216-849a-333521cc7858",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3717425-181f-406e-ad39-a88406fe26ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dcff38-cb6a-4fec-814c-6cf29165fc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247339de-e28e-4cdf-a90d-b6f79cf78a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51a8288a-e031-4782-9db2-9e334431614f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c91822f-37e3-4f2d-89ad-32beb03c5155",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b9c2f-2de5-4517-8bf1-fe1415a2c490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842138f9-e949-475d-a8f5-f65d12281f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bff415-0a2a-4e30-9870-1fdec5a7fbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "507e629b-0559-4ffe-8d72-d2d41d80c14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93be591-1134-4169-944e-775fe07de9aa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7245453-e9de-4bd8-a459-02724e032d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3897e175-35f4-4bd4-8f20-23bd58c87cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4871c6e4-e009-4e00-b657-b3747a913d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfb5435-e251-4dfc-bcd7-6a6d800b6905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce4fcba-0c7d-459b-98f2-415142804a28",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d57831-4903-4120-9bb4-c195ad73097b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd75395-9bfb-416e-9979-8224156def30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c8cc33-ea3f-4769-9043-4c63c5a75925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb083d-9379-4f5a-970e-2670c9e69d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7ac63c-f245-4d52-be73-873beb543e9a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef825fcc-d5b2-48a1-b3eb-dfa9a21dc920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643a3357-dbd8-433d-a1f3-46417019fe0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcb0c81-d9df-4571-ab4f-033922db2d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d8cd60-e972-4305-9105-d0938895b9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bd5a53-6f82-41ff-9647-d9d6dd3d0bec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847bb98d-a9cb-42a7-95ef-52dee91f0d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81c4663-0481-4f0d-a8db-77ff3d62a182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2a1169-7d42-4bb0-8a4c-2b3ab8f25229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e385a69-34bb-4f0e-b811-d6f2971f5e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb5d23b-98c5-412f-a4fc-5d70a802d3bf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e752983c-2d6f-4019-8a6b-40bf762ca244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4a4445-5608-424e-acad-46bec50d175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a5024-6875-4936-9b14-d83e22d1b90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "02f2cf47-4a13-4af0-a507-e7cf9357a896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca840687-a3a3-49d0-b9f5-6c5f17fb87b9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70c3fe2-e6fe-4422-8beb-2d8aa6673635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "83db40c2-44bb-4740-b2e7-7d2b605dddb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c1617f-3c1e-48f8-b749-b546faa171f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e26840-4ea5-4da3-a94e-079014c7d3d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f56919be-eb87-4268-958d-a5ffb8ba9af5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39635af6-22c8-4e26-9293-b54b3c4c553b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbbc628-8a01-42e7-b9ca-6055a8e0ef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38b37456-cc59-40da-9e0f-4dc3c05ffda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1849e9-ea86-4f8d-a549-6ccb21cf4b3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed5b30a-f97b-42cf-b465-abdf7a2de0ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a338e4b6-d39f-4afd-9a23-e484247f9f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cb6e3b5-65a3-4333-9b72-aa45d25ca259"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf711cfc-1130-4a2d-9f9c-6e689a975121",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "169641f7-ec3c-442e-9fbb-590a36b43cde"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5ebf769-9555-4361-b86c-435aa3b95f1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59c648b4-0af7-484a-b26d-31b83560b6f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8980c65a-ac5a-44eb-8c54-5f101fc9af0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bf5280a-addc-41ca-8269-010ad61e02b2"
                }
              }
            ]
          },
          {
            "id": "a4f9780a-5be6-4b63-8765-537f38703d1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f04b13e-a99a-4f86-b1a9-8804803e0dad",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9933e3c-e90a-4b0b-b744-03cdbf95ec98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d852367e-de81-4795-b122-7b086a1476cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09baf4a7-49ea-4615-a063-e7d704b32d63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06f831e4-5bf4-4564-b3b4-89d560e1605e"
                    }
                  }
                ]
              },
              {
                "id": "f89c3bfb-0b30-4d89-a917-fa17dffb4abe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01507f8c-891a-4b4a-bb27-1cce0577ddd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "868d211f-d61c-4568-89e4-c53451b2507c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4be627a-9b1b-41c8-abc7-b2d4e79c8eff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cad87d7d-4c30-43ee-9615-858b9287b888"
                    }
                  }
                ]
              },
              {
                "id": "f511b294-0c00-4007-b95b-cb20afb181ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f36e14-87c2-4435-bb24-69aaf39585b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66099bcd-ed96-423c-9fc0-ec755bee621a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c24432e-e837-4bb0-bf7c-80d169669cf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95aa4a25-4e83-4f5e-a576-de9e771364e5"
                    }
                  }
                ]
              },
              {
                "id": "4e353514-239f-4272-adf1-76e6b21857ba",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "011b58bc-0c90-4929-86dd-e85784e9b964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70a84fab-e4d8-4b61-b68d-458879a1f262"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a26b417a-4e6a-4a03-b393-7ae1e993b7aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ea899377-1f4b-4227-a3c3-67a4ee430e5d"
                    }
                  }
                ]
              },
              {
                "id": "52717723-c589-4958-bcc8-146bf376e4c6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95f48565-14f2-4830-ac7f-120533f47434",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73430203-baa1-46cc-ab5a-539e7e5d3025"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36e0d5e9-0bb4-4c1b-a987-c85407fa8427",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "42512c46-5ecb-4790-bc43-db742deffcff"
                    }
                  }
                ]
              },
              {
                "id": "ac9506a9-53c6-498a-b43d-1b625e4e40d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aacf013-b885-48ad-992e-f9acb8d3e8d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e2dc72b-63a0-4a45-b463-9eabc35f42fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c8b69f-8051-4a31-8f85-e6867d75eb73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ddf14e4-6375-4d95-96ba-d26a4a96c019"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f3f6108-27a6-4c62-983b-8ea002772c62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f25a3ed2-2dca-406b-868c-f77153991524"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5baf489b-2bb4-4601-a9f1-f8dca4fe0872",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e451deef-37b0-479c-b5d1-7b30c66b0078"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e85471d-0afa-4738-9370-c56cd0a1b73b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "62deeb61-934e-49b6-a5dd-f0d34dcfae2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52297cfe-e763-4c81-aca7-69631704d864",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5774be5-3003-4dc4-9452-d2132b0cb387"
            }
          }
        ]
      },
      {
        "id": "ae63c71a-b30d-4260-8642-626ab0508a68",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1bbed816-4782-44c1-ae0f-30380c763caa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f15d6e66-f321-44b2-8b64-e1ce7bd32e3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9aa64e8-841a-4031-8464-1a31037711cc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d864f3c-1289-420e-b027-e2596ca3e764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21a2906-1962-47bb-97a0-dbe58490c06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506b6081-3f9b-445f-807a-f36adc48654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c9db0d-31cf-4537-98a6-fe96d8fbd381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21b7455-eca3-473e-8dbf-67519aa1ba0d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41fe198-fe91-4a5d-9203-0d3971d5e5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aac80e2-2397-48ab-89d8-ffc90ce88627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3473ec99-ee0e-4ec3-9148-d1df9bc41270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74956f02-23b2-4647-a9e1-b16b2640af98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f80dc1-d9b3-45d8-b887-d0d9abe1dab7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea357201-0128-475a-8440-143e081f9d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7dd2715-7c71-489c-8717-cc0cbab9efe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22585ac-6b99-4799-a7d6-c6ced8a4e0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f951e77b-8629-493c-be46-9f8cd61ab6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e91ea8-1ab7-4490-8350-128de96a3f8d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67034cb-9b50-4fda-a4b4-e44ba059db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd321bb-62ac-4bd7-a6b0-fb46b8764947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db80ed4-f502-46c4-8344-70f331b74c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cecafb-2c1e-48df-832f-ded94d84fa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b4d3ae-06eb-45ed-82dd-03f229b0ecd5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bbb97c-beef-4572-9bf0-2c4bdebd127a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccd03bb-73d5-4862-97f9-b9de79e575db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2369b-4693-48a4-ab5d-323d1f1e91b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2006cfa-bb53-4fd6-8a74-18a54a933001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d734b7-0d67-4bf0-9059-31aac2ae1c98",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc2355c-bbff-4842-a2f1-1856767b9b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc389312-189b-4365-a198-3b7658560fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59309138-c3c3-44f5-9e8d-f7296a856e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1c10e4-afc4-4fee-825a-d5cb17943624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8f989a-4b92-4abf-98e5-67135cca3d76",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d6ac11-88c2-4e7f-8742-2935b98521ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6036da21-64f0-4b3a-a4c6-8723457f0596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2475600c-2cda-4655-b7f9-df0a76775039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d58a9969-301e-4f42-958b-a216598a5393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de251701-7c84-4cf3-a0ba-aa073fc483d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e409713-89d5-4cef-96ff-f4b20a440f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c9723a-5ba2-4428-9d2d-4cf2321788e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d7071a-42cc-473d-8dc7-a9b902a9e32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9da9f045-0303-4f9a-b667-05b4757c89e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3944b5-635e-46ef-a5fa-345202cbdeda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cfb0f5-f60e-4012-9783-3befebeb7dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4884a924-8268-45e0-b2d0-0125c6034e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed2919c-d83e-4e81-a45b-1fc91454aaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c0869e-48f8-42fb-8c23-5acfc55016c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f0192a-b1a0-4123-a25d-6c1ee1922b18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34799ee8-a57e-417c-8cfe-80fe078ca4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4411b83e-9661-4d1e-b048-04390053d57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f3161f-e034-4de5-8f20-e16808d57fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b1883a-61fb-428e-b2d6-b4225b424a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6dfad9-adce-4e55-a3d4-ce4694fd3e1f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25e6dfd-6ed8-482d-b5e2-1a75e06e55e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55de92e-ad3c-480c-9626-698dba92a7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6a89a5-4d25-4799-8a66-32fc11579da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "85a1d453-0779-41d9-8b31-824d4e1b41c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36b3a46-b4aa-476c-a43a-78731c5267fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0ace2f-d483-4a4c-888d-c3e62fc9af60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bfcc21-9598-453c-bf2f-4af350d06e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9542da-a684-4425-b819-d0f877d4b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6953d060-c9ed-442d-89c8-40690d5578ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a548498-9181-4733-a57e-0bcb74177c38",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656acb88-12a0-44b8-8523-de42f6b99875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69b3e75-2897-4f96-87f4-af55323c42df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e17b6c9-f7f6-4df7-9cd1-109bb15de23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d0622a-24dc-43a5-a89f-30794eeebe75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77581f9a-3a0c-44b4-9e67-d9974c1546df",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6ac33b-329e-449e-bf48-0cc1a5362ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e7e73a-ec02-4007-9295-042475ea1947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c85459-f201-419f-b02b-303ce1c03f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e79b01f-51a9-4801-8729-d659f9356f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230286c1-5e45-487f-a7e3-3260d9050f78",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da113a8f-85a9-4824-b2fa-a1a8c72f5495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9a1b4d-efce-4784-9a45-978bcd57dbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84f1356-dcf6-4abd-a073-559dc8a22d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b86bc4-4ac7-4d94-a88b-0fc3cce97929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffd2a8d-4afb-4a7e-8445-24053657920e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727ca3fa-db90-4a16-905b-87bd0f714f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd123b03-841e-4210-aafe-2331ac26bc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b070daad-7b8a-46e9-952c-d60722533c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "86505b3f-9913-40cd-8a38-7e585ae1e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8293948e-bcf8-434c-9171-9a160ec7ebf1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bd5fd5-4fe6-46dd-994e-e8d7be154392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd07603-8b7f-41dd-ae0e-f538cf047b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da735df-91b1-4135-8159-19c7cb82dbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba9a6e9-baec-4646-b543-ae0157cb8df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32922930-a8af-44e7-9811-b1ce72a1958e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d530d730-95f0-4d0d-87c7-d1ef0f71453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f92a5c-7e13-4198-a0f0-70483eb727d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6dbd19-e70c-4744-9b9f-273259171181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef2bc2e-9e9b-44ca-8534-51ccf043e5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e5dd83-4548-4a13-9abe-024bb44895ac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8082d1-cd24-45ef-ad24-6a1bb31874cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2d19d8-5088-479d-9e89-1989909f14de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f8e4b2-d787-4be9-9eeb-500aa385287a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3865f5f7-28c0-46cb-adc2-31efe5870f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7f2250-ad83-4dbd-9b75-22f29e2f57be",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1c2276-14c6-41b2-89ca-7178774ada25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7b5b07-8123-43af-9ceb-5c9198ca9727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7febf32a-2925-4f0e-9157-b1326c91909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca8d9ec-6718-47db-bfdf-fc68a681cffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01c103b-c00a-4bad-b825-6567dfe9d898",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7a2fea-3abe-4fe5-8a7e-8b6b0637f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b01e989-4e55-402f-96a4-bfff4079e6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95384455-c80c-467f-b57d-725df09d2226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0589150a-b925-4d8f-a79d-d239892712a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e93e49-35ee-4806-883a-ca377c08702f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e03a4-2e66-40a0-bc29-108e5dbce7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b95e4b6-83bf-4e1b-b42e-770ed5562ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37db6a8e-869d-4861-8383-dd9dac8ed530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e397a6-878c-4915-9eb5-691e52972c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b35ae52-ae87-48b2-b5e4-93aabd947bc2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18413a2-afee-4a94-ac35-683fbb91f7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38624dec-8c7e-4706-9fbc-6aac9d79002c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ce178f-bb52-4380-8aa2-606ac4924d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf8f6aa-b6fa-4332-b5bf-d06f1aa1d187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7d534e-5bf9-4a61-8b07-6552648b9127",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0882691-c4ea-4361-a051-85f799ae81e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc070b5-609f-4f95-879c-005fb8a37271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d82928-1d77-4220-85c8-139c35a7adec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a9e35a-5c40-4c75-b364-5561ad083bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1ac488-c511-4032-8c71-2cd4850cb48c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c47062-7323-4fb0-9e83-3a4cb22c5a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5536bfd3-97e5-4b37-8a78-af3d629e3a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ebdb82-4e13-4ef3-ab17-5515e247f64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5024494-7efe-4c58-8d22-2656b4244eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03dee7f-bd57-4733-963f-07b04cc0c398",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d27af33-f762-4679-8bfb-676343bd93cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9ef63c-6ac6-40f6-8a38-7e6ae8a665a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4231163-845f-491a-9a69-c0367ddbe15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "562f244f-a603-48ec-baf3-92fa086a1f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582c1ce4-ed9c-42f9-a433-9d2d31a0c455",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe90d428-ee3c-4ff7-82b2-edadd93f1dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6efeed-91c4-493d-86fb-8f8a4ab413c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb163103-815a-44f4-8c1f-749aed071325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "153ce724-df38-4009-9a06-4dac43f35160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119df5ce-91ec-4c82-a3e4-b633297b6ea0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b78da1-a201-41cc-9bef-fe62901f2044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61705620-48d9-4dda-a017-df51c60235c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbab84a-c389-4a04-823a-49e6b73c3214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed342ff2-73b0-4196-81c2-17bda313cb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd663e21-68f8-4750-b13c-b2dbc4b1a84d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17838e1-ffbc-46a7-879c-13f77e36b0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a699e165-c1ff-4070-b64b-155598b14373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d32d7-83d6-4a50-9bfd-218bcec453b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fe0abe-774b-423f-be09-9fb6cb9b87b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9638b36b-f4c4-4fb9-967f-8cd09f1695ce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e1bfef-b748-47d6-af44-0c9f1c275f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776fa368-7006-46b8-9f4e-fe28226dfd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1b5567-b32b-4a64-b916-9ba08bdf700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4d37b8-1d14-4cd4-8b74-613dbd6c81a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01227394-1fee-4f27-ae3a-c8761edc62c0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53d02f1-fd81-4fad-b931-21b9cf26a828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcd5cc9-1456-4da1-a048-09614da7354e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4b06ad-809c-4cbe-b781-5cedbbe2fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a44d61a-43f5-4632-8a83-e1aeedec7d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8598c6ef-8fdf-401f-922e-c7f532c563ab",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e83580-88a5-42b6-94e0-94fd1d2ec083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf34dcc8-62ea-4d5c-80a7-99c9677170b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0cc9ad-b4c5-4041-838f-45ef639c332f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128126f0-1b08-421f-8f70-8b3937b6683a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "778b0183-6969-406d-9cd2-209ce0984bed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9318378d-2f9e-49cb-bb3c-4175ea719f8e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85e2934-6baa-4dc3-925b-86037666099c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a968ca1e-4fe9-4d5a-8303-0a5bd9be27e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366e29ad-37fd-4781-abea-bfc63fc731b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59ec5bb1-6e02-4171-ba64-e1516806bdc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9506f66-d00c-40ec-bb83-a75e9e32f107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92a81b73-96a1-431b-9f6d-d18f23c22513"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07eeb712-0a2d-4bd7-950f-af6cb22d3ec3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ccd7310-ac93-4904-a45e-9b1cc712d9bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29b4dee9-835d-4fbb-82a2-39b3af4221ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7e00c25-411d-415f-ab75-14a2b6315579"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5fbe1e6-9913-4fc7-abf9-ce864876bfc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9b45a3c-5aba-4baa-8489-654e5b36e5cc"
            }
          }
        ]
      },
      {
        "id": "da870e21-1931-4a60-862d-22d2155539e1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d7a7c9eb-aab6-49c6-877c-c89836513e50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b393d362-f8cf-4c67-b977-49b48e0dc535",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "954655f4-f575-445b-baad-3336e5f45b05",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed4ad9-8d41-4416-863b-fc24ebe0f92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e06a3a2-0439-4f0e-80e3-343f11f1c134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c6e88a-ccb9-4a9d-9c47-2d623b4fd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce0a15f-7bfc-40df-8656-52559811f66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadad7c7-8311-4253-a58d-acf83d240366",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3bdbd8-0fe2-456f-a4ef-eca70aee4827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13823924-c540-46ac-be63-d9b58852d1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11bd90d-dc9e-41db-9a7d-0632c930897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcf61bd-b8ad-4e6e-897c-58d657ecfe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04abb449-40aa-416d-bb8d-8a99ad260a30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa84a51-0228-4fd0-82f0-a0790e6b31c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc0cc2d-39f7-4e18-b6f8-b93c24cce528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c6e42b-7410-41b2-8f43-7a87deec2a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f96281-4b43-4cb2-94a7-bde1e7c2d815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb51533-2963-44bd-8b3e-52e51688c47c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae4645d-53bd-4338-a689-ed980745305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732cd515-c0ca-4a76-84d8-8d7df94e573d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0822d45-37ca-479f-be44-13871a9b22e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d55d0b-5421-420d-8489-a3705cdbddca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cba29d3-59e5-49a8-b212-c70a5b81cd36",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e0de0b-2a80-4644-9069-4f1ca019aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254c0b3b-ebff-4345-a4bb-b47988ede8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0c97e2-42c1-4083-907b-80150ddd3329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8225f2d-9514-4c46-9511-1a1fa4a8778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c37e228-1075-4c7d-a3ce-c9f22b07f32b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cb1a83-1685-4d5c-b298-e5bf86f659a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01825915-6e50-4971-aabc-6e355b576951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf756d9-e4ca-4c04-afe0-c6ea5de1e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5965c22-52d7-42a8-9e9c-4becd09703c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f401989-d323-4222-aeeb-596f0b0dac37",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b641f3-0173-4ba8-afe7-7dd8e0e32d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ebcb0-8650-49a0-9e3e-b7ac2bfb6940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf24d6b-217f-46fb-97bf-91402256bf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "39869281-69f5-45d6-a5a5-0a586dbef757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cc8729-14fb-48b1-a6cd-ecc20c9826eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3ef1e8-7d03-4f14-85e4-725587222ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e32796-23c5-47b2-bf0d-312bcadb8030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7777aa-913e-479d-8034-831c278589a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "884f9478-6e9d-4524-9438-6e3fa2d809c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa67d53a-86b6-4bbe-bff7-adb1a0b9ecda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69ec59b-bdac-4599-aaab-c18dc11f44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3ca716-2373-4e70-8675-83f631184a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a34baf-845d-4903-99a6-9a7221de6ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ea5735-b701-4ad0-9cee-948cd3bd8dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5321a1-19b0-433c-abad-34564fc4d825",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f4d033-a6e6-41b1-8497-8d54d729b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ab081-da39-42ce-a6ec-53a84cc587fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7220ee-f6c6-4c95-9bfd-2d8d57666df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55beb1fc-34fb-4d11-a7af-5d299d34bc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70134c1-208c-4fe7-8768-040c521cbb03",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0457c07-1151-4330-ab86-3781ee7e7a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd008b0-b732-4595-8cc5-9f4b90bdda40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9281c3c-29c6-445e-8d04-7d3c1f4c4b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38f7b823-d7a5-45b2-addd-4fcbe13ad332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc67df61-3dac-4337-802e-358093b245f6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb4327-22b5-4897-b67f-64e38b244e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7761c832-9b38-4b3d-b9fd-6602640fd9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30a24a1-08b4-4222-8c96-157db3643bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "931ae6d2-845f-43f4-8f50-fcdd91ed31fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8af2571-5292-4678-98ce-5359e0079080",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703c53c6-d9a8-4b52-946c-756520133db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe75e7c7-1abe-49c7-9165-8fa2405b2785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49413537-1f9c-4046-844a-88f82be6d6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41503b52-d8b4-4cdd-9dd5-45139dbcf896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b36efbf-dbcf-429d-bc45-cfcb2b4431ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c880d3-9dff-4837-b302-445a4377ed4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa74d277-ae83-4762-b5ad-de4f12d1a17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b10db0-1786-46da-9d7f-587d660274af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10bdea3-2eb0-4edd-bb4c-822ba1af9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81bbf01-89d4-4286-9d08-e0b6b5bed8a7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98dac50-c61d-4a4a-bbc1-acee230932e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1f015f-50b8-4b49-9d24-f88dee0e90d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472bb3d9-19f4-4fa9-8a5e-234b03e6e89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad01e0fe-1948-44bf-8fa3-f2e5e33e6f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff606f1f-43a5-47f2-b16e-f40c2e23b722",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5697940-a9a0-453f-9d8f-e8d18d655c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd52082-f77a-4167-b893-95df6a2d6a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fa841e-0799-44e4-834a-69ad6cbff72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "16094f48-ed0d-43bc-b9d9-d2850162a571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d573566-d9a5-4c6d-ad14-e311062fac2e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a7729c-fcaa-4db4-b629-0ca0880e299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f84935-6556-4578-b003-798c3c05ab23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831e3062-d748-4c22-9d14-daa359e913db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f49160-9e63-4d2d-8313-8f3f36e2c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af8496-a9e2-493b-9951-605b960bd3df",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59316665-123f-4b32-975b-5cfb9839efb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99adad55-4592-4300-8fae-5eae7ca0bdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4915c6d-8845-4287-a6b8-1577aed3e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4844932d-1c7a-40a4-9a43-76747b311b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e4fefc-9c88-40be-bcd8-282079053cef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7aa038-fc8a-423d-9199-8e1607f3f85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bf9295-342f-4a9b-97aa-598764d42893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f2fb78-f3f2-41d0-8ca8-26492c650df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4440a4-2e39-408e-be1a-0facf9dbd853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742a6921-7d3d-4087-a8d8-1d8457843e2c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82e9be8-fc68-4960-938d-6e6a8b0c3d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac4f1fb-ca5d-4759-9153-36f7ce6c9778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24f5e68-af3d-474c-99ad-a8801b37055a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8437d37-18f4-4a35-bd3f-c4ee89417f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba0f4a1-3dae-49e8-bd1a-a9c49f85b229",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df50183b-bc0f-4511-8efc-880da42e4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7e7b42-5b71-429a-a7f0-95148e24cc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d19665-b65d-402d-8461-9fbda6475de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1461bf-e519-485f-a78a-0d7c67d62cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e07475-fd3b-445c-beff-6933f18e3dd6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ba10a6-0948-41cb-bd42-11a99a488e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c1a3da-ac3b-4868-ba44-96b5dd88e4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42c8802-b3f7-4aa4-8fce-27a35aa31357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e4d41b-2001-48a3-a128-d0e5bd73f454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dde408-69b9-42d0-a8f9-9c1f4097f0ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d91fac7-f073-41cb-a75a-e753b6a8f99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6028a005-110f-43df-a298-b0b6d88bf423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8356cc02-7ccf-469d-b39b-3003e7663942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2412cbf9-afc3-4686-8c85-da4056b2241b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7d5c36-4e9c-4940-a585-7cf745a478e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287069d6-59d9-4f14-8e04-5ae3a2cac242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cf639c-b7bb-4ae6-bf9a-9a6b62629ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe6a820-171e-4897-9bbb-fdc216a07b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f40db6-5813-463e-b134-5d925e4443e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acb1eb7-d726-494e-b9be-8bae14161da5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd72b28f-7b2e-47ae-9f1f-878b76d511ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733a5c90-02b9-4264-bcec-64243695f08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43346ea2-2bc5-4aa6-b976-ce5f06f3944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57bbee3d-907c-440d-a554-d6a01cd8d1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbbb857-9c49-4618-9b92-06482e104c47",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8a2bab-97a9-4251-a48a-59ecb4d1d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ad3d0e-5279-4c63-8b7f-d263b6d000cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738b1517-149b-4fbc-993c-e6eece77e54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6966f62-6314-4f93-8dbb-190b76901ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f15b734-dd2e-414e-9618-7062eecae78e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6001b248-2499-4fc9-ae50-6e94b1fb3cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b77362a-419f-40cb-9df4-9ce6eb5185d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214b4c6a-4054-4fc2-8f16-4a0778733b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "269acb04-7703-4178-b2c6-b0a60a6cc355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac3203-f81f-446b-b7e8-527576d49537",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ead19f-ccce-4a7e-a20a-b0e8b9232f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0284a4b4-7e86-451b-a243-16b7ac12d218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165b0278-d829-43b6-bd5c-a34b0261431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9855b50-8a9f-48a3-97d9-3ecec89146d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1367a21-0d97-43e5-a1af-43e50b8e5fe4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c1a6d-8eb7-4cf5-ba48-cc94a7d8e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd681199-a15b-44a8-a02e-743cd7ad2c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79beaa3-8b7a-4760-bce0-105b34bed62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63eca1b7-c6d3-4876-8295-f2f4fa58ca95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c957f19-a00f-4b78-b271-6d8582803854",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73705d6-b1c5-456c-9665-e88017a71b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75793f7f-f8b7-44f9-9b4c-6947f723747d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f72145-0991-421f-8107-e486fbf5847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee000e37-56dc-47d6-b317-89a29e6eb36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123ece3d-3b75-42c3-bb88-8c13d176e884",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf691295-214a-4b24-b0b4-39eb14dc25d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdd8a55-b112-4113-b24b-5957c179813a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3eba05-8c62-460e-b5b3-1b082847c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2946f59-1e9f-449a-91be-087299f3bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6eb9a2c-bcda-406e-af8c-e53778b52c30",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da859e-757a-4a5d-8960-e19a4341689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8695bef-db3b-44d0-8e70-91036869a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012df307-c94f-46c3-b498-8ac4d98804b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23d786a1-0360-4e62-9628-1f81d5b48cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4578d1c-f747-42fa-a487-8d0651631a85",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae53df3-b9a5-4171-8d0a-64f7df61050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866b56f9-026b-4fe2-b306-2d13fde8b192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f52fa06-dfec-470d-be36-44736dc27a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20d278a-b6f7-4348-9db4-b4da56dc7ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eed161-163d-4ede-94fb-8af62fa7e090",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea14dc2-1955-48f6-861e-63227a1303ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8348f3-dd27-43b8-bcfc-636925f8a8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded9d3f7-7af5-4320-9904-83bf1f7123bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c077af2-d4b2-41b4-9114-35c8ed9d3de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad9b677-3fea-4a15-bf67-7b4e53fe9224",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b104110-a0e7-491b-ac11-309bc415ca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e3e768-63d9-430f-8039-e4f9f6878d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b025b3e2-f483-4c11-a0ff-7dfd51734055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f1b96d-fad6-4bbb-93c6-b5d8c5eb81df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8dd7c3-d55c-4530-a90a-711bfe436639",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2ab729-fcb2-462e-9a27-b48480a02c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7796433-4f3e-47ca-aae2-60161c6d4f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8e2ee5-c4c6-4afc-a14e-c40751570548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "421c2024-febb-4639-9892-7c751de0beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6152c909-ee19-4dbf-8afe-834b78faad78",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ce694f-ebb9-4b2e-8530-a067209e3448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da49907-d1a1-4f53-9b5c-8416f75eb8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a59416-779a-4aa8-968b-8dea6bb958fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb88fbc-edfb-4e99-9d92-a5bf322d767e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8765e176-37c1-4a4c-aca8-b15cec1990e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ceebbe3-49c7-4f5e-b69b-9cc8829f1348",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ecc255-1071-44e3-91fa-70c634f9f04c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7689953c-5fa8-49f1-8ec2-4eca52740557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e96e11-96d0-4ae5-acf8-f16726913958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c51a956-4991-47b9-854b-ab21ad8935c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f249aa1e-318f-44a2-b56a-f219d392da27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d6d8d20-1f53-430f-b587-9b9b72f5be38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e636c5-5810-46ae-9079-51bbfb4dcb99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8aac15a6-c8bd-4651-85a2-5e28a72adb67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a9ec4cf-59cb-4d22-bcce-48b6f0759f29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e87f246c-d463-4504-886f-6b4db78b0ac1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d1cdaa4-4946-458b-a344-cd84bc1b326f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "857d9c2a-3ff8-4294-9749-49b5c8c05f3d"
            }
          }
        ]
      },
      {
        "id": "bef0709e-7772-431b-9b01-4c55ee08e0db",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7ae0dd36-7e75-480e-af4a-6a8177ff5c77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb779c52-5545-4128-9260-eaf07d9a2ec7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71b01190-a867-4520-a5fd-f41d5debf91b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76e7a7d-160e-4341-a67c-7ac079306605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7b0d2b-923e-45a0-935f-d8960025183e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9d8339-2f22-433f-a9e4-e1289444eedc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a15900-4807-4272-9f3f-1e94fb184a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61234b3d-6e5e-44ea-b67d-4d8459bfe868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8b12b6-41e3-4f8a-91e7-80032ccd4847",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ffc03c-1ac2-4e13-9ec1-74dadbddfdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f659a7bf-187c-4f68-bb86-4c833f184ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b6b222-aa53-45a9-ad50-8841fc48ed99",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1aeb08-518d-490e-b682-bdd470098831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cb07ff-8d1f-445e-b4f3-dd7dbb433e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae7be92-72e8-4673-938f-727abead89db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b77449a-5a47-4a32-97ce-2c494c4ad631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86241fd1-30de-420e-909b-0d2fa0265df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f649bce8-c725-4007-be8b-8b5cd415caa1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddac91a-95f7-4062-9f2f-e76f81709391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6f68c9-2b30-444d-a50b-d58162e74c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa161daf-048e-40fe-ba08-0a71f611383d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4854e022-18d1-4c03-9a96-38644f2af563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e710cc-acd8-44d1-b899-202cc5429e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aca3019-8459-415e-b932-ca8a6a62f21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20edde8-09cd-41db-b84b-c2559bf22043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc4e3b1-917a-442a-9087-89683b74a826",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121e91e4-a32c-47f7-a027-7c3ffbd2b655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42ebc85-7622-4c48-9206-ab2e8c5c5e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4344eb6d-98d4-4d81-9582-b4ae2bfbb317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e81c5e-3bae-4b2b-ab65-d7920e3d4991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d4b5c3-1fa0-47e1-913d-abdbf4b13256",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0c8cbf-38d4-49bb-98c6-34ce6f7ae0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51762dba-02e7-4511-84a0-5de59c875ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e30abe-a87c-4375-8d03-b2ad927a5014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255069a1-94a4-44e1-86e4-0937a4de866f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb085db2-0fe9-4256-b349-b28abab1c68b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7c6e53-09b5-4467-95f4-cdfbb123420c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1bacbe8-9c22-4795-9ffc-bc0715a2ccbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e44a0ee-8eb7-46b9-8850-bd1d02b50b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37be2fd2-3bb6-41f7-8c45-5819ad292cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8212b870-f265-4c10-bb44-2ec88ef2e2f0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d6414f-c2fc-4e84-9c3f-70002bdde19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a167bec1-62b3-4a05-b118-97264a66a200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45737df7-4622-4a44-91ab-022d775174a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08351c5d-6b3a-40f6-8ec3-ad795a9a1316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d28d27b-0df2-4e6c-bab3-6214105e0b44",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4187d98-f4fa-4187-85e2-1e075845c4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4810506-0125-492f-86df-1ddd00238b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c7579-c1d2-4f5b-8f8c-18a31dac58a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c06991-b01e-409f-bad0-e5ceb6903b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf64419-d431-4918-9185-86e6c0b9565f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a8ec59-83e6-4c38-9060-fc56c1edcf6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7d493e-0ba9-497b-a81d-5d89b13fa986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a4537a-e36a-48b1-9365-843b38565c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1675fac-a78a-4abf-b55d-a88eb4cc8d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4580a58d-f113-4d65-8fe0-2913a50f4532",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff79e56-e196-4103-bb7c-d1c97e3e4971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebffda5-4e0a-487a-9e67-6546c076ce23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f08af08-c07f-441f-9728-fb152d255739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698bd3a0-3089-4659-bf88-6b0114e6852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a30c93-2614-403f-9fcd-6c060beaf5ea",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d708db56-6775-489c-91ce-536998939250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b222bd20-120c-4a63-a6ba-62bde9303e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ed935e-ebe2-40c2-82cf-d108777745ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610424cc-b843-4878-bbba-d529583f722a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae0787e-df9d-40f3-8aaa-4b6bdc96db4c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39736a97-797c-4c32-90e2-6ea6feba1d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43cac82d-8814-4ea6-abb5-691ab320d326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57504a9-ef40-488a-8396-7584ed0395b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce22a618-8eaa-41af-b249-e3364dc34d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7aaa8b-1aea-4ece-8dbf-43012b318b7e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd99701-9f10-4f14-a7d6-5d4b93a582d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02509efe-0a09-4196-afe8-ee6ec3e0990d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f96f6b-34cb-4668-b898-10db981eb023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ed4c80-9eed-4fa4-abf5-fc2e4aa30ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7b6b4b-768f-44d0-97f6-82990fc0150e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd49e90e-1719-47e9-b21c-83e226ccb1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee49457-dd88-4c4d-83bb-a263fcbfeaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60735791-8e4b-48a5-90e8-004a19499009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4e1ddc-4e83-4d4f-ab7f-fa5ac071aaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6c76c9-bc32-49b3-bd5f-2961a105d537",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0900bb8c-7669-4f06-b769-0fd500766711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6790cf6-01cb-4c5e-a4d3-0c903cefbb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e4f54f-d1ab-4e27-b214-d8ef07a0fdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbb18ac-6b1b-4100-a4fe-762de1bbfb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ef8c0a-3294-4500-ab3b-961cd5c72224",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80d84a2-4df6-42c4-b03c-08ee86abfa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a222af3-3869-4612-8428-07dd969f8d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae79cebf-fae5-4267-9004-26f7a98474f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247745e4-af48-4052-8ac5-c9d56d7611a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8a36e3-9d68-4848-bc7f-0037cc9f6aa2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5fc437-b4e7-48f7-801c-09d794210a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db42f32f-6b8a-426e-89e7-59ee611b871e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df104ec2-8852-4c99-879c-3c2dc6d3c82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7baa58-afd5-4f2c-b3f9-7e68fb388020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b294c6-879a-4775-81b9-801493433cdf",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841d432e-25a7-404a-8006-8cfb50aa59f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85770fd-b366-46b5-9f8c-8694bbe3d0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3e1e5b-9bd2-42f2-8d66-57c1812e8f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f11029-7a89-40f0-8613-f8970ada39fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09766735-e191-4b36-8ea3-cea09a91f966",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa32d37-d986-4995-b5bf-0169356ac887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bd2755-ae04-4478-8623-b2ff0b4f580f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3081af-ead9-4019-a2e1-d3c9c53d4e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d8dd99-801e-4f3e-b3aa-231822a81ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a538b0e-aed9-43bf-8e89-4fbbbf14341b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fec343-16f2-49b4-84a0-ce333f54a4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64483888-f300-4335-9bc9-3d64522796bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aaf6eb-bc54-4978-a4da-3f5dfa697583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb384a98-9d0a-491a-aa99-dbf6a4c1ec78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffda1a51-ae18-4737-8875-380f9f898c1b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65bdf89-fbc9-42a5-84d2-7dcafc95a906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dafcc07-90c7-4697-8e7e-d6dad0ee30ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3543f7d2-b69f-4635-b667-5f483902b975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcdafc16-c02d-4f49-a208-b956a303dc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e14f82-3aac-4bf5-a410-d04b8d1e3470",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2a3322-4752-4026-b89d-9394ce48f230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7251cd33-cfe5-4f57-8a6f-84d57061d652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c3bf99-4269-494d-a87d-fa9e88626452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539163d4-cd6d-42cd-907c-eaf828216b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d1b4d-24ad-47f8-8b34-7bbcddde95b2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae770822-3c09-4967-81a0-40853678341e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6348728d-68eb-4fd5-98d0-7d4ce5922487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90e3f96-a3eb-4a00-8a57-ee1cd2a997db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc91617-8f32-4ead-bb65-643e9814694c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7662fdb-6850-4ff5-8202-5422c4721e35",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c8306b-59f2-4e7c-8f07-870f5c93874d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef813a4-2672-4fb4-bf30-cc377c2060a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9137d9-1c2e-4af5-9c03-78e4ca69ab74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5001eb3-7599-4466-8597-ea66e9aa739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a5059f-e16e-48fe-99d4-20f2e3791501",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fd4de3-c398-461d-93a8-d2bd1b6d7152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5602c31f-c658-4c87-a671-7661d55f2545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5dc7fe-ebb2-4f60-b6c4-157d90abec22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35897af-cd15-4709-964e-b04654edb6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb054769-1f11-4e1f-bc25-c96111b6a33b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c533aed7-9584-4c36-845e-f3b260f7385b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a12b50ef-0b54-414a-8e1e-b19430324f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427455a6-0a05-4518-917a-0eee0970d7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8643a599-5981-427f-91d8-59b94e0b92b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53fc025-300a-439c-9c0e-252bc9f422ba",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8943d289-f568-4f1c-8a54-df4c2e74d2ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0efb307-add7-4cae-a2e7-ea0c3b884eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac36a58-ad42-40d0-9f4f-dfc8b01a49a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49ffe6e-b4c9-4433-94bb-643dadee81ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81dc7ff-e8c7-40e4-90af-dbf90d28463a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a21efd-064d-45c2-9c69-920edabe96f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8f8b62c-a352-4d3e-b4ee-a72cb0ac07f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63989c5-78e8-4d96-a169-5eabfddcb265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a971e31f-5a98-441c-a9e7-5201a8c6add3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b523aee3-516b-4acc-b7fa-b935deb53465",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bc3df9-2915-427e-baea-1e24fba30844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3136e56-253f-42f6-ac10-b1811d4bcf76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228d6758-f134-4c3c-8f84-539d46396869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d9e61e-1942-4664-8286-cd972ddba130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2b002e-edf9-4f14-aced-e6e5b8c387d2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64192680-181b-438f-ab7f-f183ef3fd83c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3a110c-1de9-4b0d-8076-83c3829bb81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d465b7-2f09-44f2-80e5-8cb39bce00ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de0298d-854b-4844-b2ba-66b82bb4a9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce01ceaf-ad04-40df-9265-1c3e33f4c1d5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06f6683-5958-493f-b8b6-73655d7254f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0b3864-9445-476a-ba82-89472140c682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e12920-e872-4d2d-b2f5-579155e42183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e79ec08-5d43-45df-9687-18c61327be11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953a6370-28d9-4441-bb71-902aa3aa3785",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece64ee1-2a76-4d1d-9668-9879b93b8d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20439ca9-9710-48b8-a05a-a49ed5b833df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530e5386-524c-4eff-b143-5c534f67a8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d48625d-82f7-4795-8ebf-82cd44c3377b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de228c5-3c88-4859-9e41-a649a602d1e3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae90ecc-fa77-4404-ac7d-24d222d21780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efae025b-962a-4dd2-b290-48b504af60c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b28d9f-7583-4517-b441-c9cb01b1951f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20d388c-e3bd-4dd0-a116-570d4e9aa727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df539dfc-7316-4ac3-9fa9-e1927cbc055e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab61fd-bf6b-4d82-aaa1-957e2d808442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1080bc-7446-47dd-89a1-c3ce301fa419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775640e2-ba5d-4519-abee-b4d80b74a5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385fab2d-7449-4c1b-93a6-86f91aab9c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc83ac0b-8766-4402-8222-b010b0af4d0d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87bf45c-d736-4dea-851a-e560d6dd0c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2fbfcf-0a1f-44b9-b39e-972bfdabdf62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a4bd4-ce9b-461a-b311-dbf033e0b27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d284ed13-87c6-4f19-b26d-4012a7480612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e5fb4-52f5-4ac9-8c36-fbdd337d03d7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e12e047-f097-424d-8123-a9b9a38fd1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5c5823-c883-4bdb-8fad-ff7f600c41f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b24ff6-b927-4e20-82ea-32c69e6a4501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e208d3-390a-4e01-ac38-c566e0a6bf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ce87e8-0e26-4836-b81e-831fe359e2e1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579e1253-39d3-4bc3-90f8-826d1be2ee1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fe62a7-bbe1-4f3d-8f69-c817811d2e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a13412-fa4a-4c4d-a5a2-ef3be01887e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eccd8f8-dd98-4990-a3cb-25caf86bda06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0de014-2a11-41cd-b6b4-73303d073941",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ae662b-55a4-4589-a9ba-fda0eabc1b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9ef7e6-5ab0-4a8e-ab90-64f575d95953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85f25e1-11d4-48af-8c69-c3cea7333b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42856ce-3191-4f56-b442-0084ba11ac29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eee74e-d457-49ee-a6df-e07c8e9f6ca3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb229f33-7e07-4a82-a826-2ffab29a60da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905f889f-0ab9-43ee-8ba9-a14a80e1d719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f0c074-6b2c-4675-b582-89cb6064711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca56e451-c182-4a3c-a3f2-fed3c1c8ed1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1d02dd-fce4-4300-82a7-5fe4bbbe5f5c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0312e-aeda-4a4b-832e-8bba7e3fd6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495f035b-72f8-4579-8650-04f0f1bb544e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4be7082-605b-46fd-80e8-e86510af9e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe21216-1cfa-4d9e-bde9-b7bb8f738fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b712d36d-234b-4148-896e-c8c1fed14744",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a68c469-6f8f-4d2b-a772-7acaee47f241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b8c99f-704a-4081-a3cb-2a6b7876d6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07307839-ae55-4345-b85c-cb03440b7820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51042473-78fb-4a27-a8bf-2d4b4d025cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf41f4-cc99-45fd-9acd-53f8d4f862e9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770d5211-bafc-4900-aa44-8782f24b2be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a5c264-9b20-4929-9da3-8049e4dd2abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7e498e-9c9b-45df-ae3b-8418a1e007e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fd15fc-f1c9-4d5e-88a2-a6f53de90bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204fdafc-1f14-4fcf-9fae-d8e9c5c03aa5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f128d30f-c407-4192-adbe-d7a7cc929bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c43fa5-292f-45d1-a1f9-c3df9f1e7590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ce24c4-29ff-41cd-a781-c11484d43820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962e28ff-6ef2-4e69-9616-ab343007070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548820d4-f2a4-4b80-a2c8-a35e0280c620",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008213cc-948f-4ef4-8d6a-cfb00b381977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb570b2-c198-4f2b-bff4-d4409969107c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c7bff3-888d-41ac-a059-f6e9da9fdaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4f7020-ac5f-49e1-8e4b-99b696abec14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c66c59c-9326-40e9-959e-fadab86eb1b6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45e8fc3-6320-4e8a-974b-37dabf864395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45dd007-3017-4d05-ab99-cd6bcb0066a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629dbbcd-8058-4fa6-a761-d6f5f28cc9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1748cdca-4903-443e-908f-cb44143aac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9586fb60-811b-4155-9602-24161ff0d9f4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9f8c34-bbae-4ee3-8d30-e7ff340a48b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d0c174-d3bd-4d4f-95b0-af681e05204b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47358bf-83f1-4c38-89bb-226a98e19ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0257ec5b-63ad-48c4-94ed-c6191319fb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3f4997-b66e-4fd9-88ea-119b1aebd477",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077832cf-363d-4c69-9278-5f87a2e26a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9cc248-7bd1-43ef-9e87-062f62f0aa20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cd8e99-abe9-4b3b-802f-38c25c631744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70fdef1-fed2-4b5e-8f70-f4828c0faefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a618f01d-54d2-4a86-947a-2d76a848764e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d38ef38-16a8-461a-b621-8f784e2aca86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544878ad-9417-4452-9c90-ec85e6bdd0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e79c7-bcbb-4359-b33d-c34896fcea22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5f6db1-9da0-4691-9876-6d6f134b06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7852ea61-f63a-4ca0-8709-c3e53efa7554",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8264c9a7-f52f-4245-866d-2f13d9b867a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd1ce76-9c0b-47bd-af26-caa4d7cfc98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a142c469-769f-48c8-96ef-d9e5aae69e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390eb13b-3de5-4be8-95b7-78d6b9bbe63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b495f218-ba08-4429-a336-408d394c5003",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb17e80-480e-44a6-9c63-b08669bdb6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78458b3-c466-4455-9e7e-35540038ae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709fc228-0391-4927-aceb-c6e3bed52509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae640cd2-d30e-4c2c-b235-8799d73b19cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c304fdaf-5443-4517-b838-9c26e9325237",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65c8de6-8d6b-484b-9cc8-5a8d4ebdf487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7323be-b252-40a2-8291-eaab03b137fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af8082a-f7b8-4f7e-b348-482db4ed366e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5551e2a6-1f8a-4af1-9abb-4084c07a9a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdf308b-16b6-4ad0-9023-7abee556d7a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf17242-e2d3-4a18-9dfa-dba146cc29a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07308179-6ab4-4271-9742-9cfe2a200226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20cb46f-e2a5-4d95-b91b-4ced7b9eb50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20dbc0c-c597-4b49-97d0-5fc119bfd6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f4d76a-13eb-47c3-a8be-b8439d5ce5dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258d4fd8-fba8-424e-8700-941224d0db46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998e18ed-bed4-4187-88de-d1309e653f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb8ea8-dfdd-4157-9f3c-e81b956640c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a00ae95-5a58-4867-9ee1-ee61eecd3f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ab81d9-a249-48d9-a405-934ab77d45a4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987790bc-1c43-4191-9873-c38d2cdb4d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc97b904-95ab-44e5-a380-b7229d0da1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339420b0-bea1-439a-bd34-89458ef99241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c203ca0-c525-4d5c-9b6c-e6bb6a2b3e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694fb92e-fc9d-4aa2-aa10-8f06a60f9587",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30214d35-b3b2-424a-b1f1-8f0fb09b004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2809201f-3dc2-401a-9173-ab38ad19202d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0814e93f-e202-4fd5-99fa-7dc66e16918a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61438eb-b170-45d7-877e-edc7f29a3879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd243c7-0442-4f56-bd15-620d5d7c21ee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9352155-06a5-41ed-bd01-a98c6f115bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a2f422-d47c-41a0-ad36-e0c94b626742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce3c566-ccb8-45f6-84f7-3320b881e73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c112a39a-0abb-49f3-a850-f54199456abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aafbc1a-c80e-4e2e-96dc-78cb5ef8a240",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463f1975-1491-4748-abe1-55f6e3e53cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb39b13-bc5a-4255-b9ba-238d9ffed62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad54a54-3a72-4103-8442-18c3d5f8c6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8d66fb-70c5-4e3a-919e-13ab05bab668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c402e1-9386-4ba7-86f2-8bf08cd9b48f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69468324-b915-404f-a383-0096eb8d669e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf70ab0-07f7-4a0c-bb0b-132231b72ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5815d64f-f671-466e-9c5e-8385191b315a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865e9205-5ed8-4ed2-af8c-7e6bf5c25cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8d986e-c6da-469b-8142-a09454533ed6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97184f22-ba89-4536-8b86-08308d930c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da03ba1-ca6b-452f-80f1-74b348ad22b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6da6dfa-6b89-45e3-96d4-3748e61e0277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b094869-8266-467b-905d-ee837cfb25d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d918b11a-e3d5-4de8-b84a-6d63444d54b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7950f9c7-e004-4454-af10-c7e70556b695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a9ce7bf-672f-4cde-b824-da9a41a6cd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8fc564-5ac9-46f4-b8f5-408d256ed8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7882e9e7-3c47-4ad5-ad04-970a932e4b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abee73f-6b34-4c98-9f88-968af4573959",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddca724-4d10-4983-8db8-2374b04b8437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06fc7c3b-67cb-4533-9a08-c29628e541b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a50dde-0fa3-4e1c-b668-6606a557188d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba1f8cf-12eb-4025-a5a9-7b91a09acfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc1d755-d5df-454f-8b90-0f1ff740e95b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185832f6-e0f2-4884-a28a-4bcc39589c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd9b2b1-1a32-487b-b480-2193239df8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f0bf18-0378-41b0-aa52-668d7cb96ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d93f499-f2cf-4f98-bb27-81a166c2dff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6572a73-f656-4425-9bcf-a9a85b77ef6e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322e96bd-b1b1-49aa-9e45-c1709fc9c124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb034821-e8c9-43da-9d24-6587e0cdc988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228a4ff4-07fe-41b5-8552-ac6693faf5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf19f42-3e17-4b23-b8a4-78ad3c4ad4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b362425-4d7d-427f-831e-2b3dbb2a3d06",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f1f91d-95dc-40f7-af06-9377df69db0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b419341-87ce-4c34-9b0d-ec873b994a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb4669a-e177-421f-b24c-d86138953960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71c8fa2-30de-40a5-9c65-eb7955223b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15aa6b25-6e75-4583-8cea-a53d46d29ff8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5583f333-4b9b-4207-bd1d-80d9acc3b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a51135e-f53a-4547-bd34-d539ac27a8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4714b613-8234-4725-97a9-8117d6d5d5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1febab7-0e45-4744-9772-2a0a50e91b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaeabbb5-f468-4477-91fc-cda6f00badf8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089210e2-a029-44e2-9ed4-25bc6443fa09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a96879-cccc-42f8-b095-e780cac8ef22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6bd908-c185-4c88-adf2-dd776ef96f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae28679-d0f8-4197-b7ae-e8294ab076fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b5808e-eb7a-403d-8766-cbbb8e395644",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048377e2-ef9b-4af6-a153-d8c28c27c6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb8c14b-2163-479e-b73c-1df8160217be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a2843-a248-466c-997c-03cebe1da0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fc8a24-6a14-4812-b578-16c555b8f94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66c79de-c601-4bbf-a8b4-ea8443def3e7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d4f0c-8c39-4162-879e-bf70715b57f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10af8b66-2ef6-4bd8-bc9a-b949a5f4c92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a613781-b384-4eee-82af-3058d9ac0f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636c38f6-6e52-4c02-8560-085b81346d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8f7d9f-b204-492f-b919-7c23a072cf8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f74095e-c3e6-467c-91c5-65b8608fabce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d4fc62-66b9-4c48-9843-79813212edbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9149860-b720-4b91-9434-9cac3036b571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eac6c64-854b-4312-8204-f17a21467de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9dc4a9-ddc3-493e-b54f-9671c8476cd9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b786603-11d8-496b-8a61-718d18c39e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd18ed6-8c08-4942-8c7f-0bf24241b9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2d33b1-587d-4492-8d12-66a8d6ad55bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14f2058-3fb1-4129-b6bb-30adb5833949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f35d55-5fd7-431e-a20d-71476585a2d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdf2e9a-1c27-4df2-b1b1-4072e8d51ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3503b36d-af3e-421c-95a5-37ea3dd49fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5facc90-3f78-40c9-a6d6-8fbc10f554a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc770cdf-46d9-40dd-86a1-c201124afb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcda836-6832-45f7-b7c4-583c29ac1018",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe411821-c853-4816-9cf9-c2ca08020e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be8a1298-a08f-4909-8677-8857ea674756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c953979d-4bb9-4ce3-8c3c-38031de9c3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbd391c-2e0e-4629-a775-c9348390d448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0957a9-ea26-4820-b793-c7c00fa92a9d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098e687d-b2eb-49f9-af8a-eb0a54d19f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d2d611-2c03-4c2e-acef-baee20a934f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cdae3d-8d60-4251-95e2-6b2e2338dcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2765108-0d13-41b9-96ec-08eb1006db02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6608fe6-abe7-45f3-8637-b5d9ef39d9a5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10df26ee-afe9-4ff1-9688-270d79a1c526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6f483a-9883-4ad0-974c-0a91b5ed31fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caf4988-1413-4e88-a7f2-b45309af175f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97dcd1e-f5c4-4924-916e-a391257aae96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed83491-1c1e-4974-8058-8e693effb39e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8c7c56-8045-4747-9854-dd22b3ab2a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f2eb4a-a714-426d-802d-4d1737ab1cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71939f1-ff59-46f8-a5b7-3a6125704303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e520f428-2224-4e0c-b61c-538d89a04b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded0a3c2-911b-45e7-9561-6e3a1bac1601",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8fb4d5-2d40-449a-8bf1-0fe80c10c63a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36313a58-722a-4d41-a281-871cf776ce93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ebf92-5b89-4804-9f9c-a565aedfdab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560a7f88-f7d8-48bf-8eaa-1c59541045ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c339f44f-819e-4148-8a7e-821d7b0b8311",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465d6077-9370-40eb-a0c0-22027f2c6ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7121070a-d46d-40df-98d4-c782076e1a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577a3057-e07d-49f0-8ded-00892e47bc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fadf63-1df7-4765-9584-08725d1c44ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a2e4cf-b407-4be0-ba4c-0b8e2b275a51",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e1de8-fdf2-410b-9508-54539477adae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59351cd-566b-46a2-875d-353b1ffc9d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873144aa-5b18-42d1-bd22-44dee3534855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8222524-e1f8-4d4f-866f-9e9de8484583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76118668-eab7-4e00-9645-0503bb93d4e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060234e2-8229-465d-be15-9b5810118655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf99f56-fa2b-4f11-9d4d-cf26cd2fc5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acaa503-18a8-419d-a861-8047f799d161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efea3bb7-9021-45b3-9b3b-f13204381680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c79e2ee-843c-45bf-be00-1c481a40a745",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29d8d2b-15ad-4d8a-811a-25a0e6494c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d72d3c-3007-41d2-99e0-8cce068de93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c18f57-23d7-447b-88a8-d949b681d357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a5483d-5a4b-4e66-be12-2a9414083ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765e5dff-23d5-49e6-b732-8a2037f24205",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5a4588-dee1-4a03-adec-f01a2d94c78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a89ac463-3804-4623-b7af-e1278d915108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177678a4-ecd4-48a7-901e-e4b2fe860bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4935d3-5614-4c52-8cb5-f4b46e30895d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2cd581-9583-4f71-8a4a-ca98babbb13b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250fa0ad-006d-4563-a767-067b8dbc05ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c171a9-6c42-444a-b8c9-39ae5616fc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e37d43-c718-4080-b601-2fb1f60e10e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5855afa4-bdbe-4018-865f-32b29b8bd328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbc1db0-6268-4dce-9f46-031c3823a840",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233e44bd-b02b-446f-90c8-a3074f34763b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296e0910-d3d9-4c26-a237-1099769bc385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6d6ca6-2019-43ff-96a6-a614a313fafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4637e727-307c-443c-a993-e1bd2f4bb640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2fdc85-8ef8-4338-86c3-c9b4ce95b8bc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1874b810-6c20-48f3-81e7-3a637c7d75a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9788d4e-95ad-401c-baec-5fbdda94c7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a4dd7e-30bf-441c-93e3-f47cc0d6cd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1460fc-e286-49e8-a793-00496c8b6191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65132ecd-2ae6-41b0-bcbb-7327b9560156",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3b24e7-1e85-4b50-a915-ed6b02a101a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0acd89-993f-4684-9380-f229cc02ad53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15267cdb-7b14-48e5-a01a-809c170162e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74187e94-fe7b-4da5-8afb-795a9915ac42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80c2ca5-6ac1-4c2d-add0-e048ce4263da",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9517b139-1172-45c8-9d7a-8c6af7acd9d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377871e5-2db9-4d4a-b791-9306a5caebf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0687a3f4-dedb-48f3-ac04-a9565097e56b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3a6bd6-fae6-41ac-8091-ac2c1e3c6d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3712b028-99cf-47ed-9745-5f37e41ab4ed",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e19b880-6a2f-4a54-a5d3-9bd22942b300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6208dd-1b71-4db7-a999-d515d9f88246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101d351c-0772-43de-81f1-bd2a3922d51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9e9066-5f62-46a7-b40c-a691caacf994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f973e7ac-4b5e-4230-adb0-17f3a363107f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df882977-98dc-4d35-b98c-73fedbae09cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55323d3-493e-42c7-9348-7a7a915706c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c13e77-768a-4cc0-a0c7-83ceaaa54386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd15f9ae-6f1a-4368-990b-80222b5c78fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fcac14-464d-4395-91d4-7b56326847a1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0576ab-f961-4285-9db4-0254cf72d44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06036a13-f697-44a7-afa6-c5f434d4c696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0393b38-2c65-44c4-b35e-03162d641ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde94bcb-60d9-48e3-9a75-9d5ff9c88d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d48fd85-a175-4a96-93e7-b2e201313494",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e9639c-5ffd-4d3e-888d-b8c217bfebec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc418e9-07e9-40e6-9e70-661237e2f90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d41602-f184-463e-a4d2-e91ab448e8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15effae6-156e-44b2-90ee-f68211b0dac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547834fa-9fe8-4442-8db1-805f684fcffd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334580d1-2523-42b9-9bf4-be553cf70bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc42d62-d206-4670-949c-ba421f2c6570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e20db5f-ecfa-461c-bce6-ac68a49acdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72bfb24-6b13-428d-9c37-75f69a43ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427d4a00-3f28-4d94-a454-23ba5c3007aa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc301576-5df2-428c-95c8-d1a3565fff01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948920e2-ff8f-4550-81db-235b45aa17f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1a1bf0-3abd-45a2-964a-b8e0544c1ee5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd46a73c-1a22-453c-9049-51439e271be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c72002-19dc-495a-90be-c8812dac3957",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0d4f7c-b972-4d69-9157-05f52a0920ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b65ece-27f4-4647-b225-0d3459539444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3bfde9-5b0f-4ffc-bb8b-eb5caeb7741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1445061d-4af7-48b7-9fd4-1cf61ba7c769"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff3c9a1e-6df8-4af2-8c72-a18dc101992d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20e19948-6eda-4d91-ac4d-a2a7af999a1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae7e985f-3344-4d49-87c8-77594d3bb75d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5cf7bbf-cda6-4447-882e-56a5aa19f2c9"
                    }
                  }
                ]
              },
              {
                "id": "b54684ba-c80f-4ed3-bb34-cdd49c1d5575",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4c1516e-544a-4e57-a71c-a7c4512c161d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7272ea3-5eb0-44c2-a201-e41f9fb37eeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9555e4ff-315b-4fca-a1c0-ea69564418cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e70c7b-a0c8-424d-bd83-a0ebfff314a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f22d41d-8ebd-4c46-8a89-fa1a80fb90e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72721cc6-4b03-4b9a-9181-99fe7ecc22ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f09a739d-5468-46f2-a8ce-b6e212f183c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26ffacb4-0d56-4428-823f-4f0d7203a782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a302e8c-0894-449c-97f4-76ab67bd1545"
                    }
                  }
                ]
              },
              {
                "id": "7e71a831-98a1-4d28-bcc1-617f350475fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c458e755-c6e4-47bd-821e-2da8b165659f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42578f8-8272-4728-9c8c-f5c62b9375ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4231c3f5-15ac-448f-9a8b-8f2a98770e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348d4f52-2905-4aaa-95a6-6f8c039c8b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846a8483-30d4-4f13-a1e6-0b5e141e41e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7ec71c97-6006-4575-b6f3-cd7bef5df232",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7968b58-75c3-4189-81aa-a6e31a09892d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01bd1e3a-2016-4f6a-b0be-372fe53b53c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76d420b9-9362-484e-ab5d-a66e896da4f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c89c3984-0790-47f1-8e59-7275e686cb24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2259e6-58c5-47b2-9fc6-1dca16eb8961"
                    }
                  }
                ]
              },
              {
                "id": "841875e0-9efb-421a-a0a0-457f8dacd366",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0123d50d-9c91-42a6-ab94-fa116948f4b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c9e9b22e-94f1-4ee9-90ea-3563f6f99542"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "161aebd8-5ee9-4408-8151-5bc4fad630fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d6169f4-3e21-42b2-b210-eff8cebea5a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68a02418-c315-4c31-848a-cfa4db682891",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "403c45c8-9181-4f2d-9596-a35488b074bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95c234a2-0659-4b39-846a-b5d20f8ae15c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c53a4fe-7dc5-4e45-8f8d-8d8e4a44c31c"
            }
          }
        ]
      },
      {
        "id": "1f3a0fa4-643c-482c-8270-3440ff7196b3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "de524b6c-6838-4e33-b206-5cd5c367d4f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1520b167-7d71-4395-afa4-6822f35c8fde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9da120d-4c14-4ddb-b257-9c03d5ab9356",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05818a7a-258b-452d-b2fd-c3a408c301ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "720ccb96-db8c-431d-9385-e689232d4d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec8d425-b316-4a17-aba4-c5af74b308cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "901e0959-aab6-4a12-a018-d76b4a1a55b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7479d14c-72dd-4e4a-90c4-1db30a73e295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4271593-0efe-44fe-b044-b2a8ea09004c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "614d5071-c85a-4bbe-9b4b-652352101149",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad99f7f5-b338-4b49-8c29-f7b763956070"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f467e743-1774-4e1a-8b19-8445b0e5d577",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f357f9a2-76d2-4291-9cda-1fb13c39ec5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f704b49-8544-4e2f-b55d-2cd1caf2d64b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "806cded4-0290-4ea0-a903-65e576110718"
            }
          }
        ]
      },
      {
        "id": "6c867d0e-240f-4963-8612-26b6d7293cf7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8455ae3d-93f7-4f3a-ad44-8365670215a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4189cf21-4644-4ebd-9b03-d7c1affd65e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eee2be62-f748-40ed-82a0-709588699a63",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c87202-af66-4754-ab6b-263d8c618e7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a9e062-cbf1-445a-b90a-8516a6d861c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cf317b-a6c8-4752-9996-464892f8a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bb2728a-8352-409d-9355-5c5622918be4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cab7460b-fa76-457f-ac9e-ce3c65517b9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b36b2c69-3953-4a83-83c8-88fbc9bf0390"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0922e40b-a612-4732-a437-fac2ae472464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "878b9aa0-cafe-44d9-8547-9469e8d17e28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72b14ed6-c559-4292-b1a0-6998d6ceade6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d426d9e4-240c-40c3-b035-3198fd88df31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3ddf141-969c-497c-8818-e6db5540c078",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5186bb2f-bef4-4057-9073-cda68d25265d"
            }
          }
        ]
      },
      {
        "id": "1f0593d1-ff4f-4852-90f0-d8d6b2c26910",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "24022f8f-0167-48c8-a1e2-ccd22a4cbf7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0811b4a3-f2fe-4921-a7d1-429b18a462d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ceb5dab-e1f2-4eb7-9bd8-fe51308f2eb9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18b8dd6-519b-4cc4-b80c-b0e43a777b62",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce0e8ec0-0046-44ab-9414-6ca7b268011f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a06e26-5f5e-41f1-897a-10873a5d0f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18001531-1f9b-4538-99df-7164ec3fe6f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7710290-8a92-43cd-9513-c331a13212f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d54def5-7719-4134-960d-19530256e4e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee845214-6a12-4107-854a-9c7463991824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "806215a6-2fc9-4e21-9524-f56a6defb2d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13c00244-ae58-4868-8e3c-4ab3e3f5e977",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11a71b35-2cab-43c0-9845-9e2fd1015c4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a49b81c3-34ab-40f0-9d0c-782438b98fb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0cab6d8-ec78-4e9a-a3ae-26b28b8e77ae"
            }
          }
        ]
      },
      {
        "id": "bc1cfd4e-d685-40f8-90f2-e4eb48b42b01",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d00168b-22d6-43d9-b434-f5377d23598c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d90d657-434c-49c8-b810-c9f10861ad5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7edfefb7-bf0b-405c-831c-570355d0bdb6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b9f8999-129b-40ae-bc1d-54f1cbc630a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54c9892a-4400-441f-adf3-048cd78db372",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 314.7781690140845,
      "responseMin": 11,
      "responseMax": 7146,
      "responseSd": 846.9623289772132,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695169989532,
      "completed": 1695170091494
    },
    "executions": [
      {
        "id": "37fe360d-74b7-4023-adaa-a7e87dfcff45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c79dc278-3667-4172-b23d-fab9fcd09665",
          "httpRequestId": "ecdacfe0-3e4f-425f-813b-9f444994f275"
        },
        "item": {
          "id": "37fe360d-74b7-4023-adaa-a7e87dfcff45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a508005a-3f29-4e7a-b813-cc9887995bc2",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "c4b0a813-6c23-4f64-80dc-21cbf202aa8c",
        "cursor": {
          "ref": "d3e0a4c6-1d57-403c-9ed0-0dce330907c1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9fc86be7-cdf0-4d46-94f0-e2e115c46484"
        },
        "item": {
          "id": "c4b0a813-6c23-4f64-80dc-21cbf202aa8c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "91401271-e425-4d69-9229-afae73989eed",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "f3ca1b2f-cce3-46fd-ac13-b87cf16fe2a9",
        "cursor": {
          "ref": "9cb48b88-4259-48fb-bcf9-f653567690d8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f4157241-2419-45a1-b399-8317fc98933c"
        },
        "item": {
          "id": "f3ca1b2f-cce3-46fd-ac13-b87cf16fe2a9",
          "name": "did_json"
        },
        "response": {
          "id": "4b6a3eb2-b677-4c95-8b64-a4a58151befb",
          "status": "OK",
          "code": 200,
          "responseTime": 1318,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c258af8-4e6e-4fa8-bcad-4bbbdb92cd8e",
        "cursor": {
          "ref": "88ebd10e-7e6f-4b34-81d4-efd815c6b645",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b6730449-8a69-4aab-b319-5616a632932c"
        },
        "item": {
          "id": "0c258af8-4e6e-4fa8-bcad-4bbbdb92cd8e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2369602-1faa-4768-a104-7ce237863980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c258af8-4e6e-4fa8-bcad-4bbbdb92cd8e",
        "cursor": {
          "ref": "88ebd10e-7e6f-4b34-81d4-efd815c6b645",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b6730449-8a69-4aab-b319-5616a632932c"
        },
        "item": {
          "id": "0c258af8-4e6e-4fa8-bcad-4bbbdb92cd8e",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2369602-1faa-4768-a104-7ce237863980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74366dfe-ad9b-4435-80fe-62dd77a530b2",
        "cursor": {
          "ref": "684048e9-6dab-42a9-8d33-0f1055e7414c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c682cb94-60d1-4ea3-9244-6774fc3071dc"
        },
        "item": {
          "id": "74366dfe-ad9b-4435-80fe-62dd77a530b2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd180f2e-7294-4f60-9dc1-b986256bdb03",
          "status": "Not Found",
          "code": 404,
          "responseTime": 459,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506eb735-d0bb-403d-bc55-b4439edbb2ef",
        "cursor": {
          "ref": "6c7ade60-2926-46e0-a9da-330596d66b23",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eefc6368-6eb0-4613-92fd-9a4fdc62c4b6"
        },
        "item": {
          "id": "506eb735-d0bb-403d-bc55-b4439edbb2ef",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fbcb9326-5ae2-485d-8070-698fd7b7f039",
          "status": "Not Found",
          "code": 404,
          "responseTime": 245,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add174a2-c7f8-42b7-9fb2-48e6087a876f",
        "cursor": {
          "ref": "1eb5887d-d34b-4c8b-bde4-84b9bcce6383",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c5545987-7870-46c5-b1d0-0800228ef5b1"
        },
        "item": {
          "id": "add174a2-c7f8-42b7-9fb2-48e6087a876f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4e53080e-0bf8-4fa4-9a34-b4b1f32773bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86739f0a-fce4-42c3-9d72-b2614a714e2c",
        "cursor": {
          "ref": "ac2611df-8103-463f-bd20-6681f23322a8",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "908a5b53-84c4-4972-85a0-fb31b0fad9b5"
        },
        "item": {
          "id": "86739f0a-fce4-42c3-9d72-b2614a714e2c",
          "name": "identifiers"
        },
        "response": {
          "id": "c2d5a372-215c-48ed-9f39-0a967859dfbc",
          "status": "OK",
          "code": 200,
          "responseTime": 1411,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145b0d40-f55e-4b4c-9025-17075cbd4f31",
        "cursor": {
          "ref": "99a30430-e75b-45e2-a2f9-d9d7514bf8dd",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b76f95c5-20b1-4c53-bbb2-917072c76d34"
        },
        "item": {
          "id": "145b0d40-f55e-4b4c-9025-17075cbd4f31",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ec107006-e247-4be5-974a-29f49644b8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafd0e69-8a6f-4590-859e-04630856e29e",
        "cursor": {
          "ref": "e6b41923-ad2a-46b5-9f52-39faf3d62d4c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8316fb76-17e3-4113-ab66-2052114580f1"
        },
        "item": {
          "id": "cafd0e69-8a6f-4590-859e-04630856e29e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f869496c-99e5-440f-9f08-a5117daf0f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b9aef-b279-49c8-b847-81f09864540e",
        "cursor": {
          "ref": "7d1cb5dd-8976-4640-95b7-93685f7fe43b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d9c10397-2ff6-4e67-8070-ac8b9f18317e"
        },
        "item": {
          "id": "b38b9aef-b279-49c8-b847-81f09864540e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c11f12d6-32c6-49da-b59f-46bd4009b5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e5cefd-1fa6-4832-bf13-b527cbbc00a8",
        "cursor": {
          "ref": "f990e4d8-e700-4048-9b4c-ccc61887de82",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a750a52f-c638-4831-bf2f-a7e06a442078"
        },
        "item": {
          "id": "24e5cefd-1fa6-4832-bf13-b527cbbc00a8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5f8fdd45-dbbd-41b7-b9bc-15d9479e58ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3541383-d0d8-4acb-893f-977b9b2e9964",
        "cursor": {
          "ref": "62c152ff-0107-4bc3-ab3f-ad605b2fa4b8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9ea75ef-9430-4c05-b1f3-e3dbcde0f069"
        },
        "item": {
          "id": "f3541383-d0d8-4acb-893f-977b9b2e9964",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8b011f43-5732-4331-ba7a-16b9be8d5175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cd291a-1d51-4c5a-8b17-6050ada5beda",
        "cursor": {
          "ref": "c2d78166-6df4-4591-8554-6e81df111b8f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6515d64f-a9b7-4a9a-afb7-830f9901826b"
        },
        "item": {
          "id": "67cd291a-1d51-4c5a-8b17-6050ada5beda",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "84a50198-ab2a-4df5-9022-d8610fc057bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dfa71d-cba9-48d5-99c5-f88e91aae12f",
        "cursor": {
          "ref": "770a422c-8093-4cdb-9545-58f5ebd86e33",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ae78a281-8c45-4e5e-bb8f-a41fd92b8070"
        },
        "item": {
          "id": "97dfa71d-cba9-48d5-99c5-f88e91aae12f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2ceb41a8-5e29-453a-96b4-221bd3137823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dac9fb1-c051-44b8-aff9-a21af1dcaedc",
        "cursor": {
          "ref": "13392b6c-6ca9-4b10-a7e1-9f535a944986",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d9fe19cd-2b8b-4269-90bf-076cf6fe27ac"
        },
        "item": {
          "id": "9dac9fb1-c051-44b8-aff9-a21af1dcaedc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f538bf92-4036-4533-b972-a54b13802130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810606d8-6316-4e77-a5d1-fb9e6f45e876",
        "cursor": {
          "ref": "a6d0ca17-70b3-4d80-bcd2-ec009fc31a0b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8a72d9ed-1455-4970-b726-afe2da050fbb"
        },
        "item": {
          "id": "810606d8-6316-4e77-a5d1-fb9e6f45e876",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c8c24fa8-bc4d-4089-8e21-031a3e4de24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380da13d-610e-4095-a237-90c460d0802a",
        "cursor": {
          "ref": "3696ab97-1fbf-4c44-b2a9-52804ee9cc23",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cc7fa7ae-ea62-42b9-920b-af54c9dd1f97"
        },
        "item": {
          "id": "380da13d-610e-4095-a237-90c460d0802a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fd9a51b1-053f-4071-9ab2-021a4f8d4321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b017be-9200-4290-a567-101f18af08c5",
        "cursor": {
          "ref": "26945c9d-e55f-4816-8336-629d13e306e5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6609fd45-1c4f-4fee-a69e-0436a66ecc00"
        },
        "item": {
          "id": "e0b017be-9200-4290-a567-101f18af08c5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b318100f-7a5d-42d4-acbd-b2be64b46b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5713f0-bbe7-4923-9e84-27f12c713624",
        "cursor": {
          "ref": "ee68fd10-cb49-41af-8440-a195d73f80da",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "260d732d-a183-43a0-83cf-89bc31fedb05"
        },
        "item": {
          "id": "ef5713f0-bbe7-4923-9e84-27f12c713624",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "15fc494c-4bd2-43fd-abd8-5a5671d25ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312e9830-83a4-4c7a-8ad3-3d366fb416b2",
        "cursor": {
          "ref": "98379be6-0c44-44f1-8a24-3b2462a88fb6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "268518ce-5ce8-4f7c-97fb-ee939b29f9d9"
        },
        "item": {
          "id": "312e9830-83a4-4c7a-8ad3-3d366fb416b2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b311edff-d8c8-4d79-a08b-311f2ea3dbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae35ab23-1aba-476d-aa52-1be3dc48ab90",
        "cursor": {
          "ref": "e71afe33-549c-45c3-8be9-1a689f224b9b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b5479975-dffe-4219-9ead-9a0aa12a70d3"
        },
        "item": {
          "id": "ae35ab23-1aba-476d-aa52-1be3dc48ab90",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "407cf18a-252e-44f7-b47d-7fde575d84bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425ab7ec-a10a-4ceb-8b57-34747ecdbd9c",
        "cursor": {
          "ref": "11e2330d-a708-404b-841b-a33e4b72229c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8d42549e-2d52-490f-9391-06d5ae00bed3"
        },
        "item": {
          "id": "425ab7ec-a10a-4ceb-8b57-34747ecdbd9c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a4a43867-95e1-4a24-9bfa-3c313902c7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b136f9-3f42-4699-82f5-8ed9241e1e25",
        "cursor": {
          "ref": "5e1f256a-20aa-4871-8c7d-63fa70b27c07",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2e7fb29a-72a9-4781-acee-6d44db7a8805"
        },
        "item": {
          "id": "03b136f9-3f42-4699-82f5-8ed9241e1e25",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fb5a398a-eed5-4896-a1ff-b65063e7182e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9033c21-5a72-4936-9570-e960e4db57ba",
        "cursor": {
          "ref": "549129ec-5e5e-4d53-a792-0cc49ad014e0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "83d00e45-d481-4208-bbce-aafdb75d3d26"
        },
        "item": {
          "id": "e9033c21-5a72-4936-9570-e960e4db57ba",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "af05047a-322b-40df-9ec7-12646de97d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aa9b4e-6314-4104-b73a-56c2edf601ea",
        "cursor": {
          "ref": "4b2f35da-6e5a-45f1-832e-143163741db7",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8d08688f-a055-44dd-ab44-471418e3bf12"
        },
        "item": {
          "id": "d8aa9b4e-6314-4104-b73a-56c2edf601ea",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2bde542e-4dec-4a60-9ea7-8080ab455493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbfd391-1613-48fb-b1d5-8ec439e01421",
        "cursor": {
          "ref": "6c21c5b7-7de7-4104-b427-b66da071be7d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "074b5865-dc59-470e-92e6-3826e64f04f7"
        },
        "item": {
          "id": "8fbfd391-1613-48fb-b1d5-8ec439e01421",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "beb0acf2-09a8-48e4-9adc-67f577c0b73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc56233-f59c-438d-aae8-e592c3ecb6c3",
        "cursor": {
          "ref": "60e92fe0-5198-4db8-82b5-63c6cdb5eea5",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5dae41e3-ae9a-4791-a809-be6a18507785"
        },
        "item": {
          "id": "9fc56233-f59c-438d-aae8-e592c3ecb6c3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "db1fa7ef-f398-410c-a9d5-bf264a870968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78917992-10a8-4566-b8e1-991beee5f958",
        "cursor": {
          "ref": "6f1bacac-2934-4d65-8ae8-e29991d0febc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eb3e3ad6-8075-449a-8977-ef9fb7cfdf24"
        },
        "item": {
          "id": "78917992-10a8-4566-b8e1-991beee5f958",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "00a23dda-f596-4e6b-a939-6432082bbd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793502d9-d365-4d51-ac85-da22782b4188",
        "cursor": {
          "ref": "613ac151-88d1-4399-b5e3-ce1b06139012",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "116c9c10-b947-49bd-927d-312afd5b3c9d"
        },
        "item": {
          "id": "793502d9-d365-4d51-ac85-da22782b4188",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "80874744-9e6c-49b0-b751-76d76d84a307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da83530b-f61e-45b2-8410-9546bac884ad",
        "cursor": {
          "ref": "01579c5d-f35b-446b-9c0e-bd0e44fd9ed8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9bdb1716-7912-4378-8e5b-8f4081c8e0d1"
        },
        "item": {
          "id": "da83530b-f61e-45b2-8410-9546bac884ad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f6406ff-f62f-4ac1-90d5-97b3df1dcd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc30a02-1292-4450-ba85-faa83b92babd",
        "cursor": {
          "ref": "d2b1b7b8-7cff-4743-93f4-323d195751fd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a7e69e9b-5069-426d-9b70-1be732e2741c"
        },
        "item": {
          "id": "3cc30a02-1292-4450-ba85-faa83b92babd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "081c7074-248f-4000-a12d-b347eb63b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d36894-02b0-49bc-aae3-d198603eb2b1",
        "cursor": {
          "ref": "b1961b1a-e9e7-49b9-8ff3-66bdc40a07a0",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ede1811d-d1d6-4e64-867d-4b8ae2e6bd99"
        },
        "item": {
          "id": "08d36894-02b0-49bc-aae3-d198603eb2b1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "14c9dde7-2b6d-40c3-bf26-9e2f49ea4719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15df5d5-1de1-4cb2-a7dd-b262e0d58e75",
        "cursor": {
          "ref": "4b5a8298-d60c-48eb-b81a-e375f0608324",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a998954b-1808-49ed-8cc5-16077bf932dc"
        },
        "item": {
          "id": "d15df5d5-1de1-4cb2-a7dd-b262e0d58e75",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d398515d-e6a0-4204-8f5f-25c4f20fdfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cb1ba4-31fc-484a-bc68-727a2ae340af",
        "cursor": {
          "ref": "7556e3fc-3f07-4475-ae37-f83ad7b2814c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "399ae226-2106-4e58-8e59-e6e9ac503e56"
        },
        "item": {
          "id": "b0cb1ba4-31fc-484a-bc68-727a2ae340af",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c4de64f7-ae1a-40f3-951b-5d0e59400318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec1b5c8-fe5d-4bdb-adac-e42ef306ee42",
        "cursor": {
          "ref": "e4ac6d35-8fcb-4e96-992f-3e3b490ba68e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a0747b3e-8bc0-4082-8d10-d3caafe068b1"
        },
        "item": {
          "id": "1ec1b5c8-fe5d-4bdb-adac-e42ef306ee42",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c0b60b68-d5cf-4d79-a23b-2061da39a2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcaa607-fb56-41bb-98ec-36a888aa245f",
        "cursor": {
          "ref": "93eca643-f541-4536-b889-0fc537986872",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f8bdc3e3-23fa-4ef3-892b-592e3f948026"
        },
        "item": {
          "id": "1fcaa607-fb56-41bb-98ec-36a888aa245f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "890ed0b0-2595-47c7-9491-eb11e3e54c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2151b9-a076-4ea3-a1b6-7ac4cee91952",
        "cursor": {
          "ref": "6b123dc4-f963-4d23-9d7b-12c9cd71971a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c96fccf-3488-4a51-87e9-8376e0eef3c5"
        },
        "item": {
          "id": "0a2151b9-a076-4ea3-a1b6-7ac4cee91952",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "47f05915-647c-4025-88d5-1b77d4753a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a54011-f707-4902-af80-79536d3d807e",
        "cursor": {
          "ref": "92f11985-fb98-4a7c-bdb1-b6e093d6c94c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cccba5b0-423a-40aa-9400-7ad9e4c3418f"
        },
        "item": {
          "id": "29a54011-f707-4902-af80-79536d3d807e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f25a6807-1e82-41b2-938e-13f08776eb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca735a38-0e74-43c3-a5f9-7dc857e7fcb8",
        "cursor": {
          "ref": "58242ba2-7dd3-423f-9f89-af159f802f69",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "04a53019-5577-4c31-b7b8-f43803a4684c"
        },
        "item": {
          "id": "ca735a38-0e74-43c3-a5f9-7dc857e7fcb8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "02f1402c-a7ed-43b5-96aa-7db93ba8bb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172043ff-acd5-4953-8601-7db6889e14fe",
        "cursor": {
          "ref": "07166ca9-db17-4460-adfe-21a53c34cc6c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "62aa5ca3-44ee-4dd3-8878-f62f13f1f85f"
        },
        "item": {
          "id": "172043ff-acd5-4953-8601-7db6889e14fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "637c0254-136b-46e4-9490-4b769e72e9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4e73a7-fe58-42a9-be5d-b72f0bb4f75b",
        "cursor": {
          "ref": "faa41f4b-33cb-4b19-96b7-8fe151159871",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2800978e-0973-4769-804a-9595a23f77df"
        },
        "item": {
          "id": "9c4e73a7-fe58-42a9-be5d-b72f0bb4f75b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d708d022-671c-4a80-947d-e58c2dc2d01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e19a6bf-084a-45eb-af88-740fff63c185",
        "cursor": {
          "ref": "f80ba017-499c-4779-a659-93adf998375f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e544020a-acc4-4004-8f1a-7c7b9e80f5bc"
        },
        "item": {
          "id": "4e19a6bf-084a-45eb-af88-740fff63c185",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "402ca882-5a45-45eb-8ccd-96a40a48a866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f901be63-62f0-430e-bde8-52e514fc3471",
        "cursor": {
          "ref": "6bfce69c-25b5-4771-92dc-ab75b3e5e3c2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "81e0dc1f-1f26-4eea-ac00-b5a5af08f1fc"
        },
        "item": {
          "id": "f901be63-62f0-430e-bde8-52e514fc3471",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2d32b17-9ae2-42a6-a2b8-fcae90de0a15",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 596,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a107d6e2-6e3f-42fa-9918-f93afd7238db",
        "cursor": {
          "ref": "64f9ceff-99ac-4a58-be41-38a95b64b285",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bed1cc6f-5afa-45eb-ad1a-b3b4d1c569b6"
        },
        "item": {
          "id": "a107d6e2-6e3f-42fa-9918-f93afd7238db",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ad1c557a-4c6e-4a7f-a340-16f1af8370e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032532b4-e9ea-443e-9fef-96ade73461d8",
        "cursor": {
          "ref": "56a829f9-6bc6-4b8a-9e8a-e24f322b672a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8df49013-c927-4ae1-b040-1ca110098533"
        },
        "item": {
          "id": "032532b4-e9ea-443e-9fef-96ade73461d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e623cde3-5b4a-401c-b806-bdf76165c427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816608ff-9ff6-4552-a4a6-1582924c0d54",
        "cursor": {
          "ref": "557f656e-670e-434e-8b6a-13a4a0488c10",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4512767f-f6e6-43ac-8616-0f58a72869da"
        },
        "item": {
          "id": "816608ff-9ff6-4552-a4a6-1582924c0d54",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f3ffa006-f549-42ac-94b2-09fb8ff42ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b8b283-60fe-4689-a77d-555b0e5cb360",
        "cursor": {
          "ref": "3b8e54bc-4c1b-43d6-bf69-eed43629717e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e6394afa-b4f2-48fc-a81b-3aabab808e44"
        },
        "item": {
          "id": "b9b8b283-60fe-4689-a77d-555b0e5cb360",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2a2635ff-aeb9-474f-a27d-b0938b52ca14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080027a8-a87c-44ef-96ee-7d4ed4007ccc",
        "cursor": {
          "ref": "6899c415-e4d1-474d-a8f2-a77f39954b79",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "53a8df31-b2a8-466b-90ec-cdbc9595b71c"
        },
        "item": {
          "id": "080027a8-a87c-44ef-96ee-7d4ed4007ccc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b5df907c-9516-4430-81a3-b8edba95686d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10528680-8de1-4e6e-b245-b28ea74f4129",
        "cursor": {
          "ref": "8dcf2c5e-3f59-4e98-a4d3-5966be86b98c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "73e7f766-57b8-41d4-97a5-23561c2a7600"
        },
        "item": {
          "id": "10528680-8de1-4e6e-b245-b28ea74f4129",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7f7952ec-3ea8-4383-a155-f658ef586c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9369bcbb-8300-4f7d-a9f7-75b25b017729",
        "cursor": {
          "ref": "d8760fe6-df85-4a28-b64d-7760a54b50b3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6a1493fe-022a-4e4d-ad92-c7e70e6044e2"
        },
        "item": {
          "id": "9369bcbb-8300-4f7d-a9f7-75b25b017729",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bf83e878-94f3-4d9b-81b9-75ae3e60988e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 581,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea2674e-67d9-4fb9-935d-c654637cf89b",
        "cursor": {
          "ref": "9bdb214b-b256-4de7-a7fa-35764dea090d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e77e9329-79ac-4daf-86f2-6c3544ffedca"
        },
        "item": {
          "id": "eea2674e-67d9-4fb9-935d-c654637cf89b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5a384796-0c9e-4fd9-90f1-4ec1f0ec1004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbc3cc7-9aa9-4d8d-a4c5-f27332951ab0",
        "cursor": {
          "ref": "16c4b774-9204-4c51-a355-623c9af4e564",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2a0f5163-ef8a-4d22-aedd-7467b0088899"
        },
        "item": {
          "id": "acbc3cc7-9aa9-4d8d-a4c5-f27332951ab0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9fd4c098-559a-4963-b9f8-6b90d5f8798d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7356ebf-6634-4e7c-ba6e-147709a02db9",
        "cursor": {
          "ref": "1d17617e-b2dc-4ffb-a963-655c5d98c863",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "10f7857a-369f-4bd6-8be0-02d4d56f56e7"
        },
        "item": {
          "id": "c7356ebf-6634-4e7c-ba6e-147709a02db9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0a652e3d-5bd5-4214-8f50-cefaff81248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a82283f-4561-4a39-90fa-0d9550bd7d71",
        "cursor": {
          "ref": "7913097f-5bd8-4e84-9593-1ec39bc596cb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6fcbf2a0-cf56-4e37-9e93-a0d4446d2f2d"
        },
        "item": {
          "id": "5a82283f-4561-4a39-90fa-0d9550bd7d71",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2311cfb1-5aae-43d7-b38d-20936d46866a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ee0245-29de-4b5d-a89c-a8bec4a2ea0b",
        "cursor": {
          "ref": "576778e8-2c92-4122-8848-476fcb939ef9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "404e4945-bc6f-42e0-975f-c7a9bb620c3e"
        },
        "item": {
          "id": "36ee0245-29de-4b5d-a89c-a8bec4a2ea0b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f3656288-b428-4360-9f96-4752b5e74d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606b2a57-6bf1-4245-834c-eaa8b296e2d1",
        "cursor": {
          "ref": "314303ed-2f4f-4034-b3c3-850df77119f6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b0781360-3991-4601-9da7-326f76c7ba1a"
        },
        "item": {
          "id": "606b2a57-6bf1-4245-834c-eaa8b296e2d1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "36bd294f-bc13-4fca-9900-7ffd2f15344d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a594d2d1-00e0-4e07-b33e-f9f78d47b232",
        "cursor": {
          "ref": "a2383d7e-9000-4da4-86e0-899b17034d68",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9674f9fc-b728-4c6c-8a96-c609623dab46"
        },
        "item": {
          "id": "a594d2d1-00e0-4e07-b33e-f9f78d47b232",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1d5ed2a-cd28-4c1f-adc4-91b37ec27bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7251713-1696-4dd5-aa06-d6d156a542a9",
        "cursor": {
          "ref": "d1048533-8f7c-4511-a6e2-f78d2f3b8098",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "064cd89d-49ea-4e3b-a535-01cca2f3caa9"
        },
        "item": {
          "id": "b7251713-1696-4dd5-aa06-d6d156a542a9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7134f45d-dd1e-4897-8728-bf4013f99f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dc6019-63cc-4ceb-9cf0-92e27aaa5854",
        "cursor": {
          "ref": "97f6043a-cf2f-48da-b451-3139fe87d02d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "003ecc61-2899-417c-95c6-6a97d28454a3"
        },
        "item": {
          "id": "55dc6019-63cc-4ceb-9cf0-92e27aaa5854",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6b99cbad-dff7-49d7-8178-a4e2b793f39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1010511f-7ed4-4fa8-8567-cd30d685b45a",
        "cursor": {
          "ref": "10efe79b-bc69-42b9-a1a1-3d05c871e28a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "10eece92-1318-4295-88fa-4cf655d2ae96"
        },
        "item": {
          "id": "1010511f-7ed4-4fa8-8567-cd30d685b45a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "76da801d-062f-43cf-91eb-0b3962cea24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353358c4-f5b9-4ac6-b13b-46ef46645fa4",
        "cursor": {
          "ref": "5a143b0e-4f63-48f7-a7b3-19d613a4266c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ba364394-3b93-481a-8186-3b100aafc129"
        },
        "item": {
          "id": "353358c4-f5b9-4ac6-b13b-46ef46645fa4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ef497ae1-4575-4260-9b01-e6bd9e96156a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef69f0c-f90c-45d7-abc8-7d28786e44e4",
        "cursor": {
          "ref": "78bca206-4213-4165-874d-4bddbf3b838b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9d34333a-19d8-4e8a-8559-20e555650bb9"
        },
        "item": {
          "id": "1ef69f0c-f90c-45d7-abc8-7d28786e44e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "77bb0a88-f52d-4042-8d20-5edbb1610bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce79bee5-025b-4347-8f42-da954a775b02",
        "cursor": {
          "ref": "c69b99ed-69db-4c0e-bc06-308f60494b9f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fca1afd5-b310-46a4-a678-be11772aa5af"
        },
        "item": {
          "id": "ce79bee5-025b-4347-8f42-da954a775b02",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "68be9b94-e193-41fb-9e99-1a975a505b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9a8ed6-4808-41d0-a7f3-5fd190b7e98d",
        "cursor": {
          "ref": "aa3adc43-4f7b-47a5-ae9a-56b11a5dda11",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fc01db39-576e-47e2-9151-969ac48dfd87"
        },
        "item": {
          "id": "df9a8ed6-4808-41d0-a7f3-5fd190b7e98d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "827a165d-c5ba-48fc-bd8c-34baebff1302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3727e9-09ff-41e0-888a-2a12fb308dde",
        "cursor": {
          "ref": "a048daf1-d35f-4b5d-b68a-178b2d515812",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f806d7b2-a556-4c27-9cb2-034431f52b1a"
        },
        "item": {
          "id": "5e3727e9-09ff-41e0-888a-2a12fb308dde",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "47c53d00-474f-4d05-9a03-ae09ea19dae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b0a1fd-0ea0-4560-9723-563738c04d96",
        "cursor": {
          "ref": "3aedc041-b4dd-431d-8c02-a89ada9acc53",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d35871f1-99e5-479f-b32c-436af87e2772"
        },
        "item": {
          "id": "a6b0a1fd-0ea0-4560-9723-563738c04d96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b6a999a3-605e-473f-a12e-78df65d6794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4fd46e-c5f0-42ba-b7ea-19693d1129a3",
        "cursor": {
          "ref": "d506dbf4-f059-4756-bcb5-6550710e7c02",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd02f54a-bb87-420d-9962-f9c75d99d5ec"
        },
        "item": {
          "id": "5b4fd46e-c5f0-42ba-b7ea-19693d1129a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a2f0892-3610-4770-8c5b-dae841c9e59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c27818-275e-4431-aa25-eacf2bbd3690",
        "cursor": {
          "ref": "d0f4a87d-4ac8-4494-82e1-cbe346d230b9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "38dfd415-7f6b-4068-88cc-43e220896c8f"
        },
        "item": {
          "id": "69c27818-275e-4431-aa25-eacf2bbd3690",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2c793a1c-58e2-48b9-a4ed-0e52b75fa40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e00888-f525-4cb0-b082-1d62e8e0bac9",
        "cursor": {
          "ref": "5c72f1dd-1557-4d91-aef4-18e20e351411",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "46510c71-96ae-48ad-b735-210370ba1dd2"
        },
        "item": {
          "id": "24e00888-f525-4cb0-b082-1d62e8e0bac9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "258aac6c-50cf-4dd7-b8cd-702b2accbde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8981272-c59a-4099-946a-1517e193431d",
        "cursor": {
          "ref": "2f65a5f4-6b72-480c-bfe9-bd183843d2a7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3c8687ba-2ce3-45ed-94bd-7dc73201f538"
        },
        "item": {
          "id": "b8981272-c59a-4099-946a-1517e193431d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "db1e4d2e-ee29-49f7-bfe4-bf5581a2dbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabf69aa-8d85-4d6c-ba82-1685379faf4c",
        "cursor": {
          "ref": "02781734-1d72-4b09-a28e-e40d2a1f5a21",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "712fc8dc-0c85-461c-8f32-3e3c945c0569"
        },
        "item": {
          "id": "dabf69aa-8d85-4d6c-ba82-1685379faf4c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a214a79f-5f23-46a9-a414-19d159550946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f05f329-841e-46ae-8030-29c452ea404d",
        "cursor": {
          "ref": "31082de0-6739-4fe3-9d7c-27f96bd40cf4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ae6f41f3-232d-48d6-a5be-a6a83078978b"
        },
        "item": {
          "id": "4f05f329-841e-46ae-8030-29c452ea404d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2a937a4f-4ab7-4c09-9bd2-00ce3ab2f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c04ee3-99ad-4d04-89ea-dd2af658b3ec",
        "cursor": {
          "ref": "936d70b3-151b-49e7-9f2e-732b0f5807fa",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e6127d96-b468-4262-a1d5-275ac8ef9ff1"
        },
        "item": {
          "id": "d6c04ee3-99ad-4d04-89ea-dd2af658b3ec",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7ffe31dc-2376-4922-84c0-e9f6df0671b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e018f-a0ff-4857-be7a-a3ef9f9ef357",
        "cursor": {
          "ref": "1253d33d-44d7-4e1a-984c-348aa13087bd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ebdae2b7-2e45-455e-a062-f956779e22dd"
        },
        "item": {
          "id": "ac4e018f-a0ff-4857-be7a-a3ef9f9ef357",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ea4cca8c-8f3e-4f34-9e64-72b419b313f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2054fc-bb03-4622-9167-d70d428790d1",
        "cursor": {
          "ref": "eb18ec97-5d81-440c-b394-9a390eab8f7f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4e210693-010e-4469-8327-c6774846e027"
        },
        "item": {
          "id": "0a2054fc-bb03-4622-9167-d70d428790d1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "479277a9-1466-4f10-92b8-fb5b88765724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ee4302-3411-46d7-8794-07acaf8570e1",
        "cursor": {
          "ref": "5c744aed-41e4-4e20-bc99-24dfc867309b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ce3a5c7b-3d14-487d-85e2-9b7f4e08e8a7"
        },
        "item": {
          "id": "05ee4302-3411-46d7-8794-07acaf8570e1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38c9bb5d-66de-4849-82a5-70e5022732e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beac0484-7524-473d-9e6c-f6c0b10de83f",
        "cursor": {
          "ref": "c042158f-4dac-4dca-959b-7b1b94c1cb33",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ec59f1e7-dca6-42a0-bfc6-5003d2ed3ae8"
        },
        "item": {
          "id": "beac0484-7524-473d-9e6c-f6c0b10de83f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4eb3f721-60a5-4262-9a85-d99e98758dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee720a0-c843-4a4f-8e8b-813810bedfc7",
        "cursor": {
          "ref": "b593175e-18d7-4eb6-9040-4fa91d1b1386",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0ca030e1-076e-4d19-a192-1779c9d12d15"
        },
        "item": {
          "id": "cee720a0-c843-4a4f-8e8b-813810bedfc7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1bf2fbcf-8c49-4888-85f7-864962ef68fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e598e2ba-b6f6-45da-bbbc-8b22381bdb13",
        "cursor": {
          "ref": "ac1a0fa5-d5d0-4587-b6cc-726f65b17930",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1e84accf-5b86-427a-becc-633d852f534e"
        },
        "item": {
          "id": "e598e2ba-b6f6-45da-bbbc-8b22381bdb13",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "63973b2d-8caa-4a43-a000-3068782bf209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c9f15b-8d8e-4007-ac2f-93d9a122e1d7",
        "cursor": {
          "ref": "7df6724e-7230-4bf4-b29b-e8d580838b31",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0a73c346-1b0c-4dab-bd54-c0a8b982a8d1"
        },
        "item": {
          "id": "37c9f15b-8d8e-4007-ac2f-93d9a122e1d7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0a9a32d9-455d-4441-8cf8-cd001defa58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ee7368-38b7-4cff-97e4-df5c118adfe0",
        "cursor": {
          "ref": "4366620b-cd9a-46d4-b714-1a10776b2fed",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "03d2cd42-61a8-4451-89a7-5190b2e9402f"
        },
        "item": {
          "id": "51ee7368-38b7-4cff-97e4-df5c118adfe0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a262a099-228f-482c-85c5-ac7e26844e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2170389-6898-44ff-a8ca-751d3e8047ec",
        "cursor": {
          "ref": "c991b164-fc63-446c-9a11-8c4c56ab4562",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "867b5201-dfab-416a-a00f-3af11596c919"
        },
        "item": {
          "id": "c2170389-6898-44ff-a8ca-751d3e8047ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "33e6cac1-8e9c-4f25-979f-7f3263d18b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95fc12a-3241-4f60-9196-02c34756a926",
        "cursor": {
          "ref": "e31ae110-d6fc-4b7d-b16e-6ff264be698e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "95926b3d-9c89-43d9-be29-592076683ed2"
        },
        "item": {
          "id": "a95fc12a-3241-4f60-9196-02c34756a926",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "69947ed5-eb67-4f24-9f33-3b6a5b97a1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8debcf-006c-4919-bc42-fbefb83e50af",
        "cursor": {
          "ref": "8690c3b9-fa88-43b8-a6d1-41ea4b04d7c7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bb9f4b86-f55f-4010-b472-2528f4337a3d"
        },
        "item": {
          "id": "0c8debcf-006c-4919-bc42-fbefb83e50af",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e2c640a6-434b-4a01-8827-5b7cc798d616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903c3905-17b0-4e22-916d-4f8a1e1a9665",
        "cursor": {
          "ref": "e031c9eb-eb32-4671-8b8a-bd71b73879a4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f4882c93-6c50-46ea-ad39-5ab6b331dca7"
        },
        "item": {
          "id": "903c3905-17b0-4e22-916d-4f8a1e1a9665",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a041b6c9-fcee-43be-ba95-9d7fae449a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011d79dd-4c59-4884-a12a-cca3a9eada45",
        "cursor": {
          "ref": "683e14ec-f154-4be2-ab7a-b2bf251ced6d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "322e7c3f-5378-4c70-9e81-4e300f53c3d1"
        },
        "item": {
          "id": "011d79dd-4c59-4884-a12a-cca3a9eada45",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1771ec6e-ece9-4434-a1dc-bbaa6f86e40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6013ec57-4b32-43f2-a608-e0d38e0eb0d6",
        "cursor": {
          "ref": "f58c7ba1-7756-4b03-8578-b104528580b9",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7492950d-7c1e-403f-acae-f74fad1572c2"
        },
        "item": {
          "id": "6013ec57-4b32-43f2-a608-e0d38e0eb0d6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "011b5d66-8377-47ca-806b-529773e517d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da1df1-63c1-463f-b444-22f3bf3131a2",
        "cursor": {
          "ref": "77445eab-c251-4b05-9b4e-cade042350ab",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ea7dc8d-8ca2-4afe-be3b-88c7a7a054ee"
        },
        "item": {
          "id": "26da1df1-63c1-463f-b444-22f3bf3131a2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f061f73c-7cd7-40a0-9d27-8df8c11a08e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf67770-96e6-41ad-8ec5-8a790b773ae1",
        "cursor": {
          "ref": "6be6eece-3677-4bdc-9be1-21326fc2f486",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "10370436-ed2b-415f-9566-60e1c308b98b"
        },
        "item": {
          "id": "dcf67770-96e6-41ad-8ec5-8a790b773ae1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a1c6b11c-5cbe-497e-9f38-11f8ec1bbc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5427699-e8de-4677-b00f-565b9c7152f2",
        "cursor": {
          "ref": "19464adb-0f09-4492-9b29-ca92c27bf00a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "103068b4-3070-47c7-a924-cf6348be75b7"
        },
        "item": {
          "id": "a5427699-e8de-4677-b00f-565b9c7152f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "669b81ea-da90-426f-99a1-c71c9fa8afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0b8b8-9f75-4ad9-b735-648abd3a0e73",
        "cursor": {
          "ref": "07232229-5503-45b3-8e48-9bb00e3ac6db",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e765cfe9-9368-451d-9a07-db67cfb35b9c"
        },
        "item": {
          "id": "79f0b8b8-9f75-4ad9-b735-648abd3a0e73",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "71fc2089-1336-4d50-86d9-519dfc026494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a780cd05-f2e0-4216-849a-333521cc7858",
        "cursor": {
          "ref": "bdf7a677-f164-48e9-8fc0-7101a10ee92f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "84b795e6-5194-48b6-a9f5-5659d4f0b1de"
        },
        "item": {
          "id": "a780cd05-f2e0-4216-849a-333521cc7858",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "818aae4e-8555-4037-b5fe-c01bd05ac4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c91822f-37e3-4f2d-89ad-32beb03c5155",
        "cursor": {
          "ref": "d77ad2de-5efe-4218-adcf-4db25a398088",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eb5ef150-4c6a-4c3b-aadb-630d9faf28ec"
        },
        "item": {
          "id": "6c91822f-37e3-4f2d-89ad-32beb03c5155",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b415dbce-cfcb-4adb-86ba-8c817501b59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93be591-1134-4169-944e-775fe07de9aa",
        "cursor": {
          "ref": "6aa12d8c-e598-4592-9b88-71ff9868bd75",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ba5ab15a-49e8-4df7-9c8c-8e19246cf419"
        },
        "item": {
          "id": "c93be591-1134-4169-944e-775fe07de9aa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5bc99088-6871-46bf-ae9b-b959263af1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce4fcba-0c7d-459b-98f2-415142804a28",
        "cursor": {
          "ref": "b2720228-9a4c-4e47-acc0-cc497bd8749d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fba22c0c-8529-4e62-b697-98c637d59f22"
        },
        "item": {
          "id": "7ce4fcba-0c7d-459b-98f2-415142804a28",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "14a8a808-7c8c-49d8-aee7-76eef8af36da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7ac63c-f245-4d52-be73-873beb543e9a",
        "cursor": {
          "ref": "7cdb2fb6-ae74-4a5a-8ba2-316183d970f2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "84b3867e-2400-4a49-936f-3bbecda06b74"
        },
        "item": {
          "id": "5b7ac63c-f245-4d52-be73-873beb543e9a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ddafc1db-d771-4ce9-881e-7e152302065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bd5a53-6f82-41ff-9647-d9d6dd3d0bec",
        "cursor": {
          "ref": "37e4fc83-c9e8-4c62-8ae4-7dbb8ebc1893",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ca8d8c5c-ac63-4b9f-9188-40f041246d1a"
        },
        "item": {
          "id": "c4bd5a53-6f82-41ff-9647-d9d6dd3d0bec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15acf870-c984-448e-b771-c854077f104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb5d23b-98c5-412f-a4fc-5d70a802d3bf",
        "cursor": {
          "ref": "ccf1b4af-d4c7-4e26-8909-2d4d3e92dbb5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f160c48-96ea-4165-a7ed-e499c048d186"
        },
        "item": {
          "id": "2cb5d23b-98c5-412f-a4fc-5d70a802d3bf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2310acd3-3d7c-4c60-9139-9b3aa49c22ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca840687-a3a3-49d0-b9f5-6c5f17fb87b9",
        "cursor": {
          "ref": "eec48d87-72aa-4603-92f3-9a84cee2fbd8",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b1ab47a8-47e9-4f2e-a605-9efe445d4e5f"
        },
        "item": {
          "id": "ca840687-a3a3-49d0-b9f5-6c5f17fb87b9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "006cf8a9-c967-4fc7-92ad-85a2f4e40521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39635af6-22c8-4e26-9293-b54b3c4c553b",
        "cursor": {
          "ref": "4731888f-450b-490b-a919-3cc53e4127d2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dfc142b5-d796-4d60-a7ab-f3878687487b"
        },
        "item": {
          "id": "39635af6-22c8-4e26-9293-b54b3c4c553b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "05b52dba-c5ea-4693-bcb7-badca718e23f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f04b13e-a99a-4f86-b1a9-8804803e0dad",
        "cursor": {
          "ref": "b7d989d5-f6d8-49a2-a2e6-fb4013446cc4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8e2f9c3d-a7f2-44da-a26b-dacebf2cc1e9"
        },
        "item": {
          "id": "3f04b13e-a99a-4f86-b1a9-8804803e0dad",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0f92b81f-7224-40a3-a65d-8d17f493bf39",
          "status": "Created",
          "code": 201,
          "responseTime": 6830,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89c3bfb-0b30-4d89-a917-fa17dffb4abe",
        "cursor": {
          "ref": "6b588c00-e358-4848-a8ab-2b62219e4a71",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1844c5fc-1354-406b-9c59-a62fc5e6b77a"
        },
        "item": {
          "id": "f89c3bfb-0b30-4d89-a917-fa17dffb4abe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f9d59c7f-204a-4072-992c-50b66f7af464",
          "status": "Created",
          "code": 201,
          "responseTime": 7146,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f511b294-0c00-4007-b95b-cb20afb181ef",
        "cursor": {
          "ref": "4d049ae0-751c-4cc1-87e7-dc62c164f4f2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e0e7637d-93df-4112-a673-f1663be50777"
        },
        "item": {
          "id": "f511b294-0c00-4007-b95b-cb20afb181ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "894af26e-d4c7-47fe-9947-0b08e3260168",
          "status": "Created",
          "code": 201,
          "responseTime": 5938,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e353514-239f-4272-adf1-76e6b21857ba",
        "cursor": {
          "ref": "fd449f8f-be27-4174-ae30-5a6e6f600cff",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ff18bf54-b705-46f9-b77f-2328b99f7647"
        },
        "item": {
          "id": "4e353514-239f-4272-adf1-76e6b21857ba",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f5c0741d-a4c6-4f3d-969b-bd967700747b",
          "status": "Created",
          "code": 201,
          "responseTime": 6115,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "52717723-c589-4958-bcc8-146bf376e4c6",
        "cursor": {
          "ref": "e0bb561c-cc7c-42f8-a160-dc4fe3585abd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7bbc7992-8b53-4c08-98e6-9a2e4a527e98"
        },
        "item": {
          "id": "52717723-c589-4958-bcc8-146bf376e4c6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9e2c4c65-ef27-407f-b276-54373000495c",
          "status": "Created",
          "code": 201,
          "responseTime": 6349,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9506a9-53c6-498a-b43d-1b625e4e40d7",
        "cursor": {
          "ref": "8656ede5-93c2-4c1a-a30e-f997a4ad3093",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f58c7ed1-7484-47ed-9267-d0c926cb60a7"
        },
        "item": {
          "id": "ac9506a9-53c6-498a-b43d-1b625e4e40d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "772d2b7f-221c-4f78-a694-61363cd6f9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a9aa64e8-841a-4031-8464-1a31037711cc",
        "cursor": {
          "ref": "b9abc03d-3061-4a09-ba25-0a79e2f142ac",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e923884-0d41-4ee0-892d-ae89b3dbbda8"
        },
        "item": {
          "id": "a9aa64e8-841a-4031-8464-1a31037711cc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "30c30030-c4c7-42f3-95a9-56e26821e7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21b7455-eca3-473e-8dbf-67519aa1ba0d",
        "cursor": {
          "ref": "1cb6c141-e5a8-4683-b0de-11ebb63e467c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7737d1da-b20e-4c3d-9f36-bae60d2bb8b8"
        },
        "item": {
          "id": "e21b7455-eca3-473e-8dbf-67519aa1ba0d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5796e849-196c-4ff6-85e7-0c1129489030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f80dc1-d9b3-45d8-b887-d0d9abe1dab7",
        "cursor": {
          "ref": "70ae8476-012f-4f11-b269-6e18668ee1b2",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d54b72b7-5657-4b3b-8ce6-ca2e0c092455"
        },
        "item": {
          "id": "e6f80dc1-d9b3-45d8-b887-d0d9abe1dab7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e908ef3c-1bb2-4c1d-b185-37e9c73df5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e91ea8-1ab7-4490-8350-128de96a3f8d",
        "cursor": {
          "ref": "864c67a0-c109-472d-8001-4e256792c7cb",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4e27e6b3-ec8d-4362-a403-b2f5ffa8031e"
        },
        "item": {
          "id": "16e91ea8-1ab7-4490-8350-128de96a3f8d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "abb5a140-a7fe-43fa-939a-e999d8cf0cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b4d3ae-06eb-45ed-82dd-03f229b0ecd5",
        "cursor": {
          "ref": "17db24a9-a44b-477f-bbd9-5041b8e861dd",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6cca0fab-81bd-4b4d-97d0-2ddc3cb39f03"
        },
        "item": {
          "id": "08b4d3ae-06eb-45ed-82dd-03f229b0ecd5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c1aa8e16-6cf8-423c-9da8-996e1e992268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d734b7-0d67-4bf0-9059-31aac2ae1c98",
        "cursor": {
          "ref": "d12827fc-aa8f-4596-9a1f-474bb4c86b90",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "53842158-8e03-4f49-8e25-57153a31ba06"
        },
        "item": {
          "id": "f9d734b7-0d67-4bf0-9059-31aac2ae1c98",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ef990809-eca5-4220-81a5-9078af8cc314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8f989a-4b92-4abf-98e5-67135cca3d76",
        "cursor": {
          "ref": "216aad01-a9e9-4ab6-a409-848997ddcf80",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e49b951b-0d1e-487f-8421-67998231099d"
        },
        "item": {
          "id": "ad8f989a-4b92-4abf-98e5-67135cca3d76",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e3ce1416-ab48-413a-bbca-355148459162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de251701-7c84-4cf3-a0ba-aa073fc483d8",
        "cursor": {
          "ref": "3b22ee29-27a4-4c7d-9a19-370c802469db",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "97f3b23d-9e1c-406a-86e0-a478f946a79b"
        },
        "item": {
          "id": "de251701-7c84-4cf3-a0ba-aa073fc483d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f127c8ff-90c1-43c9-b6bd-9ef6e343a909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3944b5-635e-46ef-a5fa-345202cbdeda",
        "cursor": {
          "ref": "0695b1b4-3635-41f0-b5ed-290dab0d6c99",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d6fe590-2fae-4c43-a0d4-3ee612392b08"
        },
        "item": {
          "id": "cc3944b5-635e-46ef-a5fa-345202cbdeda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "87957ad1-830f-49da-8a7c-9564d5bc72d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f0192a-b1a0-4123-a25d-6c1ee1922b18",
        "cursor": {
          "ref": "2c08a7a6-fd33-4bd7-b36a-da1a9b779c15",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a5b0f233-72fb-41ce-9477-f24375027ebb"
        },
        "item": {
          "id": "b8f0192a-b1a0-4123-a25d-6c1ee1922b18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76389f14-e139-4d1a-8c75-756f5d2c9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6dfad9-adce-4e55-a3d4-ce4694fd3e1f",
        "cursor": {
          "ref": "223b161e-2e86-425f-98ec-afdc96449bf1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c2103d8f-2ee1-434e-b666-30af69f583eb"
        },
        "item": {
          "id": "5d6dfad9-adce-4e55-a3d4-ce4694fd3e1f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac771ec0-761a-4597-8114-b13105eb153d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36b3a46-b4aa-476c-a43a-78731c5267fc",
        "cursor": {
          "ref": "27c14c9c-4e3b-4f5d-a2d2-1c862bebd4aa",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e99d1599-8e72-46c0-ab4a-74f96aba178f"
        },
        "item": {
          "id": "d36b3a46-b4aa-476c-a43a-78731c5267fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c4c73750-2532-46c1-9565-a793b877c8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a548498-9181-4733-a57e-0bcb74177c38",
        "cursor": {
          "ref": "7d1cc345-6c3f-4708-a040-9d4589ea195b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b5a2d89e-9d78-4b49-ae9f-67757e2d9900"
        },
        "item": {
          "id": "8a548498-9181-4733-a57e-0bcb74177c38",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f4cc7a00-c59f-4a3b-aca8-fdb37b18b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77581f9a-3a0c-44b4-9e67-d9974c1546df",
        "cursor": {
          "ref": "5b4829d6-985b-475b-ba18-3e5ca9bbec2a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "992da388-af5f-4aac-83a0-760a32bfe386"
        },
        "item": {
          "id": "77581f9a-3a0c-44b4-9e67-d9974c1546df",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "41e33783-31e9-42ec-b0a1-c0f160fcfc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230286c1-5e45-487f-a7e3-3260d9050f78",
        "cursor": {
          "ref": "df61edd5-d72a-4d0a-a3d0-9e733aee9890",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f88c7cbf-5df5-43b8-bd6d-78dae478f62a"
        },
        "item": {
          "id": "230286c1-5e45-487f-a7e3-3260d9050f78",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3045933-d117-4b40-a948-9f2d533f1255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffd2a8d-4afb-4a7e-8445-24053657920e",
        "cursor": {
          "ref": "2ac8ea49-81ab-4241-9a32-59f036a0255f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "53b1df45-04d3-473d-a521-470effecf551"
        },
        "item": {
          "id": "6ffd2a8d-4afb-4a7e-8445-24053657920e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2efaabb7-204c-4ff7-b36d-7687b880c686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8293948e-bcf8-434c-9171-9a160ec7ebf1",
        "cursor": {
          "ref": "65dbedbb-e05b-4d46-a113-62b4e28be085",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4abdf94c-5202-4006-ad0e-118a05e22bef"
        },
        "item": {
          "id": "8293948e-bcf8-434c-9171-9a160ec7ebf1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1cae185e-7cfc-4ca5-be7f-6b0ecdf4e709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32922930-a8af-44e7-9811-b1ce72a1958e",
        "cursor": {
          "ref": "19cfea38-fefb-464d-8aff-1a95e1005769",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "edeb3576-2dfb-429c-846e-1cfdf0cb22a1"
        },
        "item": {
          "id": "32922930-a8af-44e7-9811-b1ce72a1958e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1079d648-b4cd-4dfa-b6ff-09564c4cc0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e5dd83-4548-4a13-9abe-024bb44895ac",
        "cursor": {
          "ref": "519170ba-e7bb-4dbc-a9f2-5f9c04843ec7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "273d7acf-d3a0-43fb-a76d-863ebabdac1f"
        },
        "item": {
          "id": "27e5dd83-4548-4a13-9abe-024bb44895ac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0876ad13-6682-49a4-bf6f-8214735db1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7f2250-ad83-4dbd-9b75-22f29e2f57be",
        "cursor": {
          "ref": "013d2080-fd73-498e-ba5a-e255e0aec0b8",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8aed59e5-ea88-4c32-9d68-c62f4481c902"
        },
        "item": {
          "id": "ba7f2250-ad83-4dbd-9b75-22f29e2f57be",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "82567e55-46b0-4d41-8fe6-7c52c1086730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01c103b-c00a-4bad-b825-6567dfe9d898",
        "cursor": {
          "ref": "f5aa344a-c247-4d37-baf5-749a8de92671",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bf8b07e1-7fea-496f-9550-64992f0c8fcb"
        },
        "item": {
          "id": "d01c103b-c00a-4bad-b825-6567dfe9d898",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c088aa9-ae38-41ac-8651-f883f5fb8c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e93e49-35ee-4806-883a-ca377c08702f",
        "cursor": {
          "ref": "c05d7a2c-7716-4fd0-a5db-ac8fb794307d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0fd21b61-779e-4aaa-994f-b67b6a275610"
        },
        "item": {
          "id": "e3e93e49-35ee-4806-883a-ca377c08702f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "58a3935e-175f-4681-9cf3-9b6e3174a650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b35ae52-ae87-48b2-b5e4-93aabd947bc2",
        "cursor": {
          "ref": "c7fa4d72-0d9e-4902-a151-6162285f7733",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eec1371e-d82e-4e5d-9ffa-66ab13462a82"
        },
        "item": {
          "id": "0b35ae52-ae87-48b2-b5e4-93aabd947bc2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "01473ac7-552b-4bb3-9788-755a31a86e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7d534e-5bf9-4a61-8b07-6552648b9127",
        "cursor": {
          "ref": "0d9732c7-7935-49be-ae9b-a52c39d97258",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d40622d8-6f3d-426f-b179-c8f6075b4757"
        },
        "item": {
          "id": "4e7d534e-5bf9-4a61-8b07-6552648b9127",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f5ca21a0-9d26-4264-a4fe-28a8a6f8aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1ac488-c511-4032-8c71-2cd4850cb48c",
        "cursor": {
          "ref": "a044a24b-64d6-48b1-96e8-6ba81fa6cb86",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "686b4b77-6c0c-4ae0-993b-aaa41c5d5370"
        },
        "item": {
          "id": "8d1ac488-c511-4032-8c71-2cd4850cb48c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a65ffbb-30fe-4c93-a702-24bd094c2add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03dee7f-bd57-4733-963f-07b04cc0c398",
        "cursor": {
          "ref": "e74e31d8-4661-418f-8eed-19004af98d58",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a2fa1490-de98-412f-8d29-685fe5b57f01"
        },
        "item": {
          "id": "c03dee7f-bd57-4733-963f-07b04cc0c398",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "316649a0-7619-4990-8482-9f8dd7180216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582c1ce4-ed9c-42f9-a433-9d2d31a0c455",
        "cursor": {
          "ref": "34128d94-742f-4b15-aed6-bcb6093f2ab3",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "74cd12c5-6eda-4490-b3ee-c546b003b555"
        },
        "item": {
          "id": "582c1ce4-ed9c-42f9-a433-9d2d31a0c455",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8fc1e660-f8e9-480c-95c1-70e19c09b6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119df5ce-91ec-4c82-a3e4-b633297b6ea0",
        "cursor": {
          "ref": "0a24cdc0-dd5d-40ba-b772-b134830c9139",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "475fd71e-e06f-402a-8d7f-77d0932c6b0f"
        },
        "item": {
          "id": "119df5ce-91ec-4c82-a3e4-b633297b6ea0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86176d41-55ea-40d3-8722-e8fa3b291e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd663e21-68f8-4750-b13c-b2dbc4b1a84d",
        "cursor": {
          "ref": "e5f70eb6-3dd7-4f56-8443-9b08551b926c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5f284d24-b921-4336-9aee-803a3bb40061"
        },
        "item": {
          "id": "dd663e21-68f8-4750-b13c-b2dbc4b1a84d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "46a30c97-7576-46e7-9eae-964e76ef6d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9638b36b-f4c4-4fb9-967f-8cd09f1695ce",
        "cursor": {
          "ref": "3b8d1ca0-7f7b-43ad-b2fd-e7d9172397e5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "28ff3982-e6a0-48ed-a29b-b6e3583a2ca5"
        },
        "item": {
          "id": "9638b36b-f4c4-4fb9-967f-8cd09f1695ce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "44cb6ea4-4087-4e55-8c11-8ccf199d5520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01227394-1fee-4f27-ae3a-c8761edc62c0",
        "cursor": {
          "ref": "381a59a1-a8f0-4168-a52e-3450e1836d26",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "177b2097-4166-4499-9892-6c50162c5e8e"
        },
        "item": {
          "id": "01227394-1fee-4f27-ae3a-c8761edc62c0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f6322e11-3c84-48d3-9d75-49580466efef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8598c6ef-8fdf-401f-922e-c7f532c563ab",
        "cursor": {
          "ref": "52177649-088a-4363-83b9-ff6cc4b5e05f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0abf0bcf-7c42-4f0d-a690-68044d27ed4c"
        },
        "item": {
          "id": "8598c6ef-8fdf-401f-922e-c7f532c563ab",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6d6918c9-4c1f-48ed-9f2b-2caf878dbcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9318378d-2f9e-49cb-bb3c-4175ea719f8e",
        "cursor": {
          "ref": "05625740-d29c-46f0-a87c-5ff3fe08d28f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b9e56d1f-2e1f-4f0f-811f-995098a1acc9"
        },
        "item": {
          "id": "9318378d-2f9e-49cb-bb3c-4175ea719f8e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b27f534f-6f15-49aa-be77-566eb92a8bc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954655f4-f575-445b-baad-3336e5f45b05",
        "cursor": {
          "ref": "564e377a-e4c8-48a7-9ae2-74f9ca6781b6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7ea92540-577b-440a-8037-4eea3dd2ce6c"
        },
        "item": {
          "id": "954655f4-f575-445b-baad-3336e5f45b05",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9e73ffc-597c-4a79-9806-1b34a73fb4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadad7c7-8311-4253-a58d-acf83d240366",
        "cursor": {
          "ref": "50f7a2c6-faf1-449e-89b7-c4b73a3d4caf",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "de7643b2-7cec-4a9e-bc77-d1f61475ccf2"
        },
        "item": {
          "id": "fadad7c7-8311-4253-a58d-acf83d240366",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc68bc85-f05f-4121-be1a-2c3d00bdbaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04abb449-40aa-416d-bb8d-8a99ad260a30",
        "cursor": {
          "ref": "7997db7b-e7bb-4a2e-a3cf-9b9163ca813e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "60fa6c5f-c891-4010-a67a-5da8aa1af15a"
        },
        "item": {
          "id": "04abb449-40aa-416d-bb8d-8a99ad260a30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6e8af4b4-6ff8-40b2-b69d-9ad3242e0643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb51533-2963-44bd-8b3e-52e51688c47c",
        "cursor": {
          "ref": "1a109873-6290-4242-822d-cd702d6f4b79",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8735c559-8bef-4c5c-a99c-1390fb3b1a68"
        },
        "item": {
          "id": "afb51533-2963-44bd-8b3e-52e51688c47c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "221eda8e-ad14-44a9-adf1-f92f46d3442a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cba29d3-59e5-49a8-b212-c70a5b81cd36",
        "cursor": {
          "ref": "fa4fb405-72ce-4c02-a7d1-a9efac839409",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cfe05f0c-32df-462d-b863-64063026373e"
        },
        "item": {
          "id": "8cba29d3-59e5-49a8-b212-c70a5b81cd36",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8a29a629-4078-4a6c-9138-5fa70568d7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c37e228-1075-4c7d-a3ce-c9f22b07f32b",
        "cursor": {
          "ref": "babcfe80-be7d-4778-9aae-be5771dac96e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eb1508d8-3645-4883-9fcb-fee7e9e65a3b"
        },
        "item": {
          "id": "3c37e228-1075-4c7d-a3ce-c9f22b07f32b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5eb29651-4c6c-4e27-9242-8c273e4ed2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f401989-d323-4222-aeeb-596f0b0dac37",
        "cursor": {
          "ref": "ba43b615-af7b-45f4-b042-e2303a66e04a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "71a26143-0857-4c88-afcc-72692347c7a7"
        },
        "item": {
          "id": "9f401989-d323-4222-aeeb-596f0b0dac37",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b87d84ac-f4f8-4c80-817c-862a43b18d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cc8729-14fb-48b1-a6cd-ecc20c9826eb",
        "cursor": {
          "ref": "d0354811-ba43-4ddf-8e12-b54e23d67937",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bbf7479e-dbc0-4c44-b092-894a5cbd3d3f"
        },
        "item": {
          "id": "97cc8729-14fb-48b1-a6cd-ecc20c9826eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de9e54cd-e418-49ee-a796-371bebc57d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa67d53a-86b6-4bbe-bff7-adb1a0b9ecda",
        "cursor": {
          "ref": "af29a936-ec4b-48ff-8040-f03e0bd219a3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f390fda1-3591-4b28-958f-996112cd1339"
        },
        "item": {
          "id": "aa67d53a-86b6-4bbe-bff7-adb1a0b9ecda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "75abfed3-0439-4bfe-aae3-81caaa432f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5321a1-19b0-433c-abad-34564fc4d825",
        "cursor": {
          "ref": "9b3fda3d-4df1-4e6c-934a-c548af922cea",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "717fa00f-d0e5-483a-b8c3-39392e4ad366"
        },
        "item": {
          "id": "2c5321a1-19b0-433c-abad-34564fc4d825",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9403cf57-70a6-4fb9-bd18-0dafea8fbbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70134c1-208c-4fe7-8768-040c521cbb03",
        "cursor": {
          "ref": "01be4b2d-668b-495e-bb20-fca1ac2f1373",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "72cc5a64-1c6b-488a-830f-b38ebbf367f0"
        },
        "item": {
          "id": "e70134c1-208c-4fe7-8768-040c521cbb03",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "70be487d-a27b-43cb-b09e-68ac9cda8e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc67df61-3dac-4337-802e-358093b245f6",
        "cursor": {
          "ref": "d6ea1c18-e293-4129-b829-be1fc37ecd3e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8639e365-13bf-41e6-8ed0-b40e2e4cd2f9"
        },
        "item": {
          "id": "fc67df61-3dac-4337-802e-358093b245f6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73bc1019-174c-477e-8d7c-41110569d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8af2571-5292-4678-98ce-5359e0079080",
        "cursor": {
          "ref": "00f66c18-8be0-4cc1-bc99-83bcf57d1976",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "edf182d8-287d-4da0-b091-af805c4fa99f"
        },
        "item": {
          "id": "e8af2571-5292-4678-98ce-5359e0079080",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0b4b0b4-d978-4daf-b1b5-3eecf52779da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b36efbf-dbcf-429d-bc45-cfcb2b4431ad",
        "cursor": {
          "ref": "5fb57da2-ee6e-4a41-b9e3-6e7997c1c252",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c5e262e1-34e5-41f0-be74-daa9e57e6803"
        },
        "item": {
          "id": "6b36efbf-dbcf-429d-bc45-cfcb2b4431ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df0c60d4-8e52-45e7-9047-505850da290f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81bbf01-89d4-4286-9d08-e0b6b5bed8a7",
        "cursor": {
          "ref": "3ae1a64a-8dc6-478c-8864-76afff369a3c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d5915c37-7565-4b6a-821f-6cb40c66f390"
        },
        "item": {
          "id": "b81bbf01-89d4-4286-9d08-e0b6b5bed8a7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "af127a41-f387-4390-bd7e-1cc5adb52a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff606f1f-43a5-47f2-b16e-f40c2e23b722",
        "cursor": {
          "ref": "f34aa68c-18cb-43e6-a77f-305682d7b307",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6db46ec3-9be7-4826-9cdc-9a20eee358f3"
        },
        "item": {
          "id": "ff606f1f-43a5-47f2-b16e-f40c2e23b722",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "05da2c17-af32-473e-bb62-8dd12025649b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d573566-d9a5-4c6d-ad14-e311062fac2e",
        "cursor": {
          "ref": "e495e8a3-7b74-445f-aa94-431f474e68e8",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "186f893b-90e3-4f2d-b915-326eb5bf9c25"
        },
        "item": {
          "id": "9d573566-d9a5-4c6d-ad14-e311062fac2e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "94faf725-b057-4e55-8961-3aa41b4ab9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af8496-a9e2-493b-9951-605b960bd3df",
        "cursor": {
          "ref": "6faff801-8a65-47e8-bb53-25df2d6810c3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f6354023-cc90-42b2-ae70-a9e1cc52934d"
        },
        "item": {
          "id": "b7af8496-a9e2-493b-9951-605b960bd3df",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "684586e5-4961-455f-8be9-4a775a028067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e4fefc-9c88-40be-bcd8-282079053cef",
        "cursor": {
          "ref": "d3df2174-34b8-43e2-a4d4-234f999295e7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8270144f-1fb7-455d-9612-f9035d95a5ad"
        },
        "item": {
          "id": "21e4fefc-9c88-40be-bcd8-282079053cef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "47eedb62-9327-4c85-82ac-1f834046935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742a6921-7d3d-4087-a8d8-1d8457843e2c",
        "cursor": {
          "ref": "83ed0efc-a64e-49e7-9f73-fdb45385c9e4",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ad5931d0-15d4-43f3-9d4a-fbcab794752d"
        },
        "item": {
          "id": "742a6921-7d3d-4087-a8d8-1d8457843e2c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59e0f1dd-1bb6-493a-9dd1-7619bfb9b86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba0f4a1-3dae-49e8-bd1a-a9c49f85b229",
        "cursor": {
          "ref": "a2f1671d-e8cf-41a3-ae88-cc79ed130ee9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f35b5bd-623e-4538-91af-a72432940a88"
        },
        "item": {
          "id": "2ba0f4a1-3dae-49e8-bd1a-a9c49f85b229",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1fcc45f8-f7fc-41d6-87bb-81221ca44486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e07475-fd3b-445c-beff-6933f18e3dd6",
        "cursor": {
          "ref": "83dc1b00-5238-4f61-b7c9-bd25bc55dc5e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "341e43c1-9368-4099-bbad-fdcf767221fb"
        },
        "item": {
          "id": "d0e07475-fd3b-445c-beff-6933f18e3dd6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3cbb95f7-7349-496f-90b0-6a6839a4da5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dde408-69b9-42d0-a8f9-9c1f4097f0ce",
        "cursor": {
          "ref": "7b073806-2975-4a87-ab63-a28ae1b1e925",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fde61e69-50ac-4582-ab21-7ec68311277e"
        },
        "item": {
          "id": "c8dde408-69b9-42d0-a8f9-9c1f4097f0ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "adc7f7ca-1780-4f2b-bf63-716ad92e4f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7d5c36-4e9c-4940-a585-7cf745a478e6",
        "cursor": {
          "ref": "d44348af-ca22-4ff6-9c2f-dbf40d8a4df8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "75516922-d1bb-4104-914f-257e1ed22c31"
        },
        "item": {
          "id": "8a7d5c36-4e9c-4940-a585-7cf745a478e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea6af184-dfa4-4788-902d-3f0f425a3eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acb1eb7-d726-494e-b9be-8bae14161da5",
        "cursor": {
          "ref": "a025d63f-7d53-4162-a131-4fa0aecaddda",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4dec0fa0-3532-494c-86c4-fa90830c4504"
        },
        "item": {
          "id": "3acb1eb7-d726-494e-b9be-8bae14161da5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56dad6d7-5d58-4900-a22c-b7b15bd424f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbbb857-9c49-4618-9b92-06482e104c47",
        "cursor": {
          "ref": "e9444760-e9d4-48ec-ad4b-c9521154b859",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "52cb6ce5-97b7-42eb-9f8e-88bf91afa352"
        },
        "item": {
          "id": "ebbbb857-9c49-4618-9b92-06482e104c47",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f77b3bc-a4d1-4160-8f64-03668bcabb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f15b734-dd2e-414e-9618-7062eecae78e",
        "cursor": {
          "ref": "f6264a7d-516c-4be2-b60a-760c24c70321",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e0741e74-53d1-43f5-bdb7-c9380e376bc1"
        },
        "item": {
          "id": "1f15b734-dd2e-414e-9618-7062eecae78e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "747b8d29-116d-4790-94d2-87a26195adf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac3203-f81f-446b-b7e8-527576d49537",
        "cursor": {
          "ref": "2031c651-edcf-47aa-b086-6c55b1ca7807",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8fabca6a-3410-4697-a699-47549a5cc5e4"
        },
        "item": {
          "id": "a3ac3203-f81f-446b-b7e8-527576d49537",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e3121710-8f2f-4a19-a1af-aa32860e8627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1367a21-0d97-43e5-a1af-43e50b8e5fe4",
        "cursor": {
          "ref": "bb8f7858-9acc-4f24-b536-820ca7355238",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e739cf35-322c-48a4-b3ca-c89982113620"
        },
        "item": {
          "id": "a1367a21-0d97-43e5-a1af-43e50b8e5fe4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f45174c6-81eb-402c-9a9c-6f2e56f77f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c957f19-a00f-4b78-b271-6d8582803854",
        "cursor": {
          "ref": "ba0bed0c-b06e-41ff-abfc-65b2297e86f9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "021e0d20-d2c0-4b03-9286-d22644ca18c7"
        },
        "item": {
          "id": "6c957f19-a00f-4b78-b271-6d8582803854",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c1b05b4d-8142-4dd8-ad53-69a3ff4e7e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123ece3d-3b75-42c3-bb88-8c13d176e884",
        "cursor": {
          "ref": "34f9a4e7-67a9-4bb7-b6eb-6046753c1b23",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e7e44a6b-a3d4-4a41-aba4-f0727a714b96"
        },
        "item": {
          "id": "123ece3d-3b75-42c3-bb88-8c13d176e884",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "153cf49b-ff98-4dae-99ed-cae3b7819b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6eb9a2c-bcda-406e-af8c-e53778b52c30",
        "cursor": {
          "ref": "1efb218a-810c-422e-9849-464ca9776532",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0e4b056a-53b4-4fe0-9412-80258e2a8683"
        },
        "item": {
          "id": "e6eb9a2c-bcda-406e-af8c-e53778b52c30",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "30cc694d-41ba-4b9d-a090-a35b1fbf3110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4578d1c-f747-42fa-a487-8d0651631a85",
        "cursor": {
          "ref": "2cf41639-b5bb-4119-8b36-b8b8c9515d1e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "298caf31-ab84-4c17-b22b-04b886e71bf6"
        },
        "item": {
          "id": "a4578d1c-f747-42fa-a487-8d0651631a85",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "39ad5a31-f815-449c-8949-a13120f1aa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eed161-163d-4ede-94fb-8af62fa7e090",
        "cursor": {
          "ref": "d002c8fd-1d40-48c4-975a-4cd5ffbcfc1a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "77828229-a156-4dff-9f64-875638401e00"
        },
        "item": {
          "id": "b5eed161-163d-4ede-94fb-8af62fa7e090",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e08b327-7c4c-41a3-adfd-3ecd341ee712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad9b677-3fea-4a15-bf67-7b4e53fe9224",
        "cursor": {
          "ref": "2cc04faf-571b-4b62-b2a0-bd20236120d7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2707305e-a056-47bb-bb4b-5aff1db10b34"
        },
        "item": {
          "id": "cad9b677-3fea-4a15-bf67-7b4e53fe9224",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e1e79e37-a3a0-4a3e-91e5-6f29fcaeb30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8dd7c3-d55c-4530-a90a-711bfe436639",
        "cursor": {
          "ref": "b08cd452-d8ad-450a-8add-99ed664d037a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "114ed507-d100-4713-b030-01f07310cde7"
        },
        "item": {
          "id": "ad8dd7c3-d55c-4530-a90a-711bfe436639",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4948aff7-7cb6-4f21-aa8f-9916b1fcad75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6152c909-ee19-4dbf-8afe-834b78faad78",
        "cursor": {
          "ref": "ac263e3c-fb6f-4167-90c4-c65f019c4ce4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b57dddb5-7cbc-4932-aacc-2edafdbda60c"
        },
        "item": {
          "id": "6152c909-ee19-4dbf-8afe-834b78faad78",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eeabfb4d-e735-434a-9475-a388384b8f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceebbe3-49c7-4f5e-b69b-9cc8829f1348",
        "cursor": {
          "ref": "476231e9-fb7d-45ac-91df-6d3e81c4d1b8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "27c639c3-6f5a-415e-a2eb-f5bb3a6d6e76"
        },
        "item": {
          "id": "3ceebbe3-49c7-4f5e-b69b-9cc8829f1348",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ab6c4aa9-ae8d-42a6-b0d2-a8cb5ac7d621",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b01190-a867-4520-a5fd-f41d5debf91b",
        "cursor": {
          "ref": "67b66237-8924-4117-8258-80b7964a9e98",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d1927d09-1c91-4e77-87ac-c9178951dc81"
        },
        "item": {
          "id": "71b01190-a867-4520-a5fd-f41d5debf91b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cebb3b1a-397d-46be-9685-ae6d24a04acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9d8339-2f22-433f-a9e4-e1289444eedc",
        "cursor": {
          "ref": "4331f214-0897-40d2-b752-9db24e23d183",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "46457518-d1b7-480f-9eae-535bc525efeb"
        },
        "item": {
          "id": "eb9d8339-2f22-433f-a9e4-e1289444eedc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a1dee3c2-6d06-4927-a909-03193d09b702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8b12b6-41e3-4f8a-91e7-80032ccd4847",
        "cursor": {
          "ref": "c6417bde-b6e6-4df0-b678-de54bf0dbed8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "abc2c593-2c8b-47f7-85c5-9d9499988551"
        },
        "item": {
          "id": "2d8b12b6-41e3-4f8a-91e7-80032ccd4847",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6be9a34c-d968-47dd-9c79-f7b766cad539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b6b222-aa53-45a9-ad50-8841fc48ed99",
        "cursor": {
          "ref": "5c05611c-fa45-4767-8185-db537a0e1d30",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5b0313c9-130d-4a08-81e4-d1709a23f059"
        },
        "item": {
          "id": "c7b6b222-aa53-45a9-ad50-8841fc48ed99",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5256dd59-3f91-4872-b3bd-335c5dd5d153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae7be92-72e8-4673-938f-727abead89db",
        "cursor": {
          "ref": "a2506b8b-e19f-45d6-8084-e389f0921ec5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1bed308a-f6e4-4afd-b828-327aa1f168c8"
        },
        "item": {
          "id": "9ae7be92-72e8-4673-938f-727abead89db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fb571ce8-18ec-46f1-b424-238bdd380b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f649bce8-c725-4007-be8b-8b5cd415caa1",
        "cursor": {
          "ref": "75e90340-ac8f-4d98-9ba1-3be055e59327",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1c1d6b45-9c38-4d48-b582-6ced123a36ba"
        },
        "item": {
          "id": "f649bce8-c725-4007-be8b-8b5cd415caa1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0e521155-a4bb-4954-82ff-6961415ff64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa161daf-048e-40fe-ba08-0a71f611383d",
        "cursor": {
          "ref": "6dd985c9-963c-41e2-b1d8-304b5f0d19b4",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71630456-ae18-4345-a2c7-29e8f118c929"
        },
        "item": {
          "id": "fa161daf-048e-40fe-ba08-0a71f611383d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "622eda29-28da-439f-9583-05f04a40af54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc4e3b1-917a-442a-9087-89683b74a826",
        "cursor": {
          "ref": "91ca981f-bd61-4966-9923-c12d4349fbba",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bd2a5646-833b-48c7-8d54-9cc0cac30c60"
        },
        "item": {
          "id": "0fc4e3b1-917a-442a-9087-89683b74a826",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e19300a-e8ec-4374-8c6b-47d17b435710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d4b5c3-1fa0-47e1-913d-abdbf4b13256",
        "cursor": {
          "ref": "a6c6b383-3b19-48d8-afba-e8b7b05b4915",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7674a923-f199-42e5-b730-541b72a2679a"
        },
        "item": {
          "id": "f7d4b5c3-1fa0-47e1-913d-abdbf4b13256",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "670c9fcd-c529-4e60-b5d3-7e125b3af52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb085db2-0fe9-4256-b349-b28abab1c68b",
        "cursor": {
          "ref": "7eecb48c-30cb-4989-b87c-77b43ad06520",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8d388e8d-7386-4e57-bc70-1a76d06541d5"
        },
        "item": {
          "id": "eb085db2-0fe9-4256-b349-b28abab1c68b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b92afcd9-515f-4fd1-b5ee-a3dddc1c90e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8212b870-f265-4c10-bb44-2ec88ef2e2f0",
        "cursor": {
          "ref": "b2d9aec2-58b4-4ea0-a3cc-243eca8791d0",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7c15ac1f-3a2d-418c-8b2d-01dab7739ba7"
        },
        "item": {
          "id": "8212b870-f265-4c10-bb44-2ec88ef2e2f0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2555b077-a887-4beb-9fd0-0440609cd1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d28d27b-0df2-4e6c-bab3-6214105e0b44",
        "cursor": {
          "ref": "9d3da49e-0bc2-487f-b293-b36f3269a972",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "405c2e76-343a-4ea1-b38d-fbe9d7e57012"
        },
        "item": {
          "id": "6d28d27b-0df2-4e6c-bab3-6214105e0b44",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5f092e2b-40c4-48b1-b808-830c70099044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf64419-d431-4918-9185-86e6c0b9565f",
        "cursor": {
          "ref": "40887bf0-92d3-4dd6-b0fd-74ae2e6088ad",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05a32556-9be1-4e56-a713-547892e0c944"
        },
        "item": {
          "id": "2bf64419-d431-4918-9185-86e6c0b9565f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3d89062f-47f9-4667-ab1c-6e3189ee6644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4580a58d-f113-4d65-8fe0-2913a50f4532",
        "cursor": {
          "ref": "0569b3e9-fb54-4835-8923-fe0bac5b3823",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fe1d85b6-a571-4627-85cb-6dec2eaa6e8a"
        },
        "item": {
          "id": "4580a58d-f113-4d65-8fe0-2913a50f4532",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69ddcb6b-90c5-4976-b0cd-2d2aa980911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a30c93-2614-403f-9fcd-6c060beaf5ea",
        "cursor": {
          "ref": "272fe243-f1e7-48d4-b394-bb16962a8b22",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cf7a2de6-f528-46de-8aa7-ae5ddee33052"
        },
        "item": {
          "id": "73a30c93-2614-403f-9fcd-6c060beaf5ea",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4ca07717-d2a9-4c0e-a60f-840b2126d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae0787e-df9d-40f3-8aaa-4b6bdc96db4c",
        "cursor": {
          "ref": "185c49ed-ed57-40eb-bdeb-2e0fd07c1a57",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "61cfeae1-6f35-442f-ae5f-45348ce7fd50"
        },
        "item": {
          "id": "5ae0787e-df9d-40f3-8aaa-4b6bdc96db4c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "06f2b2a1-1181-4631-9281-a7ccd76647f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7aaa8b-1aea-4ece-8dbf-43012b318b7e",
        "cursor": {
          "ref": "1f1e499e-c91c-47cd-923e-204263463257",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "22988e30-a0f5-46f8-937d-9d9be6cdd1c7"
        },
        "item": {
          "id": "7b7aaa8b-1aea-4ece-8dbf-43012b318b7e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f74ec34b-5bb1-4859-bcf2-a705fc996835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7b6b4b-768f-44d0-97f6-82990fc0150e",
        "cursor": {
          "ref": "1d956a55-8191-4bed-8971-5e19eaa65eaf",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb543437-72c6-4daa-814c-18285f230a4d"
        },
        "item": {
          "id": "3a7b6b4b-768f-44d0-97f6-82990fc0150e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6589b9ed-6321-43b4-9f22-e1a43887cfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6c76c9-bc32-49b3-bd5f-2961a105d537",
        "cursor": {
          "ref": "db04b5e0-cf13-49a2-9222-5c38d61fbcb7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "95094309-55a5-47a3-93f6-45ffbcece087"
        },
        "item": {
          "id": "ee6c76c9-bc32-49b3-bd5f-2961a105d537",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "14548c83-3899-41f6-8b16-7fa2dee68277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ef8c0a-3294-4500-ab3b-961cd5c72224",
        "cursor": {
          "ref": "4b5e6420-8f4e-4734-836e-5d3b5db7bc80",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6119df4d-6e10-4d27-8640-6af5e3505809"
        },
        "item": {
          "id": "c1ef8c0a-3294-4500-ab3b-961cd5c72224",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2660bef8-1e2f-4e55-978f-e6854bdd3595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8a36e3-9d68-4848-bc7f-0037cc9f6aa2",
        "cursor": {
          "ref": "55af24e8-11b2-47d0-888b-c57461dcc900",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1854d1cb-2572-44f8-855b-6fd8c2463ae8"
        },
        "item": {
          "id": "7b8a36e3-9d68-4848-bc7f-0037cc9f6aa2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "21d1472f-2c04-4c78-8ad8-b1ed356aeba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b294c6-879a-4775-81b9-801493433cdf",
        "cursor": {
          "ref": "68d605b5-a0ce-4944-ab89-6f9546009ee3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "13879196-7a4b-42d0-9313-204efc9286d1"
        },
        "item": {
          "id": "d5b294c6-879a-4775-81b9-801493433cdf",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f2ac2c82-a013-4009-ad56-7147b26b86c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09766735-e191-4b36-8ea3-cea09a91f966",
        "cursor": {
          "ref": "a5f1f060-1c1a-4c25-8300-2702d2f918d7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9bc1054b-7dee-43f2-8016-0d616968e2f8"
        },
        "item": {
          "id": "09766735-e191-4b36-8ea3-cea09a91f966",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b8c4e4e5-b1e4-4af3-91f9-1d55396f155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a538b0e-aed9-43bf-8e89-4fbbbf14341b",
        "cursor": {
          "ref": "8fb16769-64ae-47a4-9efc-b6f016d7dc1c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf680fd7-6f9a-4c75-9f85-8823e4bafa74"
        },
        "item": {
          "id": "0a538b0e-aed9-43bf-8e89-4fbbbf14341b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99d6a0e5-14fc-46db-b1ed-9bd4eeb6e986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffda1a51-ae18-4737-8875-380f9f898c1b",
        "cursor": {
          "ref": "7804f0c4-d784-4659-951c-e6c39a7962d3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "54c88851-a9cb-4ba9-a6cd-f2edc4e1f08f"
        },
        "item": {
          "id": "ffda1a51-ae18-4737-8875-380f9f898c1b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2acda85d-b607-4155-8c9e-28455fff247e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e14f82-3aac-4bf5-a410-d04b8d1e3470",
        "cursor": {
          "ref": "11b51555-7d23-41e8-bff1-a733f767da02",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4ced5572-6c70-4895-9198-59ff049e6d7f"
        },
        "item": {
          "id": "a2e14f82-3aac-4bf5-a410-d04b8d1e3470",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e96c8881-1409-49db-b557-ee4d5ab36584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d1b4d-24ad-47f8-8b34-7bbcddde95b2",
        "cursor": {
          "ref": "61b8bbfe-8446-45e5-a8c9-38b4c17b9a17",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "373e3d11-2624-4814-9983-a018fadfa609"
        },
        "item": {
          "id": "067d1b4d-24ad-47f8-8b34-7bbcddde95b2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "12d132f8-f0bb-4400-8cc7-d5566b449c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7662fdb-6850-4ff5-8202-5422c4721e35",
        "cursor": {
          "ref": "ff05e361-9930-49c3-bd01-da5f9580bfa1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c31f23fd-2d83-41bb-836b-0b204c4400b9"
        },
        "item": {
          "id": "d7662fdb-6850-4ff5-8202-5422c4721e35",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "06e20465-e2ee-4d00-92ff-f702f4a666ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a5059f-e16e-48fe-99d4-20f2e3791501",
        "cursor": {
          "ref": "8560388e-a170-43c0-b035-767f336ea8c1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2c63a39b-0b96-434c-9b5d-e0f2e03b900d"
        },
        "item": {
          "id": "a7a5059f-e16e-48fe-99d4-20f2e3791501",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "117e59ab-c65f-41c9-a549-55e53f1a31a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb054769-1f11-4e1f-bc25-c96111b6a33b",
        "cursor": {
          "ref": "4a36a2eb-1988-4222-8ff0-045c17667ee1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dbb100d8-c901-47e8-bb41-02b07e4017a0"
        },
        "item": {
          "id": "eb054769-1f11-4e1f-bc25-c96111b6a33b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "674c5db9-47da-4bcf-8730-d7c0fda2feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53fc025-300a-439c-9c0e-252bc9f422ba",
        "cursor": {
          "ref": "2308aefa-b72f-4725-9253-2cef92a4f61d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "532a0371-258b-4d3d-881c-b766e2d4274e"
        },
        "item": {
          "id": "a53fc025-300a-439c-9c0e-252bc9f422ba",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "11da6711-d690-45b8-80a2-55419b0773f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81dc7ff-e8c7-40e4-90af-dbf90d28463a",
        "cursor": {
          "ref": "8480bae3-ed82-467a-a512-8e48d20b0ebe",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7e4b7fb2-d491-443f-8632-2bc55ef3d44b"
        },
        "item": {
          "id": "f81dc7ff-e8c7-40e4-90af-dbf90d28463a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1fa1a830-6ea2-41e9-a048-417972939313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b523aee3-516b-4acc-b7fa-b935deb53465",
        "cursor": {
          "ref": "0a348fda-6396-4796-8be3-dcf73c571a77",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "64886f18-4bdf-44ff-b688-fab529f15aac"
        },
        "item": {
          "id": "b523aee3-516b-4acc-b7fa-b935deb53465",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "15b39bca-dd5b-4e18-a809-cb2fad369360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2b002e-edf9-4f14-aced-e6e5b8c387d2",
        "cursor": {
          "ref": "7049b797-69be-4ed4-b98e-0b23648cee41",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a4285774-4f68-43a9-84d3-f424074e755c"
        },
        "item": {
          "id": "ba2b002e-edf9-4f14-aced-e6e5b8c387d2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7918a8a9-e545-464d-8752-65e1d115dcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce01ceaf-ad04-40df-9265-1c3e33f4c1d5",
        "cursor": {
          "ref": "c1247e4e-fce3-49ba-be22-e10cb00b5b51",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e22338f2-92bc-49e8-9e68-50b523cb7535"
        },
        "item": {
          "id": "ce01ceaf-ad04-40df-9265-1c3e33f4c1d5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ed616c94-cc96-42d3-819d-b317f0b22cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953a6370-28d9-4441-bb71-902aa3aa3785",
        "cursor": {
          "ref": "0a854c9a-12a0-46a4-a862-764e0d5973b6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "352a53f2-4408-4c52-b9fa-ebcb32c7ab4d"
        },
        "item": {
          "id": "953a6370-28d9-4441-bb71-902aa3aa3785",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "58e7ef99-3d3e-41ba-95ac-8e31e0c675e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de228c5-3c88-4859-9e41-a649a602d1e3",
        "cursor": {
          "ref": "1fdfed3a-6b9a-48f0-bf4f-3a56cbe18cc5",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e508b926-3cce-4aa3-8036-94957162617a"
        },
        "item": {
          "id": "6de228c5-3c88-4859-9e41-a649a602d1e3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cef19972-6e05-4f87-8880-3ac1254ea416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df539dfc-7316-4ac3-9fa9-e1927cbc055e",
        "cursor": {
          "ref": "c05096b8-856d-4bfa-b6f4-07d25c3db0fb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "02f60b7a-9547-4388-acf1-d486fe67c3ae"
        },
        "item": {
          "id": "df539dfc-7316-4ac3-9fa9-e1927cbc055e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f339737f-59af-449c-a158-16905f9cc3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc83ac0b-8766-4402-8222-b010b0af4d0d",
        "cursor": {
          "ref": "43284dab-21fe-407e-86d2-308fab20dc9e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5ab2919e-261b-4eb0-a1f7-a8f429c9aeea"
        },
        "item": {
          "id": "bc83ac0b-8766-4402-8222-b010b0af4d0d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7829d499-7a97-4204-b88a-07b2c3c5e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e5fb4-52f5-4ac9-8c36-fbdd337d03d7",
        "cursor": {
          "ref": "ea0e8e0a-c3bb-414d-9eb0-8a7f2da4e6af",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "db002433-7739-4278-b75d-bf635e3c3c61"
        },
        "item": {
          "id": "ab7e5fb4-52f5-4ac9-8c36-fbdd337d03d7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5c1ef5f8-94ee-4eb0-85bc-156c959bf03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ce87e8-0e26-4836-b81e-831fe359e2e1",
        "cursor": {
          "ref": "2300878d-9f05-4e1b-8e06-824764d656dd",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "abd005c9-b97a-4bdc-b36b-a6559661e816"
        },
        "item": {
          "id": "c2ce87e8-0e26-4836-b81e-831fe359e2e1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f177176-a342-48c0-ba67-ad7e50b53074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0de014-2a11-41cd-b6b4-73303d073941",
        "cursor": {
          "ref": "a2ac17c3-dfe2-4ab8-a69f-9c550f65185e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7fb28533-8e6d-4bc7-969f-f697078eaa3e"
        },
        "item": {
          "id": "9b0de014-2a11-41cd-b6b4-73303d073941",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "933bd018-a1c3-4afa-9d32-a4e3982dd9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eee74e-d457-49ee-a6df-e07c8e9f6ca3",
        "cursor": {
          "ref": "42be22de-154e-4168-b503-2b6107868e62",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "44233a21-df8d-4c8e-8ed7-3a92847b0cbb"
        },
        "item": {
          "id": "e9eee74e-d457-49ee-a6df-e07c8e9f6ca3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d8208add-f20c-4e8d-bf1f-4e3e62bf7476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1d02dd-fce4-4300-82a7-5fe4bbbe5f5c",
        "cursor": {
          "ref": "d490cf6b-1269-40b8-8453-f15abf80dd77",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "04f99a9a-4298-48e0-b6a2-86f20aa1783f"
        },
        "item": {
          "id": "4c1d02dd-fce4-4300-82a7-5fe4bbbe5f5c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "885a77d5-b073-4e71-804d-ca44208e5e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b712d36d-234b-4148-896e-c8c1fed14744",
        "cursor": {
          "ref": "cec1d450-1565-4deb-8b06-58e35c1be967",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dd75a1c8-f468-438d-84e3-e9f469c91d09"
        },
        "item": {
          "id": "b712d36d-234b-4148-896e-c8c1fed14744",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "afdf8ea8-b505-40ab-8a76-05dbe8553e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf41f4-cc99-45fd-9acd-53f8d4f862e9",
        "cursor": {
          "ref": "3284537e-bd38-4c99-9946-c2606cba2e4e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4418124c-f004-47c1-980a-832b90b3c402"
        },
        "item": {
          "id": "26cf41f4-cc99-45fd-9acd-53f8d4f862e9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56d40048-eaf8-448f-9cc7-f4a1e6a4cc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204fdafc-1f14-4fcf-9fae-d8e9c5c03aa5",
        "cursor": {
          "ref": "da4c8d63-9013-415b-abe0-24f538057afe",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e79fa842-e56f-4af6-9aef-ce0fb86c245f"
        },
        "item": {
          "id": "204fdafc-1f14-4fcf-9fae-d8e9c5c03aa5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ad1c2db5-b4c2-4d81-8619-9b20ce1e7449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548820d4-f2a4-4b80-a2c8-a35e0280c620",
        "cursor": {
          "ref": "800ed893-7ecc-4ad3-909d-8507478253e0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0e7f345c-e244-4370-abb4-ee83f155318e"
        },
        "item": {
          "id": "548820d4-f2a4-4b80-a2c8-a35e0280c620",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a855a53c-6ec8-451f-9553-50db4cd45b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c66c59c-9326-40e9-959e-fadab86eb1b6",
        "cursor": {
          "ref": "5d2b4794-1179-4938-b9d8-78920a529bed",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3ae2dd48-0dbe-4096-ac48-81e17555408d"
        },
        "item": {
          "id": "5c66c59c-9326-40e9-959e-fadab86eb1b6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f22f5767-c847-4638-8861-24f6f17856f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9586fb60-811b-4155-9602-24161ff0d9f4",
        "cursor": {
          "ref": "906aaee2-b738-425a-aeca-3784e57995b7",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8c6461b7-2c78-49fd-bdb3-8665ef02e8d4"
        },
        "item": {
          "id": "9586fb60-811b-4155-9602-24161ff0d9f4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "191b9df7-32c4-4e51-9650-c7635c3c8a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3f4997-b66e-4fd9-88ea-119b1aebd477",
        "cursor": {
          "ref": "ca6a9748-d441-4059-a27e-d585124faefe",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f9b6e435-d28c-4ac7-9675-0cdad5f4dcba"
        },
        "item": {
          "id": "2b3f4997-b66e-4fd9-88ea-119b1aebd477",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cc1f7560-7085-4f26-83f0-c4d1cb258c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a618f01d-54d2-4a86-947a-2d76a848764e",
        "cursor": {
          "ref": "3de6489b-aea1-4491-a785-682b3384c3d6",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5a4cb819-8d1c-4d0f-9b1c-91d4838f5aa6"
        },
        "item": {
          "id": "a618f01d-54d2-4a86-947a-2d76a848764e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c8b8bb1f-b202-4b69-9827-7ad0cea98d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7852ea61-f63a-4ca0-8709-c3e53efa7554",
        "cursor": {
          "ref": "92cec8ea-babc-4c53-afcd-046044cd5b82",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a0f01431-e8a9-4550-ac99-0c3e682e5c46"
        },
        "item": {
          "id": "7852ea61-f63a-4ca0-8709-c3e53efa7554",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "11ed04ad-ae21-4260-8469-6c17eabf0362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b495f218-ba08-4429-a336-408d394c5003",
        "cursor": {
          "ref": "3bb524c8-2795-4dc3-8d71-b7da393a75f2",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f3073ae0-e028-42c5-a103-620e597fad72"
        },
        "item": {
          "id": "b495f218-ba08-4429-a336-408d394c5003",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d31010e9-6e08-4a95-951e-4198b38eae4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c304fdaf-5443-4517-b838-9c26e9325237",
        "cursor": {
          "ref": "da729df5-2793-494b-8cf3-2ffbcfddf57f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bac5aefb-5959-4489-bcd6-1c4b23eb761b"
        },
        "item": {
          "id": "c304fdaf-5443-4517-b838-9c26e9325237",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3b227c9e-1ed5-4a4e-b2c9-3d09ec7e1147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdf308b-16b6-4ad0-9023-7abee556d7a9",
        "cursor": {
          "ref": "9a7e097a-080b-4d3f-8c15-8f985bcd4597",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "18353d5d-a71c-4f35-abf0-3f625ad540f7"
        },
        "item": {
          "id": "dbdf308b-16b6-4ad0-9023-7abee556d7a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d342db0-8392-4eff-8044-021ae9efdf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f4d76a-13eb-47c3-a8be-b8439d5ce5dd",
        "cursor": {
          "ref": "40cb24e7-6fd5-46a7-aaca-baef6efff542",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b33d001b-9954-487f-9f37-a5dc452f0946"
        },
        "item": {
          "id": "03f4d76a-13eb-47c3-a8be-b8439d5ce5dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e2f5de3-c1ed-42e3-ba7d-fc37e0f42afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ab81d9-a249-48d9-a405-934ab77d45a4",
        "cursor": {
          "ref": "2b0cd255-458d-4da3-92f5-87827d26725d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c4c3a5a5-56a2-48e1-a51c-09c0e2a2839b"
        },
        "item": {
          "id": "43ab81d9-a249-48d9-a405-934ab77d45a4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "463d5a7b-815f-44ce-85fd-9d6797eaac70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694fb92e-fc9d-4aa2-aa10-8f06a60f9587",
        "cursor": {
          "ref": "01ebcfc6-ccf3-41ef-a2a6-ee09103bc549",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77544e06-fa5f-4121-8e70-4774f4a4d7e6"
        },
        "item": {
          "id": "694fb92e-fc9d-4aa2-aa10-8f06a60f9587",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1ce7c216-28e1-44ea-8052-da98f8741008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd243c7-0442-4f56-bd15-620d5d7c21ee",
        "cursor": {
          "ref": "5695c21a-6afe-4de8-8bff-bb099b33b5d0",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b0d68b6c-a0f6-45c7-b127-a684b439e999"
        },
        "item": {
          "id": "0cd243c7-0442-4f56-bd15-620d5d7c21ee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "79c5dbf2-400a-48a6-96f8-f2176bd76083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aafbc1a-c80e-4e2e-96dc-78cb5ef8a240",
        "cursor": {
          "ref": "c582d9e4-46ba-4686-9f26-7ee7401c8818",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4508f36c-d969-420b-aa0d-3139170b89bb"
        },
        "item": {
          "id": "6aafbc1a-c80e-4e2e-96dc-78cb5ef8a240",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "289c4704-194c-4bbd-93ca-5bcb98d3fa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c402e1-9386-4ba7-86f2-8bf08cd9b48f",
        "cursor": {
          "ref": "4105d75d-724f-4bfb-bbdc-f4e7caeb5ac7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f399320d-5212-4385-98ec-44e0917aa5f4"
        },
        "item": {
          "id": "f4c402e1-9386-4ba7-86f2-8bf08cd9b48f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "984d867f-a10a-44b5-9efd-f384ad496b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8d986e-c6da-469b-8142-a09454533ed6",
        "cursor": {
          "ref": "ae41cdbb-6558-48a9-977f-9a47273ec90f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d2b1881b-6553-4364-bfe2-da95d701d145"
        },
        "item": {
          "id": "8a8d986e-c6da-469b-8142-a09454533ed6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "05bdd3c7-7ecc-40c2-8e6c-7ff3c8f7c6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d918b11a-e3d5-4de8-b84a-6d63444d54b1",
        "cursor": {
          "ref": "aae7058a-51b8-4d50-af03-5110c75115d6",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "47765d84-db45-402b-a50a-128e9d212e02"
        },
        "item": {
          "id": "d918b11a-e3d5-4de8-b84a-6d63444d54b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3029f8b7-58a9-4758-8f9d-ec7677bede20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abee73f-6b34-4c98-9f88-968af4573959",
        "cursor": {
          "ref": "8c9fa5ed-5ba2-4696-8481-af87ae9443a1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7aa7ff17-9b85-4f23-b397-0627807ecb51"
        },
        "item": {
          "id": "9abee73f-6b34-4c98-9f88-968af4573959",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "941192cb-5500-4cbb-bb43-75aa1c612f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc1d755-d5df-454f-8b90-0f1ff740e95b",
        "cursor": {
          "ref": "04bd70aa-39f5-4daa-99b9-37383bbeeb96",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "954179b4-00fd-449b-b27d-ba9b9697ceb4"
        },
        "item": {
          "id": "2cc1d755-d5df-454f-8b90-0f1ff740e95b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b4d131fa-6ad7-47be-bc13-f50f88f38275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6572a73-f656-4425-9bcf-a9a85b77ef6e",
        "cursor": {
          "ref": "55ecf8be-83e8-497d-b819-680ea49ae56b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9fa49776-88e3-470a-8dd3-e6a106b8e52f"
        },
        "item": {
          "id": "c6572a73-f656-4425-9bcf-a9a85b77ef6e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3b5b443e-fb84-49a7-9414-2da9d7f55c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b362425-4d7d-427f-831e-2b3dbb2a3d06",
        "cursor": {
          "ref": "e1fdf702-606b-45d3-b332-fe03af98384e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f72d4a10-9b41-4146-b097-7ff026d215ad"
        },
        "item": {
          "id": "8b362425-4d7d-427f-831e-2b3dbb2a3d06",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6305cd2b-3741-4311-a289-e8b56186c0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aa6b25-6e75-4583-8cea-a53d46d29ff8",
        "cursor": {
          "ref": "15a4a4b8-6d20-4c83-90a5-77e2d6994fff",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2ca48d48-b9c3-464d-9e50-3fb542ab269b"
        },
        "item": {
          "id": "15aa6b25-6e75-4583-8cea-a53d46d29ff8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7fcc4497-db9d-45bc-8509-600bfa1fc008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaeabbb5-f468-4477-91fc-cda6f00badf8",
        "cursor": {
          "ref": "bb175f73-52f0-41b1-94df-195dcd54924f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b337d5e2-c12c-4811-a0b0-bc60b90124ba"
        },
        "item": {
          "id": "eaeabbb5-f468-4477-91fc-cda6f00badf8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ad2a9788-499b-4cfd-a269-015a24d7dbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b5808e-eb7a-403d-8766-cbbb8e395644",
        "cursor": {
          "ref": "829c3745-c863-4495-9185-847b5c0a2591",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e16c6004-6b82-46da-8a8a-289ebbcbda00"
        },
        "item": {
          "id": "99b5808e-eb7a-403d-8766-cbbb8e395644",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a19066b1-92e0-49ae-a201-cde45d551c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66c79de-c601-4bbf-a8b4-ea8443def3e7",
        "cursor": {
          "ref": "af31bbeb-0919-4e55-9e9d-99c3d9c947b9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2058c175-1652-468a-9ad3-0199e4d51a8e"
        },
        "item": {
          "id": "a66c79de-c601-4bbf-a8b4-ea8443def3e7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "14844731-a993-4f64-938a-59ba80a998cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8f7d9f-b204-492f-b919-7c23a072cf8f",
        "cursor": {
          "ref": "830c9c29-4b05-452e-a351-2ebf2e6dba44",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f582e37e-6407-46d8-a698-4e770337e92d"
        },
        "item": {
          "id": "0a8f7d9f-b204-492f-b919-7c23a072cf8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "69a1ba74-b96f-41f7-8796-baff30987f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9dc4a9-ddc3-493e-b54f-9671c8476cd9",
        "cursor": {
          "ref": "436cd102-caf8-4170-8d6b-ecf2abb2a44a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c4d3094c-ff4a-45cc-94de-3884169bad01"
        },
        "item": {
          "id": "8b9dc4a9-ddc3-493e-b54f-9671c8476cd9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f7fcb0f6-f3cb-48fe-95f4-f83822192bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f35d55-5fd7-431e-a20d-71476585a2d9",
        "cursor": {
          "ref": "eaee921e-4776-4ef4-bd7a-5c60eb0260f9",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "506fcd68-2adc-46c1-87ed-c53053db1320"
        },
        "item": {
          "id": "43f35d55-5fd7-431e-a20d-71476585a2d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "58f9f750-5b69-4f03-bc66-f26c3d5f6b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcda836-6832-45f7-b7c4-583c29ac1018",
        "cursor": {
          "ref": "989b5e4a-6a6d-40aa-85fe-f782683297bc",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "10075b51-7024-47fd-b169-fb4a0efa8298"
        },
        "item": {
          "id": "0bcda836-6832-45f7-b7c4-583c29ac1018",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "311bf2e9-277a-4c8f-a060-a1ced8b6c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0957a9-ea26-4820-b793-c7c00fa92a9d",
        "cursor": {
          "ref": "1931fce9-add2-4145-b789-a76e5623c5d8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "af8ec3aa-cd03-4d27-9787-6ccd55448428"
        },
        "item": {
          "id": "fc0957a9-ea26-4820-b793-c7c00fa92a9d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46125ef3-3b53-4f30-9ca7-8b4ab38750db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6608fe6-abe7-45f3-8637-b5d9ef39d9a5",
        "cursor": {
          "ref": "9d2dfffc-a095-4684-9915-94fb92e1cbc2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e9033059-28ff-4aa4-819b-0d0b4ee28d34"
        },
        "item": {
          "id": "b6608fe6-abe7-45f3-8637-b5d9ef39d9a5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fe1d9bfb-73e3-4557-a44b-1f0a13d7056a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed83491-1c1e-4974-8058-8e693effb39e",
        "cursor": {
          "ref": "4c0f05dd-7650-405e-9c08-c2f60141b7d5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a4c6df98-9989-45b9-bc59-85a17876bcfc"
        },
        "item": {
          "id": "1ed83491-1c1e-4974-8058-8e693effb39e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a23437c3-86dc-4d1e-b5dd-81e1d51ea7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded0a3c2-911b-45e7-9561-6e3a1bac1601",
        "cursor": {
          "ref": "a3e3c4a6-91d0-4ccd-b852-0fa934a5c8a7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5f0cba5f-92e1-4296-9e50-ead00b976a87"
        },
        "item": {
          "id": "ded0a3c2-911b-45e7-9561-6e3a1bac1601",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0d25921a-37b0-4a03-be9d-2d2dc17599d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c339f44f-819e-4148-8a7e-821d7b0b8311",
        "cursor": {
          "ref": "83d7951f-54cd-4f35-9653-adde0b08a744",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e075fbba-a6fb-48c5-8a29-37764f07bceb"
        },
        "item": {
          "id": "c339f44f-819e-4148-8a7e-821d7b0b8311",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0ee17cc7-41f2-4100-bc52-27966a1d49bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a2e4cf-b407-4be0-ba4c-0b8e2b275a51",
        "cursor": {
          "ref": "26c61ed1-a2ff-46f9-9332-4037cba79b6b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8c33fc4f-017a-4410-9d34-547227e409e8"
        },
        "item": {
          "id": "d9a2e4cf-b407-4be0-ba4c-0b8e2b275a51",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "938c263b-d3dc-4d7d-9ada-4b352ffa60f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76118668-eab7-4e00-9645-0503bb93d4e5",
        "cursor": {
          "ref": "7b2afbc8-e96b-45dd-8317-5803b30c0c05",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "69038416-e067-438e-b64c-a19804f2208c"
        },
        "item": {
          "id": "76118668-eab7-4e00-9645-0503bb93d4e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "96f0c102-d90b-4d6d-ae47-62b5df66f3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c79e2ee-843c-45bf-be00-1c481a40a745",
        "cursor": {
          "ref": "c30df51d-baf9-48de-843e-701a9b2c3f94",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8c508361-55ab-454f-8653-8bfa87f4ea1b"
        },
        "item": {
          "id": "9c79e2ee-843c-45bf-be00-1c481a40a745",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "07b9f460-29cd-4e27-a228-85a99120a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765e5dff-23d5-49e6-b732-8a2037f24205",
        "cursor": {
          "ref": "e75590d4-abfe-4677-9f62-e91c1e3ea073",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bb4a89fa-01d2-4343-a1c5-7769a52302b7"
        },
        "item": {
          "id": "765e5dff-23d5-49e6-b732-8a2037f24205",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a85b79f9-3f20-454d-b3a5-df91f61384f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2cd581-9583-4f71-8a4a-ca98babbb13b",
        "cursor": {
          "ref": "1b26ca94-5f50-46f4-b880-bfcfc7664958",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "76d8fd2c-fd38-43c1-bf70-937986d85a53"
        },
        "item": {
          "id": "5b2cd581-9583-4f71-8a4a-ca98babbb13b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7699165d-399f-4363-a198-aa8a07c0048a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbc1db0-6268-4dce-9f46-031c3823a840",
        "cursor": {
          "ref": "dae86907-f814-44a0-8ded-6434c090c754",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "94804c2d-1a5f-409e-914b-45e3796e3aaa"
        },
        "item": {
          "id": "5bbc1db0-6268-4dce-9f46-031c3823a840",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c65c5b37-7998-44d1-8b52-562afa89a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fdc85-8ef8-4338-86c3-c9b4ce95b8bc",
        "cursor": {
          "ref": "8b9d8140-639a-43f9-9758-8efb84a07aed",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2cedfb61-7ac4-4f37-b18b-2d00e624afa3"
        },
        "item": {
          "id": "aa2fdc85-8ef8-4338-86c3-c9b4ce95b8bc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e2318e88-8f69-470a-aa6b-0735f88dd8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65132ecd-2ae6-41b0-bcbb-7327b9560156",
        "cursor": {
          "ref": "37d904a9-561c-40cb-893c-e22cb569cacf",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cdbe0b8b-2e55-455d-b35e-e607b9a86d04"
        },
        "item": {
          "id": "65132ecd-2ae6-41b0-bcbb-7327b9560156",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ced8f2b3-37ad-48de-820c-172819b645a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80c2ca5-6ac1-4c2d-add0-e048ce4263da",
        "cursor": {
          "ref": "40cb5bb6-a68f-490e-b068-948080d65e02",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "81e5da9f-c447-47a8-a5c2-746a68bb95c0"
        },
        "item": {
          "id": "b80c2ca5-6ac1-4c2d-add0-e048ce4263da",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "18285faf-e40d-4392-babd-a52ec4f0fe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3712b028-99cf-47ed-9745-5f37e41ab4ed",
        "cursor": {
          "ref": "4664e61f-a62f-473b-8189-42078114c778",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "73609051-3525-4da6-954b-850e79482660"
        },
        "item": {
          "id": "3712b028-99cf-47ed-9745-5f37e41ab4ed",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6c8f4afb-8cd2-40d2-b309-fa32f1f4f160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f973e7ac-4b5e-4230-adb0-17f3a363107f",
        "cursor": {
          "ref": "fde20329-016d-413c-846b-58b4f256e98a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6a7b2a0d-f47f-4614-a67e-71dd896b4d7a"
        },
        "item": {
          "id": "f973e7ac-4b5e-4230-adb0-17f3a363107f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9efe5171-4f8a-42b8-aa61-36af335ecb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fcac14-464d-4395-91d4-7b56326847a1",
        "cursor": {
          "ref": "60a24cf0-8057-468f-bd67-93bce9a591b4",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "79dff87b-f8ef-4e07-b47c-2aea0fc3bbde"
        },
        "item": {
          "id": "e7fcac14-464d-4395-91d4-7b56326847a1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "820888cf-1ccb-46ea-8fae-9a54e6ead671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d48fd85-a175-4a96-93e7-b2e201313494",
        "cursor": {
          "ref": "8f25976e-a654-46b3-b44c-4f9aec1e1f25",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c2c742bb-8eed-4e94-a3df-69942dea0b24"
        },
        "item": {
          "id": "3d48fd85-a175-4a96-93e7-b2e201313494",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aecb85dc-6589-426c-839b-dfcc1b7e6cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547834fa-9fe8-4442-8db1-805f684fcffd",
        "cursor": {
          "ref": "77ebfbf9-7f09-402c-9833-95c707b56428",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2328184e-f37d-4b19-bc39-519566090284"
        },
        "item": {
          "id": "547834fa-9fe8-4442-8db1-805f684fcffd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0b3e462f-0f18-45a7-a327-69cdef6d2c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427d4a00-3f28-4d94-a454-23ba5c3007aa",
        "cursor": {
          "ref": "9c9c1e1c-34ea-472b-93fb-2e68c57e6163",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ecbe5b29-3a9c-43e8-b6a2-e27bd2bee54c"
        },
        "item": {
          "id": "427d4a00-3f28-4d94-a454-23ba5c3007aa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9265a3bb-a99c-43ca-bf96-9038457bb0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c72002-19dc-495a-90be-c8812dac3957",
        "cursor": {
          "ref": "c7869129-4295-480a-8660-8751eceb12f1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "12456815-4e0b-4158-9cd5-73e51fee308f"
        },
        "item": {
          "id": "f0c72002-19dc-495a-90be-c8812dac3957",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "18d57779-b734-4f77-a147-090a3eda8421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c1516e-544a-4e57-a71c-a7c4512c161d",
        "cursor": {
          "ref": "29f37c55-73c6-407d-9747-f49280a4549b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1ec53aa8-82f0-401b-badb-eed1c4198cfa"
        },
        "item": {
          "id": "b4c1516e-544a-4e57-a71c-a7c4512c161d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f455d1a6-468c-46fe-9576-b62bab0bff60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 206,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458e755-c6e4-47bd-821e-2da8b165659f",
        "cursor": {
          "ref": "e3ffe9f0-57ea-4297-939b-6610aaf42802",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cf40be50-3149-4734-91a0-425e1b92e1a7"
        },
        "item": {
          "id": "c458e755-c6e4-47bd-821e-2da8b165659f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e5cde4d8-a2e4-453e-a2a9-aa3f9ed25510",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7968b58-75c3-4189-81aa-a6e31a09892d",
        "cursor": {
          "ref": "ac5ccd50-3751-4d7b-8a9b-2e4bbd4dc404",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "eb49cc19-1a2d-47c2-9822-dad7e05edb0a"
        },
        "item": {
          "id": "c7968b58-75c3-4189-81aa-a6e31a09892d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f642a60-f670-4fcb-82f6-a85d9a9ff122",
          "status": "OK",
          "code": 200,
          "responseTime": 1397,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "841875e0-9efb-421a-a0a0-457f8dacd366",
        "cursor": {
          "ref": "380cc897-a35a-448f-9af9-2045a6a2f136",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6302127f-fee1-4174-b47f-f823fa45d38a"
        },
        "item": {
          "id": "841875e0-9efb-421a-a0a0-457f8dacd366",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f77445e2-10a6-4868-8f78-782571e26cbd",
          "status": "OK",
          "code": 200,
          "responseTime": 1332,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9da120d-4c14-4ddb-b257-9c03d5ab9356",
        "cursor": {
          "ref": "8b95fe63-e087-44c9-a5f0-b87712bcc006",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f86a6abb-f23b-40ea-9e2e-f245334faace"
        },
        "item": {
          "id": "e9da120d-4c14-4ddb-b257-9c03d5ab9356",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "feea34e3-46c0-4e4e-ad5c-32a7956af520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9da120d-4c14-4ddb-b257-9c03d5ab9356",
        "cursor": {
          "ref": "8b95fe63-e087-44c9-a5f0-b87712bcc006",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f86a6abb-f23b-40ea-9e2e-f245334faace"
        },
        "item": {
          "id": "e9da120d-4c14-4ddb-b257-9c03d5ab9356",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "feea34e3-46c0-4e4e-ad5c-32a7956af520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee2be62-f748-40ed-82a0-709588699a63",
        "cursor": {
          "ref": "8f38490f-be07-466d-a32b-345bf80148cf",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8e6d35af-89d4-40c2-bf2c-330d9f6d1af1"
        },
        "item": {
          "id": "eee2be62-f748-40ed-82a0-709588699a63",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "97c5c7c2-3563-4793-ba01-f2947ef3af65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb5dab-e1f2-4eb7-9bd8-fe51308f2eb9",
        "cursor": {
          "ref": "29ef56c0-bfce-4a18-9c2a-6ea11733c960",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "68186314-7d86-4b81-beb5-3bb5bce45fe0"
        },
        "item": {
          "id": "3ceb5dab-e1f2-4eb7-9bd8-fe51308f2eb9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "306eb3c1-115e-4ced-98ec-263a1b4cf6de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}