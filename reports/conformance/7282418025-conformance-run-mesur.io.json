{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "67cd8fcd-73a1-4332-8947-94870bb4f585",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e12bc889-60f9-4624-9f3e-24f3d19ad306",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8729662-cb55-4c65-ac73-d5dfccf2f956",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70393372-da69-49ed-9ea8-696991ef94f0"
                }
              }
            ]
          },
          {
            "id": "141075a0-0fcd-44e1-aeb4-428ef3914b5b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aaf75fdc-a255-4630-8711-1807494cc8e5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b44fac9-c091-4fce-b860-0cce64e15cda"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e8662699-4e1c-4ff4-aaa8-c63da72bf789",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7088bea9-3dd6-431d-ad24-98148d1bead6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1aefac04-1b42-4703-b409-055beace2e21",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71d0ca95-09d0-44b7-9ec8-dc960a3c40f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95acd459-5e61-4af5-adbe-5b77a7c2e0d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b243146c-cd0b-44ad-a2d7-4c9d103985f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf8e1b66-8ad8-4953-8128-a8f7cb9c9be8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8bb10857-d6ac-405b-97b8-934f6f0b6bf7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00e2f4eb-b2c3-48ac-81e0-4eb0d3cbc425"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "183289ac-c937-4d3a-adb3-863adf3116d6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "37e0e9c2-c806-4457-a32e-c659261fa2cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d301e319-50c1-475c-9318-158035fd14eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ca277b0-93b1-4839-9431-42047ff254a5"
            }
          }
        ]
      },
      {
        "id": "30c3da2e-0c9f-4997-b067-1c70a2cea074",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "95790518-b3e3-468d-ac03-fd9974b8d141",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e3d6227-1c4c-43d6-b5a9-902a11582932",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cb723451-f84c-4812-b91f-841f06b8b78d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51da33cb-219d-45bf-8b9f-6ce9ae5382f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7da7506-c339-45f6-adf5-a04df1b840c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd80a2fd-3216-45b7-8e43-b7126bd236db",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c5d34d-75a1-4b82-8f77-d6bb81d19f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7ba1c4a-ad59-49f0-87de-ea2bdb1cf10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091e0de3-7c74-45c0-89ca-ea246747d073",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c479b8-913c-4ae1-aa16-362b193daf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04e0cc11-760a-4fda-b868-16544d120bec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72e1c8f9-560e-403e-9875-cd64c0a1c59f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "144cba73-5fdd-4f10-8d5f-ff2ebadbada9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b2e3c7-7f5f-4a06-a8a6-6567c845707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a837717-72f1-4b07-97d4-68055a7aefc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b45a689-9550-4270-9c5d-f4b5f58c3039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94384d04-24b7-4a65-85fb-421053c95e3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b79d1e9-5f41-4976-b8c3-f5480c45f36d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "438c2b99-1b4d-4307-92c3-a5c133f67664",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cc6b7cd-dc92-4cb1-8f35-babe60eaeeb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b2fa86e1-0628-4507-8cf3-fde72161986a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3899dcca-d7b8-426e-8671-2847080dc68a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d59750ba-59e0-467c-9bdb-1e3a075c4817"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19e9c5b5-4672-4643-8065-b9324799e4fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "994fcef5-d2e1-46fe-ba00-44e891a19a16"
            }
          }
        ]
      },
      {
        "id": "c8d4de48-968b-4b2d-b668-ee2297332495",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a50917ba-889f-430f-93b8-23d428d90222",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95ac46f1-107c-4188-a213-b2db2b163ae6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cfe6331f-a9f0-4cd2-9208-da991947a00d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72531ea8-77dc-42b5-85c8-67297a511e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3119d70f-04bf-4403-b5bf-1a99482161e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdad7feb-9310-4d23-842f-4fd2f50b0b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f6e34f3-10d2-482f-8bd1-f3340e816842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264f9e8a-4b4f-4dbf-8aa3-cfe2fbf2e2cf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1878ae6e-b14e-4084-b68b-80e9ab3393e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a80f665-a27d-49a8-bd57-9d0ecac07950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cad3ce8-9a23-4763-a1b8-f00ad14b782e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9ee0f6-706e-429d-ac1e-8390d4257336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaade53-1ca1-4125-9825-130380a1eec6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaab050-9597-4df3-a6ab-dd196187264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5e3b8e-33a8-4766-80ec-0c1b0104b02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fdc92f-deec-4b69-8d0e-09300b3fdd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cec45e05-1c7a-474f-9677-14e722b1861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a139ea-dd48-4def-bc93-30e80748c522",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea629d42-c71c-455d-ada0-43732d47e7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cb63f5-eb2f-4b87-a4db-ff157ac9eb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554c61b-ab7e-4595-8e19-8dbeb476529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "909a6397-e4ed-497e-a241-239af8b1e201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78451ba-ee80-44e5-894c-3363d9d2c136",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93c042e-6414-40c1-b6b4-21c9bc4519de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e616a9-26ca-4b8d-adcd-0f6b9731b194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99efb61-8cbc-49c6-8789-a591e6c511eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe2376a4-a151-474b-8c41-8fa64f47343a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a2cad4-3bdf-43b9-bf01-ba92b005263d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d90e8-8143-476f-8ea0-c3cfa39c5ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4e22be-4d0a-444d-b9e8-e7f6efd36e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8abbab0-d3d0-4b9b-8086-a25ffb73c796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f422d884-f261-4673-abb5-8a61cc0f47b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc5e99a-1572-4037-b7cc-cbac854915d9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab5ae00-f094-4e5e-8e28-b33cb2ddfcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94338216-6db6-4dfe-93c7-bf7efb5d0a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1059731f-57cc-4f52-be70-c5eed28417c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "498e4da3-9397-4349-99c8-19d235e10f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5207fdd0-fcac-4c44-82a8-5de86b189147",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cc6d85-4ef8-4024-a1a4-0f588abefa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e5a78f-45d6-48fc-8d14-d9ffbcdb0226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2dd1a2-752c-4871-b994-9d8d02884839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57ce6d30-5f0e-4509-a0e0-63cfdd98e08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b50c8-5ab9-4564-b427-d0ab95389478",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13db9b3e-5ddb-442f-8269-59161585d3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264cb7b9-fadf-43d4-a9a0-e8a5fe4d876f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40468ce-d54d-4c1a-a7ea-2059f94bf385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3fbcc30-646c-4fe5-8d53-1c7ef698dc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb5e2c6-dbfc-4860-934c-63a6a88ef40b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d72b4c7-431f-42c6-bb7d-e52c7d7e0b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6589134-f642-4d52-8bc4-87d58cd8e1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234cb587-0132-4478-b608-200ece8f08a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97197e4a-df43-4d4f-89e9-2d9b806540dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bebfab-b496-4ede-a4d1-97d0b0e79374",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bfaff4-ef7a-4f5a-9897-8925365707c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d1fdd6-d5d1-4dcc-aff2-29e98805db8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3505c795-1069-4b64-b564-4584e05c27cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c105dc5-7e5a-4e0d-af33-0db4c47507d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ca26c8-ae88-44ee-8957-cd2090f537d0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ba2196-c44e-475d-b724-4da2e532ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2599172c-e557-4baf-a009-4fd4f75496d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c672df4e-ee7b-4e55-9fde-ccbbef541b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc8c1ce9-96e8-40ca-b894-b0ff5de5468b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1a46e8-8082-4f66-a521-0c3530039b9d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac552bae-d2d0-4c15-bace-4938e54c75d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946f0be7-a85f-4192-86a7-b836f7f9031a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05cab6c-1cb3-4a43-b5b8-042461d52ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8d8e23e-76ea-407a-b27f-78054327e094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eeed97-ea7c-4ede-a959-12a6559e5e56",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db72d15-696b-4ce8-805a-4489445c5ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2090992-59b8-4c06-9c58-1bb09e00669f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244d87f1-99c3-4913-89ae-0d168ffbbdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9765ea58-8b25-4ad0-b5a7-a680fe501ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737beddc-9ecd-43ea-a86d-4f06009056c1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00c2576-c064-475f-abc9-548ec02fc8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d402f0-b343-402e-9fc5-6dc97e399e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a11b3c-833b-4c63-8420-447744f333e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc47415e-9348-462c-a66b-90d403d7bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0fb1d0-ce23-458c-b829-6f5b7766b1e7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec093d-d535-470f-b839-98801be57a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c77d83b-e1d1-41eb-8b77-44ef1e6897ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55db6d3-0502-4c52-bb8d-d0d472136202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8851b29d-558f-4220-833e-ef34640e462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f33785-22d0-407a-805e-1f9a422aadfe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4645d0c4-a390-467f-ba41-1f97b1d4150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b268caf-ea6b-4950-b5c9-31f7a682e5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c552677-85ae-4a36-affc-56739f1a88e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24405108-3505-4cc8-b152-e929affcaa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ebaffd-6837-4266-8078-aea149940404",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12019f9-713f-4ba8-8246-309bd066f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3df8902-ce6e-4e2d-9ea8-f1a54f35bf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674a0915-4c42-4982-98d6-3cab2b48743a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af42621e-616a-4b9c-b3c9-41bacb5567ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab00a67-792d-41eb-baca-ab2e420a3516",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f468b0d6-d596-47aa-8a65-fdbfa2f8cdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316700d8-162a-4663-87fb-168bb004b862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a2225-72be-498f-a74a-0023884d146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45bd7ebc-0a3c-42de-8919-796260bd646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6214c03c-529a-47f0-ba0d-728603cbe4e5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc11f3a-039d-4470-bafb-b93beeccb1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96d774c-4758-45c4-b84a-2c611efef235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325ab266-f5ba-4f6e-8df5-ea3e0cdac225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6932ea23-b5d4-4d57-b8aa-e1c4c12e7a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b5e67c-9c64-45d8-b922-27bf64dd64d7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadb2043-27d6-4569-8e5b-dba741cce19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276f2886-7f92-4356-a666-47a11c18528b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee765e1-8f6b-466d-9a0e-169e143b7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8243ff0b-dbb3-4d3f-9c05-f6cfc8e0ccd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18445b3d-a447-4892-9fa0-05d631db7677",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c222d3e2-aa92-4b13-8f4d-d2dc4ab7717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cf26a5-8861-4e23-87e8-7492e58c2354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdd161a-6321-4f17-bd53-b1e9e12c1583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26da0b5f-f593-4aff-b706-a33e93784609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c825dd71-82e5-4b83-8ad9-eb8d04391843",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c535e0-24e5-4eda-91a6-c9b3bfa30421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe1a964-1031-412b-bc2a-770730e974c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ac95d3-163b-4f41-a06b-e7b496149971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0f60a6-2fc2-42df-aef9-0aaa9e4ce7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27c335f-ad24-43a4-9b86-f05e415ff91f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0295a075-3c29-4779-9a9c-f7ec601dac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6c82a4-36fb-4373-a748-3f7cfe9a9545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e993b345-d60c-4845-8ea7-0566b379db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7ce140-e1fe-4a5a-93b2-812991c63edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097a2ad2-90d4-4951-988d-b29f7e4d4411",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a98867-7e6c-4d4f-9de6-6380533991a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d3ef9f-ff78-44c9-a613-c1dae03691ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90a3ad1-ef8c-4830-90e1-8057f93e9fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd864fe8-686e-499b-87a9-c3da6d4fb0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beffb3a-7902-4637-9ff6-9acdb4aa1291",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a9e29e-d6e8-48c1-b7ca-5c5daefad591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae91dcef-9b54-4e0a-b566-8f119fe16d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1c772e-062f-4e20-b520-e307aecf7566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6697faec-2258-4007-b0f9-93b580657edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b987f-2b74-4a5a-acd2-64b43b8e4d32",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92121149-7f7a-4f45-848d-e4dc17d2358f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ca52d9-67ac-49dd-a8ad-dadcca75c8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aa8e89-4527-4c26-ba1e-483e058c3524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ee9595-45d5-404d-8f5b-2f5aadfeb30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac6ddcc-1117-4036-8ab2-013f7683c852",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e2eed3-de5f-47da-8ede-189c362cca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099c7bec-dd23-48f2-8fdf-27def7760d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7aec57b-08be-43b6-80bc-fe8f1b449b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ccbf99-93aa-408d-a41b-5ce70594fc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82737b87-022a-493a-8514-cb30a47d2f54",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6119e-af02-4442-8410-27e378dac45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190770e6-3219-42d6-94d7-6d5c614c8648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a634f04-2815-4e1f-ad8f-91b8f3e6ca55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb7216d-e771-43ee-a23a-bbead60fcc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b27c08c-6206-45f5-bbad-0dc22247d4c0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0613ca1-7b28-402b-bc65-9bbbbeb66493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48d0bd1-97c3-437a-8e1d-75bbb7862eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ab650-4206-40c7-a6d2-89f5dc77fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d598d108-5f2b-4d73-876c-63cab413834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc33c319-800a-4fb9-85e2-f42d36ca99ea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b586537-4b36-45d3-82bc-5c45fb30019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0af7cf-9614-442a-85b3-c4351e9ab091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08b0769-6673-4dc8-b838-e4dfad58db8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e649e6-36ac-49cd-ab39-e2e4b5c837ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef06df45-7999-4de9-98e2-70230935643f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef95a90-fe71-4126-8c49-96a4bee98be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83761060-0927-4cb5-9294-596ddead6809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed0dd57-58dd-40d7-b31d-4e1cf135b879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11cf62e9-1d91-48c5-a861-063ef3c3a538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3663213f-fe71-4175-82de-c0fa2b9ca893",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd0696a-0e13-41ce-8a26-d745b7965ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb37c294-c260-4454-a382-46bb44e2e23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffed4c60-3ce9-485a-b346-54ad8e9a6a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f668783-22d1-400b-acb7-3333e5cfb093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae044e8-1981-4507-ac65-5c60a2ff78af",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98656296-9021-4529-a0b0-c52b673ac96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d765a8-f89b-45d2-89b0-d5ab7d1fe28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8fea8c-82f7-4660-9e95-4fdb8caa2ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abca8170-f06a-48d6-b98c-f1a373a24d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681fd95e-d16a-4c30-9da8-b2dcc12b8292",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e8dae-cc10-4f8a-ba21-21c78a81c383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37df8b03-9d04-4c6b-9f40-d8902a98b64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91cbe0a-d9c0-425a-97f2-aa0f317a7191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7f786af8-6b6f-4395-8835-7f4b755c2823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c094a0f3-b945-45f6-85e9-14d27bb2a698",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4ac07-d345-4722-b62e-9a22cadb38e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b2e5ade-e5c7-491b-ba33-821ef15d2d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d5c656-8103-429d-860c-6b0c202cd122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e661f7-8bf1-4177-813c-0953bbfc5123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bfd66e-1db8-49dd-bdfd-c7f8ef78bbd5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1e591a-35ef-4614-924f-e64d444281eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fde1b94-40d1-4776-a33b-35dacf6b0aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571e99c0-09d7-47bd-b775-8e25ec5aaba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e743418-6c1b-4696-b505-fd94e1e9dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107abf8-8d40-471f-b6d5-a5632e22cf6a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a3164-debe-4c15-9d68-bd8583313584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4afd7e-1ff4-4e66-a97a-e48866e535f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e66e04-7354-4b69-9843-5935f7e8e893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f92cff54-3ce3-484b-a0cc-a39eb891df53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb903cd-759c-485c-81e6-aef39f489f17",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513f2e2c-e9b9-4d50-a13b-2f3b90af4a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e567f30c-1b92-460d-9bd6-35283a4b05bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76520ea8-43f9-4424-9cbb-2faa8f353e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd521fbe-4494-47bd-b393-15b4744a40c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f5ba91-3ab7-4cfc-be63-40caac4690db",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72405b96-cf04-41cc-a206-542c681a93b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4b7661-0788-498b-b9db-c270852580c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03e82ef-a628-41a3-974e-6ba81f9f863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf76777-9442-4373-b8ff-95caf4df44c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12f425f-9f37-4244-9a5e-b4ff7e332741",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da221072-9f65-4dc9-8eb4-3c56c772976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60cbe11-088e-4aec-9ce4-4896ccd37640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7267b-4249-461a-ac9f-b4b252a9c4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1614a4-71b8-4da4-9cea-177e6875e6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1647fc05-f368-4549-92c5-61d3f374e23f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752817a6-a2f0-4859-b2a7-5f0e1a93a1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c7049e-abe0-4bcd-9889-9f82b3980578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cb13be-1c3e-4297-b18e-b7f74fbaa27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b9792a92-fe05-4cb1-a3e1-32c4d041e633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e573bbe-81e9-47d7-8b67-4c53ad1f1433",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea080da-6015-4b73-966f-7cf4e57fcf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8734ee87-9cee-4466-9e03-07191c34e636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03eb77d-3318-4de2-b630-d75e0f31d23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c21483-b09e-4324-b258-9c062f6f622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd6643-9a76-4901-a7fa-dd603fbdc058",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c467cd6-166e-4264-99f1-a6a4e8861616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52b61a6-d1d2-4234-b677-598f0c7c7eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541579f0-1e3c-461b-8384-f1f3f1fbca6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4edfce70-484e-4831-8634-1b3b6ad72e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329d5576-c555-4a43-b0c6-22d6d228e688",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aabb073-23a9-43e9-b6bf-85c2d390281f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c2c4bc-ceac-419b-b876-3aba42685882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0548f41-3383-42df-ac0f-ba1f37de8515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d81e945e-c39d-4dd5-b42e-76651179543d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea8fbd-18d0-4064-b07d-ef1d02c10145",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65d2a89-ecd6-42eb-9a03-fbb4384928b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0293faca-d1cb-4adc-bba3-fc216742752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960131d8-7580-4f4a-93a6-ae200095a43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fa75b9-47ee-4e6c-b310-68b481788f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae552496-f375-4203-9c00-8c5645cafe5c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199bf2b7-1e4e-4f6c-ac8e-477774ace8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7895e8e-6ddf-48f8-9177-dc69ce0e3906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835b196c-6a91-44ad-8307-d586f2dc1366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbdfe7f-cf2c-486c-a54f-7433b643afd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2dbcd1-1b5b-42db-b284-82cffc45dd15",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7998afdb-00b2-402c-bd59-0ae8f0999b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d69235b-8ac7-483c-b856-0933500453dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b084e0ba-7473-437b-9c66-7c63fbab24f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f30a35-e276-47e8-ae1b-87ad1558bf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1721f5-4b28-4991-b93d-87f4daa94ae5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697ab2a0-6f93-46d5-b422-3c6808f990e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c2ede-8a9c-4564-bdc1-8d6c3db0ad12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2633af-3bba-4cd4-9115-9fd06ed827d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6206992-b3a5-4bff-a55e-fdff7580b945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da90b171-6ad6-44e6-8379-f6d66ece4f4b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3221f5bd-53ec-4e51-86d8-df33c4f93982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5af8c4-90da-4d3b-8ced-3013d944261a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2cbcf7-8237-4fa5-a52e-03f56ebc9f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd63de45-9d78-4c17-b539-1d0eb181030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d863a8-6478-4ae8-9e5e-70d07ab39a74",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d40ce7-cc38-4c3e-af43-39da06eff37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea6b765-9fcd-4cae-95f9-51206cd62225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3204f55-2b03-4136-879b-56ad9543983c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f2cf6f-ba43-4156-976f-5e22a7b59acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041b49d5-af24-49f2-90af-2d1785317bf0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8739527b-0230-439d-81be-b53e4a56c7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052a7b41-125a-498a-9fb2-0eecce73711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e03a72-dafb-43bd-b3e3-f3c892b6442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d358ded-8e75-49ec-985b-35fa72160a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300e2c5a-a01e-4732-a12b-2e03c7155d4f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9d6a1d-e35f-4093-bd8f-8b68b86c1ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd32f9c-81ee-4de6-8413-6a812dbc30e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bd8f83-20d5-466e-b595-357a5764a823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6635dd3c-eb4b-4817-9a9f-f9597d528e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ecf887-6876-4209-9c3a-9ce6d5ba22e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796bccfc-3e59-4b90-a8c6-9fd6b02859b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c745c37e-361e-489b-94a9-28c78ce51702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be0ef46-b4e9-4e18-9abe-bd8570523180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa84e2d-8720-4ab5-86b5-655a7981c5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a8ae4f-caf3-4b33-85dd-5b4c1de0bc8e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79be2b-da58-4c17-8261-c3214261e054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21696144-989f-40c2-8474-d7be512d5ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd76604-2d7b-487f-9102-3887292f6db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27248a6-6537-4805-98dd-2275e5d91b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d783082-cdb1-4bfb-a877-3bc3993004fb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0504e10-0048-4a21-898a-daadc64b4916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48de0b64-f39a-4755-a1ac-7a87bd514fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e30e4ff-3f93-41f8-b08d-84ce03213b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "68899089-708e-4952-8eda-ce7834effe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed7e8dd-c298-4bed-9626-407c6fe56e39",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351adc6a-90db-4573-9a5f-9fae64f5638f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd27f14-c717-4788-a0b8-15af6306f42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f8ed1c-3914-44ea-b003-14f6ecc068e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "729877cf-6c75-483a-a969-f7abe19ea83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b82daf-03c9-4893-a269-74c13ccd6b9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2facd9f9-74db-4565-92ab-8b1baa642448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996e8428-33d6-43bb-bcf2-b35f1de7de74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5de8e7-706a-48d3-90b1-11a25e7a1660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a0700e-abdc-4b6f-926a-04d0286f9c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03317353-ceb2-4ad3-9458-92162b998fa4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fd3244-6d75-446a-bbf8-a9c2a5006134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adc7545-c1c9-48e6-902a-d3d2344f061b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27f095-df8f-41f8-894a-79526738df13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "104980c3-cf7f-491b-b499-84eefccf79e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d044fae-60d3-441a-84c4-c91540720f48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7ae9a2-226b-452f-857e-29b11159b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16496dd-bd2a-4508-bd7d-0db09c9b45cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbf38a4-ad1c-4894-92ac-84a91190b409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "accd2d93-f27b-4f14-aaa5-f984e79a568c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac657a5-b687-46e7-80a2-934bef1d1200",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18121f8e-1d52-45cc-8e72-3908d2685b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe66bb0-12b4-475c-850d-622060a4395d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2649021-eff1-49b0-a47a-0ed16b5375b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b631bb-a795-4f18-abeb-7dc561f0bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a761584-1244-4b5f-a9e4-5a7ca48d4d91",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64361d8a-b757-41ed-b908-7671ae450420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6004375c-a212-497d-bb20-af04d86afef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d793c6da-84be-4c3d-9277-ac7ae8dea5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcf5c4d-5d32-4d53-9c47-f5e3d48b3a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2dfdff-ca50-4f34-8ac2-5087d10d3796",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2416070-209b-436c-bf4d-eadbc02efd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a23d25-a5c3-48a2-8399-e6b75d78553f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21a622d-38f9-45ff-9750-28a57713619f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d627b428-bb24-43d7-afd1-fe3c48e276d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70de793a-586d-4b4b-87d0-299d61abe33f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d472bb-a09f-4061-a148-19459f1b65c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed1434a-355c-4c7f-858f-6bab29b709f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d9b6e8-4814-4f13-be92-7e3c499703fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab13af7d-e6eb-4149-a196-e2a52962c154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52fcf3a-9d95-422e-86d4-6a16815bc7f1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e929e60-a8e9-48df-9e71-bcd6fae2381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb17a531-fff5-41df-95ea-1ff134072b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64e0949-b0a0-42fb-8ee6-9971d8ca6573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a4496d-cb56-4972-a972-892a7f626d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5508d4df-d6e7-4aa2-bcb7-4653a1cc8367",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd63bff1-333d-408b-82b7-f75057164e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0df6f57-f6fe-4f26-a5cb-5210b04631ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30af3f77-7ea8-4b3b-976b-1bb7c0953815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "037fea79-6dd9-41d6-a15a-03d6ae44b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb8429a-ec96-4bc5-b503-f6b508fbe496",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f547491-db8b-469f-afce-f22b9aefbb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e547853d-bda8-4884-8d23-616940c43b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd6ca1a-e41f-4171-8026-af77e10c4446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aeed0e51-49cd-48c0-9a77-d362dfdb9309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c7a7e3-f113-424b-b2f0-df311cb8c5b9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862409c3-5031-4ab6-8b12-73be5f74a92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c1213f-e77c-4c46-b262-f869b9fc17b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d43050-8105-4f6c-89c7-9a6d1cda479a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a898b4-dcc0-4066-bbed-6a07f3df2d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b29f2b-a77d-43db-ab3d-3f914e7132fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ba7994-8a02-4e7f-989c-3764c62d11b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bde0a82-f300-46bf-8664-a74593493463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf410c7-1c61-448a-b6f0-69833e42c25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1659776-4541-4b06-9722-e87b092274fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bd1cc8-5aaa-47ca-9122-12773ff2b8a5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8651cd8d-1488-4497-8525-9c042bb8efe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13721fd2-747e-49a3-97cf-31310c2de6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e42c2b-b727-41c5-bd33-c56acc31c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c9f141-ea2e-4207-a18c-dc162a6a5d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1060b6a1-b077-48b9-86d3-30166b9af71c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f952190-3094-4442-b9fa-62c05f97f3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b34a91e-c1f9-4f30-a8a7-f08ff1ace256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d34769-565e-4c15-bf38-feae4f7946e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed480311-9b99-48a0-91e6-59fc5a41f160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddbb438-36d0-455d-ac79-460844759db5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7a829d-2554-429a-a061-71868aa4d6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91af720f-ced4-405c-8e75-e24e070c0be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0acc44-5156-44a3-92b7-2dc5c80c8a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e5e3c1-7a3b-42fb-9961-a631154abcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e5d418-20f3-4f10-b0a4-602f1e3ac4f3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410b11f0-3b16-410d-b49e-d3402d34c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd392a7-259d-4701-ba93-86190a638e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4953be55-56df-4485-9104-fc5affd4d412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "923922c0-6346-40db-9a18-2614d22bb922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6596a05-cf92-4d51-8015-de6c024cc597",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1f1446-4864-46ad-8cae-93e9a7186c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942c57bd-d20d-4b81-822a-2525e005a372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad090327-fb44-492d-b458-0e46d44e13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9431551d-5854-48a6-95cc-d8ca97ae89a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36031a90-0ec7-454e-958f-b05a62235dda",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06289d6-320d-4228-a64d-0bbb6fc848d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4a757f-2b26-4e31-a0d6-888f08a59779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cc67b1-c31b-414d-88bc-d7527ee98cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a8aa6f-63b4-4da5-9597-3373ff8d5440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d722f9-4d08-4bab-b064-5860e4f85a10",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc415f3-5416-4555-9926-9e4113fd5a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e233cc1c-58fb-4572-a0fd-79a7bac8ce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e07571-eae4-4def-a271-4b425a5fdc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8558cb23-1e54-493e-931f-ef978a2a9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8d5740-f66c-4b4e-9855-26e4b550c32e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1589c5-0521-4b6f-a4f7-14678ed913b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bef3987-ea79-4397-a65c-240355f05760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe4398-9312-4b6e-939b-fddd7c84c0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76c5bc4-fc3f-40ac-a7e4-9e32d95c651e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3dec8b-06ab-44ce-a248-a1814caf4885",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9320c4-2a13-4980-b8e0-16a48573e33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39691172-7e64-4ba0-b8dd-7c424084d931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d3ecfb-a9b8-46bb-aa27-cbfc1791e202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f00803e-cae8-492e-9f8f-3afd4bce545b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb62f965-be52-48be-9a27-fda3177f7b60",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33912773-64f4-4cd7-ae61-2005d8cb0b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6574de83-cbed-45c0-bd9f-b464d00c59ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde9a684-29ea-46e6-89d1-29d6b0a49ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d74d0198-e561-4a38-925b-1f18c591c4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc00f99-ba6b-4f25-963a-7461ee940d4b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048da454-3ebc-4846-b568-428288496a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375a87fd-ef91-432d-af21-b4148060c417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a720359a-215f-43cf-bd0c-8c40fdf17ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57b549c0-db6a-4001-8ded-fbcbfa37b719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bea471-e23c-4520-919a-d2ba43658c15",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b570d01-16ef-47b1-af3a-ec8c2f0af5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be81ec4d-bba0-4726-894d-0babc294d8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c72ce0-2c48-41b9-95ea-eb77d7b8a6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9398af-691e-4db4-b8c2-41a754b88868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e140cf-0f81-4df9-a9c7-532b0b65ac76",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e26d5aa-9798-4a57-8432-be8e89d0a6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920950d3-5356-4436-abad-3856dc045f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde04b72-afd7-420a-9841-a7476fbb94cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24afc6d7-1e37-4569-8119-40c5cf89d73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd00bc8d-1543-4322-9706-7388f9d28a4d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae635c-bcfb-41bd-8608-ed642dd48f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd458b4-c378-4bcc-8efa-fb92665cd978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219a30a3-c71a-46eb-b8ab-abcceff36fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be56d849-674c-41b1-8a3b-93468184fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23603ce-a3b6-402b-8cb4-69516db98462",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235e6055-87f5-4c7b-8e88-1974231c5b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28860b9-121c-45a6-b8c4-ebc303c0cf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c6097-27c6-4d13-ad7b-893242eccdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f908e5-3d2a-4979-a2f3-94185b39b50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab2f70-e4e4-4f81-8057-5d9999717376",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe522c33-69eb-469f-961e-54784e4da3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb4c43a-c1dd-4840-b779-7364ed688f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c028e4e0-0936-4463-b931-9cf98039e9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f143a275-788f-46c6-acfc-c71ab01d5e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aba45ca-767a-41c9-811e-b9be19cb5823",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8047cb5-5934-489f-b1db-643fb6eee409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e46b1da-bc02-45f6-9383-f89d1677f886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14bab60-5562-4b6d-925e-9e09030abd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6641b8c-608f-4a62-9fce-f2b49aedc559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aec525b-b57e-4fdf-abee-3bc075281197",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088496af-831d-4ede-a033-b22a21b906fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c9137a-607e-4cfa-8d8d-b8a4444874a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a18730-4c84-4166-9efe-fb37d25a3633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec77d450-765a-4351-b0c5-6a66cdc77840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef69799c-1a6d-4ad6-b3e3-1bd5b5b56205",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681fea60-6f67-4e67-ad4c-931e998a43ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a34142-45e4-410f-82ba-36e37d5084ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0698da09-6c90-4153-a6a3-9e40e9485ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aff82f-4db4-4db1-8473-e0be0a00a9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1060fc1a-2fbe-427c-a54e-7439cfa1c76c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bb5280-80c5-4e20-9974-d1d67a369e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9953c6e6-284c-455e-8691-1a67d1a3444a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5635d5-a5d6-45f4-afa3-d5f58e2e5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0edece21-cf03-496c-9472-bef01f738202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6b1f8c-6f49-461b-bc2a-a66f1b2b3735",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24efdb5f-04a5-4206-b8d8-bdbc24246e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8bca71-824c-4642-886c-ca031dfd8c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea0ed8e-9d3c-4470-a1e3-8b42ec56e0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "121e8f60-1931-45f9-9e09-44aff7ae39f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2642ac1e-aa8f-47ec-bdc0-e2c540d406cd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9394b9-3d6a-451f-a5c0-102c2e5f1a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725c79f5-349e-40a5-b5fd-34c4fc06dfe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1636427d-aef5-4089-80fd-a84d57f6039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b63408d-6340-4f72-addb-504109f44962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512c7365-9745-4061-8869-aaf5f51ba351",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ccfa7f-37eb-4cea-9a2d-ddb8644d4c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c59886b8-547e-4cbc-9615-69214b75da16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15c7530-b58d-44e1-a4f3-4d82d4eaf2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd93a823-b5d0-47d4-ae3e-c424fb65d6e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fa93beb-98f9-4780-a9b2-da0ff61ca35c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2041188-9852-4e09-9926-ee471a836ddd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914eb055-76f5-4044-bd2a-db496db4f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e65b98a-5359-4a57-baeb-941198d862b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30965288-7ba7-4bce-92d4-26a26acf067b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78038a6e-fa56-40b7-aaaa-7db0b6ddefc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3e057a5-36c1-43be-ad76-79b8115ad19a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e30e024-17b8-47ea-9a29-04651c97489c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7e07f37-640c-405f-9c12-1e7d9602366b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f05f9c99-bcb7-454a-ad05-727bc84f8b17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "863c9601-b54a-45d5-9551-552acbe4284a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8fcb29d-8e0d-4a51-b006-ae04b0940bf5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4658d5b-38f7-4254-9e54-9c22449d98c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d306972-e41a-46d3-b616-beffa3485205"
                }
              }
            ]
          },
          {
            "id": "044d851d-a941-4a32-9316-1198e928c764",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddc9b391-cddb-45cb-9573-22dbf019a050",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4c452702-56f5-46d3-aeba-6101e6420944",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66671f70-3366-4bb6-8e71-1ff61246ef00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9329b96-a573-423f-a66c-02b02330f4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857ec852-d78f-4310-b0a7-f4246df04bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661c6025-80be-4212-ac5c-8ff7c84c2351"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39b41687-1dd7-475e-a8d6-4e8ed21212df",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c4b58d6-25d4-417c-9091-e01ea671f0d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c81cadb2-6625-499a-adc8-26d9bb5e91dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97b27126-ceb6-4b2f-8986-9f7307495dbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf8cae38-72c4-4683-b441-dacf109823c6"
                    }
                  }
                ]
              },
              {
                "id": "00237437-736f-4702-a8e6-115589dc8061",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da9622ac-225b-4d85-ad89-23e5b78b6651",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97145e3e-3530-4962-8bdb-c492782fcf45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57efd47f-c802-4b71-930d-106233beb0e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50fcbce6-f226-4681-a1bf-1116eb44f232"
                    }
                  }
                ]
              },
              {
                "id": "3631b8eb-277b-4986-8c1a-c437fefca6a4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95b9bbfe-4a16-40c8-ab66-3c3619024282",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d8154ae-0103-4ce1-a99e-37aac396273b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "355bf264-dd41-4068-aae0-40db6636e6d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e28fb789-ad79-48f5-b6ee-fe76f95ae523"
                    }
                  }
                ]
              },
              {
                "id": "538ac3cf-8fae-4253-86a2-2f124e37fb08",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d4f418d-a63f-47c0-b112-c02ca43bafb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d77ce678-56b2-4bd4-b2ad-88d562f13b49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "288dc9ea-f59f-4003-9fec-4fe8a2f89eea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f1004981-6e22-427b-b8cf-9cca0f14cbc8"
                    }
                  }
                ]
              },
              {
                "id": "321947ae-5dd9-40c7-b70e-5f791409d853",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d84bf5f1-9e82-4463-8ef4-78c81aad1eca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "949cb996-e8f2-4be3-8579-f5c2a237d7c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93dab480-3b0d-4234-beb3-287e7826d4c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eac3818f-15fb-42d9-a6ea-e849c278bee0"
                    }
                  }
                ]
              },
              {
                "id": "e900984a-7862-49f9-b808-62415f4d82d4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dfc0591-acc6-47a6-a3bb-c56057939fc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60ee10d9-83a5-4ece-93bd-b370e10c49eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf7a2646-48e7-40b5-8e53-809df6b516da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5af3d8a5-5e63-4e0a-9a7a-42396145425f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6701b5b9-570a-40b1-9e45-e2311b92ddca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a64b85fc-f2a2-4875-a440-1e916eaebc00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abf5f120-114d-4b2d-b422-7233b7f1135c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "624de56f-0eba-41c9-9e43-27f97db5cef0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "642f0dcb-7eef-4d2d-9ca3-827a4a6b9306",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9e0c6596-122b-4f71-955c-8a09f1156926"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9091e0f5-b642-4377-a35d-528b40ec3e53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b244c913-c748-4145-b306-c1b0a4954d5f"
            }
          }
        ]
      },
      {
        "id": "11757c47-d358-4d10-9ce6-9bf9ae9b3cea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "65347a36-3e1e-457f-9733-fd52359cd0f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b25efd93-27a2-42d1-addd-1609eca8e479",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3758e0c8-2036-4bcf-acf9-d213a6d0cfd4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b388b9-6216-405a-ad6a-293c7511ebb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade9c7e2-3318-4548-803f-2b50db88b85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610c1427-e4b9-4ace-8421-0d7e9f66942c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f56b86-21b8-4cad-a081-ee71862d53b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64f81c0-5f4d-41fd-9b51-9ee58e0bf0f3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30562336-f4a4-4668-8790-5446517c36c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937a7f85-5e8c-4c3d-9958-edc064d61c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9113c5da-b049-4e1d-9e18-6a070a6870ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f261366c-17ed-495c-9ca7-ecdb1e800bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b65c00-416d-4593-ab01-a0b8c6c186ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c45a57-ec47-4395-aeb8-cc8ae71c382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35adf64d-508d-40c3-8a8c-c096fac3193d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f624e96-bfa9-4a1e-9abd-9fe9c24c890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e3ea82-8559-464c-bf03-bc5ba399310e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858c0651-71bd-4d46-833f-60907415f855",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24556512-c672-4cc3-9371-3dfe17d9b906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31439473-fbe3-439b-80ff-22fa679f59f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269e5c4f-1a3f-485e-9738-56a48ab98693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9366602-9862-49b9-a005-0e5d2cee14cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20961f3b-a194-4c8e-bfba-8b03a8399481",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53629cfc-aac0-4014-a188-9c4c7f335fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b880d9a6-6982-436e-b8ba-c6dbb79f559e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6f5d2a-846d-4bbc-90dd-1cb707d7190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f492745-1117-481c-ac64-390b909d5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e0af39-4f62-4cb7-8319-5d66ff92060e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f02aa8a-157a-4416-9663-d2b7e1547339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a25d93f-ba10-483a-a221-4901e35acd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd99d214-0584-46ed-82ba-dd471c2c817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bde410e-b156-4f07-98a5-45037e670edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc920f9-672f-4274-a834-ffef3244e75a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b2dd1d-16a9-457a-921d-e6a9bb491623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be987e3-b258-48d2-94d3-3e7c6e41b3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de47e13-8192-4eae-8467-e86657e137c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0da3a6-0904-41ee-94bc-efa2b48fedb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ffd50b-3f8e-4524-99f7-2d4fc1cb28ba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14732dd-3f31-41ff-a0c0-c3923ebfc5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c2c75e-50e2-4728-936a-fe02775cdb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c7ec31-067e-4ebb-b0da-5efda74b6b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1935894-60d1-4213-9727-7a9e510f0d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb26887a-a27e-4784-ace2-6bf009085182",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4b12f4-8269-472c-90d8-ed7fd36d3e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd4870d-91e1-4c5b-9814-2f28bfc1b533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd39de9-27db-4095-8921-50a799aa3ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e16d5b52-4bbe-4d43-a2b8-7852699bfe9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ae1b52-0274-43c2-b67e-8842a5eb60f2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e35c3a0-dba8-4233-9632-f4797f56cdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5449e36-4779-4235-aff4-723b3e05f57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f69cf48-df48-4b8f-bf0b-af843ef173fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "046a1547-b7bc-4fcd-b856-ba4823894c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2f4d67-cfad-49af-9c78-4d7129707daf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c5092a-4010-4629-b368-c5517ebddb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c9a405-9af4-4bf2-ada2-983b6e5f2cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c1bdd7-1084-4925-946b-6215953ff325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e7db19b9-cbe0-4433-b9b7-c1f7697c1d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabc4edd-1d17-4de7-aa1b-0eac35ce8499",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dec3d4-1d11-472b-8411-d33a12168fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e14cd97-ee6e-46d0-ac82-b709a4e407cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8d9460-be27-4fa2-b6dd-2682f829296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbcc954-5afe-4242-a36b-cbb00da189d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0876f18-c6ea-4aee-b428-dbe942f99e72",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc91174-fca8-47ea-a556-49a51f557a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df89dfe2-14b2-4379-911f-046c1b410212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5e108-e598-4222-aa0e-5ce02fb70282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cedd5bc-cc42-42cd-8e44-07389331e384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed31c403-1301-4688-a5d9-86931dd4f17b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237caf43-a568-4998-9dcc-26ed71ba044a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a426b5c-0b1d-4d7f-b07b-0c138e487955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f30740-6919-4444-b3cc-75223496cb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d0d186-f968-4028-9eea-f1c7e2a498ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0759d0e-4057-4161-b130-5c57763bde88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8519112-d998-4e5f-a9ed-38347c9caa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f740c44-3bc7-4d6b-b7a5-911361f31a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a557c02-74a2-43a8-b491-a32f04c51687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "71974dea-3f38-4082-88ed-04a83a57b562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d89f46-0340-4efe-b824-f0ceea36a239",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649daa34-8510-42d0-92c2-3441490fa6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31214be6-d48b-4e7c-baf9-69aa958dd022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f19d1-42fb-4523-b08c-d9f4851e8f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fd9249-5a3c-4b86-85e6-92afb3cb3320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bada137-5654-48ce-9884-c2cc47eab74e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7279cc8e-5e28-42c8-b58a-952f8d6989f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c06dc3c-a136-466c-959f-98514986797b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae765f7-eae2-4836-8878-75cc08d165fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "09632f7d-1f28-43fe-b946-842a3ee447ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c811bef-6862-439b-884c-d896e95ab914",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddeed9f-5aa2-4416-8fc4-52d4ee4010b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec5ab30-dfb5-4161-82a2-c8dce0f87dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630cb612-200d-4129-9986-d36942acd946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8869b96a-ad5b-4c27-a62a-a7ee85f198d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ae3095-2bab-4e8b-aafe-fffa38740864",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a4dfef-f54b-4b61-a788-0d42b4209bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c25d831-997a-4ae3-8f83-df1fc5a90d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa088411-133d-4d93-a8fe-57621cd8a8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d51f5abe-8bfc-48d9-adf3-7b5612dcc770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb34864-e7d1-4b20-9794-b79aa0fb5f72",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed8d6d4-25cd-4296-a24f-a13dde2f463f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca9b51a-90de-4178-be2c-6eab4995aafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983e5577-f798-4db4-94c1-76b4b10d7335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f45d17d-ce81-43d1-b0c4-fd3b470d2a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160e3ec7-7581-457e-99c9-02fcbe01c2fa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f28fbf3-a214-4fc2-9e0d-f7cda78b70ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee210e9-758e-406c-b7cc-e14146fb2bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de02963f-5117-4ef6-aabe-fe07c9b00319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9a49c7-ac27-4993-860e-89b789b4618a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c57a2c-7579-4a0c-a2fb-7b3271cc1e96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c63360c-4b10-4014-855d-db86d139d587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce36d3a6-2817-4c5a-a176-55ebca70ce00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bae7f46-e1e2-47dd-ac28-74f86b2e2130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de46ba82-767d-4fb8-a9be-57448e965437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b442c9e-bde9-49d6-a87e-4762a725eb45",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f7f699-cee3-43ca-8d62-81f8857fd495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd92f246-bb14-401c-814d-a377f46cdf52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a728981-5946-4f9d-af97-552f05eb302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d5bbe1-85a3-4ac6-915e-6ccda59009bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a89b6-d578-478e-9f5d-eadfebe4af53",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65c4b5e-cd48-495b-9a8a-2c0af14a7837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94644077-b145-4135-b303-5baa69997236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c12b08-cdeb-4697-9101-857e1d361ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6147acc5-070d-418f-98a3-1da3634b5f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dea54d2-fb23-411e-b765-92e6f01babfb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4551224f-af3f-4f80-8ab2-33017e4b40c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd5357f-f3a3-4fbe-9b78-33cfecea2153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f21bd42-e0e6-4680-9dbd-7fbfa8cbf96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "524cffb9-d69f-42ae-a768-9833eb557d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7792b5-7879-4066-bc53-4ff4eac641f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4894563-8dca-47b7-8b1f-8e0148ab8a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c578ecf7-95c3-4a72-adc6-4b629655e4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec339fb-cf17-4d40-934c-83cb1d36847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b25977f-4868-47a8-931d-73369e1d8e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73790aeb-2241-4902-9aa8-2b015fec3642",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e374ca9-d319-4eba-b093-25231dd9d24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cce5e8-ec21-41df-ac8e-14f50e2e640a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ec4cd-280b-46df-8d9d-cf87237a9d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77253a3-1106-434c-9d6e-e9bb88a96a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cdeb26-c1f0-4b7b-a97c-8855382747bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb8fe0c-d3e2-437b-822b-ae6f74a35cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4495120a-9efe-492e-8232-a7070122586a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8996e4d-78f5-4304-b050-05bdf973b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11349aa6-8d82-4d24-848c-806408b0ddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5721d147-fa92-4982-8c79-1c7953ceaac5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01401743-a3d3-44d1-abc7-82b1591475ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe5f5ab-a605-451d-8200-ec02cdaaac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f6d52-85c9-4582-97ca-cabaaf00035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f142a1db-2268-4933-a7aa-fc7125f75d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e23fe52-5189-4107-a41d-c425d10d1193",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb66fe69-3326-4944-b3ff-0f2f8db66c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91745e02-5922-4095-b81a-6c45382831d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa361f1-7245-4bf0-a6de-8a19508ddd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55839cca-6f8b-4158-b12d-1d40893339af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2774151b-c083-4945-bc09-fd10aec4aaf4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487dbf64-27f7-421c-9b9c-a1175b8bd85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1643c4eb-9dd9-4a7f-a209-bdaac120bbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003d447a-5c3f-4815-a4cb-f77b834eeec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5f23c9-3dd5-4f16-8e8b-a15fb558901f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d242f87a-29c6-46ca-ae17-bbffa9a4ba7f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0168192-4f0b-4d40-bdb7-799262fa81fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4414dc-d56b-4a48-9287-d631c22754de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5e0689-3e26-4158-9416-2024ea2f6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd3689b-3c82-47ab-a6be-6c844e9b3022"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56833cc8-efe0-471a-ad5f-dc380e14840c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3018078-d085-4f05-8222-f9fe31f1cced",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc7aeb7-91cf-4d70-9d94-9ab03aa9bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bb92a854-5985-4260-8e87-b103a6eac0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e062278b-5cff-450a-9425-dd963a7eeaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f41ee4ee-1cfc-493d-b249-fc5cdb12e086"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "844cd671-4588-4f7e-83ef-df2f99d83f58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "473ba758-c4d8-4026-b2c6-59adad454658"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a9c3faa-1089-4920-9fa7-888609cca93a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "923dc282-00ce-4462-b27a-8a2034438875"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8f1ec89-defe-4f44-b3a4-1748ae94b937",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d207b015-cfdc-48fe-aba3-e1a7876de514"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f0a1d28-1fd3-47ef-8d4c-0e0ed0f1275a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f0008dd-91a0-4963-b7b7-16dc891978c0"
            }
          }
        ]
      },
      {
        "id": "8aea7d03-a712-4936-a1e3-5b6a0acb8997",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c9f1a63f-881d-4f0f-adb1-5afc094ffdba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68203aaa-5425-4ea8-a81f-740345cf3c47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d20944e-323b-44fe-81e7-5bd039f70ce4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38b94c2-928c-4564-aac6-637516489910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab3b810-0eed-446d-8680-944d2aa1dcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2e2916-d81a-43c1-a2de-fdcad87250a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "096e878d-4479-44ae-936c-f584ce31291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b5a4e8-c7f4-4a68-8446-bce99c48cb63",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16c766d-235e-4fc8-87b7-0140f9d1456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394ac87c-c775-4fbd-a5c2-9056e3597d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c71027-3c12-4ecd-8229-246dda93c57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9979bda3-6824-4467-917b-5cc0b44206e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c2d45f-ff7c-4214-a7aa-42be1f204b3b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a7f08a-1574-481a-a808-1ff1d720d902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1bd6a4-1831-41e3-9c41-894e1bc3eac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4fad7-088e-4edf-a579-295e679f7fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b041aa40-85fd-4fc2-9b3b-49dccbf842b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f01f9b5-0560-467e-9fed-fa4f22296fc7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1ce764-a0e5-48d8-bb71-ec4d9f94550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6222d630-a743-4dbd-a8fd-ee987c738b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9217ff7c-a45e-403d-bb8b-f61aef0dca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23247932-b50c-4aee-b602-eaa6f0379e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606b6841-3f50-4c15-b739-43e44999331d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8268dd92-f821-4509-a41a-ea2d8e42faf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71a583f-e6c5-436d-91ea-cd7088239f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace2cc77-987e-4803-8712-32d954adb4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96abd8a2-d2e3-46f6-8416-e38a687caf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd19e010-05bf-4c14-8327-a8a655e1a3ad",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a9b90-3710-4861-b8db-77057adf6eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c6e9b8-aa82-48d6-8779-023df9314edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2855e521-192e-4684-8f6a-8fa38ebbbfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d52d7b-86ba-4126-b7df-f6cec1a09c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292136be-a34c-446a-ac33-7432923f7ad9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937f0dc3-7d7b-4af9-b700-f43f61816b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bec0ab-f1b0-4771-a659-c07cb42a2e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42945500-6d0d-44f8-a371-bad9087a94a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b68aff4-8063-4796-bf93-78f69d03f311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413253cd-b4df-42fd-abe7-bbdc02d2649b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19070d02-243a-4dad-a1a9-357fc5667244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e0e4e8-60fc-4559-9d4a-2300e9d382d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d17265a-18c0-4d24-a799-1ad370755aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e1a972-4174-4691-8e22-28b5e996f65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8345fc9e-4b77-4f20-a1bf-89111f29ad7e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce18c367-912f-41be-bb85-bf61371ec061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acef43b3-c41b-49ea-93d7-c4bdf99f735d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc5f86a-38c4-47c9-a282-7fa282d4250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d027c8-727b-4e4b-8679-fe43766507a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6be3224-655e-469a-b005-2c30d73ba191",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376afb83-eaf0-448f-ae70-280eafd447b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9bc1cc-bc60-46ae-b200-a294f7f929f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e01bf3-fa04-45d0-9f53-aaf4e4e18ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6047ed4-01e9-49ee-8f42-ef5643ed854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ea660-3efb-4e00-af85-8a67bc24f151",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3084c052-1a32-42bd-8617-da138aab84a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f4ae4c-5039-4284-be2e-9e9714f7de26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b34d34b-95c3-401c-8604-38aadf7fd979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "82c78f93-733c-41c9-afd4-ebde6a65cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ad7aa3-b6e3-47ca-86b5-8402529f9bcd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c85e82-4323-40bc-9f13-3214abddf8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011c7920-b18b-425c-8034-9b956c4bfcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94b6d85-58c0-4e87-9309-3c15ab16c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19807bb3-ba42-4b88-b64a-f17ea9eb4909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdec916b-5e43-41b1-bd65-21eb26ef07f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a62d8f-dd41-446d-8e71-2d5be6bd8f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2600cb-03f8-4afc-bd95-1908296981da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa831f3-a03b-40b2-b421-ad14f3f78e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1355b2fc-7822-4f47-be5b-6c55ef7d4e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd961e1f-2f3d-4e76-8370-a9e46ef58369",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8a0a22-041a-4d79-b695-c7a3929c01cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9392c878-49fb-4382-bc77-e93bc92d34bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8724ac0a-4915-49b4-8e06-9de349d53871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee344c6c-9af2-49cd-ac78-610aeb8e60df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f3120-b245-46de-af0b-8360a3ec924a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fa0beb-c562-4916-8fed-29bbe6149680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024b8ced-2a5b-4cad-aeb4-8adc6f6862c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcfe37a-3242-47cd-8d50-746a7341299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4c333e-5cc2-442a-a738-b2105335462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ef0893-64bf-4ffc-9e4e-b29c27bb295f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3afe209-ad8e-42cf-852a-f99db6e216f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b67b5bb-967c-4a18-aa8d-d94538cf9f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150cb772-3579-4284-8c42-c59e14982211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6626a2b0-b318-4a30-87a5-5fcf1c2f3b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5d484b-7f28-4c1f-80c9-d3134cf1c870",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8a81f8-9e7d-4b24-9ca5-e83ec455f089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b4ead3-9d26-4387-82c8-8b694956e2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f402c6b3-f9d9-430f-8cfd-a70c61798335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b25c6e-bff8-4432-a57b-05bfe920515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbafe334-793a-4d22-9ee4-26554f054e71",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f22b7fb-2ad4-45eb-b373-8d9133dd018a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dde2e3e-e30d-4e2a-8a80-f082cc104367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f0baef-db34-49bf-9556-ea0293446323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f30c3d4-9fb3-4f98-a868-36390c39f2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507e5290-147b-47a8-b4b3-82422f90c565",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c68cdb2-1b4a-495e-bc78-363a32d3c585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50465233-b89f-47bd-8c7c-4278c819bfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5d606e-28aa-4a12-b8c7-104fc1170058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "662236a2-de6d-4801-98bc-42c264cb0b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3defd3a8-fd89-4833-86df-1135ea8ebac3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efeba98-342e-4a52-88fe-3f8b67c5bb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedec4cf-34c2-4620-b9d6-b43dd68ea3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759d2548-ae6c-4376-85f4-f2a20598db26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63093074-c6ea-44cc-862d-37f00131b289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a81b8-edad-4eed-8012-7beba86a3cc8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74856ef3-b54a-4f5c-873c-d463d1f06986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98799ef9-1595-41e3-9757-d44744a51383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a990d510-dbf8-4105-b943-210f2eeec5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c18f3f8-dd53-453a-ad74-1c6ba6906d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55886722-d24d-450f-ba1c-a78068ebded8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9ddd48-ec93-48b9-8a67-a1de70425ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa219a6-84c2-4c10-b7f3-c2b3237b8a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9bf6a-46ac-474f-ae1c-a0ec6d5b6050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2e294f-7bc1-4e80-a347-e18c976f2d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c459b0cd-8eb3-4299-be12-e458cd6bf258",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12d6ebb-0efb-4f9b-8251-7723b0dde94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd2023f-0848-48bf-af51-c5540ff06f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcb74c3-3c0f-4538-bc52-dd2ea8f5a96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aa98bf-8e00-4a08-81e1-b3b88bb9accb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc717cce-09bb-4e7c-bd6a-f6e9b253d4e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b54b49-ff06-4dd7-9516-9d38addcd033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f01954-27aa-48ba-b116-f5b1bec13f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e041dcd8-a240-432b-b351-4e62facc3054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fceed944-181d-412d-8b9c-282ba1abb091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c619090-98e1-433d-8015-58231aa4a639",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f56346a-e5c5-4d6e-be92-1919de53216e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89dc76c5-fe18-4aab-917e-7fd9a0d51a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7da6e3-65ae-43ef-aa92-4c44eefeb311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d040aa7c-daf7-4756-bae7-8bc772c33c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368a26f7-e845-4e6b-9ecb-a36675cdbdbc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557d13db-d3d5-47fc-9e19-52088b6ffdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bf8380-6dda-4b3f-86b7-bd0246614439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e4b2f0-5ee9-494e-809a-541159845582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f87cf37-781a-4bbb-a832-6176bb8bf8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6f2e33-46d1-4986-8034-ea16e4bd81c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b264394-0902-462f-8c29-68e292f1dd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65856dc7-8faa-4367-9fde-03ef7497f766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a33f35d-a9e5-41b2-8b49-95d682ff1f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8d2728-3d68-4a36-ad7c-ba8d99a832d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a19f1de-1783-43d8-8097-a418561a81c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeaf3eb-9408-492b-8c3f-0e9b0ae4eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e57560-fe93-4e15-acb0-e41a6a08954f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60caa08-9549-4374-8ab1-0cbc20275a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b399281-7956-4d73-bdd6-75ba1d1bd54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae90c09-af3a-460c-beb0-cf6bf7049e2e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51be9a59-ce7b-4647-b14f-1c53faa73557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42ef7e6-42b5-40f4-a14d-68d76dba236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e293d5-93b5-45ac-847c-f2e0b62eb6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee8c5da-0be9-45ed-ac62-df1f0ef996e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf08bb2-434d-4a2e-ae43-0c0b910a09c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a909a1-0e44-4a39-acad-dee676fc051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4a0fcf-33d1-46e9-bafd-6fba5672050c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152ed0ff-09e9-491c-bc9d-02c36aa6712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd3cc73-f0af-4043-85d1-0d7781db9738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571ad42d-1bed-47c5-9962-21a6b3f7968f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f21915-044c-42bf-baa3-23ee48d91ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e2793b-6e16-448f-8ab3-fa100a1fa2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d810f86b-1ece-4d14-8c26-dc1344343126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df3490e-1e72-4fcd-adf5-c944d05f4b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6f1891-4438-4bf9-884f-e6a0807ca881",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58d7464-af97-4c73-a6f1-28953341c78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265cd4b2-aeba-4a97-8dd3-98c36f491c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3c21d9-d9b0-4007-9606-3f6fcde80fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b098325-5c40-4c84-a5cb-9218977cd35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edf444f-a76e-415f-819b-e3c28ca33f80",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb63ad3-4fc9-459f-a3cb-5bb8e78e1ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cdf695-f6de-42b5-b42e-5c887db801e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dff38b-6d76-4063-814f-3f200a0da58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba156f4c-fa67-4e94-80fb-ce35632a9bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25fe036-c127-4cc5-8ce3-3fd6cb7c6dff",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26395e72-aed5-4cde-a266-45a15b32dc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e1d533-1f5e-4a88-842d-3f389739fa48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4114012a-13e9-4015-bb71-aa497720f0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c07268-1bde-475f-aa6b-827e625304c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bbfe1c-2211-4b0b-9b31-7446668e78b1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1908e80-4c84-4c45-9a91-dec2feab2f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79c061a-e11c-40fa-ba7f-166a569405f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d12e1a2-e8da-410f-9c48-147999f5f4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41df6dc-4fb6-4185-8317-af4b6e70c99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab0691-c2bb-44ce-8987-50a260d442c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c5cf7a-5267-483a-9851-10aabd49fe7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffca605-e7fb-47c5-9f00-46ec64c3cc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c568e0-b954-4afb-b221-42a9f0a7b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3188bc14-5354-466e-9852-ca3d5095a3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802cbe86-e1ab-4f13-a222-503ea47519f0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec0bfab-baa4-4efd-921b-21d2d0ab0de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c86ecc-25b8-474c-8598-d6c761e73803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf85432b-d4b7-4536-8f08-52842190c05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "674b56d9-0447-4e87-a551-c23073b8a6a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d828b748-b27a-4ea1-9ef8-09877b39084a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ecb72ab-14bd-421e-a074-ac7229d5e7c1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1fe702-643e-4c42-baa0-91b09957bd92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4d3258-ff25-4687-b99d-afbc56181b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477369ea-f80d-4ad6-9de7-4eba64fe0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf938451-af46-402d-a93b-9161d52a60a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8d87e73-ad9b-4f6d-9239-6823b9efca7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1500944c-71cc-4e12-b60e-0999ec344243"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b43d3a4e-d1b9-4bf0-ab99-4ec68be424a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e80ada94-e871-45aa-b067-e28b77e357e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e0999fb-b6c4-4dd2-9ef6-217257aff686",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "abd354ce-72ea-4136-a6a6-a52ea83ff877"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e732247d-bf0b-4421-9b73-a8e9c84d024d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34219bf2-b6bb-4cf0-963d-a4b80cbb8f1a"
            }
          }
        ]
      },
      {
        "id": "5e10c59f-fd66-4ac4-9e8e-3a3f7b4d46e4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0daf6751-c3f6-4b18-ad2e-9644271f47af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "162ae6d9-b71c-456a-a701-20868b0a02be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2cdd8057-e34b-4d00-a26f-b18e4372d38d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1accb603-9b82-4fce-a3f3-a70862bc35ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ff8d8c-8d92-43b0-9bc4-f36e625827f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13f3b76-7a29-48ab-9696-32a36bd0e783",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcd88d6-ee51-400a-bf63-859d85f45fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76776f2-0e76-49eb-b211-6d20536f6201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee193277-197c-4283-95a3-e75271aed226",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae50c13f-7a5c-4961-bc29-ab915095686c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967e4896-2e97-44a2-9a4b-2d04cc312a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6733b4f0-de75-46eb-b21e-7398a3ad8868",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d92a6f-8359-4e20-830d-cf020bcf417f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6486cc3-7de4-4332-b7bf-d928a0356873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774b5c7e-6c91-4989-b019-8fca7cb937c8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e4e93c-3df5-4322-b73a-d2958d751ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102be647-0583-46dd-9894-ef1733c56fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3efebfb-7f33-4a01-a8da-80127508cb6b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b81b0f-0760-48f8-a9a4-4f941b6a07e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af73322c-ca16-4857-9c0b-494a97095a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101c981-1317-481a-addf-ab9434cd8cfb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5bf7e8-f9a0-4148-a4ba-03fbdb349073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7682193b-5dc7-4ebe-a279-b60c3501e8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efba2cfe-935b-4686-b067-b959781a8fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d980c36-ec36-442d-9b4e-1a183234aa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189bc35d-ab74-427d-a9ee-db511cc64c84",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac83b7-1312-4029-835f-4a490dd1e103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244a16b7-5344-44a9-b1c7-872c2252a3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d1d0fb-80cb-4c76-966d-a1f202041c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa901bb-0cf9-44e0-8ac2-d27b07e80c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3780ef98-f894-470f-a8ea-8d37b90960c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9755a79-9e8c-4d0f-83d8-ee76ad3ff72f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02aa0d6-1eef-42a6-aa06-17da30b71ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97088f2-9960-4935-90f5-e1cc0fbdec81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7ba4d6-022f-447b-92b6-292f06e2a0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad07cdb2-0a60-4bef-9ae2-d786276e94b4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d9c1e0-236c-4aa4-8423-7891f37b0eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fea4e38-4937-450f-88c9-ff394b4a5e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a19bb34-174d-4e54-8685-74252aac9ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ae8ff4-22fe-4093-b082-ceeb89106b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21930adf-b9c7-4f2f-8a5f-978b5efe7025",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ceb3c1d-e05c-44f1-8588-63d6dc1a9ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c049f8-6ee2-47b9-80c2-6780024a53bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71770399-f38b-40a2-97f4-92c4406ac3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0c4b5a-e85a-4ff9-8149-7c4b647802be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3909735-f728-4048-8265-f4e275f71c6f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025a3765-8353-4b84-9196-4e694dcc539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c6d0ab-3cf0-4402-9a0d-53c34c5f2e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d80642-5bf3-4677-9fbd-afed6537a6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05bdc6c-9d6d-4a42-b68c-663ac2a75fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9fc926-f367-477c-aeff-a8bd859b0029",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfd3a79-286e-431c-a2e6-77c989fa804f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8576094d-d33d-42dc-9ad4-f540b3caee76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7154f375-951c-4b72-ab0a-d30b80d9e2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79dd995-25c3-4f4e-8eb4-f77d0028df8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf8003b-65af-4118-80c5-31b94cd1f8e1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f511fd-02e9-45e0-b8b5-31e4e3d33b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492a1ab5-56f7-4fea-a218-bd85dc3cdb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af097ca2-0c8a-4c72-a6e2-ef9c9c755f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa1d61d-02c1-4501-8958-1c252f58d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276b4cf0-a991-4772-91cb-83bcb68298f8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59907dcb-ddd3-49e0-b172-38e4943a6143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9009253-79f1-4e7a-a25e-81692b7cbb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb60a165-6776-4bb3-89b5-437dd4515c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c35f74-193e-4065-a4fe-11871d260e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd4f3fc-3a57-472a-93e4-3b983cabbb75",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c260d9-7d53-4209-b491-3d61b8872920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c987ca-9808-49b7-b0ea-d0c02312a5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7289ad-bf51-4fa4-97ad-2ef0c202cad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd9bf11-ec86-4cfd-ba4c-40188b47cca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14da808a-44df-48e0-b77d-946af008bbea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9aecb1-4cee-4483-a81b-1f7c505be3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d044ca0c-a088-429f-9e14-e587f645afab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02c6ec7-b7d7-4f6a-a4e6-55aefd27786e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea052507-f332-4fe7-ae6c-294db8d522b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6530b7-4565-4002-9528-1c1227b5e112",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e3fe9b-b211-4462-ac5c-0551ba83857e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df35de43-a46d-4fbe-9e46-c59f1e3fa179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34777e31-a99e-43cd-97f3-dd47ae69c3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2cb596-5ae1-4d77-8fd1-f109115f9d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80dae11-ced2-46c8-aa15-645565527cdc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40250ca5-a080-42c6-9dd2-67ec9f60db50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dea40e-dd97-4068-a6cb-cabe33170741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e56d8b-0153-4400-8bf0-77039703102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f91be81-60d3-4aaf-8377-73a96bb9afd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5acf93-ebee-440e-b5da-ba0626aca5ef",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89276e7c-6874-44ce-9cc6-94976f968535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59211b9f-1bdc-48b7-bd08-7ef679ba7a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350adc1c-80ca-4f34-9f42-0d8e8b5b2123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5774486-adfa-41ad-9db3-9bfa0873171a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea774e11-33d4-4179-ac40-4a60a89671f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d47232-38cf-4ac1-b1dd-be9254c32b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9da9da-8822-401d-9a7d-8b3c7d6d9c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bfc00e-3297-4f39-97eb-9492e2fc417b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277fd1f4-a224-4ebc-9a81-0f3302a35fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c12953-60cd-46a5-a6eb-b5fe35955b92",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd1f5de-dd22-4fe7-9be1-e4a8a7fdc777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379639c2-a0fb-4d54-ba0f-5551f77cdd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f74fd88-8ba5-4696-be84-317fc03c8a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d8481b-5426-4ae6-9a7e-fb08454b38e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed69db9-74e1-4872-b013-7ca4ac3a6fce",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b4e71f-a020-4f66-a3e9-64852bfd174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e98c4f-e0df-4487-8e00-e3840e2c9571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a4908a-98ba-410b-8d0a-0561b78b4363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e203c3-54ad-400a-9945-5d0a1e7b0fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149830d7-ff37-4503-a110-86151505b757",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad20c4cb-54b4-49a2-b0f2-fb2f27a7b259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf2c992-2445-40f4-b038-ea820c41d2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fac2872-dddb-4872-85c3-a06996af9b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b16d361-da2b-4c6c-856d-9737c16739fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a911e-910b-47ba-99a2-7babb5339b99",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842dcc15-dace-4ee6-a06f-d0be6184e117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614b48cd-fe7a-4586-8249-2a1ae18f52cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db04da6-e100-496f-b6b1-c0266d49fc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9242500-cd20-43ee-9ccc-cbc5e233edb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e77a879-0a16-4024-b7dd-11e7cc9af303",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16359367-78e5-4b13-b5eb-9006804dbdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9685c86-1533-4929-bba7-6861a921aeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e389cb2-3994-445f-8ca5-71e65501be2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73854c97-a1f2-49b4-8836-f96e5e075bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b79bb1-c356-4392-88d8-8e8b2c104f26",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b364115-3d2d-41a4-ac17-2871eac5fe6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cefd139e-ccae-4189-9180-bf46183fb614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40982bf2-3c20-497e-bf1f-c867bf202af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440506cb-f978-4922-9118-eeec3924ea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe860a1-52e7-4e97-bd4d-88302637b2b5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f12e4a-dfde-45de-bd9d-3b9cef8dc46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29551a64-a870-440e-982b-3a40512c541f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd38b5d6-46ae-48db-96ca-b4c9be732ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b1cce9-b980-40ab-aecc-86d3e3fece0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa98a23-7ab0-4730-b272-67578a9b5b36",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d85cc4d-7a8c-488b-a1f0-59c4111ef6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e38be5-ca48-4242-b5da-739ba48e5158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14a11b6-fe94-425f-979b-a260970ae67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f7d0287-ad20-4e13-ac59-9d942aed1a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7072db-a34e-4bf9-8d6e-2ad23a465cd6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea9747a-07f7-4a82-9aee-fcebf09dd6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ad79a4-9c63-4c40-8c4d-6de4f741561a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ff6cc5-521a-4892-850f-5c12bde834ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18aad20-72f5-41ac-92e0-a8a9c07ef62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaf1a3d-b1fa-4930-af99-def6485b9c05",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e713110-bee4-42ce-a557-6cc69e2fbb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b87cbb-41d8-4227-847a-1ab4f794229b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a96d7a-97da-4ade-a0e7-f8dbe97c0c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4568886f-1435-4da6-bbc0-f964e7a63981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc839ab8-9db1-4a5c-96eb-60dd68939066",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329f974a-17e9-4179-92a5-184588f3b123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529e9f1d-9084-4d04-8492-64d5a3324d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44083927-3ab0-4503-88c0-916a7d33fcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a0e483-9daa-4dbb-82dd-080ec9036358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550a27b6-e804-4ac6-8a69-c0f756804ba0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871f58eb-ee55-48ef-a0fe-01249bef5e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1779ee4-6dd9-4fc3-97b2-7caed17a143f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641c60cb-3ab7-4107-9862-ee91006575b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f092a6-fbe6-4277-8add-abb88968e321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f092331-f18d-4f75-a72a-2e8e6abc8800",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b2c27b-a9e9-4a90-a31b-e7c11181f15c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12ed604f-52cc-473c-9b8e-8e799c295f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce41ffba-8b7c-4b67-bafc-ff43ad48a905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e5d032-fd15-492e-bd19-26afa90a8127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ca79b8-3df3-4ed9-8f34-a04172d3a072",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf001f5-5005-419f-9242-44e0baf16c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e95528-451f-41da-acda-3dcfd7fc9e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fda1280-6a45-40da-b8c4-6b880d7019ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5dfcf8-0dc0-48dc-9d6d-f7ee320bab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00755bc2-214d-430e-8fa8-5bd4ddb0f510",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6817610-f849-4688-878e-296009343e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585cd7ee-1a6f-4bc2-b15c-d14acd4099cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377254ef-42fe-4120-8140-253400b6e200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ae0398-3fff-4dfb-a6c1-e4a44e0f6789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8e5e7b-1f73-49e3-947d-73c8c54d7d16",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6fc775-556b-44c8-8b53-c6abe4f8a68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ea2344-cca9-4968-9b78-13e7cee9243e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cf9449-605a-4321-a035-ad641af5a706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc92ba15-0cf7-466d-b4ab-1465faac2901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31daa7f9-65e2-4fc9-a794-570ad1ac1687",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b81812c-6710-4600-aba3-2a9343741c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09399875-da3e-4795-85ac-e6e29449a06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94cf2ba-d8a5-4836-8b62-d316e68bdc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4a6ebf-d145-4454-8161-6291a35f3ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6243852a-a223-4a54-bd98-1f6a58f5a488",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd66f39-a031-45d3-8b4a-2c40f6002fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64fc7bb-dd01-4edf-bc37-2dbd1d22c252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0824d452-f95a-47ca-ac8d-23aa21c26a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f53fe6c-6cbb-44f2-a67b-c2b2a41cd981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f6ded3-6d0d-47b5-a6b2-3a09c4a84721",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a339dc-2ad3-4a5b-98dc-b97a7a3b57b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6fcaab-2099-4ae0-b5fa-a659d9c65c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4877ef2-414f-4379-8865-1a01010d2f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df9f5e9-2cf5-4f87-ba5a-354ca22a7815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba90444-d761-4e4f-97a3-318621a8dfd8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930a3a53-5992-4bd8-a301-3bdefac0c27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f666b4-aede-4a22-b342-d5e006b0359b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611db272-3938-449b-9ab1-1de480d18e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be76a7d5-b6f6-4aa4-bab5-6e93a4481dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd81945-de03-4b2b-ad63-ecac950af291",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c5e81-0a89-4953-afea-d0118e612760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ea2335-24d0-46b1-8a4f-c80abec4aec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff6bdd7-e157-45a0-9aab-3d3f72e49de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b86a1b-52e4-419b-9b1b-cd6f48e4efeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cb0211-71a2-4843-bf5c-c55de7bd7452",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acac9cc2-5830-42fb-9afc-a98c0667632c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73462386-3b56-4f3a-b611-5d3295a5701e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c09a4-945f-41b2-b262-eb8eb2496940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db92bb9-322c-4e97-a97c-ce5fae938814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67e42a9-bbb2-4035-b479-5f346acd8b9e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1638983b-b251-4a2d-9ccf-c0e135001ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680df98a-9baf-4bb2-9fc6-0a0800aaae07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e08b467-a32d-476d-98c9-d4da5db4fdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd31f5d-ebcd-4194-a418-b93ccdae35b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8643b1c0-9aba-4550-9c81-d6186ab64fd7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af70978-2102-4451-9143-2104a954d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebbeb2a-34c3-4c0f-9c58-86af42e671ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4574b1e6-596f-4aee-835c-b5160fd597a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9a8882-7604-4424-9936-ce7cad7395ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65817407-90e9-41be-b85a-c4b554af378e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829a6372-bcf0-4c1e-b232-e27a391a06c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7807fd7b-1ce2-4057-a99b-9777c80c1c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac20c89a-d2a6-443e-91dd-1a8677383f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e308a83-4741-428a-b30c-f7871a732d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5725af-cb1e-41c9-a819-5d5dea931bb5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a91c7a-1a7f-44a2-af2c-535681ba71c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071c4405-9a9a-40c6-9c7f-304a61609a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f386d83-ce85-4bec-a583-b427f9628412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cc4d0f-0b52-44be-9714-5623241699a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbc30d0-3c8f-4c0c-9768-55e186bbcaec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed54e37-b944-47a3-b096-ca83016dbb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9b882e-d901-4978-a47a-d9acdbc01e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad9c0a-b0d6-444a-b244-3ccdbc2631d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f0e3b2-8fbc-4f17-a329-e8befd4c513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e8197b-9197-4034-b01f-f820379f4535",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2b482d-b055-4265-9b7a-25660874cc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47920bf6-8a0b-4973-874c-e71c6e4d01dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cd58c2-0d0d-48b3-a1aa-bbdaf5ea848d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d79498-cf2a-4e2e-bf9d-e588348e94c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467ff5ab-1a2c-4a28-b684-d548d3fb0fd1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a43d8e-be34-4ccc-a259-f192ffc4bc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b193af57-58c0-42f7-bed7-a848f593a42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f56a1-2994-46c8-9849-30eb632d8657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72668d92-2c04-4912-a664-f90db73ac0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f5f63-94bd-45b4-a890-1d18c75de6e2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a46a89-7d9b-4658-948d-0004af660013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f96dbae-38a4-4b09-8525-8dde3558afdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e27a19-ca19-4b18-a32c-123b4c398837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3c3ae4-007e-45ca-9fdc-cc2df4361963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df795f6-e2fb-4ef6-85cf-e907d6afa97a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce170da-6a5d-49f1-96f5-0986220633fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfd19e8-3048-477d-9b5b-95f51c5f66c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782995bd-ce4b-4f6f-89cb-8dc4a0bfd283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37519233-ab37-463f-aed0-ec06ac4eed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faab306c-264c-4143-98e4-bb814714c9ec",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c340fd53-3833-4220-99f6-39c60760be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cd548a-cf21-4881-99ee-cffad1e4159b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19440abc-9364-41f4-bdc6-7ef657a12b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a538c9-a842-40dc-93c3-8dcbe015dc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ada17e8-6762-41c0-9190-a5a4053055c7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96c01f6-fad0-4308-9898-7b6049694df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec52478-ab70-4c8e-a2e8-defe473fdf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372a81af-e5c6-447b-baa7-5ebc8c8565aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa94caac-c5e0-4ee6-a3ac-c76086d54ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba33b85-7ece-4165-8b32-c2465ed41273",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366fdd6a-d28a-401c-9924-b97056ac83cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa34f65-912f-4bb2-a995-fdb1dae5fbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21680ce-ea86-43ab-95f1-bac353a7dfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5577b1a-fdd6-4699-b68a-9dbf0232345a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fffcf8-a35c-473a-8bec-5496e7446d82",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71a3e70-693e-4adf-bec7-8dcde2b9bc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd12faa0-f343-423f-b4a2-8282b51600e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c68521-f9a5-4b82-989c-1f6f3e55282a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c44d989-1f02-4318-a2ff-00f895c75733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218404e9-03ba-4e68-9732-059bc6bcdfd3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb054fe-e71e-45b6-ae20-f10f22cdbcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5f229b-84a8-4d92-a75e-1a94ae1071ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7777083-bb5f-4e90-b9c2-d637b4c032e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c82690e-a7d3-4c96-93c5-e4147e152825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30a99b1-9872-441c-b1fc-3826b4a1e7c0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9b13d0-ac77-4348-9d7e-0e36fce2c803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb60c8b1-58ce-4ff6-adcc-4c4e205f39cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38976ef-3eca-4653-826b-b3ef774aecb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b044fbf6-54c3-4656-acbd-5101984d945f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07297ff3-e9c6-47f1-81c2-7b2fdd8146c8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dd5a8f-3318-4afa-8c66-521e597ddfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83598327-24a8-46a5-91c7-d12f9fea6be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c831e897-441b-411d-9e18-42f65bbc1615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e068ae7e-00e4-4c85-a601-aa4f80fcbaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231ea36b-283c-4ce2-80f9-8e971c21de03",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3724e093-9133-474b-b140-7c1d4afd623c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31bbcf05-a33a-466c-8124-a7a685bf84a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031652a7-88e0-4c0d-bb7a-3c469b234d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2ded9f-88c3-4add-b739-5deaa8731237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9255e1-0ba8-4fd3-9e6f-0b027944dbe5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745f3a23-41d5-405b-bd94-2449ef5bb015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f7296e-4e92-48e5-85e5-65818a91517c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9e1f1e-bb76-44e9-acff-10c717002b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fc1ea4-789f-48cb-bd19-992890d37bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be7caa1-b675-4e45-9fd7-46419cd018a5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46be0a03-3554-46fc-a9fd-56dac58a41c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd2d93a-ded5-4796-a4d1-16876359f3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847139b3-577a-4302-b4ba-95efb464a11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03781d7a-6039-4659-a750-f3a4ac1366fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ee801e-02f1-44b1-adee-e7db217a9b68",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f995bc9-2cba-4ccd-8afe-f81d5c392fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca181bc0-da9b-4f85-80c4-0254afdde735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b782022-bcee-4f99-b28d-7c6bf72c8484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b1e1e7-d591-47c4-af7f-ba61e0d81191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d103fd-6f5e-4284-a300-83a4211e6bd3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f3020b-314d-4421-b63f-a53fca9a51c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e7e32bd-6021-4075-a6a6-134fb85e63c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d519f9-7aa1-4ca8-9998-a58a9bc984a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad922246-e2e2-46a5-9bf6-3507a02f845f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a361097c-1f30-4054-8478-493f68f0ed92",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc725ad1-4268-4786-993a-d66f3ebe64e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4596ec38-0663-4068-a41f-4e952f77f92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dab9adf-6637-4bf5-ad33-c72300a2aa3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddee07cb-bcd4-4af8-ac87-7223e78ff24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2bd65-0c0f-4ae8-8790-d5f05255367d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae464739-848e-4733-9bc9-0e37d0d8483a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37f43b8-a8ff-498c-a602-2cd9f708f6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2da642-9f9b-4504-b278-5192dfed02f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9301cd5b-d795-4dca-b931-1b6b9b752be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932f4208-cbaa-47f8-8ca3-04824864b41c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c92062-2bbb-470a-88d0-692bf5e49cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81494557-52de-4afe-b874-96991767e130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260f8978-d5e0-4cf3-a4ea-7fa345c3d6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6e3bbb-c5a0-413e-adc3-e8e88f3db747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91787441-9812-42eb-9df5-a27094a68322",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b9b8db-e0ee-46fe-bbcb-e59f490b7e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfbc9eba-839b-47fb-b38a-9fe7a54af1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ccea56-0149-49ad-abc6-72c9428c97d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b191b01f-8ea3-43ef-8c23-a61478b78a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cd2f96-a696-45fc-b00f-874996caecc9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c50219-1ecd-4cb6-8057-0f83fec7e705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be575ec1-b79b-4c11-94ae-e819b6b26b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa9c549-7788-42b3-bcda-f05a92da786b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7ac521-18d4-4fdf-b339-cf96939b1f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84915b5-2d81-422a-afc7-cce44549e968",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0da757-3646-4605-919b-1634d04fa6b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f34c5d-d971-446e-aab6-323481acdef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4c9216-f4e6-480f-9323-a17c4367c60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fbcedd-d628-4c0f-9499-00e0f309a88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df39647-ceb5-451c-b2c5-14666c7835a6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f1a314-caf4-486c-aba2-0a6d04013ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f378a256-dc26-4543-93e2-d54b3a40055d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ccf911-3009-45a5-8564-3776798fe0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebedb7bf-3981-4ebc-8ad8-50d772e19ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd174a79-34c8-497e-a9de-010db26aae6f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43637ca5-ff1a-42dd-ad13-9a9c572d301d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71a2d28-acaa-4473-aae2-583ca6bd986b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e16e01-4fad-4ff2-a24d-164d82625d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62457165-0101-417d-8305-10f535438ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6009ab0-31a1-4cf0-a2c3-c357a5516b21",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04abb493-444a-4079-9e5b-219072b85e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef466c9f-f366-4615-9067-5d4ac7f8853d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144d0468-3023-4066-ab9e-4cce6220b635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18433337-f692-457d-bae8-74df78d8cc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56d5149-7471-4b76-992f-b86d45b8cf86",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb5b54e-2cc9-49ef-a046-e9c4c65fb9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a471e72-9261-42cb-8f54-feb6372761b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b295850-3dee-452a-92f1-7ad89a8a7dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d269a822-cd47-4080-bb28-3f49724a12c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defe631d-c017-4fea-9f03-c3ff6a20bdaa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9539bc40-e37c-4591-87bb-485ac240b429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7adb296-bb06-497f-846e-951359ff1d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4ddbba-e33e-4a98-be4a-d593ae77cbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0ae1c9-d9cd-4f51-b19a-a633bbcdb2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0345f0c5-df09-4cb7-8cf5-9f0448ad35e6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e198671-76b6-46a6-8a10-5f2112554d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dae64bc-7d30-49cb-b859-1a42bb792b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02907cbc-3f23-435f-8333-9b2c2bc55136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892ab3ce-0fda-4f73-aec2-d6a5a144b252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f260deb-7779-4f2e-975d-e2f4408b14a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335f26b-a61a-4dd9-9578-033644f1e6db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f5b1b3-c39f-40fc-a27f-2a5ace0dd7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de3c2aa-085b-44c6-8037-32e738d297b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8430115-06b8-4390-a0a2-a5cac4b95501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ffb754-82d6-40ba-9fa4-ee457f75c0d2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216daea1-4d9b-48bd-8f47-b5f091d0073e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28b8bcbc-3263-4eaf-8828-1eb814200f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135476b8-b4b9-4b04-9197-5e69d8acfbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a350449e-b10c-4ac5-a862-d8719595e0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea4837d-f02e-46b5-ab7a-5ff8f56468eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e3e574-8c43-46cc-9427-709a4da96296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b5fdc5-150e-4e12-8546-83e489a5dc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78feaf9-eb2b-42de-9d02-38400eb15d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdced84-e4ad-4fc6-a7fd-d6f1b846e8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fadd807-2d09-4403-a365-5728eafd9e65",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c54caf-176f-44d3-8d74-01d77d3a29d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35a8f67-ab66-4921-afa7-3758196ed692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881ffb09-0c6b-48fa-9372-f7b70b88a779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6ef78d-3cda-4353-bedc-238fd8e8a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83f5e90-ad77-48d5-a1e0-5578849c37a6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940498b3-b704-4132-880a-3291337d2355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23e35df-c853-4f8b-a4a4-48c36ba6d4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8635bf-e6a0-43b3-b290-892a23d1ba79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a86e09-08e7-4f64-8680-174f9c151a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89cd00d-5a6a-4975-b430-6e5871030484",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3672de1-21e4-4b8c-9707-3a09d944c014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf19498-4946-460b-8e59-2af0691beb46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0664170-f6ee-432c-ab88-cd71ace0f43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61ed811-6cbe-4e55-a09e-dd629d185e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8827cc00-d73e-4fd6-81e9-24b69d575c22",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc07ea27-7e9c-42e9-8757-97a64eabee5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8563a148-2873-44ae-9ed3-5786ac2672ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f17eb8c-02bd-471f-a176-73b31b11fd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733d704e-2e08-4dad-970d-788e713c5e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01e5f1-5ef9-4bad-b724-c35a2718d47f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12e7e9f-9160-4002-94e4-aa06d7a942cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd37cdf2-292e-4627-8d14-537287a63d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a737f40-dbef-4a0e-9531-ff25ca4bb582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04908d6-028c-4642-9a23-22ef888cf6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb631bf0-ccc3-4659-9c04-e8b2d32b68b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af8a1d-c39b-4e29-8eea-47bf9b5e5fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346d3020-f5e0-4db3-9acb-e60d8c31098d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2ae73d-cd0c-4630-ba0f-b3a41a9ae5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0287ba47-2915-491d-b165-15883f50c036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61167451-d7ec-4dee-b583-a40dc9cb33e8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41340bc-ca39-46c2-b0c9-1b1064391a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c942a505-1fc6-4db4-96f8-883e75d1084d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce673b-549b-4302-aee8-6d2dde7151d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50228fcf-f372-4986-a46d-7dd904ea3110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8adb47a-10bf-428b-88d6-f924e495f6f4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1990f75-6437-41a3-9be6-9f4b392bf037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e1dc20-3d8a-464e-971f-6a7e4099dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42561dc-7121-41a0-9438-a9edfbf9fed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efe0493-9e24-42a5-91b1-e8fe57544dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36be5ff7-43cf-46f8-bd5b-fab451ffa092",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadb7ca7-beb4-40de-ba1b-84987183ece9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d2140a4-a126-4aae-a49c-a2c0e8cc2fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e229baf2-14c3-4a51-9c79-c676fc6ef45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f2659c-8f0b-46dc-ad1c-d91bdd9a4a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3cebb9-5315-426b-9a83-06144d37acd7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334921b8-d541-4a4b-a179-1efb0476c6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f590efc-a65f-4a6f-af41-8cd799585343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5613e5-b7c3-440b-be1e-c184c59c4c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f370f2-1701-495a-ad10-de5a55564690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60ed28f-7613-49ea-ae62-d7e3614b6c62",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e44f6b8-02a0-413f-bfc4-b032f185e066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65717f39-c2ec-4c70-a3ad-569bd794f371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091d3fe2-4922-46d9-9664-2be97c8d12a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5331f05-e5e0-475e-90f8-2a338f8cf89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52038f4-0592-40a6-8cef-609c22af3775",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291c10ed-b0c0-487b-801b-bc9a45050a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd07738-f5fe-4bbc-8204-7c0788c083ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe08c7e1-c122-419c-a7da-ec0ce23a52ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8725ade4-77ad-4396-961e-7bae902eaa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ef0a04-4478-44ad-aa71-bd95e8198f91",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ab2c44-88de-4ab7-94cd-6ec8b483001d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e509b8b3-a3da-4e82-a3cb-4ec366ccb456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbb6286-37cf-4e35-8dbb-5021798588a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a476f1e5-7c85-4e96-b557-62cb6052e89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd16da08-fb6d-49c2-86a6-964acdf0be08",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b3cff0-2219-443a-b67e-92db2fd91dd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808cf504-81c8-4aca-98a6-c92582488ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61fd952-467a-49a0-92bf-66c75cdcf6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a91f5dd-5568-42f3-9a3c-7292b6e90338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9318fd-301d-44ba-92b6-7990e8030fe3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb53e2c-a7ee-4603-89da-82f4e5d0f11f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d4b1656-8248-4da0-a809-3aeb8bc6ee9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05532ca5-c9ae-43b1-afe8-5b5083897c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d532484-77d2-4992-b1bd-ada62abaf268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02642b89-0358-4d40-a4b5-4013f00a3756",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64bd2de-72f5-4f31-bb78-23be5d731c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "397cbd78-7f7d-46d3-a77d-503cf1734b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7948c9-fdd5-4491-955c-1ba60413b9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82044119-e3b2-4947-aa50-67f8dfb4f8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5601603-4196-440c-95f3-cf48497b2957",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5eb501-d853-4739-aac0-375c697ded11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31790d30-6ff5-493f-830f-fe03c257988e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6c6942-17f5-4990-b5c5-50aa03f1bb2a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3298071b-6e4d-41b6-acb0-c31508a3649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b53f948-3519-4fda-9a29-a4a830dd9ee1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c56f8bd-00dc-4c83-99a8-bcd7e8d32294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578efdce-d89b-4fe2-9cb3-d31cf1bf2b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482abed0-3baf-4373-aa9e-1920a58bcf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce3250a-9400-482a-9704-dab46b0df8dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "741eeef4-dfc1-46d2-b01e-2f9b15d4c64a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c0ee701-362c-4148-9555-3ae4ebe94088"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1eb992e-1213-4077-83cd-707b9c8db510",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1221221-71c5-4f06-8e4a-67fb0eb1a9fc"
                    }
                  }
                ]
              },
              {
                "id": "e38452bd-9751-4a87-9cef-325b676e4ec3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68b317d7-029d-442b-87ba-89df41afb931",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac25694-85b7-43bb-a181-5ff3455bcaf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5727031a-438b-4888-b79f-5286a29a323b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d439597-ef3a-433a-9f03-6a170434fbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f05dd11-e28e-4739-b4f9-de5e6c231409"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac4906c-39f8-4285-94d0-29b87b1bbf8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "110db206-7803-4a99-93cd-1994e83aa50d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1659190-07e0-4c18-8d05-13a298f9b758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de52bf50-0da7-48fb-92b9-1fe648359944"
                    }
                  }
                ]
              },
              {
                "id": "a3e38a9a-f4b0-4993-a027-b3c45eea286f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab52c47f-f3ac-424b-94d5-e19d3f238a30",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9652c363-3d29-4e90-bf2c-26adb2cf97a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "37b0d8eb-9c06-4073-876c-32c24154fb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1cdfa-fc7a-45bd-abdf-7e1f1450317b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4814fb02-5dff-4b21-9887-a945c76beb3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "44429973-0c50-4ec6-80eb-0dc9bf6899b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbe56e16-ce46-47b3-ab76-a5db764996cd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "486b1f90-f1fe-4a35-a085-913acac626dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6debc28f-82f5-43a3-a641-074ec6147965"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "613017f7-60d0-4098-a3bb-0f426192159b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20a9146e-225d-4c4e-bc72-fb33aff33744"
                    }
                  }
                ]
              },
              {
                "id": "3be3bec5-d685-4721-8233-b8d433b6acd7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41bf963a-c1fa-4558-ac28-135806d66ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92335f1b-3936-473b-b6e8-8f01eff2dcef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e5220f1-e2ad-454b-9bdf-bf78993c8b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb658cc-c9e5-42fa-879a-d713a13b90b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2a39629-9344-48b0-be9c-ceaeab33f462",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4f662380-ea6e-40f6-ae98-96b2927d7ed3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c65ab413-f024-42f6-b2c5-35e35a91e974",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ecd27b2-a33b-4521-8665-1af8230cc6d2"
            }
          }
        ]
      },
      {
        "id": "4a65d684-b005-41d0-80ae-456eaa3635d9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "02589c9f-b2a8-4d33-9839-518d04fd6dc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94c06d1f-9a28-4aee-a625-715aa71236d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e201245e-5e4f-4c66-b978-9a0754cb6611",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851e9cad-0e97-4ad2-9883-84fa24a5fb15",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62e1eaf1-d007-4f40-8f0d-c97b5f92040c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9708dd15-4f71-45af-8920-2e0f6b67400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e79008b-0e75-4921-b44e-26aa201bcfc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff2ee605-7572-401e-9eeb-186dbe5cb0be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a0efdfb-f3ef-403b-ad65-7d508c443b09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1d09454-2a6c-443b-b18f-987ac5b4dc00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7314b9ee-4bd6-401c-8bdf-fe9e7151c15d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f680927-926c-4110-b824-330cc8881312",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f2e3281f-7bf0-426e-8607-54615b22e86c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50a641cf-6a86-459c-a367-31e39918fba7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "888a8bed-9d6e-4f5a-9a39-dcba27d41e44"
            }
          }
        ]
      },
      {
        "id": "77394d78-7a2b-40cd-96bf-41c715b71dfb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4a6bf193-ca29-462e-a058-e1709f56f3d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7fb720f-0b19-4162-b4b1-32880bc928ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92d06d0c-4600-4c3b-a0bb-a99f5702813c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6413894f-d9a0-4fb9-8796-2e5c5efb9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f72ccfd-f91c-4a75-8614-a8d5409008a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0696ca-18f6-40be-96a5-dd98085e3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71198f0f-e305-425f-9c10-bd354857eb56"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e53e563-e1af-40ea-bdeb-544683f40d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc7eb198-a73b-4822-91a0-c7a9cbe891bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bc94f16-7792-4209-9b68-038b7d9dc097",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7375f949-1117-4749-a1e5-1bfbdeaa2c5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae405985-7839-4a2f-b1d9-2cc8ca815587",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d0815f2-08b4-4743-8cee-963156887382"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d68dcc8-12cc-49ca-a43a-24a2195026b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09787640-bee7-443a-8a67-5231878fdf4b"
            }
          }
        ]
      },
      {
        "id": "77208735-cf3c-448a-812e-b164347feddb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ee68a5b6-d504-4100-b9ab-0b6f0d3e8f4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d773549a-b356-44a4-9b23-4025dde00452",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ee032fe-6177-48d6-a181-63e5efbbae10",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5956a10b-40b7-4b1d-b1c9-58567427605f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd730329-107e-496e-be3a-72c69dac73d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e7d20f-4541-4327-bdc8-94a222051613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d80f3e48-269e-43ca-b3c4-dc3fb88f461e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdb20c9a-57c9-4803-bf01-c90d60644c73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e4b9be3-5d76-47f2-bf6f-0292b5096406"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0d31cf1-2a42-4b03-9750-494fc14dbc48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58301971-599f-4562-9f92-21df562ada03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "654e2b18-efc4-49fc-87d0-eab7a8e43fae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cfcfca8-a4a0-41d4-b0c6-7ed339a846f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46c40963-2a9b-41f7-9ea1-0c6a05a2c9fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10a8a216-a311-44a9-a2a4-29491bd61156"
            }
          }
        ]
      },
      {
        "id": "493fa9bd-e216-4aef-bf4b-78c774ff358e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c5ef71d-0c79-4120-aa71-1651564e0459",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7b81a26-8216-4b5f-80d1-909c5cc7019c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c293a135-8000-4602-a9e9-ad9f7d3efe00",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "383b7a65-f70e-4b1c-9085-25e3de3625d9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c530a912-aaec-4960-84b4-c943d959794f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.466666666666676,
      "responseMin": 20,
      "responseMax": 375,
      "responseSd": 32.28616200959694,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703118931491,
      "completed": 1703118956887
    },
    "executions": [
      {
        "id": "e12bc889-60f9-4624-9f3e-24f3d19ad306",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb666798-d722-4908-9418-da1f7894dff1",
          "httpRequestId": "11f8a79a-9f57-4d39-93e3-59458e1c18ce"
        },
        "item": {
          "id": "e12bc889-60f9-4624-9f3e-24f3d19ad306",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3a49959f-ce7d-4d77-a427-685b4a02a2d3",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "141075a0-0fcd-44e1-aeb4-428ef3914b5b",
        "cursor": {
          "ref": "c81efd3f-480f-4919-81af-61436b35972c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c4e68aa1-fafd-4076-8f27-b5f84238080a"
        },
        "item": {
          "id": "141075a0-0fcd-44e1-aeb4-428ef3914b5b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9a993c5b-cb8c-4ae8-9398-88d645260134",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "1aefac04-1b42-4703-b409-055beace2e21",
        "cursor": {
          "ref": "088d4638-8c43-45e1-82f6-069e99903198",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "47afc969-38ce-4201-b132-57e6bfaacfe7"
        },
        "item": {
          "id": "1aefac04-1b42-4703-b409-055beace2e21",
          "name": "did_json"
        },
        "response": {
          "id": "4628a50d-4657-4925-9da9-10dc9be50914",
          "status": "OK",
          "code": 200,
          "responseTime": 199,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb723451-f84c-4812-b91f-841f06b8b78d",
        "cursor": {
          "ref": "46e4a217-08c2-41e3-a994-8ef78e13c5b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d21b930b-b66e-4363-b528-ca0d7bb621ac"
        },
        "item": {
          "id": "cb723451-f84c-4812-b91f-841f06b8b78d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a91b7c63-6af0-49ef-bb61-81986cf44cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb723451-f84c-4812-b91f-841f06b8b78d",
        "cursor": {
          "ref": "46e4a217-08c2-41e3-a994-8ef78e13c5b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d21b930b-b66e-4363-b528-ca0d7bb621ac"
        },
        "item": {
          "id": "cb723451-f84c-4812-b91f-841f06b8b78d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a91b7c63-6af0-49ef-bb61-81986cf44cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd80a2fd-3216-45b7-8e43-b7126bd236db",
        "cursor": {
          "ref": "a992aac2-bf6d-4ffc-a84d-99f3a0d4742b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1fdbfbab-eb66-4a15-b8b8-c9298a7078b0"
        },
        "item": {
          "id": "cd80a2fd-3216-45b7-8e43-b7126bd236db",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e4453e0f-e150-4cf7-a34d-656d179e22b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 107,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091e0de3-7c74-45c0-89ca-ea246747d073",
        "cursor": {
          "ref": "4235aff8-9da4-45ca-8ca8-e68620d25477",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "605a319e-a22f-45d8-9744-c7a5b6711a70"
        },
        "item": {
          "id": "091e0de3-7c74-45c0-89ca-ea246747d073",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "745408af-1070-45d9-8d0e-a867680d4bac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144cba73-5fdd-4f10-8d5f-ff2ebadbada9",
        "cursor": {
          "ref": "8459b261-3bf4-4f1e-b612-cdea04a915f7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eac2cbac-ed37-411d-863d-110faeca04a7"
        },
        "item": {
          "id": "144cba73-5fdd-4f10-8d5f-ff2ebadbada9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "80928d01-2324-48de-a341-f58c042f4412",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438c2b99-1b4d-4307-92c3-a5c133f67664",
        "cursor": {
          "ref": "97c7008d-4335-4a5b-9c37-8376646cf746",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1447398f-3684-459f-bf00-e5ca99fb956f"
        },
        "item": {
          "id": "438c2b99-1b4d-4307-92c3-a5c133f67664",
          "name": "identifiers"
        },
        "response": {
          "id": "4dd00def-4f28-446c-83fc-af7ed9e361b4",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe6331f-a9f0-4cd2-9208-da991947a00d",
        "cursor": {
          "ref": "aa54deca-5926-4116-9340-7e511de2ee26",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7d9f87b8-105b-4363-8495-3b733c2fd01c"
        },
        "item": {
          "id": "cfe6331f-a9f0-4cd2-9208-da991947a00d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3307f49d-600c-4d1a-9986-0ca355acf444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264f9e8a-4b4f-4dbf-8aa3-cfe2fbf2e2cf",
        "cursor": {
          "ref": "e475e793-98be-4a2a-ba6a-c1bbf7942125",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "df00b587-1f60-4b7b-bd8a-5375a9009b87"
        },
        "item": {
          "id": "264f9e8a-4b4f-4dbf-8aa3-cfe2fbf2e2cf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d4a3f16a-12d1-49f0-a710-28b8fb6fe268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaade53-1ca1-4125-9825-130380a1eec6",
        "cursor": {
          "ref": "ea771c81-e371-4566-a218-d9bdeae36470",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4ab4f97-de18-4aa6-aabe-507ecd0bc30d"
        },
        "item": {
          "id": "eeaade53-1ca1-4125-9825-130380a1eec6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "98a571da-bc46-42b7-9efa-8ab1cbeecc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a139ea-dd48-4def-bc93-30e80748c522",
        "cursor": {
          "ref": "a097c143-3084-4862-a83b-602844e3eeda",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b7d50eef-8757-4743-ab86-db418dd3bce6"
        },
        "item": {
          "id": "33a139ea-dd48-4def-bc93-30e80748c522",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25f811b4-357b-486d-810c-6d55e780809c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78451ba-ee80-44e5-894c-3363d9d2c136",
        "cursor": {
          "ref": "1d96fe56-90c7-453d-9278-caf740d0ca29",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6cdcb5cc-dd23-490d-b21d-a896a2569d96"
        },
        "item": {
          "id": "f78451ba-ee80-44e5-894c-3363d9d2c136",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "98fb8a84-db97-4805-96ae-f520db59e48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a2cad4-3bdf-43b9-bf01-ba92b005263d",
        "cursor": {
          "ref": "f9dbd571-a69f-4b53-b561-0a906f9c153b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5f559971-08a6-48e9-9080-edaeb1f5f915"
        },
        "item": {
          "id": "21a2cad4-3bdf-43b9-bf01-ba92b005263d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9375ae7e-5f81-4e2b-bd7c-68b3bedc0355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc5e99a-1572-4037-b7cc-cbac854915d9",
        "cursor": {
          "ref": "56d192d3-0b2f-4364-b6f6-86602f10a500",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fbcfdc3a-d84c-4549-b347-2b0306bda654"
        },
        "item": {
          "id": "1dc5e99a-1572-4037-b7cc-cbac854915d9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "50818cc9-1f6b-44a3-a250-b3c98ed679e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5207fdd0-fcac-4c44-82a8-5de86b189147",
        "cursor": {
          "ref": "480997e3-c1ba-4092-b7b3-7375f62f7ac6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "77d0c596-6590-492a-83e8-f708c2cec3be"
        },
        "item": {
          "id": "5207fdd0-fcac-4c44-82a8-5de86b189147",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ccc14879-f337-4653-b64a-8f36c46bb6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b50c8-5ab9-4564-b427-d0ab95389478",
        "cursor": {
          "ref": "2c328b50-d5ac-49b5-b6c6-d799572af032",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35184533-1aaf-477b-ae66-09f0a7422e5a"
        },
        "item": {
          "id": "6e4b50c8-5ab9-4564-b427-d0ab95389478",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "23e64682-0d76-4d0a-a0b0-bffbc5e4c327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb5e2c6-dbfc-4860-934c-63a6a88ef40b",
        "cursor": {
          "ref": "35b5aa7b-6ce6-4c28-af4e-9c6fbac1b7b1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f4387a49-e1d8-4505-9a7f-2d42749d06fe"
        },
        "item": {
          "id": "bbb5e2c6-dbfc-4860-934c-63a6a88ef40b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "18da8756-1307-4bac-93e2-0bd0707cac0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bebfab-b496-4ede-a4d1-97d0b0e79374",
        "cursor": {
          "ref": "acdf0893-cfa1-4517-b835-cacfbfade3ed",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e854e6ff-d6a3-4758-a817-4739c89f1765"
        },
        "item": {
          "id": "a0bebfab-b496-4ede-a4d1-97d0b0e79374",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4af6cf50-efe4-4651-a6df-08a743148a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ca26c8-ae88-44ee-8957-cd2090f537d0",
        "cursor": {
          "ref": "f9a21b60-cd07-426d-894c-9d9c6f1a4ef6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1c3aea66-539a-41fb-8230-6f9b13eb005e"
        },
        "item": {
          "id": "b9ca26c8-ae88-44ee-8957-cd2090f537d0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1d3c3342-d311-405d-9265-47f7e3ab38dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1a46e8-8082-4f66-a521-0c3530039b9d",
        "cursor": {
          "ref": "f79ea7dc-16cf-4918-ba3e-f4187eb6da17",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c9f10a11-9384-400a-9043-70ea1ec0c091"
        },
        "item": {
          "id": "7b1a46e8-8082-4f66-a521-0c3530039b9d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f88f589f-214c-42be-b3ae-1c90a80e972e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eeed97-ea7c-4ede-a959-12a6559e5e56",
        "cursor": {
          "ref": "a365897a-db93-4b90-8b11-fd92880059e4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be3fd10b-4a54-4bf0-a818-f56f857a8370"
        },
        "item": {
          "id": "e0eeed97-ea7c-4ede-a959-12a6559e5e56",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "40e41ffa-9c71-41c8-abf4-ef771aa57f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737beddc-9ecd-43ea-a86d-4f06009056c1",
        "cursor": {
          "ref": "b7be3f0e-c1b7-483a-9bcd-943f7c16367d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3a98ee99-47ec-44c7-9806-b26f2e6a46c3"
        },
        "item": {
          "id": "737beddc-9ecd-43ea-a86d-4f06009056c1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5f34c27e-240d-4dc7-b04a-6e2618cea745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0fb1d0-ce23-458c-b829-6f5b7766b1e7",
        "cursor": {
          "ref": "a7f7ff5e-fa95-4f7e-b26a-35ef92a8b3ce",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3b608917-db74-4f84-a159-5066e5d9872f"
        },
        "item": {
          "id": "4a0fb1d0-ce23-458c-b829-6f5b7766b1e7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bc35c769-cde9-4807-9b43-bbe29a094de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f33785-22d0-407a-805e-1f9a422aadfe",
        "cursor": {
          "ref": "e95e6a2c-ebf1-4b63-b57f-d03d37774884",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7525fcce-c350-4da0-8212-6057e29eb071"
        },
        "item": {
          "id": "90f33785-22d0-407a-805e-1f9a422aadfe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "250b9992-8550-4c2b-bbc5-dbb6a3322a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ebaffd-6837-4266-8078-aea149940404",
        "cursor": {
          "ref": "a9a8d815-3067-47f0-a77d-40ff9170f29e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e7213877-504e-433a-bc67-f3d13ec61b3d"
        },
        "item": {
          "id": "42ebaffd-6837-4266-8078-aea149940404",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "136704ed-5825-41b0-a15e-9362ad5fe1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab00a67-792d-41eb-baca-ab2e420a3516",
        "cursor": {
          "ref": "2e23e38d-d28b-49ef-9766-71306fd6734c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "15e4d568-4ec8-4caf-af9a-a56bb35c625b"
        },
        "item": {
          "id": "5ab00a67-792d-41eb-baca-ab2e420a3516",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b2af2b18-a463-4b1b-b561-50a024b2fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6214c03c-529a-47f0-ba0d-728603cbe4e5",
        "cursor": {
          "ref": "7b58dc9b-03bb-41d8-92f2-18171f4a8b83",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1b38bbd8-6dc8-42f0-a6f7-ba71d70a069f"
        },
        "item": {
          "id": "6214c03c-529a-47f0-ba0d-728603cbe4e5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3c52b3c4-96d1-4b8c-ba21-7141438b7537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b5e67c-9c64-45d8-b922-27bf64dd64d7",
        "cursor": {
          "ref": "0b61a4ae-ac15-43e3-8c17-5a31b6c78fbc",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c6ceeecb-59fd-4bab-a8c3-972b2da4a8b0"
        },
        "item": {
          "id": "68b5e67c-9c64-45d8-b922-27bf64dd64d7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "98e6bc6e-9160-4ceb-bca0-0f76966f79e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18445b3d-a447-4892-9fa0-05d631db7677",
        "cursor": {
          "ref": "9ccd9282-65c3-4f3b-b802-46163deb6510",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0b66facb-f7e4-4484-9633-de4141aaf1bd"
        },
        "item": {
          "id": "18445b3d-a447-4892-9fa0-05d631db7677",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8ed432e9-893a-4f56-84ae-d5f83891c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c825dd71-82e5-4b83-8ad9-eb8d04391843",
        "cursor": {
          "ref": "62fc1b45-e50a-4b89-b4a5-2c3776a308c2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "81dd7eef-b122-4c39-816e-c3e36a897f78"
        },
        "item": {
          "id": "c825dd71-82e5-4b83-8ad9-eb8d04391843",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6de85257-9a3b-4554-a5b0-793b64b5477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27c335f-ad24-43a4-9b86-f05e415ff91f",
        "cursor": {
          "ref": "0ec1e16b-dafb-43c2-a950-270e50ba6891",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fe6c6561-ba5c-46b1-804e-f6a701072777"
        },
        "item": {
          "id": "b27c335f-ad24-43a4-9b86-f05e415ff91f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e5369f7-b8bf-46fb-b32d-3f82a5cbca9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097a2ad2-90d4-4951-988d-b29f7e4d4411",
        "cursor": {
          "ref": "34144ae8-0ba6-41f6-b650-774fe6b10fbe",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cc20c7f2-00f7-4756-b219-afbeb1861d19"
        },
        "item": {
          "id": "097a2ad2-90d4-4951-988d-b29f7e4d4411",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cb105254-b1da-4a5a-af8f-46ae5406b922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beffb3a-7902-4637-9ff6-9acdb4aa1291",
        "cursor": {
          "ref": "f1338f5d-20ec-4386-a598-f362e3ef37b6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "67408cc3-6c11-4519-a5ea-7f6f31d5aaec"
        },
        "item": {
          "id": "7beffb3a-7902-4637-9ff6-9acdb4aa1291",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6e4f6cc7-4ca0-41d9-b855-a7a702222bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b987f-2b74-4a5a-acd2-64b43b8e4d32",
        "cursor": {
          "ref": "c0740117-acb1-4f4f-9773-54dc64175d0a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "614068e3-1007-4913-83c9-6212c793d183"
        },
        "item": {
          "id": "c08b987f-2b74-4a5a-acd2-64b43b8e4d32",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "50007b93-1118-49e1-93ba-9816056798c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac6ddcc-1117-4036-8ab2-013f7683c852",
        "cursor": {
          "ref": "3704d2e9-e43d-484d-9e31-05b83f50e84f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9f04d71b-a476-41da-8dc3-70c5965b95b8"
        },
        "item": {
          "id": "4ac6ddcc-1117-4036-8ab2-013f7683c852",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2f953ea3-10e9-4c95-9b41-dccd936a3055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82737b87-022a-493a-8514-cb30a47d2f54",
        "cursor": {
          "ref": "1d4750f6-b11e-4ae2-b514-c7b44d00e365",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27d3fc57-a398-4707-bf86-9ac9e581ec91"
        },
        "item": {
          "id": "82737b87-022a-493a-8514-cb30a47d2f54",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3d9b15b7-8f4f-405b-9e80-1490054cad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27c08c-6206-45f5-bbad-0dc22247d4c0",
        "cursor": {
          "ref": "515f50f5-f445-4d7e-8a25-4602d83e86cf",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3a8bcd09-14f6-401e-bec5-2bbf262e89ec"
        },
        "item": {
          "id": "1b27c08c-6206-45f5-bbad-0dc22247d4c0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f75c14bc-d328-4c63-9c36-4389b95afdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc33c319-800a-4fb9-85e2-f42d36ca99ea",
        "cursor": {
          "ref": "b310640c-2c0f-4df6-8eed-41e9dd3b49ef",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ef67ab2f-0e1f-4fc8-9a74-d7305a89cc47"
        },
        "item": {
          "id": "fc33c319-800a-4fb9-85e2-f42d36ca99ea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9773ae06-9dcc-48d6-80cb-40e1c9ab3c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef06df45-7999-4de9-98e2-70230935643f",
        "cursor": {
          "ref": "6ad522a3-8385-4b5e-b109-56d8129e5f27",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "20794467-1a1d-4602-82d0-5c8c6553eed0"
        },
        "item": {
          "id": "ef06df45-7999-4de9-98e2-70230935643f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "34374666-0a93-48cd-8072-2bb10a4768ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3663213f-fe71-4175-82de-c0fa2b9ca893",
        "cursor": {
          "ref": "3574a564-ccd8-4772-95cc-196878bf360b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6d5c6111-d089-40c0-8ad0-eb9461cf2e5b"
        },
        "item": {
          "id": "3663213f-fe71-4175-82de-c0fa2b9ca893",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "05d4f439-1221-469e-84ce-526974693891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae044e8-1981-4507-ac65-5c60a2ff78af",
        "cursor": {
          "ref": "c9d2a35b-a909-43a5-b938-7f05428201a0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1fe7ffe1-0442-44e2-9e3e-5b4ad8203f71"
        },
        "item": {
          "id": "0ae044e8-1981-4507-ac65-5c60a2ff78af",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2c276ea0-42ef-4292-8638-a753c5ecedbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681fd95e-d16a-4c30-9da8-b2dcc12b8292",
        "cursor": {
          "ref": "01684418-914a-4df4-b682-bb22d942e076",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e11e42aa-da3f-4d32-927e-1ce0b535c636"
        },
        "item": {
          "id": "681fd95e-d16a-4c30-9da8-b2dcc12b8292",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b1e8adf1-ab59-4dcf-ad4c-496a3dff5812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c094a0f3-b945-45f6-85e9-14d27bb2a698",
        "cursor": {
          "ref": "e20e2ae5-313d-4477-9d26-951784fbc917",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ddc675a-5c7d-4a2b-ac68-e30a14103cd2"
        },
        "item": {
          "id": "c094a0f3-b945-45f6-85e9-14d27bb2a698",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1199f8da-cc9a-4460-b7c0-59e748cbc9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bfd66e-1db8-49dd-bdfd-c7f8ef78bbd5",
        "cursor": {
          "ref": "19e63399-f55e-4d54-905f-fd8ea332f001",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "571d6266-780a-42dd-af3f-a630a31fe637"
        },
        "item": {
          "id": "b8bfd66e-1db8-49dd-bdfd-c7f8ef78bbd5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f248bcc6-fd52-4078-b874-85aa7f63ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107abf8-8d40-471f-b6d5-a5632e22cf6a",
        "cursor": {
          "ref": "fe182c4e-0438-4c00-ad4c-f9ca8d0c0a0f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e32c061e-58e4-4e3e-9ae7-ac9c3d636454"
        },
        "item": {
          "id": "c107abf8-8d40-471f-b6d5-a5632e22cf6a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "abce9606-cb0e-48dd-a8b7-5221cad21af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb903cd-759c-485c-81e6-aef39f489f17",
        "cursor": {
          "ref": "76e4767c-afe2-49c6-a0a9-7ce3f0548175",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "38e7e282-fe69-49ef-863d-9fa5e076d683"
        },
        "item": {
          "id": "5cb903cd-759c-485c-81e6-aef39f489f17",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "43416d32-e780-4675-84b0-5e2e7e999228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f5ba91-3ab7-4cfc-be63-40caac4690db",
        "cursor": {
          "ref": "6fac1597-611b-4e53-8764-f62d6f6dafef",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b1b49695-c514-46fa-bd7a-29c02acd432a"
        },
        "item": {
          "id": "b9f5ba91-3ab7-4cfc-be63-40caac4690db",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6104d8a7-eb52-4a53-9eda-32c745c29301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12f425f-9f37-4244-9a5e-b4ff7e332741",
        "cursor": {
          "ref": "076f5779-0a18-4a22-a656-1bfbf4ad5744",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "70e0f568-c2db-43e3-9a5e-8382eede2acd"
        },
        "item": {
          "id": "f12f425f-9f37-4244-9a5e-b4ff7e332741",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fc8267c2-4936-4aec-92f1-0ce9780652d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1647fc05-f368-4549-92c5-61d3f374e23f",
        "cursor": {
          "ref": "bc5e4ab7-48bf-41a5-81b9-5f9a0c1536ab",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1543e711-64c2-4dea-af16-a398fc5fa430"
        },
        "item": {
          "id": "1647fc05-f368-4549-92c5-61d3f374e23f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "58f33ed3-4fbf-4f69-b930-70a942042a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e573bbe-81e9-47d7-8b67-4c53ad1f1433",
        "cursor": {
          "ref": "b7d24fb7-b50b-4de0-a90b-c60d36f1f8d4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d169b7e1-2ff8-4c3d-b457-599b3d55beca"
        },
        "item": {
          "id": "2e573bbe-81e9-47d7-8b67-4c53ad1f1433",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "556876fa-4ba7-41f6-ac90-76a4c06d4151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfd6643-9a76-4901-a7fa-dd603fbdc058",
        "cursor": {
          "ref": "906d6225-94cb-45b7-af1a-51c46d62142f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cd6badc8-3d6e-4943-9a5e-0546d8c285b0"
        },
        "item": {
          "id": "fdfd6643-9a76-4901-a7fa-dd603fbdc058",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce4c86da-bbc1-48e2-84d9-00b914976a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329d5576-c555-4a43-b0c6-22d6d228e688",
        "cursor": {
          "ref": "da508648-a074-412b-a6f8-42cf8ca36cab",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cd77bd01-7b01-4521-8f41-d5005762dfe7"
        },
        "item": {
          "id": "329d5576-c555-4a43-b0c6-22d6d228e688",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bef5d03f-c5be-4bab-afea-a2502486801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea8fbd-18d0-4064-b07d-ef1d02c10145",
        "cursor": {
          "ref": "98403207-6a3b-45f8-8a10-41a34d248c56",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7859dfc0-f5e9-49f5-bbbe-0da38af46f8c"
        },
        "item": {
          "id": "b8ea8fbd-18d0-4064-b07d-ef1d02c10145",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "643ed133-0b31-49b2-b5c6-5d76f0dc90e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae552496-f375-4203-9c00-8c5645cafe5c",
        "cursor": {
          "ref": "3d7a3385-1aa1-48ce-8984-367353e2c117",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5cd29212-c001-4328-8758-2dd6376bcccb"
        },
        "item": {
          "id": "ae552496-f375-4203-9c00-8c5645cafe5c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a0e4c709-3008-4c0f-a022-14c165d48a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2dbcd1-1b5b-42db-b284-82cffc45dd15",
        "cursor": {
          "ref": "c38103ba-3221-4519-a758-9fab17a9244b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "23799e6a-3c77-428e-949a-0016c3f36e65"
        },
        "item": {
          "id": "de2dbcd1-1b5b-42db-b284-82cffc45dd15",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d97e19dd-5a96-4790-b80e-dce4a2b4a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1721f5-4b28-4991-b93d-87f4daa94ae5",
        "cursor": {
          "ref": "24b433b0-ac19-4c06-86c3-3b93a702dca4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a4d03a9c-0074-465f-b79d-39b55aa13232"
        },
        "item": {
          "id": "aa1721f5-4b28-4991-b93d-87f4daa94ae5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "231567b9-00da-4591-8ab2-e3061af27571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da90b171-6ad6-44e6-8379-f6d66ece4f4b",
        "cursor": {
          "ref": "3087f004-ff6d-41cd-bfca-6b43101ea5a1",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a7744a39-4fcd-4d1a-b2b4-33265d136636"
        },
        "item": {
          "id": "da90b171-6ad6-44e6-8379-f6d66ece4f4b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "733484e5-2f40-4b5f-8b50-048210ec8ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d863a8-6478-4ae8-9e5e-70d07ab39a74",
        "cursor": {
          "ref": "17d80e93-bf3e-44cf-90a0-b493b09ec862",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c6a1a268-7deb-4297-aeac-168a6b68d68c"
        },
        "item": {
          "id": "10d863a8-6478-4ae8-9e5e-70d07ab39a74",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bb43cfcf-0e52-4832-964f-eea55c92ba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041b49d5-af24-49f2-90af-2d1785317bf0",
        "cursor": {
          "ref": "c253b168-33bb-4eaf-bcd6-871a1997c4ab",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34cdfd15-ea73-4bdc-8a02-7eae787d5d4b"
        },
        "item": {
          "id": "041b49d5-af24-49f2-90af-2d1785317bf0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "251cca67-0925-450b-ae41-7daf95d27a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300e2c5a-a01e-4732-a12b-2e03c7155d4f",
        "cursor": {
          "ref": "90618e32-aa03-4e68-b312-9e438f3cf15b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ca990f2-86df-42f2-9590-bc718a9b7222"
        },
        "item": {
          "id": "300e2c5a-a01e-4732-a12b-2e03c7155d4f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "692da8fe-f072-406e-a330-315f524c0370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ecf887-6876-4209-9c3a-9ce6d5ba22e6",
        "cursor": {
          "ref": "85161b6e-9ed3-49fc-afee-bd0e5b7a6176",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d3c79f75-8851-49f4-b998-ea0ca4808b04"
        },
        "item": {
          "id": "51ecf887-6876-4209-9c3a-9ce6d5ba22e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "599928c0-cfb6-4827-b27f-a468c537c839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a8ae4f-caf3-4b33-85dd-5b4c1de0bc8e",
        "cursor": {
          "ref": "158d4bc2-96c4-462a-bef1-9c0205f6fe26",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3c6c72fc-964e-4e81-8b78-65481d30e275"
        },
        "item": {
          "id": "f7a8ae4f-caf3-4b33-85dd-5b4c1de0bc8e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "87c158da-cce3-41f6-9dcb-e1e6f2df5d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d783082-cdb1-4bfb-a877-3bc3993004fb",
        "cursor": {
          "ref": "632a18c4-ccd8-4ebb-8f5d-82e63b43031d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2c6e7b4c-8795-451d-bc07-22b56f5b4214"
        },
        "item": {
          "id": "4d783082-cdb1-4bfb-a877-3bc3993004fb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "324cfa12-7268-4eec-8398-5457659d3d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed7e8dd-c298-4bed-9626-407c6fe56e39",
        "cursor": {
          "ref": "f1972d67-121e-4bb9-b3c8-c9d4eacacbbf",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f15cba0d-b595-4a89-9a29-950f26dde67a"
        },
        "item": {
          "id": "aed7e8dd-c298-4bed-9626-407c6fe56e39",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9c98e4db-b950-41ab-8912-1c3b7cf40960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b82daf-03c9-4893-a269-74c13ccd6b9d",
        "cursor": {
          "ref": "5362a6f5-b1ae-4547-af68-1703d2b1a847",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ed472fe7-32ed-4ee0-9e97-36eb4f68ba7d"
        },
        "item": {
          "id": "64b82daf-03c9-4893-a269-74c13ccd6b9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0505069c-88eb-4704-a3ca-8189bc6a57dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03317353-ceb2-4ad3-9458-92162b998fa4",
        "cursor": {
          "ref": "274e64fa-5741-43a5-bd33-d93799b0636d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "afe7fdc8-cd74-48cd-89ce-50aeb28baf6a"
        },
        "item": {
          "id": "03317353-ceb2-4ad3-9458-92162b998fa4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c0bf0e98-e3a2-4089-bda4-e50318a1120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d044fae-60d3-441a-84c4-c91540720f48",
        "cursor": {
          "ref": "6ddcdaeb-5faa-4765-a659-61f0ad34cb2b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f66518a0-f38f-49ef-9bfd-61f213c85924"
        },
        "item": {
          "id": "3d044fae-60d3-441a-84c4-c91540720f48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "914ce4cb-700f-4bfe-88af-8650687d25d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac657a5-b687-46e7-80a2-934bef1d1200",
        "cursor": {
          "ref": "b7bd80da-1fe8-4b61-a317-5a8029f375ed",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "955086a9-525b-47db-8dab-8d6b1aa0ae3b"
        },
        "item": {
          "id": "bac657a5-b687-46e7-80a2-934bef1d1200",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a966b456-ce08-4a04-bf22-bc796402efcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a761584-1244-4b5f-a9e4-5a7ca48d4d91",
        "cursor": {
          "ref": "156df89f-abf0-4071-a064-f0aa38fd6ded",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5546cc80-b580-4ea6-8251-0d837f7d5a32"
        },
        "item": {
          "id": "6a761584-1244-4b5f-a9e4-5a7ca48d4d91",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a81fd194-3b33-441a-b7fc-6299d0cbf708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2dfdff-ca50-4f34-8ac2-5087d10d3796",
        "cursor": {
          "ref": "f47d5f1f-cda0-4048-bece-3020f799d777",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9a3976cf-0ea8-4946-bc42-95d07f9ff0d7"
        },
        "item": {
          "id": "cd2dfdff-ca50-4f34-8ac2-5087d10d3796",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b811ff2-9348-45cc-a8e2-5fcaeba3dc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70de793a-586d-4b4b-87d0-299d61abe33f",
        "cursor": {
          "ref": "c7ed73db-cd25-4293-a976-c234acc80a15",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "358ec6ac-c91e-4b09-9cb3-9f2618f3d691"
        },
        "item": {
          "id": "70de793a-586d-4b4b-87d0-299d61abe33f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4b9398a0-3472-402f-ae9d-7f26eda2b09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52fcf3a-9d95-422e-86d4-6a16815bc7f1",
        "cursor": {
          "ref": "675ecdd7-4344-43b8-b277-7d75d1ac9bce",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b18419b5-df8c-4628-8372-bc47262245d3"
        },
        "item": {
          "id": "e52fcf3a-9d95-422e-86d4-6a16815bc7f1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "297a7c80-1e34-4029-a75e-063b0f62f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5508d4df-d6e7-4aa2-bcb7-4653a1cc8367",
        "cursor": {
          "ref": "afbc2c70-003f-43e2-b206-bf6373f784c8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c44c8206-221b-4748-86b3-757fe3a184d8"
        },
        "item": {
          "id": "5508d4df-d6e7-4aa2-bcb7-4653a1cc8367",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "36bfbe47-e77b-429c-a312-489061065c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb8429a-ec96-4bc5-b503-f6b508fbe496",
        "cursor": {
          "ref": "7fed5de5-fd9c-4459-9926-61e9a80d8048",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae7b8b88-b138-4904-a83a-1cdb288027e5"
        },
        "item": {
          "id": "6bb8429a-ec96-4bc5-b503-f6b508fbe496",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "da70338d-7205-4695-8ebe-165b2b0e829a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c7a7e3-f113-424b-b2f0-df311cb8c5b9",
        "cursor": {
          "ref": "2efcc027-30fb-4eff-b210-247cd855bd70",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a2cfe769-6462-443f-82a8-6b99a61d7a78"
        },
        "item": {
          "id": "00c7a7e3-f113-424b-b2f0-df311cb8c5b9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d444f90c-ea37-4de5-950a-2f120a697c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b29f2b-a77d-43db-ab3d-3f914e7132fa",
        "cursor": {
          "ref": "0d7da306-bf9a-4a11-9baa-2573ea89b83f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3c16883-7525-457e-8aaa-fbce5b5d638a"
        },
        "item": {
          "id": "58b29f2b-a77d-43db-ab3d-3f914e7132fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "32588591-cc6d-4399-a05d-bdd9c8d7e3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bd1cc8-5aaa-47ca-9122-12773ff2b8a5",
        "cursor": {
          "ref": "5ec8f10b-77ca-43bd-ba44-ecba2afc0a22",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8b1f6880-696d-4d9a-8e7f-6d4319eb7855"
        },
        "item": {
          "id": "e7bd1cc8-5aaa-47ca-9122-12773ff2b8a5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9c9ffcb7-b32d-4548-891c-4afce911285e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1060b6a1-b077-48b9-86d3-30166b9af71c",
        "cursor": {
          "ref": "279d113a-b2f4-4f8b-9dad-608a57881bb5",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "25e6ea18-e9f0-472b-a7a3-a899770ca887"
        },
        "item": {
          "id": "1060b6a1-b077-48b9-86d3-30166b9af71c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b62a9a19-8fd7-4eab-9296-c302f1975df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddbb438-36d0-455d-ac79-460844759db5",
        "cursor": {
          "ref": "c4a71504-c342-4c5c-a27b-944e9cec7ff7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "be85a815-27ce-4565-94fc-37eacbd4cd70"
        },
        "item": {
          "id": "4ddbb438-36d0-455d-ac79-460844759db5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ca4de917-3d42-43d1-b6a3-5d24fb222f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e5d418-20f3-4f10-b0a4-602f1e3ac4f3",
        "cursor": {
          "ref": "3088b02c-3a81-4156-ab68-60c94c2d9cb9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea6606e2-9921-462a-8211-add2ff03d5f9"
        },
        "item": {
          "id": "a6e5d418-20f3-4f10-b0a4-602f1e3ac4f3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b71df9be-ca3d-41b1-9210-523be9e5996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6596a05-cf92-4d51-8015-de6c024cc597",
        "cursor": {
          "ref": "4305a473-bd33-4377-b6d5-bdd3c698fad1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b3cf5d95-9910-456c-90b8-b317ef798a39"
        },
        "item": {
          "id": "d6596a05-cf92-4d51-8015-de6c024cc597",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b8694a2-8210-4b7d-aa43-ccf9f4ef327d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36031a90-0ec7-454e-958f-b05a62235dda",
        "cursor": {
          "ref": "d24c261f-e37c-4645-b6c4-495194643352",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dbb61332-3bb9-4148-8e5d-b1d4ccc216bb"
        },
        "item": {
          "id": "36031a90-0ec7-454e-958f-b05a62235dda",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d615b8b8-6260-46f4-a6eb-5b9a26ee4e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d722f9-4d08-4bab-b064-5860e4f85a10",
        "cursor": {
          "ref": "c8c009ce-1f83-4d9f-8428-0f0073e6e16c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b47f26f-b2cf-4be2-bd90-4c7ee66b9af0"
        },
        "item": {
          "id": "d2d722f9-4d08-4bab-b064-5860e4f85a10",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ada76e44-ac91-4894-84bb-83648ad62a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8d5740-f66c-4b4e-9855-26e4b550c32e",
        "cursor": {
          "ref": "f237299e-12bf-48c9-a7da-96e3a8e4110c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f78b4c76-a427-49a8-9402-1bd55f2cc142"
        },
        "item": {
          "id": "ba8d5740-f66c-4b4e-9855-26e4b550c32e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "280bcbf8-5647-4c9d-8280-91e9a1723907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3dec8b-06ab-44ce-a248-a1814caf4885",
        "cursor": {
          "ref": "49dfe757-9caf-4839-88f5-bb586d0c1e4c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "37b795e5-bef7-47b8-894c-323ae08bd982"
        },
        "item": {
          "id": "af3dec8b-06ab-44ce-a248-a1814caf4885",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "966588dc-b20a-4595-a731-40ae401d4de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb62f965-be52-48be-9a27-fda3177f7b60",
        "cursor": {
          "ref": "7df0863c-d2fd-43fa-bfb4-4722f49fcd1d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8b82765a-7f82-4559-b8f0-6181da3e5299"
        },
        "item": {
          "id": "eb62f965-be52-48be-9a27-fda3177f7b60",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a6af3ee-e749-49cf-8b91-28b230a6c021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc00f99-ba6b-4f25-963a-7461ee940d4b",
        "cursor": {
          "ref": "f1216baa-426c-4a68-9857-c0c5d0730159",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "23e0058c-4adb-4457-b60b-b0be274ed459"
        },
        "item": {
          "id": "0dc00f99-ba6b-4f25-963a-7461ee940d4b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f4bfde9f-58b8-4466-883a-6f487cc41e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bea471-e23c-4520-919a-d2ba43658c15",
        "cursor": {
          "ref": "4eb34e46-61bc-4515-af0d-bc710707c6d0",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "63f94e66-b005-47ed-ad55-47f3e5232fd8"
        },
        "item": {
          "id": "a3bea471-e23c-4520-919a-d2ba43658c15",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "06844d24-3046-493b-b2e0-531f22a4c0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e140cf-0f81-4df9-a9c7-532b0b65ac76",
        "cursor": {
          "ref": "c935684e-6891-4dd6-a312-fb0c9b0f4158",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d9831d9-6c37-477e-8ed9-8a1f82f5a9c5"
        },
        "item": {
          "id": "76e140cf-0f81-4df9-a9c7-532b0b65ac76",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b9c278dd-14e0-410f-ae93-c7fd283f4091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd00bc8d-1543-4322-9706-7388f9d28a4d",
        "cursor": {
          "ref": "68ea1069-2a47-4f58-afee-5120e42c3532",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "743ac010-928b-4587-a89b-3bdb09ec5494"
        },
        "item": {
          "id": "fd00bc8d-1543-4322-9706-7388f9d28a4d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8bb656ed-7615-444e-8e7c-d16031837430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23603ce-a3b6-402b-8cb4-69516db98462",
        "cursor": {
          "ref": "8228e4b4-ed9c-4fd5-9a9f-e39141a9dfc6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "042aa233-4822-4de9-969e-bc2e734b70c5"
        },
        "item": {
          "id": "d23603ce-a3b6-402b-8cb4-69516db98462",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2f6c30eb-c989-4ed9-bdc7-0e67b2c88382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab2f70-e4e4-4f81-8057-5d9999717376",
        "cursor": {
          "ref": "dc9f0af5-4d46-4dc6-bc5c-94ade7f75565",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e867e6a-f530-45b6-9a2f-3826fef38f2b"
        },
        "item": {
          "id": "60ab2f70-e4e4-4f81-8057-5d9999717376",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6924c4a0-025c-4908-b368-154b39ad7021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aba45ca-767a-41c9-811e-b9be19cb5823",
        "cursor": {
          "ref": "54c9cb56-ebc1-4972-a890-1f1f4980ecb6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7ddd45b8-65e3-47f2-96f2-fed3c4af36f4"
        },
        "item": {
          "id": "1aba45ca-767a-41c9-811e-b9be19cb5823",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3808d5b8-e8a9-4700-a2f8-65c731599dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aec525b-b57e-4fdf-abee-3bc075281197",
        "cursor": {
          "ref": "b11d4558-1a2c-4b3e-af96-c80145f328cf",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f73813c8-21af-4475-ac84-f492af40884b"
        },
        "item": {
          "id": "7aec525b-b57e-4fdf-abee-3bc075281197",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "77ce1093-74a2-4a18-8057-1a487887ad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef69799c-1a6d-4ad6-b3e3-1bd5b5b56205",
        "cursor": {
          "ref": "62b04af1-a5c5-42ec-a02f-1f3fa28978a4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9008c409-830d-4bc7-a09e-b183705da942"
        },
        "item": {
          "id": "ef69799c-1a6d-4ad6-b3e3-1bd5b5b56205",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9f939b89-d5ca-4827-96c5-657a06fb153b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1060fc1a-2fbe-427c-a54e-7439cfa1c76c",
        "cursor": {
          "ref": "92b2a71d-a1b5-4ac7-9827-2f8fbfd32b51",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8413d71e-5540-4384-99b0-a1918573ecba"
        },
        "item": {
          "id": "1060fc1a-2fbe-427c-a54e-7439cfa1c76c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4c4f61ad-b458-4504-9bf3-0d8d01680767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6b1f8c-6f49-461b-bc2a-a66f1b2b3735",
        "cursor": {
          "ref": "1c3664d1-f377-4dd1-a86a-04e0d2b5ca12",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a9039d05-7e54-4b4d-a973-8a1523f4e345"
        },
        "item": {
          "id": "3f6b1f8c-6f49-461b-bc2a-a66f1b2b3735",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b364af40-4647-48b6-9c6d-67eb0c508221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2642ac1e-aa8f-47ec-bdc0-e2c540d406cd",
        "cursor": {
          "ref": "2e0a4044-7849-4c2d-9a3c-c13ae500d9fe",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7be01b40-6be4-45e0-9e4a-7eaaeb24b95d"
        },
        "item": {
          "id": "2642ac1e-aa8f-47ec-bdc0-e2c540d406cd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "454bf18e-8537-4931-ac6c-d736a7d2a926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512c7365-9745-4061-8869-aaf5f51ba351",
        "cursor": {
          "ref": "cfc48b99-b592-485f-87d1-cb5c4813e6df",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b459cf09-094d-4200-b08d-947810b4e164"
        },
        "item": {
          "id": "512c7365-9745-4061-8869-aaf5f51ba351",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4064a1bc-a37c-42f7-8c62-2248a563d75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2041188-9852-4e09-9926-ee471a836ddd",
        "cursor": {
          "ref": "2ee4c59b-390a-42a5-add8-90b3d828c2db",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b76d9d2-1424-4f87-84cf-f70e7ba56bad"
        },
        "item": {
          "id": "c2041188-9852-4e09-9926-ee471a836ddd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2058ffaf-0693-4bec-bdd2-576624fb7be7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c452702-56f5-46d3-aeba-6101e6420944",
        "cursor": {
          "ref": "e7029f3f-3d3e-4161-b463-7f6b73dcf1f9",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0585f86-479a-4966-ab8b-429e28993d57"
        },
        "item": {
          "id": "4c452702-56f5-46d3-aeba-6101e6420944",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "92185c9b-6bc8-4342-9f91-083e37b8512f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "39b41687-1dd7-475e-a8d6-4e8ed21212df",
        "cursor": {
          "ref": "4bd747c1-a45a-45a7-93b3-284bcb259505",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7cc0b62f-dcac-499f-a9f0-d906b104b9ee"
        },
        "item": {
          "id": "39b41687-1dd7-475e-a8d6-4e8ed21212df",
          "name": "credentials_issue"
        },
        "response": {
          "id": "720145de-e298-4933-8f22-e3c57af619f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "00237437-736f-4702-a8e6-115589dc8061",
        "cursor": {
          "ref": "85e3fbc7-5f37-48c1-a3f6-213cb6a4576f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "27df4e7a-cc10-41db-909b-21c65e67fe21"
        },
        "item": {
          "id": "00237437-736f-4702-a8e6-115589dc8061",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8f48cc0f-b718-44a5-b3a1-34896aee88b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3631b8eb-277b-4986-8c1a-c437fefca6a4",
        "cursor": {
          "ref": "c2f20732-e4fa-4bb3-9592-feec4756d06d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "81ec8dda-6681-4aa7-8658-1ef23b63826a"
        },
        "item": {
          "id": "3631b8eb-277b-4986-8c1a-c437fefca6a4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dda42f78-0d2a-4f85-aff8-04baa54bef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "538ac3cf-8fae-4253-86a2-2f124e37fb08",
        "cursor": {
          "ref": "d62d27a8-1b09-49af-a0f9-618edfd624e4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d850ca65-5b9d-4a85-a9ba-207e7cfdfa3f"
        },
        "item": {
          "id": "538ac3cf-8fae-4253-86a2-2f124e37fb08",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6ee3ce71-c847-4fe6-9870-f704fabb0804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "321947ae-5dd9-40c7-b70e-5f791409d853",
        "cursor": {
          "ref": "2655cc17-69d7-403c-8c31-392075efc66f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "206502a6-3103-4f5f-b2ef-97616e89df59"
        },
        "item": {
          "id": "321947ae-5dd9-40c7-b70e-5f791409d853",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1444c606-91ee-4d84-8390-908b35718923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e900984a-7862-49f9-b808-62415f4d82d4",
        "cursor": {
          "ref": "844d7460-187a-4a84-98ae-d8f768894cec",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6daab78b-aefb-4c42-8cb6-1fd52670c6dd"
        },
        "item": {
          "id": "e900984a-7862-49f9-b808-62415f4d82d4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3c38cef6-9a03-4fff-94f8-a3997c1333b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3758e0c8-2036-4bcf-acf9-d213a6d0cfd4",
        "cursor": {
          "ref": "45c5f798-af61-4c2b-b625-373d8103dbe2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "35dd041f-f3d2-486f-ad2c-d617bf7ec3b2"
        },
        "item": {
          "id": "3758e0c8-2036-4bcf-acf9-d213a6d0cfd4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d7bb487-4bcf-4c90-8bf7-7427fd8d55af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64f81c0-5f4d-41fd-9b51-9ee58e0bf0f3",
        "cursor": {
          "ref": "f2c298b2-6a3b-4358-8af5-dbfe9a66cefd",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a61a99d4-3c2e-48a2-83be-592fdb29c171"
        },
        "item": {
          "id": "b64f81c0-5f4d-41fd-9b51-9ee58e0bf0f3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dd54493c-78ef-4f78-9f0d-147fb44f4b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b65c00-416d-4593-ab01-a0b8c6c186ae",
        "cursor": {
          "ref": "39f036bb-9b07-4ffe-8fc4-7266ec7da837",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "63599f11-73dd-4170-83ab-655577587d84"
        },
        "item": {
          "id": "36b65c00-416d-4593-ab01-a0b8c6c186ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e25b596a-6f21-4ddc-a9a4-47a909816c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858c0651-71bd-4d46-833f-60907415f855",
        "cursor": {
          "ref": "0c7dca83-d5d3-4594-ae1d-2a3d10a10df6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "200c40bc-86e8-4979-9248-e2f5a578f0df"
        },
        "item": {
          "id": "858c0651-71bd-4d46-833f-60907415f855",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "68c35b2b-cab2-46c3-b748-b95cb268a732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20961f3b-a194-4c8e-bfba-8b03a8399481",
        "cursor": {
          "ref": "9249db9a-1958-49b8-b6d1-4658d7797ddb",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "05629956-6d52-44f7-92ed-13e0f1c68d69"
        },
        "item": {
          "id": "20961f3b-a194-4c8e-bfba-8b03a8399481",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3be8c7da-ffba-418b-8bc4-a976ccd7c59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e0af39-4f62-4cb7-8319-5d66ff92060e",
        "cursor": {
          "ref": "f27a6b85-be8b-4fd4-87b2-23b2a89c7f59",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d734ab12-579b-4285-84d6-c29af97378d7"
        },
        "item": {
          "id": "62e0af39-4f62-4cb7-8319-5d66ff92060e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cb0a040a-7e1e-484e-b986-459f8c53b78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc920f9-672f-4274-a834-ffef3244e75a",
        "cursor": {
          "ref": "0c3d64c2-3080-425e-b173-86e7efe577b7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9349caf2-c969-44b0-be89-c091dd2f4341"
        },
        "item": {
          "id": "9bc920f9-672f-4274-a834-ffef3244e75a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9e70f11c-bbba-4e8c-a0f3-cbeb718083f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ffd50b-3f8e-4524-99f7-2d4fc1cb28ba",
        "cursor": {
          "ref": "dab0e151-87d8-4d20-a5bd-5cbf13036720",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f85dc3b4-b41e-4703-82ce-3928c34cacff"
        },
        "item": {
          "id": "37ffd50b-3f8e-4524-99f7-2d4fc1cb28ba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45dabdcd-438c-4b94-84ed-cad7d3982408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb26887a-a27e-4784-ace2-6bf009085182",
        "cursor": {
          "ref": "aaa9b46c-e9c4-492c-832c-1598fdbd3ef6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9c22fa8d-9410-48f2-b606-0b4ae7bead62"
        },
        "item": {
          "id": "cb26887a-a27e-4784-ace2-6bf009085182",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ef59442a-f3d5-434f-8734-519ea5c11718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ae1b52-0274-43c2-b67e-8842a5eb60f2",
        "cursor": {
          "ref": "7e3b3f31-b8c1-46c9-978c-3b34c16cf292",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c4447370-2e86-4aba-bba2-ae8075e2a2c3"
        },
        "item": {
          "id": "e6ae1b52-0274-43c2-b67e-8842a5eb60f2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b71fe7b8-35ad-4dba-a2fd-493f0da32650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2f4d67-cfad-49af-9c78-4d7129707daf",
        "cursor": {
          "ref": "ede18eb8-8fd6-4ebe-a678-5b9fca5f541d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "271ed89e-d4bb-4e27-b6b5-ea133f255c2f"
        },
        "item": {
          "id": "ac2f4d67-cfad-49af-9c78-4d7129707daf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "62593ec9-e836-45d9-88b9-ece25229f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabc4edd-1d17-4de7-aa1b-0eac35ce8499",
        "cursor": {
          "ref": "d2ccfa89-b83f-46cb-9596-f8d1af74c089",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "71e8c718-1626-4e12-8f56-6d376fb85bcf"
        },
        "item": {
          "id": "fabc4edd-1d17-4de7-aa1b-0eac35ce8499",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ddfcfea7-fc35-4096-af14-e7ff19c84153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0876f18-c6ea-4aee-b428-dbe942f99e72",
        "cursor": {
          "ref": "15bad0ce-276f-4fb2-a9cc-ddccbcbc45bf",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d54281a4-739a-4427-9661-6abc3ffb17c9"
        },
        "item": {
          "id": "b0876f18-c6ea-4aee-b428-dbe942f99e72",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0f005356-d50d-45c8-a9ac-4f9b541442c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed31c403-1301-4688-a5d9-86931dd4f17b",
        "cursor": {
          "ref": "cdc38daf-015f-4dde-81c8-de191336ae99",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "80c26557-a62d-4e38-a5b8-e01a2c4b5636"
        },
        "item": {
          "id": "ed31c403-1301-4688-a5d9-86931dd4f17b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a57bbc36-5a08-4643-8fa4-b2ab3435701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0759d0e-4057-4161-b130-5c57763bde88",
        "cursor": {
          "ref": "1adab60c-3c6f-4d42-bd73-d4a475f1e2ba",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d050821d-d483-4b39-a32b-44518a76fe26"
        },
        "item": {
          "id": "c0759d0e-4057-4161-b130-5c57763bde88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "47ba9412-f088-4f7c-ab69-6a44ea5e9c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d89f46-0340-4efe-b824-f0ceea36a239",
        "cursor": {
          "ref": "646f4772-d9b3-47b0-92f2-9f663fe6327b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2f6ee6e9-8854-4a3d-a6b7-40e96544ec1e"
        },
        "item": {
          "id": "82d89f46-0340-4efe-b824-f0ceea36a239",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f4b445aa-4abf-4f92-9532-c00f03bfaf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bada137-5654-48ce-9884-c2cc47eab74e",
        "cursor": {
          "ref": "332f87f4-47a8-4667-9cb4-78685cec348b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e2d0dcec-af85-4763-9438-bd5f9a42d3f1"
        },
        "item": {
          "id": "5bada137-5654-48ce-9884-c2cc47eab74e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8435b5a3-1514-4352-85d8-db958eb68f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c811bef-6862-439b-884c-d896e95ab914",
        "cursor": {
          "ref": "d0954172-cc10-45ed-833c-a3e5fce8f02f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e94bd9b3-6c9a-4929-af8e-598c768cb8e7"
        },
        "item": {
          "id": "8c811bef-6862-439b-884c-d896e95ab914",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1e245c31-b6b9-463b-8fe5-d808f2150f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ae3095-2bab-4e8b-aafe-fffa38740864",
        "cursor": {
          "ref": "2fb152a0-a3f9-43c8-a0af-b99d72676ab8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b0db9eca-7c1f-4960-b326-df21f3c42b85"
        },
        "item": {
          "id": "b9ae3095-2bab-4e8b-aafe-fffa38740864",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b0ea0e9e-263d-4f9d-afb2-1aa2a6087557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb34864-e7d1-4b20-9794-b79aa0fb5f72",
        "cursor": {
          "ref": "93cfa682-9edf-40b2-ad9f-b422d85aa494",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8316d2e9-a6ef-4d13-a468-51d1559d9046"
        },
        "item": {
          "id": "0fb34864-e7d1-4b20-9794-b79aa0fb5f72",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a0e502a-51e4-4ffb-9d94-b30f9f08964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e3ec7-7581-457e-99c9-02fcbe01c2fa",
        "cursor": {
          "ref": "ac922794-3e49-4c24-949e-6f183fb95536",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7a6e5de8-1d24-4d89-94a3-61625b368dae"
        },
        "item": {
          "id": "160e3ec7-7581-457e-99c9-02fcbe01c2fa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b23255c6-630f-4bf5-9f53-70f1222eb483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c57a2c-7579-4a0c-a2fb-7b3271cc1e96",
        "cursor": {
          "ref": "e0936336-dfeb-440a-99fc-2df22589ba9a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "38e6c36d-8fcc-4049-92aa-fa10c93919a6"
        },
        "item": {
          "id": "76c57a2c-7579-4a0c-a2fb-7b3271cc1e96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "545a7edb-e948-4d9e-9055-9152fa987812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b442c9e-bde9-49d6-a87e-4762a725eb45",
        "cursor": {
          "ref": "904c257a-7b81-4304-92f1-04d7e3f60b77",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "99df869f-b729-4db5-96be-e807f1dcf900"
        },
        "item": {
          "id": "1b442c9e-bde9-49d6-a87e-4762a725eb45",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dbb47e42-9cfe-4f8b-91a9-3454766eaf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a89b6-d578-478e-9f5d-eadfebe4af53",
        "cursor": {
          "ref": "d4ea5e3c-2d1c-45a3-8ac4-9d488e60680d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e6711b02-66ca-43e9-8d3f-bcebd4ac462a"
        },
        "item": {
          "id": "3c6a89b6-d578-478e-9f5d-eadfebe4af53",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "29b373d6-31ac-4253-bc50-c01e41f997d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dea54d2-fb23-411e-b765-92e6f01babfb",
        "cursor": {
          "ref": "ea37f25f-d401-4929-a287-dffc9979b433",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd5fbbff-114a-4a50-b58e-15367eb7e657"
        },
        "item": {
          "id": "3dea54d2-fb23-411e-b765-92e6f01babfb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "317a72e2-f178-4f1e-8bb7-941b1bee976f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7792b5-7879-4066-bc53-4ff4eac641f5",
        "cursor": {
          "ref": "40ad323d-234a-4881-b612-74fb7f1e44d7",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a7e46851-59ba-44b7-9d3d-00aad2c94cfe"
        },
        "item": {
          "id": "1a7792b5-7879-4066-bc53-4ff4eac641f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f00589bf-fe2c-4da5-9e71-c36990ad4697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73790aeb-2241-4902-9aa8-2b015fec3642",
        "cursor": {
          "ref": "10abf539-af5e-4b87-b7cf-eb2dd83437d5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "37e65719-1776-497f-82c1-5c77773801b9"
        },
        "item": {
          "id": "73790aeb-2241-4902-9aa8-2b015fec3642",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9254351a-bf75-4dd0-b0bc-5bff63502616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cdeb26-c1f0-4b7b-a97c-8855382747bd",
        "cursor": {
          "ref": "ad95beb2-6782-42b5-9000-96221f5c77a4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d413907f-1878-439e-a62a-554c1e2b7222"
        },
        "item": {
          "id": "02cdeb26-c1f0-4b7b-a97c-8855382747bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "339e2b6e-c364-42ce-b384-6a3ada769916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5721d147-fa92-4982-8c79-1c7953ceaac5",
        "cursor": {
          "ref": "d77a435e-fb04-4219-b6b4-8881c5c6bdd4",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6477be5d-fa06-43c2-9e57-37b509fd0830"
        },
        "item": {
          "id": "5721d147-fa92-4982-8c79-1c7953ceaac5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a3ee806-e1a3-40ef-9e2c-16386297e2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e23fe52-5189-4107-a41d-c425d10d1193",
        "cursor": {
          "ref": "452d41fc-4607-448b-be09-89adb6936897",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b6a55499-6a76-42c7-a222-2f0885a4bf47"
        },
        "item": {
          "id": "1e23fe52-5189-4107-a41d-c425d10d1193",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f5fb8d72-636b-4ff8-9f4c-449757d2ba68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2774151b-c083-4945-bc09-fd10aec4aaf4",
        "cursor": {
          "ref": "ea6afb9c-1d46-46bb-b293-7feb5852edc3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "be4a4cc5-a27b-4ac2-b230-76cdac9e0e9f"
        },
        "item": {
          "id": "2774151b-c083-4945-bc09-fd10aec4aaf4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "14354ccc-e969-4fa1-a59b-faf147ad357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d242f87a-29c6-46ca-ae17-bbffa9a4ba7f",
        "cursor": {
          "ref": "c15f50ba-6736-46e6-9a76-0dd1589c2d39",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9a01e7e9-7b94-4251-b328-869825d5d7cf"
        },
        "item": {
          "id": "d242f87a-29c6-46ca-ae17-bbffa9a4ba7f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4daaf0ff-b4e8-4e81-aa9e-a4912b50656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3018078-d085-4f05-8222-f9fe31f1cced",
        "cursor": {
          "ref": "2ad8e248-cd5b-446b-9a3e-73c58d58b5b1",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b822511f-d47c-4bb5-a8c7-73843cf1ffc2"
        },
        "item": {
          "id": "b3018078-d085-4f05-8222-f9fe31f1cced",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "369c6230-ebed-4064-ae58-a616c64b8cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d20944e-323b-44fe-81e7-5bd039f70ce4",
        "cursor": {
          "ref": "31280fe9-5820-4932-84c1-7d2163fe57e6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b95ef919-6a27-4ba8-9ea9-8e06cfa932b4"
        },
        "item": {
          "id": "7d20944e-323b-44fe-81e7-5bd039f70ce4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6d30a38e-508e-4969-aff1-932557243a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b5a4e8-c7f4-4a68-8446-bce99c48cb63",
        "cursor": {
          "ref": "d515f893-3cb4-457d-8d8d-98991a8de7bf",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "79ffeb29-1ee0-4d68-8f60-afcfccc278a0"
        },
        "item": {
          "id": "72b5a4e8-c7f4-4a68-8446-bce99c48cb63",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0cdd3a9-e97f-415f-a010-b56a64bf8e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c2d45f-ff7c-4214-a7aa-42be1f204b3b",
        "cursor": {
          "ref": "354182d2-6c7e-4e1c-9262-2c0ff2da3924",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02d5a67a-bd72-43b7-b025-b157377935b6"
        },
        "item": {
          "id": "63c2d45f-ff7c-4214-a7aa-42be1f204b3b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca31ee7a-aa6d-4439-8ec6-99492044adaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f01f9b5-0560-467e-9fed-fa4f22296fc7",
        "cursor": {
          "ref": "71e0d302-dcec-4d8a-9b8a-96298c80e48e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "402fd666-57fa-47aa-ae23-4a4cb7937605"
        },
        "item": {
          "id": "0f01f9b5-0560-467e-9fed-fa4f22296fc7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "242b1214-f2e7-4240-987f-d794a20b06ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606b6841-3f50-4c15-b739-43e44999331d",
        "cursor": {
          "ref": "f52a640c-6ef3-4b26-aa36-237f966ed626",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "adb8efa5-735d-4c1d-ae7c-ea377f9442fe"
        },
        "item": {
          "id": "606b6841-3f50-4c15-b739-43e44999331d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "61cc8afb-6029-48d8-9af3-da1dc2abb5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd19e010-05bf-4c14-8327-a8a655e1a3ad",
        "cursor": {
          "ref": "200c8abe-b4a7-469a-b885-2fd5c78550a3",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "767adc4b-6107-459a-ab7b-669364816d8d"
        },
        "item": {
          "id": "dd19e010-05bf-4c14-8327-a8a655e1a3ad",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8603e652-a805-4177-a26c-a99e436f7684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292136be-a34c-446a-ac33-7432923f7ad9",
        "cursor": {
          "ref": "663a9eac-823c-4974-be06-c8df3110f00f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "89d4dc63-5496-464d-bebb-0f90ae339fa5"
        },
        "item": {
          "id": "292136be-a34c-446a-ac33-7432923f7ad9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea7e6fa2-9303-400d-873c-197c378339f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413253cd-b4df-42fd-abe7-bbdc02d2649b",
        "cursor": {
          "ref": "ebd2f31d-6b1c-47f0-bfd8-b63a3468c30a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c9e2283-3960-4f41-97b3-9c1cef71e16a"
        },
        "item": {
          "id": "413253cd-b4df-42fd-abe7-bbdc02d2649b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "28e53c36-fee4-49e1-9d9d-5900defe3770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8345fc9e-4b77-4f20-a1bf-89111f29ad7e",
        "cursor": {
          "ref": "56b86936-43e7-4d7a-b799-f3ddc160b00b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff935505-4dc0-4717-834c-2c16ffdf4cc6"
        },
        "item": {
          "id": "8345fc9e-4b77-4f20-a1bf-89111f29ad7e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3524c34b-8bc3-472f-a9bd-582f4f2f9f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6be3224-655e-469a-b005-2c30d73ba191",
        "cursor": {
          "ref": "7758ece2-eb8e-4f75-a4e7-9a1ff1372080",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d6cc59c8-2136-4b77-8d9e-fd9b2ce8acaf"
        },
        "item": {
          "id": "e6be3224-655e-469a-b005-2c30d73ba191",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "efa41934-6fe0-4074-9981-16cbf7f1462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ea660-3efb-4e00-af85-8a67bc24f151",
        "cursor": {
          "ref": "cb319663-8028-42c0-9ded-e54350b2e319",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ced776b1-6a51-4046-b79a-eef3f6165a7c"
        },
        "item": {
          "id": "896ea660-3efb-4e00-af85-8a67bc24f151",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "302d2844-2f7b-4555-a165-639c1c4997d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad7aa3-b6e3-47ca-86b5-8402529f9bcd",
        "cursor": {
          "ref": "90c3d728-63af-4f59-94f4-182724cb94a9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "045af095-a633-4ebd-972b-76900a3647e0"
        },
        "item": {
          "id": "12ad7aa3-b6e3-47ca-86b5-8402529f9bcd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "73b0b1af-58a1-4ace-8565-1157ca2c7d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec916b-5e43-41b1-bd65-21eb26ef07f8",
        "cursor": {
          "ref": "e7cdac77-614c-47d3-bf6d-d96262833bc5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70666b89-14b9-495b-9b90-89e55f234fb7"
        },
        "item": {
          "id": "fdec916b-5e43-41b1-bd65-21eb26ef07f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e70a2dc1-8369-4faa-9eae-2cde33ec7bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd961e1f-2f3d-4e76-8370-a9e46ef58369",
        "cursor": {
          "ref": "924e2945-fbd2-4ad1-ab70-a472aca3c19f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a06513aa-9257-4f70-a710-e0ed15d96137"
        },
        "item": {
          "id": "dd961e1f-2f3d-4e76-8370-a9e46ef58369",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "42e5d84f-b07d-4c03-9ed3-2f3f350d305a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f3120-b245-46de-af0b-8360a3ec924a",
        "cursor": {
          "ref": "a82402a1-dbe7-42e9-a636-b32ac4af29a1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "33ad5912-cb8b-4096-89dd-e04b028a8be8"
        },
        "item": {
          "id": "572f3120-b245-46de-af0b-8360a3ec924a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7b8f6fb8-f0fd-427e-9605-c4a1ed842180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ef0893-64bf-4ffc-9e4e-b29c27bb295f",
        "cursor": {
          "ref": "390088ee-92e0-4ed2-b54c-c26ab801d7af",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "32b2efc5-c64b-49d9-b99e-13b9b6e59bda"
        },
        "item": {
          "id": "99ef0893-64bf-4ffc-9e4e-b29c27bb295f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7f8264e5-fc57-4060-8e1b-a2431681195b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5d484b-7f28-4c1f-80c9-d3134cf1c870",
        "cursor": {
          "ref": "9600d658-050b-487d-b3ea-7da30dc68919",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6c68ef8c-6b48-4cec-941e-82b662662227"
        },
        "item": {
          "id": "3b5d484b-7f28-4c1f-80c9-d3134cf1c870",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ace36128-b2bf-4688-a555-a3b3f1a6646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbafe334-793a-4d22-9ee4-26554f054e71",
        "cursor": {
          "ref": "6bed734b-d6e0-4943-b7ab-72f47f9690f6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "78117576-8c6d-4ce0-a8d2-5625354932f9"
        },
        "item": {
          "id": "dbafe334-793a-4d22-9ee4-26554f054e71",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "681f3b4e-3edd-4ef0-b782-6639d2dde37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507e5290-147b-47a8-b4b3-82422f90c565",
        "cursor": {
          "ref": "24875a2d-b343-4a7c-aa01-ceaecda6e5a5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f22c47aa-dd59-4460-8cdc-a2d29ee79de6"
        },
        "item": {
          "id": "507e5290-147b-47a8-b4b3-82422f90c565",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a30eb1e5-c4c2-4870-9159-c5b40e92e491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3defd3a8-fd89-4833-86df-1135ea8ebac3",
        "cursor": {
          "ref": "4743c2bb-333a-42e8-b349-dba2abc97543",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8df94378-bfce-414a-a46c-456047ef40af"
        },
        "item": {
          "id": "3defd3a8-fd89-4833-86df-1135ea8ebac3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b1f622bb-ca9a-4336-a3d8-8261c37f11d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a81b8-edad-4eed-8012-7beba86a3cc8",
        "cursor": {
          "ref": "b14e0724-8859-467f-894f-4cb44e6e4b41",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "43df06de-826e-4199-8b8c-ff05bb663568"
        },
        "item": {
          "id": "a57a81b8-edad-4eed-8012-7beba86a3cc8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2233235-9304-4563-969d-f1ab61c40b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55886722-d24d-450f-ba1c-a78068ebded8",
        "cursor": {
          "ref": "1e9deaed-31c3-46db-8898-288b93fc4a5c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6d0ad44a-c004-4a5e-801e-f6cc2e4003fa"
        },
        "item": {
          "id": "55886722-d24d-450f-ba1c-a78068ebded8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ee81b26-6034-49f1-8b5d-97ebfe79dd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c459b0cd-8eb3-4299-be12-e458cd6bf258",
        "cursor": {
          "ref": "2a5da830-76bc-4941-a626-4f428f260ee3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "16310832-4032-46e2-b5aa-160a0c2696b9"
        },
        "item": {
          "id": "c459b0cd-8eb3-4299-be12-e458cd6bf258",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b60a9a79-9463-40aa-b0fa-33a7e0c74150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc717cce-09bb-4e7c-bd6a-f6e9b253d4e2",
        "cursor": {
          "ref": "b5dd8abc-1e1e-4d70-83c5-886e17b9fbee",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "77d60fa6-ae92-4c41-a528-fc187041e38d"
        },
        "item": {
          "id": "cc717cce-09bb-4e7c-bd6a-f6e9b253d4e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "285616a5-c863-4e18-be5f-2791d69f368b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c619090-98e1-433d-8015-58231aa4a639",
        "cursor": {
          "ref": "cdaf989a-544c-41f8-a4df-9a9021fa3189",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "903ae928-316f-4a8b-9fab-a8d66e719e7c"
        },
        "item": {
          "id": "3c619090-98e1-433d-8015-58231aa4a639",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d54fb936-53ca-46c7-9180-1587fdd059a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a26f7-e845-4e6b-9ecb-a36675cdbdbc",
        "cursor": {
          "ref": "95b5c106-a9ae-4190-bb52-88a7d04074ca",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7210de2b-402c-4d9c-abab-e6b877b8693a"
        },
        "item": {
          "id": "368a26f7-e845-4e6b-9ecb-a36675cdbdbc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c2057734-0a0a-4b79-9105-13b3960e0bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6f2e33-46d1-4986-8034-ea16e4bd81c2",
        "cursor": {
          "ref": "14ee8c8f-d38d-4bd4-9be9-f5c4afb00725",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "26aeae62-3b99-4ef2-bc6c-2abd67f78025"
        },
        "item": {
          "id": "2b6f2e33-46d1-4986-8034-ea16e4bd81c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "74779619-71d3-4215-94be-fff818ea2304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a19f1de-1783-43d8-8097-a418561a81c7",
        "cursor": {
          "ref": "16f1a81e-a767-4ef9-9b88-912c16625caa",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b233f366-c974-4498-99ab-64a54370e11b"
        },
        "item": {
          "id": "2a19f1de-1783-43d8-8097-a418561a81c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a9babf6-8cdc-4501-b14f-28ee69d9d95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae90c09-af3a-460c-beb0-cf6bf7049e2e",
        "cursor": {
          "ref": "9a8a44bf-5dbb-4854-88bb-aaf365f2e3c4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f3954e04-b353-4e9e-8bad-c94a54027e22"
        },
        "item": {
          "id": "4ae90c09-af3a-460c-beb0-cf6bf7049e2e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "82b64e3b-9c85-43ea-81fc-2972c50bf126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf08bb2-434d-4a2e-ae43-0c0b910a09c7",
        "cursor": {
          "ref": "deae8045-edc4-4ed3-8296-200730e6330c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "93bbf72b-eeb2-45eb-be38-723ea992daf7"
        },
        "item": {
          "id": "ecf08bb2-434d-4a2e-ae43-0c0b910a09c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7103dd01-53f0-4d5c-8cfe-7618bfc9ad23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571ad42d-1bed-47c5-9962-21a6b3f7968f",
        "cursor": {
          "ref": "0a381fcc-f724-493b-9ab3-90e12e0ce8ee",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a0dbd22d-86da-41c3-9569-43b08a3e157a"
        },
        "item": {
          "id": "571ad42d-1bed-47c5-9962-21a6b3f7968f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1766b69f-afeb-4f67-8f10-aa6cb2610774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6f1891-4438-4bf9-884f-e6a0807ca881",
        "cursor": {
          "ref": "33fe8b16-05e0-4e32-834c-f6c2d622a984",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ada5a779-6b02-448e-b545-a9f8de6a870f"
        },
        "item": {
          "id": "ac6f1891-4438-4bf9-884f-e6a0807ca881",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a365c152-0288-4fdf-b6af-2bc08782209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edf444f-a76e-415f-819b-e3c28ca33f80",
        "cursor": {
          "ref": "d1eda55d-364d-4a6b-9912-52bfbcb06faf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "70532546-c92e-4515-9bb7-5fda09a0d5e6"
        },
        "item": {
          "id": "6edf444f-a76e-415f-819b-e3c28ca33f80",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5b8b6f38-9934-466f-a57f-a24d53ea2362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25fe036-c127-4cc5-8ce3-3fd6cb7c6dff",
        "cursor": {
          "ref": "41fd3ee9-af27-4030-8751-6232036a5158",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a8dc9733-6af2-489a-b225-2ce297caf7b1"
        },
        "item": {
          "id": "c25fe036-c127-4cc5-8ce3-3fd6cb7c6dff",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ea59014f-2396-441f-a293-68e759289c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bbfe1c-2211-4b0b-9b31-7446668e78b1",
        "cursor": {
          "ref": "26aa8f77-d4bd-4f25-9497-04cbcccb3d0c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb178a85-c142-405c-81e2-968dad16d613"
        },
        "item": {
          "id": "83bbfe1c-2211-4b0b-9b31-7446668e78b1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f2d3b5e7-0b23-40ef-b560-0859fdd35a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab0691-c2bb-44ce-8987-50a260d442c7",
        "cursor": {
          "ref": "4237e1c5-e379-47d8-b598-18373f6fd0cf",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c6c404fe-53cb-4e4e-8c33-ec3bd7a1e795"
        },
        "item": {
          "id": "68ab0691-c2bb-44ce-8987-50a260d442c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "297b1562-93a1-4bf8-9e0b-7ea33ad8158d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802cbe86-e1ab-4f13-a222-503ea47519f0",
        "cursor": {
          "ref": "346b5279-9618-4d53-969c-5ce214267e98",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5194cecb-2877-4655-af84-a603108ebdae"
        },
        "item": {
          "id": "802cbe86-e1ab-4f13-a222-503ea47519f0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2577bf0b-c9be-4b6e-95f3-ebff4b82eb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecb72ab-14bd-421e-a074-ac7229d5e7c1",
        "cursor": {
          "ref": "b74bdfd0-e574-4bad-99e1-582628c15e9d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e5f0f93b-4e47-46be-8e4f-1a4fa923bdf2"
        },
        "item": {
          "id": "5ecb72ab-14bd-421e-a074-ac7229d5e7c1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6c6fa4d4-fd8e-41e3-9295-3cec02722ceb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdd8057-e34b-4d00-a26f-b18e4372d38d",
        "cursor": {
          "ref": "e3effb8f-f87a-4b4e-96da-ff88354ef562",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "98628332-621b-4f6a-a6bb-17e93eae9e48"
        },
        "item": {
          "id": "2cdd8057-e34b-4d00-a26f-b18e4372d38d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6ac3bc71-6d06-4745-8681-f2c18b879208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13f3b76-7a29-48ab-9696-32a36bd0e783",
        "cursor": {
          "ref": "c6e284de-98ac-4bba-8fac-a4a73289d2ae",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cd989947-187c-43f2-a299-93163c35af4b"
        },
        "item": {
          "id": "a13f3b76-7a29-48ab-9696-32a36bd0e783",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "328c1efb-5ff0-4ae0-9e90-1009232df2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee193277-197c-4283-95a3-e75271aed226",
        "cursor": {
          "ref": "7ac6fa95-2603-480c-ab2e-3f774fab8b68",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3d9f0686-8993-4830-9774-b6fc2fed0dc5"
        },
        "item": {
          "id": "ee193277-197c-4283-95a3-e75271aed226",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "447ad33c-e18d-4bdd-a79d-c12d76e49809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6733b4f0-de75-46eb-b21e-7398a3ad8868",
        "cursor": {
          "ref": "bcb1d47d-ff5b-437c-9d13-15a9cef9106f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "66c7a7d5-cc3c-420f-a49b-d93e99f4862a"
        },
        "item": {
          "id": "6733b4f0-de75-46eb-b21e-7398a3ad8868",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ae8337df-06d0-4d8d-a14e-edc5ed733fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774b5c7e-6c91-4989-b019-8fca7cb937c8",
        "cursor": {
          "ref": "9bdc01fb-b1fa-4d98-8b02-8e7473456d60",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f296f393-5229-424e-8060-712fba277d04"
        },
        "item": {
          "id": "774b5c7e-6c91-4989-b019-8fca7cb937c8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "41bbfa72-94d8-487c-a86b-28a8502f9713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3efebfb-7f33-4a01-a8da-80127508cb6b",
        "cursor": {
          "ref": "21d8292b-dc79-4de6-a0d5-3c1f652d8b5f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "01375507-fc05-4d3b-bd4c-6dffa2f86fc4"
        },
        "item": {
          "id": "f3efebfb-7f33-4a01-a8da-80127508cb6b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "11d2369e-7fe0-4ba1-b115-ae3e4df3dad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101c981-1317-481a-addf-ab9434cd8cfb",
        "cursor": {
          "ref": "2c436b80-26b9-4287-9ecb-406fbdfbd176",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "52307e43-6f37-41cd-94d1-26360e4826ca"
        },
        "item": {
          "id": "d101c981-1317-481a-addf-ab9434cd8cfb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ccce3d72-1e9e-40a9-95e3-bfcd80216388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189bc35d-ab74-427d-a9ee-db511cc64c84",
        "cursor": {
          "ref": "af75991d-7fee-4e59-ad9f-211fec9cfd58",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "519d241d-d1c2-4f91-8d6e-415403ba2de8"
        },
        "item": {
          "id": "189bc35d-ab74-427d-a9ee-db511cc64c84",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9df4fcdc-9ce7-4c2c-a2b5-1cb99175347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3780ef98-f894-470f-a8ea-8d37b90960c6",
        "cursor": {
          "ref": "6e0da9ad-a0c1-407a-9a47-85dd4d6066c5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "902e3c63-09dd-401c-a55b-47b3dc9e7b54"
        },
        "item": {
          "id": "3780ef98-f894-470f-a8ea-8d37b90960c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0155dbfe-55f3-41cf-a620-6ab6c85c8a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad07cdb2-0a60-4bef-9ae2-d786276e94b4",
        "cursor": {
          "ref": "9594a9b0-8a01-4235-a451-a4a9b4acbf5e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d873cdc9-e55e-4a5f-a487-7b87c0c8e892"
        },
        "item": {
          "id": "ad07cdb2-0a60-4bef-9ae2-d786276e94b4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "10883620-84fd-4145-8fe2-58a3a18a09f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21930adf-b9c7-4f2f-8a5f-978b5efe7025",
        "cursor": {
          "ref": "89305931-8350-41c1-9917-92474efac6db",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b5b45d8e-265d-4ee3-8cb9-b0e61730c30a"
        },
        "item": {
          "id": "21930adf-b9c7-4f2f-8a5f-978b5efe7025",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eb996e72-5e0f-4db4-9d62-5d55c5c81f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3909735-f728-4048-8265-f4e275f71c6f",
        "cursor": {
          "ref": "7c76f8fa-1aaa-4eaa-8e28-531b7569cabc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "40ec0ea4-0061-43b6-b261-7426a4708650"
        },
        "item": {
          "id": "e3909735-f728-4048-8265-f4e275f71c6f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "39b16b57-1d24-4dae-907e-b898498fc43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9fc926-f367-477c-aeff-a8bd859b0029",
        "cursor": {
          "ref": "ca1dfc2a-4773-44c7-a832-4d85295fe5be",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "327463fc-546c-4914-9942-11af3f41f5aa"
        },
        "item": {
          "id": "9c9fc926-f367-477c-aeff-a8bd859b0029",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0f25abea-837c-4008-88ca-4bf9af41737a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf8003b-65af-4118-80c5-31b94cd1f8e1",
        "cursor": {
          "ref": "b94fb8a7-3a82-48f7-9d2e-405c73079edb",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8d2ae32a-3709-4913-a98f-f08e8c429023"
        },
        "item": {
          "id": "8cf8003b-65af-4118-80c5-31b94cd1f8e1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2080deee-a124-4ad5-9b96-7bce994a8f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b4cf0-a991-4772-91cb-83bcb68298f8",
        "cursor": {
          "ref": "2cb5e4ad-b37d-4b1f-855d-db65dc162e5a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e31512b1-f545-428b-a2c3-b1447a3e91d1"
        },
        "item": {
          "id": "276b4cf0-a991-4772-91cb-83bcb68298f8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "72a12979-ae3d-43f9-9ef9-3567bd658fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd4f3fc-3a57-472a-93e4-3b983cabbb75",
        "cursor": {
          "ref": "591053ea-0f03-445a-bc96-9b34ef4065ff",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5bb71821-e6be-4e70-a765-a6bd26501d21"
        },
        "item": {
          "id": "1cd4f3fc-3a57-472a-93e4-3b983cabbb75",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d890de97-80d4-44af-85b0-3caa75eedca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14da808a-44df-48e0-b77d-946af008bbea",
        "cursor": {
          "ref": "1a73c28a-6025-4171-8a98-f8729e54d28c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2fb8957f-751d-4509-83e7-fe74a52bfe50"
        },
        "item": {
          "id": "14da808a-44df-48e0-b77d-946af008bbea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a204408c-7c38-465e-b78c-b8a2b653b065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6530b7-4565-4002-9528-1c1227b5e112",
        "cursor": {
          "ref": "5106fdee-f193-42f2-9211-944bcc4e0070",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a3c38013-91f2-45ea-a769-12afad59b85e"
        },
        "item": {
          "id": "1a6530b7-4565-4002-9528-1c1227b5e112",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8ac6b418-b7db-44bf-a6cb-f9fcec973f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80dae11-ced2-46c8-aa15-645565527cdc",
        "cursor": {
          "ref": "c08012f9-9361-48df-9b9c-170c78a491b2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d4699e24-84a0-4d7a-a0c0-7fb17a309088"
        },
        "item": {
          "id": "c80dae11-ced2-46c8-aa15-645565527cdc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e34e2c33-9524-4674-9d64-9c407b27a80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5acf93-ebee-440e-b5da-ba0626aca5ef",
        "cursor": {
          "ref": "40f1e8eb-8263-4d83-bacb-4803f522ebda",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "73fab66c-8307-4028-90df-1015c27a69c1"
        },
        "item": {
          "id": "9c5acf93-ebee-440e-b5da-ba0626aca5ef",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9ebd3aeb-785c-4f93-8bd8-a223581a05af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea774e11-33d4-4179-ac40-4a60a89671f8",
        "cursor": {
          "ref": "389162c0-b9e8-47d6-82e4-98b29a3114e6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8015aa1a-9811-4651-a29c-fe281ba658b3"
        },
        "item": {
          "id": "ea774e11-33d4-4179-ac40-4a60a89671f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4ecfa9a0-08d1-4a0a-8c7e-117ebbf82ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c12953-60cd-46a5-a6eb-b5fe35955b92",
        "cursor": {
          "ref": "7367f1a6-8bda-45e6-affd-868ff4d04e92",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "18db6eae-bf81-4827-bd11-8739938a937e"
        },
        "item": {
          "id": "d8c12953-60cd-46a5-a6eb-b5fe35955b92",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4794780b-f00f-4876-a0c5-e61aaef2d37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed69db9-74e1-4872-b013-7ca4ac3a6fce",
        "cursor": {
          "ref": "ee33d58c-e362-4bf6-a0ad-8374b6ee80b1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "30331944-69e4-46bd-8a13-be9589d1e9f2"
        },
        "item": {
          "id": "4ed69db9-74e1-4872-b013-7ca4ac3a6fce",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "39903baa-5451-4fb7-9a2e-d3e832aadba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149830d7-ff37-4503-a110-86151505b757",
        "cursor": {
          "ref": "215c3080-0484-4962-8e68-108439b8a71a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2fcbdcb9-bd1e-4539-a2f6-ce6b523c3371"
        },
        "item": {
          "id": "149830d7-ff37-4503-a110-86151505b757",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8214871c-466a-4654-94cd-50a423c9fd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a911e-910b-47ba-99a2-7babb5339b99",
        "cursor": {
          "ref": "ed07b795-b620-4e6d-997e-d140e42459fa",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "98f4e539-910a-4ed7-9fe4-2e29d44d75d7"
        },
        "item": {
          "id": "2e0a911e-910b-47ba-99a2-7babb5339b99",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "353e1c31-87bb-4a47-9798-05de884a06c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e77a879-0a16-4024-b7dd-11e7cc9af303",
        "cursor": {
          "ref": "a0990661-2493-44a1-99ef-fabdd7c576dd",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f67f6108-986a-46c1-ba81-3a2f24588a3e"
        },
        "item": {
          "id": "0e77a879-0a16-4024-b7dd-11e7cc9af303",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6ca19502-e6ce-46cd-9895-e7c16a7a0644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b79bb1-c356-4392-88d8-8e8b2c104f26",
        "cursor": {
          "ref": "88d3a68e-44a3-4c5b-81c6-63283aeb5519",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f04390d8-80b6-4cb6-926c-abd6af8eef55"
        },
        "item": {
          "id": "f5b79bb1-c356-4392-88d8-8e8b2c104f26",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a894c1d-3c1c-47a3-ab82-b5883c538be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe860a1-52e7-4e97-bd4d-88302637b2b5",
        "cursor": {
          "ref": "8b19e197-1f80-43c1-b8fa-f93b237a1e85",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fa2e730d-f1ff-4e11-ba8e-d6ad08e2ab0e"
        },
        "item": {
          "id": "cfe860a1-52e7-4e97-bd4d-88302637b2b5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e9850926-d0ba-499d-80f1-8be532ffbab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa98a23-7ab0-4730-b272-67578a9b5b36",
        "cursor": {
          "ref": "143656d9-7bd8-4ad3-95ce-874f61802dcd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ed208d5e-d423-4dd7-9cb7-6bb5a1b84518"
        },
        "item": {
          "id": "7fa98a23-7ab0-4730-b272-67578a9b5b36",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0781bf74-0667-4405-b07e-4d07d426d62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7072db-a34e-4bf9-8d6e-2ad23a465cd6",
        "cursor": {
          "ref": "ae0069ff-4ad8-4381-baab-1f3cc1c25021",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8488df3d-1842-4aab-8b8d-4871a93d17a2"
        },
        "item": {
          "id": "2b7072db-a34e-4bf9-8d6e-2ad23a465cd6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "caff8d1e-20fc-4786-b763-3b82a72909ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaf1a3d-b1fa-4930-af99-def6485b9c05",
        "cursor": {
          "ref": "93afbb15-7943-469a-a2f8-3fd52c843bed",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3a6d5c96-4df0-45e5-a0d8-42e7902880d1"
        },
        "item": {
          "id": "ecaf1a3d-b1fa-4930-af99-def6485b9c05",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "68ced326-533d-41ab-b102-a8a15180eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc839ab8-9db1-4a5c-96eb-60dd68939066",
        "cursor": {
          "ref": "4d5449b3-9655-4c23-bb49-fbb387f730bd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "65be3fc6-66e3-4ebe-8f0d-48736478a6b6"
        },
        "item": {
          "id": "cc839ab8-9db1-4a5c-96eb-60dd68939066",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6f1ba588-7a3a-4e30-8139-de0d7802901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550a27b6-e804-4ac6-8a69-c0f756804ba0",
        "cursor": {
          "ref": "0e41b802-6180-4c6d-ace1-283bc06a96e5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "06603e82-390e-4c50-b752-eddad3d0c52e"
        },
        "item": {
          "id": "550a27b6-e804-4ac6-8a69-c0f756804ba0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "57de5892-8818-4d70-9d7e-9dd34d91e5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f092331-f18d-4f75-a72a-2e8e6abc8800",
        "cursor": {
          "ref": "b333024d-f97f-49e4-92b4-8c32db8019cf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3e20ea6d-c570-4cdf-9e95-d6a6a3c71323"
        },
        "item": {
          "id": "8f092331-f18d-4f75-a72a-2e8e6abc8800",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4e4cbb29-dae6-4edc-b5c9-5a9e389a3bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ca79b8-3df3-4ed9-8f34-a04172d3a072",
        "cursor": {
          "ref": "a25541cb-c3c0-4c3c-96d5-93ae7ec4965e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7b560890-150d-4be7-bdc1-14260698bc87"
        },
        "item": {
          "id": "d2ca79b8-3df3-4ed9-8f34-a04172d3a072",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d5a10a2d-7386-438c-bb32-ede22455a0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00755bc2-214d-430e-8fa8-5bd4ddb0f510",
        "cursor": {
          "ref": "9e6a8847-0019-46be-8ce8-604f7b98e5a5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7e00ebe-778a-42b5-822a-8eacb036d34b"
        },
        "item": {
          "id": "00755bc2-214d-430e-8fa8-5bd4ddb0f510",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5b3e73f1-9ec5-4ca9-9f3d-9d14c6f8a02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8e5e7b-1f73-49e3-947d-73c8c54d7d16",
        "cursor": {
          "ref": "422eed80-dc17-453c-a8f9-39b8be94ec18",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8658b00e-9a1b-49d9-b8f6-71a4ccd05636"
        },
        "item": {
          "id": "1f8e5e7b-1f73-49e3-947d-73c8c54d7d16",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c074d9f4-6ff5-4e3c-9d5d-5662ffaad4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31daa7f9-65e2-4fc9-a794-570ad1ac1687",
        "cursor": {
          "ref": "9c9070fc-559c-4e85-8601-ab261d57db99",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c46852be-b915-4c5b-b081-deaeba3952f7"
        },
        "item": {
          "id": "31daa7f9-65e2-4fc9-a794-570ad1ac1687",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20692f88-9874-452c-828f-e1ab4a489f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6243852a-a223-4a54-bd98-1f6a58f5a488",
        "cursor": {
          "ref": "c60d0577-a18a-4df3-8021-7ebc861572c8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "68c474ad-09eb-488b-bda7-cf90629a4329"
        },
        "item": {
          "id": "6243852a-a223-4a54-bd98-1f6a58f5a488",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b120867e-4972-4e28-941c-7da0c6952514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f6ded3-6d0d-47b5-a6b2-3a09c4a84721",
        "cursor": {
          "ref": "f455bff1-c9ab-43a7-9803-24755ee91f1b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "63a21a22-8e0e-4ba3-a184-b21541722ebe"
        },
        "item": {
          "id": "94f6ded3-6d0d-47b5-a6b2-3a09c4a84721",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d9c9a6c5-a134-478d-af35-ef2d3b5ddb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba90444-d761-4e4f-97a3-318621a8dfd8",
        "cursor": {
          "ref": "b5409444-c959-4b96-a9a2-cad74c394cc8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d6977a2e-2f05-48bd-90bb-daa850f25cc2"
        },
        "item": {
          "id": "dba90444-d761-4e4f-97a3-318621a8dfd8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "919228ea-ffa5-4dce-9ae2-3c093887728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd81945-de03-4b2b-ad63-ecac950af291",
        "cursor": {
          "ref": "bb169dfc-7123-44eb-9bf0-2ca23742c893",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "843875d1-ad88-478b-ac23-4b694eda0345"
        },
        "item": {
          "id": "acd81945-de03-4b2b-ad63-ecac950af291",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0e4950a1-93fc-45e7-9e54-99cba086fa1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cb0211-71a2-4843-bf5c-c55de7bd7452",
        "cursor": {
          "ref": "17f2c20f-5fbf-4740-88c7-533633af4d9c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "777c1f74-7c18-4d76-8a2a-a01888acee27"
        },
        "item": {
          "id": "12cb0211-71a2-4843-bf5c-c55de7bd7452",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "269da491-ea7e-455e-9e00-9f6b516aa8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67e42a9-bbb2-4035-b479-5f346acd8b9e",
        "cursor": {
          "ref": "45cd016e-10c1-4658-a468-f120359fb62a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "786e1f2f-1c1c-4092-8258-b62e8d5353a5"
        },
        "item": {
          "id": "a67e42a9-bbb2-4035-b479-5f346acd8b9e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6f65f55f-fc94-4cb5-9355-7850a2f706ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8643b1c0-9aba-4550-9c81-d6186ab64fd7",
        "cursor": {
          "ref": "1788d42b-1134-48f7-8004-e34fda0ff85f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9241ad90-303b-40f1-90fd-5cfc1e57326a"
        },
        "item": {
          "id": "8643b1c0-9aba-4550-9c81-d6186ab64fd7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9ef67d13-214d-4fee-bf21-f75555a48573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65817407-90e9-41be-b85a-c4b554af378e",
        "cursor": {
          "ref": "4ff90b1e-ee0d-4765-968f-3cb4fbd506b4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bd2ffded-23f2-466c-b7d4-4cb17d95b6c3"
        },
        "item": {
          "id": "65817407-90e9-41be-b85a-c4b554af378e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ad32f16e-3426-4821-a467-3d36fe981b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5725af-cb1e-41c9-a819-5d5dea931bb5",
        "cursor": {
          "ref": "8f2ee1f5-a382-499c-b9aa-1de37caf2aea",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d6579241-5d3d-4d62-ab27-b6190bbbb349"
        },
        "item": {
          "id": "aa5725af-cb1e-41c9-a819-5d5dea931bb5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fe5761f4-889b-42a7-a068-67e191d7b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbc30d0-3c8f-4c0c-9768-55e186bbcaec",
        "cursor": {
          "ref": "87f57202-65d6-4be5-bdaf-378d414d2a3d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "538f3819-571c-4d9f-90ce-c9ad28ad6e05"
        },
        "item": {
          "id": "5dbc30d0-3c8f-4c0c-9768-55e186bbcaec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c283434d-30d9-4725-8370-c20bc27d1291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e8197b-9197-4034-b01f-f820379f4535",
        "cursor": {
          "ref": "299bcbf4-68c4-44f6-a362-013529abd3a3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8154b772-8567-43a0-92cb-da6466ec4206"
        },
        "item": {
          "id": "42e8197b-9197-4034-b01f-f820379f4535",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fe9f7566-0de3-4d7c-ad2c-05531eb15811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467ff5ab-1a2c-4a28-b684-d548d3fb0fd1",
        "cursor": {
          "ref": "312006f2-b95e-406e-b33f-66c431f6216c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "05162ed9-897d-48f6-b932-3d862a10a72b"
        },
        "item": {
          "id": "467ff5ab-1a2c-4a28-b684-d548d3fb0fd1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "76623f18-8427-44f5-980a-63f17130c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56f5f63-94bd-45b4-a890-1d18c75de6e2",
        "cursor": {
          "ref": "a7a864fd-32cc-45e4-a5d5-f40deebc4037",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "281dfc2d-0de9-4b52-afa5-3137bcd04161"
        },
        "item": {
          "id": "f56f5f63-94bd-45b4-a890-1d18c75de6e2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "25bac7d7-3c82-4964-9169-2901fa1d0af0",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "1df795f6-e2fb-4ef6-85cf-e907d6afa97a",
        "cursor": {
          "ref": "0877bedc-7827-4691-99b9-891bac61ce4e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "595fd09c-56d9-43ed-a325-d88ab15528f1"
        },
        "item": {
          "id": "1df795f6-e2fb-4ef6-85cf-e907d6afa97a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1ede7598-0a31-4b86-9ec4-7f7eb5bfec7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faab306c-264c-4143-98e4-bb814714c9ec",
        "cursor": {
          "ref": "34acd22b-972e-4aab-9f1a-e8823933d2b0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a2f4131-d397-40f8-abb4-be7acf8d7b62"
        },
        "item": {
          "id": "faab306c-264c-4143-98e4-bb814714c9ec",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0acf2a7c-46aa-45fe-89f0-b81c542a1b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ada17e8-6762-41c0-9190-a5a4053055c7",
        "cursor": {
          "ref": "aa24c742-1070-4109-b90e-cbbe912d1bb0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5c20f831-2f12-4a1c-969a-e7a1c5714930"
        },
        "item": {
          "id": "7ada17e8-6762-41c0-9190-a5a4053055c7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "07b871fd-a35e-477d-9d91-ebf10f5fd415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba33b85-7ece-4165-8b32-c2465ed41273",
        "cursor": {
          "ref": "4e129d71-a0d4-4f06-acba-9bf650f127ee",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "df717c7b-1bde-4c8a-8bad-381933e5a1f4"
        },
        "item": {
          "id": "cba33b85-7ece-4165-8b32-c2465ed41273",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a493fa79-0638-456e-9e42-bcb11251b0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fffcf8-a35c-473a-8bec-5496e7446d82",
        "cursor": {
          "ref": "6cd25296-a66a-4392-bba4-dfff678bcf3a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "11d840bf-b46f-42f5-a106-30fe354df4ce"
        },
        "item": {
          "id": "04fffcf8-a35c-473a-8bec-5496e7446d82",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1f6f5d52-ec29-4a9e-9efd-3138f3a5e3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218404e9-03ba-4e68-9732-059bc6bcdfd3",
        "cursor": {
          "ref": "feb33fae-3c51-4b55-adf4-8c29b710a186",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8dff8572-4e6b-4551-8fb5-3a073ee27899"
        },
        "item": {
          "id": "218404e9-03ba-4e68-9732-059bc6bcdfd3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fc86edf7-a6f0-4c52-952b-b1d6508cb615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30a99b1-9872-441c-b1fc-3826b4a1e7c0",
        "cursor": {
          "ref": "12f0e741-50e6-49cc-809c-8850f2dd2a36",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aa68e351-cb9c-48c8-9f5b-1da315d0d3d4"
        },
        "item": {
          "id": "e30a99b1-9872-441c-b1fc-3826b4a1e7c0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4102cbff-c373-4795-b5b2-ed99c19e1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07297ff3-e9c6-47f1-81c2-7b2fdd8146c8",
        "cursor": {
          "ref": "9c45f71f-ccc7-429d-bd2b-ee9c677b69d6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ac92fb61-3d43-46e9-92c2-01521b40ca2d"
        },
        "item": {
          "id": "07297ff3-e9c6-47f1-81c2-7b2fdd8146c8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "87daf8ff-e895-4fad-93ff-20b893ffef04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231ea36b-283c-4ce2-80f9-8e971c21de03",
        "cursor": {
          "ref": "7b381479-84ef-4550-a4ac-c6e7ffdc4de7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cfc18488-5eea-4795-a413-fe2e7324e576"
        },
        "item": {
          "id": "231ea36b-283c-4ce2-80f9-8e971c21de03",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8c9fe851-da10-4a22-b16b-f2cdde2357b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9255e1-0ba8-4fd3-9e6f-0b027944dbe5",
        "cursor": {
          "ref": "67a1285b-bcd9-4676-bba3-ff0c72a208ae",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "41860e78-0a1f-4d63-b409-5f25817d679a"
        },
        "item": {
          "id": "ee9255e1-0ba8-4fd3-9e6f-0b027944dbe5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "405126a3-e1e4-4eef-b53f-c07840f093b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be7caa1-b675-4e45-9fd7-46419cd018a5",
        "cursor": {
          "ref": "28f07754-407a-4583-ac60-3656228845a5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9908aff3-35b5-43f1-a991-69bc80424919"
        },
        "item": {
          "id": "6be7caa1-b675-4e45-9fd7-46419cd018a5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0deb0f9b-3ae8-4f67-908d-ed2c0e31dcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee801e-02f1-44b1-adee-e7db217a9b68",
        "cursor": {
          "ref": "ca3c44ad-ba25-4ba4-900b-ad07ef6298d9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "49a60278-40e2-4c01-a365-2f31a01888d9"
        },
        "item": {
          "id": "15ee801e-02f1-44b1-adee-e7db217a9b68",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1006d8b2-7c24-4b36-a4c9-2f4e7035d38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d103fd-6f5e-4284-a300-83a4211e6bd3",
        "cursor": {
          "ref": "8487eb2e-5c37-4d6d-999b-957f2a8c5770",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1e85cc58-dcc8-4383-9533-d25e6c0e94ca"
        },
        "item": {
          "id": "65d103fd-6f5e-4284-a300-83a4211e6bd3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bc2dfba7-cf08-4696-a73e-eadd20a4e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a361097c-1f30-4054-8478-493f68f0ed92",
        "cursor": {
          "ref": "4709d860-c177-41f5-b588-37b70aa3c892",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "51bde123-495e-4afa-aa8f-7bdca8c96482"
        },
        "item": {
          "id": "a361097c-1f30-4054-8478-493f68f0ed92",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8d057062-c9bc-4c58-809a-11d3941b85f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2bd65-0c0f-4ae8-8790-d5f05255367d",
        "cursor": {
          "ref": "759ea6a6-89ee-4809-be26-da68d5787f8c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fc522382-8298-415d-bad2-e2dd76d37a45"
        },
        "item": {
          "id": "09c2bd65-0c0f-4ae8-8790-d5f05255367d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1c52c701-efc2-4d78-bc1f-ab9028b62d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932f4208-cbaa-47f8-8ca3-04824864b41c",
        "cursor": {
          "ref": "d2918743-f80d-4194-9e87-3bf2f4f2846d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ebb6912c-f78e-4814-bc11-0f1222547f2b"
        },
        "item": {
          "id": "932f4208-cbaa-47f8-8ca3-04824864b41c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7341f833-3c50-4a5c-b0b1-86d873179df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91787441-9812-42eb-9df5-a27094a68322",
        "cursor": {
          "ref": "aa8f24bd-91d3-488c-be11-bb67a062fd0b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e99b73e9-c02c-4c91-a938-0829df6f7aa3"
        },
        "item": {
          "id": "91787441-9812-42eb-9df5-a27094a68322",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a0ecbc2b-0dc8-44c3-8f55-d47b91c38573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cd2f96-a696-45fc-b00f-874996caecc9",
        "cursor": {
          "ref": "a4b8a971-0364-4d9e-9421-b0e496bf66b3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0685f2ac-8e05-4045-bd1b-f918ac043bb5"
        },
        "item": {
          "id": "06cd2f96-a696-45fc-b00f-874996caecc9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "66fc1318-790d-4f56-88a4-a3fc778a0ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84915b5-2d81-422a-afc7-cce44549e968",
        "cursor": {
          "ref": "08dce32b-19bd-49e9-bf5e-9e8fc63a73fb",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7bb9d1df-df67-454d-952a-4d9cd41f3d85"
        },
        "item": {
          "id": "f84915b5-2d81-422a-afc7-cce44549e968",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5afc7b65-74d8-4988-a12b-eda82ccd797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df39647-ceb5-451c-b2c5-14666c7835a6",
        "cursor": {
          "ref": "ceb9244c-b346-422e-a015-2842c5871151",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a3bb7b33-0c4e-437a-b7e0-115bba925135"
        },
        "item": {
          "id": "0df39647-ceb5-451c-b2c5-14666c7835a6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8e526da1-6fcb-4a43-8a5a-2c80769225c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd174a79-34c8-497e-a9de-010db26aae6f",
        "cursor": {
          "ref": "4787ad7d-ea9a-439a-be0d-755dc5c64829",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "50f5d295-f9b4-4d37-b1f0-886b315bbcb4"
        },
        "item": {
          "id": "cd174a79-34c8-497e-a9de-010db26aae6f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "aa215e17-8f11-4bec-b9d7-1fcffbe16f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6009ab0-31a1-4cf0-a2c3-c357a5516b21",
        "cursor": {
          "ref": "5ba2cb2e-789c-4279-acb3-3ec7c0bf1ff2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "361ae53a-5b25-4141-8076-e07c50637f50"
        },
        "item": {
          "id": "d6009ab0-31a1-4cf0-a2c3-c357a5516b21",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "13f6ef55-88db-4d0e-88af-feaba03a8ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56d5149-7471-4b76-992f-b86d45b8cf86",
        "cursor": {
          "ref": "726b189d-6669-47ab-b150-cf424a96c751",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f6315c8e-17ed-402f-b82f-df4a04483131"
        },
        "item": {
          "id": "c56d5149-7471-4b76-992f-b86d45b8cf86",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a250c821-beaa-4408-a463-b8a60a7c0acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defe631d-c017-4fea-9f03-c3ff6a20bdaa",
        "cursor": {
          "ref": "2bdc91eb-ec32-4a72-bd50-576f6b864cf1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "96e4c2ef-6b75-4fc6-ae4a-a3a13b9b0005"
        },
        "item": {
          "id": "defe631d-c017-4fea-9f03-c3ff6a20bdaa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "310c9ea0-7643-4c9b-9619-3ab437905459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0345f0c5-df09-4cb7-8cf5-9f0448ad35e6",
        "cursor": {
          "ref": "c1a86118-91bd-48b3-9e21-2c3b8685c0cc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e542e4b8-886f-4745-aebe-dcca8b7f0e31"
        },
        "item": {
          "id": "0345f0c5-df09-4cb7-8cf5-9f0448ad35e6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21d2ea2f-dd40-4afb-b65e-51fbc0ed7292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f260deb-7779-4f2e-975d-e2f4408b14a3",
        "cursor": {
          "ref": "70d10b12-621b-4455-b329-5ca7432fccbb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0edcf653-1b2a-48ec-b0f5-a64c9b7628db"
        },
        "item": {
          "id": "2f260deb-7779-4f2e-975d-e2f4408b14a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "24e922f2-6d53-40dc-87c8-4af48794391c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ffb754-82d6-40ba-9fa4-ee457f75c0d2",
        "cursor": {
          "ref": "f5895172-5072-42cf-9869-870d79c3346c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b03b3a97-f072-4ea0-a605-b7797b324386"
        },
        "item": {
          "id": "54ffb754-82d6-40ba-9fa4-ee457f75c0d2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "19e7e80e-2223-4b9b-8032-464b3fad1c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea4837d-f02e-46b5-ab7a-5ff8f56468eb",
        "cursor": {
          "ref": "ead3761a-17a8-4e8d-b1ae-1ac22133a0e9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e73269f8-59b5-4c60-af84-8c837ff6f566"
        },
        "item": {
          "id": "bea4837d-f02e-46b5-ab7a-5ff8f56468eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3e083d80-fa29-4c11-8372-76b208f63a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fadd807-2d09-4403-a365-5728eafd9e65",
        "cursor": {
          "ref": "eaab4c79-22f9-400f-9515-45e034aaf8e5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3bb59895-87b1-4e9f-8c53-052603b558b3"
        },
        "item": {
          "id": "8fadd807-2d09-4403-a365-5728eafd9e65",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8641c9cb-e27a-4dbf-8e46-b5bad17be1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83f5e90-ad77-48d5-a1e0-5578849c37a6",
        "cursor": {
          "ref": "86e61038-55a8-49a8-8be8-0615ad8d023e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "14c6dad2-6a0a-49ff-b683-01200c0d22aa"
        },
        "item": {
          "id": "a83f5e90-ad77-48d5-a1e0-5578849c37a6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b5ed8998-8799-46dd-8f2f-2b88f63bfd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89cd00d-5a6a-4975-b430-6e5871030484",
        "cursor": {
          "ref": "a3b44480-a1ba-4245-b56f-f91942005572",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8a2b3d69-4e92-4cb5-b3da-ee56dadf4353"
        },
        "item": {
          "id": "d89cd00d-5a6a-4975-b430-6e5871030484",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "50dd548f-d4bd-42e3-972a-fc26a1f3f114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8827cc00-d73e-4fd6-81e9-24b69d575c22",
        "cursor": {
          "ref": "b5ba92a8-7f22-4012-aa5e-6070ecf4878d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0f0646a9-20e3-4313-a023-3fb7efd8db29"
        },
        "item": {
          "id": "8827cc00-d73e-4fd6-81e9-24b69d575c22",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ba9e6e6-e8ea-42b4-8a75-7f0079e125fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01e5f1-5ef9-4bad-b724-c35a2718d47f",
        "cursor": {
          "ref": "8193802e-dcc2-475a-8306-2568683e24d3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7f5c8949-bca1-4b31-b0db-78b2570bbf01"
        },
        "item": {
          "id": "be01e5f1-5ef9-4bad-b724-c35a2718d47f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7346417-fbe9-4cd6-9749-5420e039be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb631bf0-ccc3-4659-9c04-e8b2d32b68b1",
        "cursor": {
          "ref": "2443cdb1-66b0-4ce8-837d-982d1e1164bb",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2033f7b1-1f75-43ed-8291-71644dc79c69"
        },
        "item": {
          "id": "cb631bf0-ccc3-4659-9c04-e8b2d32b68b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "94d35cff-fc05-4dda-869c-6227ba7b6b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61167451-d7ec-4dee-b583-a40dc9cb33e8",
        "cursor": {
          "ref": "c96c0814-1fe0-4809-90a1-35722ce0ea9a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ec8fe80d-507f-4546-9346-ebb68b3479a0"
        },
        "item": {
          "id": "61167451-d7ec-4dee-b583-a40dc9cb33e8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5922841-c9c5-45d8-9865-e1872c6c3874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8adb47a-10bf-428b-88d6-f924e495f6f4",
        "cursor": {
          "ref": "91358529-34c2-4b5a-ad90-2ef35d7fef30",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9757b746-bc4f-4c0e-960a-8cc47da20cf8"
        },
        "item": {
          "id": "f8adb47a-10bf-428b-88d6-f924e495f6f4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ca77ea26-bd66-4c7e-a1b6-e02d4ff6e7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36be5ff7-43cf-46f8-bd5b-fab451ffa092",
        "cursor": {
          "ref": "258efb04-4568-4ea3-a019-863dcfbc24a5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e2a7e3d0-ccb5-4712-91e7-be7325b8240b"
        },
        "item": {
          "id": "36be5ff7-43cf-46f8-bd5b-fab451ffa092",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d588c7f4-3846-4ba4-baa9-9a4998a4f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3cebb9-5315-426b-9a83-06144d37acd7",
        "cursor": {
          "ref": "3d75e565-fa8f-4ec8-96ee-e43ff2b70d08",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1d717735-92f7-47d2-9048-cfd435dc0468"
        },
        "item": {
          "id": "6d3cebb9-5315-426b-9a83-06144d37acd7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f9a0620-ce25-40bd-82a9-7c2c4e0b5bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60ed28f-7613-49ea-ae62-d7e3614b6c62",
        "cursor": {
          "ref": "f8656a92-89aa-4158-a2d8-bb4538f9dd76",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a4929527-59a8-4e4f-9bfe-6226e43e30f7"
        },
        "item": {
          "id": "d60ed28f-7613-49ea-ae62-d7e3614b6c62",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c7334d32-af10-42fa-98a7-c4e2a484c4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52038f4-0592-40a6-8cef-609c22af3775",
        "cursor": {
          "ref": "f15d4209-a9ea-40d0-87c7-a211d31cf546",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "78ec8686-50e3-4695-a26b-82e917cdafd6"
        },
        "item": {
          "id": "b52038f4-0592-40a6-8cef-609c22af3775",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "638d0353-d4cb-4895-9083-9a8417bbfbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ef0a04-4478-44ad-aa71-bd95e8198f91",
        "cursor": {
          "ref": "73f51303-d35f-4b56-a0d0-f85a637a4f5e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9ead0fc5-90c6-494c-818c-6b2314dea1c1"
        },
        "item": {
          "id": "70ef0a04-4478-44ad-aa71-bd95e8198f91",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "63caf46d-c0b9-4b7a-8546-a04c98da3ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16da08-fb6d-49c2-86a6-964acdf0be08",
        "cursor": {
          "ref": "b63de936-7754-4c74-a669-ae57bd097f94",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b1bfd95d-be96-4d30-9c53-da21e40d408f"
        },
        "item": {
          "id": "bd16da08-fb6d-49c2-86a6-964acdf0be08",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "050b8fdc-4505-4381-84b6-2b5c112b1fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9318fd-301d-44ba-92b6-7990e8030fe3",
        "cursor": {
          "ref": "9686e6d4-91d9-4660-97df-96ff22ce561c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1a16b322-9901-4767-97b3-d76658d8f792"
        },
        "item": {
          "id": "db9318fd-301d-44ba-92b6-7990e8030fe3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "23dd2a5f-067f-4fea-befe-54117c72d8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02642b89-0358-4d40-a4b5-4013f00a3756",
        "cursor": {
          "ref": "34be18eb-9de2-4fac-ad26-991820c6740e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "48158a91-68da-4921-b881-e320806bdfec"
        },
        "item": {
          "id": "02642b89-0358-4d40-a4b5-4013f00a3756",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "aafb0ee3-dad2-46f0-89a6-e75a47cb6a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5601603-4196-440c-95f3-cf48497b2957",
        "cursor": {
          "ref": "eb6f8ac6-a978-48b7-85ba-764cd270b84b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5373b9ef-292e-4c80-a062-c755dafb0928"
        },
        "item": {
          "id": "f5601603-4196-440c-95f3-cf48497b2957",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae6eed9f-a734-452f-a684-9ba7dfde1659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b53f948-3519-4fda-9a29-a4a830dd9ee1",
        "cursor": {
          "ref": "fd5701b1-44ea-475b-a379-7a2087dfdf3d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b8b3c328-4f9c-441e-9677-4577c7bfb29c"
        },
        "item": {
          "id": "4b53f948-3519-4fda-9a29-a4a830dd9ee1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c8b73fca-6999-4a0e-913b-eac7692b2634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b317d7-029d-442b-87ba-89df41afb931",
        "cursor": {
          "ref": "8d071b5d-295a-4c43-afde-8f6890dd3b9b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0e36610c-1c91-46f7-b57a-82fca2ad9d70"
        },
        "item": {
          "id": "68b317d7-029d-442b-87ba-89df41afb931",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d466419f-d5d1-432d-9260-aa2037d10aff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab52c47f-f3ac-424b-94d5-e19d3f238a30",
        "cursor": {
          "ref": "f253fd82-b4c6-4310-b868-74e41410ebdd",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "72b51d5e-d792-4107-9f1f-d2897a707607"
        },
        "item": {
          "id": "ab52c47f-f3ac-424b-94d5-e19d3f238a30",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3f687778-347e-4f8e-b9eb-1994021aa82a",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe56e16-ce46-47b3-ab76-a5db764996cd",
        "cursor": {
          "ref": "e4f3dc03-1f09-43fe-b586-4534f9b3a731",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "596b405a-f93a-4698-88be-0783419a5704"
        },
        "item": {
          "id": "cbe56e16-ce46-47b3-ab76-a5db764996cd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d6cd940e-1df1-42c0-b400-97f12cdadb15",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be3bec5-d685-4721-8233-b8d433b6acd7",
        "cursor": {
          "ref": "87d70648-3569-48be-b65b-6e5c8a7a0ce9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a9b9ce4c-1a17-4146-ad97-c149a3c77446"
        },
        "item": {
          "id": "3be3bec5-d685-4721-8233-b8d433b6acd7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "91b019a0-7b84-4de7-a23d-34a9c58af9b2",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201245e-5e4f-4c66-b978-9a0754cb6611",
        "cursor": {
          "ref": "bda1d8b2-6a11-428d-a946-7b77b88dec1e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ac4569f1-b7bc-4e2b-8bd5-37cb158c385e"
        },
        "item": {
          "id": "e201245e-5e4f-4c66-b978-9a0754cb6611",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "305a90ef-e539-4755-86ba-2fea2db6820a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201245e-5e4f-4c66-b978-9a0754cb6611",
        "cursor": {
          "ref": "bda1d8b2-6a11-428d-a946-7b77b88dec1e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ac4569f1-b7bc-4e2b-8bd5-37cb158c385e"
        },
        "item": {
          "id": "e201245e-5e4f-4c66-b978-9a0754cb6611",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "305a90ef-e539-4755-86ba-2fea2db6820a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d06d0c-4600-4c3b-a0bb-a99f5702813c",
        "cursor": {
          "ref": "81509a3c-b91e-4d51-b1de-d2743b3982dc",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bdc40655-9252-4d18-afc7-c94b946ea5a4"
        },
        "item": {
          "id": "92d06d0c-4600-4c3b-a0bb-a99f5702813c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "88b7dbbf-59fc-4869-b6d1-e6ba9d8583f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee032fe-6177-48d6-a181-63e5efbbae10",
        "cursor": {
          "ref": "c4b64063-322a-4110-b68a-ecdeb3e9d158",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e496a4d1-f06c-4ed9-bd60-b2569896b04f"
        },
        "item": {
          "id": "4ee032fe-6177-48d6-a181-63e5efbbae10",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "38790312-53cf-48c4-a463-2312f4d7aca0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}