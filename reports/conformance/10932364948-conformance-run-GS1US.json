{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a2247bcc-e05c-4d2b-a8c0-2b126de047e6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e335021d-d504-4422-88a3-e74e2abfc6e9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1af6d2e-5bf0-4071-a941-5b5eadeae3ae",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ec44f8da-90ad-4256-9e18-05ffc41e4d66"
                }
              }
            ]
          },
          {
            "id": "36056b0d-78b4-4f40-932f-f735f5ee79bd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3dc148a3-f563-4a0b-a8c1-5201bd1c127c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9532ec97-2a01-4999-b041-efb36659d250"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aaf106c0-aeca-47e0-9a59-7f80bd144c0d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "51d46cca-f105-4f21-9a0d-d665aa889c73",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf2faabd-435f-4980-b77c-85c9b1329e5b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96157874-182c-4c46-82c0-07f553fb66b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "941fd4be-3200-444b-a2d2-e8243af071c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de336119-e616-4c46-aea1-44a0652a9993",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c886286-4aa7-45d0-802f-9531f1df1ef8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b06ebde-d39f-423c-a146-461338dcf131",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1d9901a-6e82-4eb8-b394-75a814af220b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d618396-b0dc-4377-878f-f4c909241a3b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bcea0817-5c61-4b08-b161-740c8e21eafb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4c4fd55-6c39-4eac-a636-55b40f34581e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24658ee2-71da-43ee-8237-5b5032d8de44"
            }
          }
        ]
      },
      {
        "id": "e897eba6-23f5-4ac9-9ea5-416eff186f4c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "58c9657d-785d-4d15-8710-655c41ef6212",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f7c6cd3-248f-4cd2-b0bf-796b1dbc46ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b632c6a2-0d4c-47a4-8423-da86bc724c49",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0550cc3e-0c2f-4f49-a6f0-9c91aa813708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "189b2a38-0543-427f-bd5c-2a0472448b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e0d246-0a74-4000-b9bf-3e5f8157acca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8e1553-edfd-4cfb-85d3-9520a35ced6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85748c79-82f9-4769-9f82-1d7032403564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c97b320-15c6-4496-a135-a0c8024ee11e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6d43ea-3592-4213-9b8f-8f676a65f07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7745ef28-82a7-402d-9a59-e4d9c5410b86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d949563-b715-45e8-91a9-2e18fba9d077",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5742b664-8dd5-4a93-85c3-f279d755d468",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4edf7bd-c919-40ff-961a-7c90237a9bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc99a693-b053-4a4e-ae04-281233958aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181970f6-a94e-4c68-b96a-425bbfe67286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9c8362-deac-4cdb-a891-5d3d4505d0ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4e0591e0-f703-44b2-b9c1-f05a2d16d2a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62dee0eb-787f-404b-bfbb-e8d3c444fb37",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5487cdeb-e49a-452b-a619-a611a17bf8bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "95a987fe-4a74-4f6d-9265-7e3fe5d9ea22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cbd31e7-484c-4bb0-b11e-ad861fc431d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "18839d09-b342-426e-b08e-75597003b59f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5744a6c-d3c2-42e5-974b-c99e314304fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bc6556f-de69-4b10-94e1-e5a76f221927"
            }
          }
        ]
      },
      {
        "id": "d9f10fc4-0b1d-4a1f-9752-b85bfce23101",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3983dbb9-941f-46d4-8f48-eeeb87605980",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19255c8d-e542-4ddf-986f-2a4c38d10ca2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a6b91624-787d-413a-b637-fbf7dc0a64d0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2cf7ad-e43a-44f0-94bf-7a0f8a6a390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20dcfb2-0942-494f-b018-736c48b1d221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daa0b37-a4f2-4a44-85d3-ef65d0c06ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3be7d792-7ab4-489d-87ae-c3bd99e8a93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7142fab-3abb-4738-8a4c-4fe3021885f8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fdd849-ab5d-4409-b0bf-3d5b7b2aaaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66215561-8e94-455d-9ab8-1d77dad97ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9339c9-4f1a-43ee-8d11-c2e263d9778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82b67196-14c2-44fe-9cf8-fcf0fdc1e8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb737f4b-2fbc-458c-8fb4-0ceb38a96cdf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285e06b8-ea78-4379-ac9b-d2be50b7e01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02b8845-8069-467b-bd2a-28079a4ebf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce71e18-3c44-45ad-83bc-f86984653fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "285a9a7e-326e-4b4b-8adc-2124136c9f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cef3714-ad7d-48e5-8b55-52ff92012b9d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb41ec-55a5-4984-81e7-98b4e6a4462c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8830319e-9104-474c-b20b-9b81cbb8bae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4caf474-61b9-4503-a093-f1af96e92270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08b47aef-75e1-49fa-b61a-570611cbc307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a294b296-6b1b-4042-8324-04df8815a2d7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0aff43-03f3-460f-a9c0-53d0a1e74efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64011869-00b0-42d0-b4e0-314568ff6eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da24548a-552d-4c99-988c-045d21961b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a07a3d-9717-4a11-ac59-54a6fa738ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36b464d-f337-479e-9aa6-add2997da7d3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75af9cb5-fd03-4e21-ae2b-4b05e5f81cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dc1b45-91a5-4048-b24c-b11c5ccebba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb43c17-bd75-4a18-83f2-f8ffb36b2f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f08c3fad-4a11-457f-8eea-4d3301e0f322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536ec03e-8564-42e0-80fd-e7051bc8a517",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cf4a95-bea6-425c-a4f2-15ec456959ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9df8dfe-30d9-46bf-a9d1-e411ba32783c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3c43f7-1bd9-422d-93db-e14e8d81c3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dd82a23-6aca-404d-9ec9-15ac366f0b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b0a77d-e99c-4744-bc4b-67240e4a222a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a74c7d3-1eb1-4d54-a81b-bccca548fe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c647962-f34d-4b96-a669-3dea02e32949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe90a58b-16f8-4026-85fa-8e827de4b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8f64206-9b3a-4861-bcfc-5416bf55f1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b50b9e-87b6-459b-92a1-4988e674c6c5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83363d65-032d-49ec-9db8-9d8bdda962de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6f0578-8c3b-46db-9c2c-ba7f71d90f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9ffd93-2857-4654-b104-bb12d4a60295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2e9186c-2683-4b73-818c-a0e4baec8e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49900630-3bfb-4134-85a7-083b1406eb59",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211eb389-2149-4546-ab14-46fd848671f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf67b1-ccfc-48cc-99d3-3dd35877293e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f21c6df-c99c-4a6d-86d5-95733193f9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65f1d8a8-980d-4bfd-a80f-9ba8e1ab0f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2813fcea-63c3-4cf5-9d59-c52b8dbab4cc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93303bad-5fc5-4469-b427-a8621e3577b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa4e174-de45-4656-8caa-e0a38464d49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4733e5bb-1379-4d6e-af83-a858eab6b44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3944454c-701d-4a8d-914e-24390375d974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e91ee28-444b-470d-bcdc-dca0b7b623cf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c1d263-e662-42f3-bf97-3ea5aabaa714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33d3b6a-2cf4-46fd-a627-fb5ef90bc04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d34f84-ee70-4e40-9507-2f5cf64dcf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc20d4a0-baff-4bcd-8b8e-ce44ed36e7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bfbcd5-5d3e-48cb-849e-b33a1f61d235",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea94385d-a5fe-4ce7-816b-873d31c279dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ffc0fd-7eb1-4f7b-9c94-f518fbbc5912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f031084b-5962-4f17-8d77-a776c6e1a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80a08587-ac53-41ca-98f3-326d28b1f58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62401ce8-4870-436d-8b49-87e98f6cd221",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ca9eaa-0838-40f0-ac5c-b4ec9bb316ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2632c15d-4ac8-4215-a7c6-a6db7896052f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3204e62-6007-46df-a9e1-8e27051de8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc3ff15c-f8b8-4dfa-ae12-4946a5bbe806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983622a6-0b33-4dd7-ae2d-97d771535acc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf09b68-f836-4b17-a2ae-2b1c18d3e41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ed7cd2-ad1a-4134-bd53-a76189fc722e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208c0187-76a7-4dd5-a798-e1eb84d8ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35cf94df-1221-4d5f-9f6b-b86be08cd587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34dcae5-e951-4662-93e1-b4acdcdc3c77",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e630adc-75cb-471a-a91d-3ae91e43e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f3bfdf-a19a-4354-857e-1e2df6096a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4e44ad-ec27-44f8-97ef-db78a50c76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ec2f92-43a7-46e1-b74b-5cf104bff52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c654edaf-83b7-4d90-bb5e-fe0a6722ab59",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91617d52-701b-4f67-9125-650e33001209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade4ff3b-1534-4717-b961-1b5b0e38399b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbda9cd-3658-42eb-84cc-1282beb2328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b1745bb-7d66-4b08-a4ff-3ff5f772e54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e3cb30-2101-4e85-8b3c-6ff54447ec9f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a94b5e7-7f95-4b90-a4ae-a5e730ce6958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdac234e-e9ce-437b-b7a7-816acff0b4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68abfc90-197c-4ae5-824d-c71eb669c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6c072e-f2a9-4394-95ee-0db174e73bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1e4d1-a16d-4a3d-842d-fc393b042e5e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b8ae99-b412-46a8-b6ba-8501b20e6c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e5c530-d88a-4ef7-969a-84472d3d4d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecf330a-5370-4ccc-9045-aa09184ec47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9bb89c-adaf-4626-b65b-29fcf2aa23b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1102b592-1467-42f9-86ca-0a67a3711207",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f148116d-602f-4871-9291-56bf717ad800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146575b2-a5af-41ad-8cfc-4b3fd0e1b504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed22db-1f74-402b-8d90-f1ad50c2a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f21eb70-2d92-4119-b974-52ad86611c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4eb242-72d3-4bc5-8759-173e8c9ae75f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcd9344-7298-4b9a-b21e-1b916bd16f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa51f283-a6a5-4ed7-9a9f-3ca7935d427f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bae116-8b1c-48a5-a368-e0a3233bada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a61dca5-404b-4106-b07c-16d1c0db25a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0731d9f2-93d0-4e47-994a-42bd490de8ec",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ce779e-f54b-4a4e-b057-65182f16ca3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d59265-8a87-4ecc-b12d-6ebf4d9224d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7df478-96a1-4b76-8a72-e519b391b251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "575b193c-4892-4d97-af2e-f9f44b96a8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19f5f88-163d-4ece-a17d-728559508559",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211f2540-0b61-4b46-87df-869939c006fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f556027-d3ed-4594-b4ca-0e7b9ceddfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef47e55b-0bf2-4062-8370-976a9a2c03fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02d4fccb-9d9b-456a-854c-0fae0c0cee8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a543813-0c84-4b80-9b15-d8d4f5616032",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfea104-001f-47d3-b26c-35dd00c8ac95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccca14f-f584-4cc5-8f00-e780dce6032b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a58d783-185b-4943-a4c2-2324d60bf09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab89add-7b5d-41ba-95a6-e6577508e017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e9806f-5e08-4d1d-bf73-d97f159b5376",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f17a04a-f970-43a8-a261-ea9e62a75ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90132181-7e66-469c-aca7-8aaa04ed2a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870ae397-770e-4aff-a188-9b093fc324d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6f5e8b-cd12-4f35-b387-198181296265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293255c9-92c2-4da0-bb61-38579bbcb27b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8612b5ab-3550-42d8-9de8-4536773fe9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e2e8a5-f947-4c68-a501-de3e0c88bea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1efe75d-e675-4795-b816-2f64e8568ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c33082a-35a8-42c1-9fad-0a8c40694a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bad52ea-4f98-47af-a4b8-ed9d0cd10467",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdd04da-e67a-44b5-9f5a-4bec19305e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b303694b-bb2d-4464-b098-6c99fb3adeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b81fb67-d49e-4c9d-9f27-d057488d57d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01310362-c6cc-4fff-90a8-cda0c56e7e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227c9364-6775-49a7-b8b6-8f6ace16f5cf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b047e4b3-da4a-437d-94ea-53c2fa63850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aad5ff-61cd-4c11-ba1b-acb444dfe502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e7e134-be83-40ed-96ae-48f79caf00e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8693b7ac-0db0-42a9-9632-300650f1eaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051d2182-a247-45fe-b9b9-3521cb1701b6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775678c9-2ef3-4312-8de4-fe14e01dcc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4161e6-e795-466e-a567-b2fe4595e8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a592d4-2d20-4681-8bca-658c2f291b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79247f05-1ab0-4d4b-8a43-83fe3a68afe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f691953-b3c3-4026-ad71-a726aa3548c0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813457dd-b263-4cf7-b627-c00c2896ffd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1756c2f-7e56-4e62-b2c1-737903d30a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0664e7d8-8a61-408f-be2d-b03c462ee84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d5bb64-5548-4f89-8b03-d171d0ddf089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678eb64c-0f73-4ad2-ad25-fd9b26187f33",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd75d5b-d849-4046-8276-bfefa8f428d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285c48d6-6ed5-4dc0-90f6-f24cd71b0e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0838d031-bcbd-4813-8823-ce7511a9ae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03829e34-f2b6-4152-b18b-1f600a39fe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a25e55e-b809-4491-b7f4-1d7ea9914069",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d04942-3561-4904-95a4-a39104993022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3a00cb-1589-4bd5-87fe-b7100b8d0929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642b6d6e-138a-4f96-ac04-d9a5819452c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b25f80d-02db-4b3f-9cb2-d5bc70f3bcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3df13f2-f1af-4dfb-9fde-ca9200782270",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ceaf62-5d69-4128-9bdc-a057eddac1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb780ee-23ca-4427-bad6-4cb4e46b69e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245b885b-22c0-4b80-a8aa-0685f1888416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a79f8510-eefe-4302-8122-b0d7c98383d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486a364d-960e-419b-8852-ae0979d5a66b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8779f8ae-49c1-4036-b9ed-6eea2cca7384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3d4e12-f231-4e0e-842c-371c353976dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148dd592-a267-4f7c-8b32-304f5a1ef2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7beb09-e385-4dac-b716-c96f0cf21020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fbc09e-e618-4358-8bd9-ef9b01e4d3bb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98de3ce-05d6-4bec-a4d5-594678b9e534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e02063-a78f-4cc4-aa30-b52cdaf02c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c43378-afd2-4ce0-8b32-d166aaadbe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "434684ee-0c9a-4935-a492-67c76e85f64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10a5764-c6e0-4c26-bdb9-c2b35bb07a83",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1d5014-110d-4fe2-aa93-306b2a9c3433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76e35d04-be79-423d-915b-8c08f1b33207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ad913e-bda2-4aa7-95fc-df8ac62d8633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ddcd18-e9e1-41b0-b185-8dd048d0ef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afda4c37-1181-4e1b-bd98-dc3cf83d6092",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e3d0b2-dde3-437c-81d4-23c03e2371c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5a2658-5f9b-43e3-9de9-d37c7c0972ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b401ce-e4e5-4bb9-b91e-299eeb9a762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d575ec7d-8c9b-4fb3-ad03-d1d4bd343347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96284d8-9ae4-4ca8-aa06-151b99095c97",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d08bb73-cb44-4765-800f-cf31595b44b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8473b89-619b-4435-b61e-999d211021fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db2da80-823c-421d-b9f5-9ae1da4b5251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a07af5-f764-42f7-b00d-2467f550b20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb27b5d-5c12-476f-810d-8ec6d32d9433",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d062ef6-5cc7-4b18-88dc-12345c72e492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7c1c00-5019-4885-8c6b-e7953a499b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5e918b-389c-4d0f-906d-17deaed10c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d11a4f-c05c-4bc4-a987-05e5289caa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf34074-88a7-48dd-a556-e4c8df723178",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806b74bb-5fb0-481b-bb20-c3b34fe870f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb328cf8-0781-4a5b-b325-52f4f4aaf967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f822300-f42f-4318-892f-ea4c87ad9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "18b06f49-9dc1-4077-b393-805ef432ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff51d2d-f55e-4ae5-9674-749d000063cc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b94e6c-075e-4567-bf66-9691d5451ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff927e6b-15b2-4f33-a7b3-97c73d5e1abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2afca7-8e5a-415b-b093-b2750078a2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "27395716-aa8c-40e2-8edd-d126d2fcd365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61673eef-a039-4648-bdcc-07782ef2206a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f267120c-90bd-4567-960b-1582c2a22d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1fefbe-a539-4802-a4d3-d90448957ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4ea9fc-46ac-409b-9822-5ab88cadef10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a34614e7-f405-4257-a50d-4eb55f571294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b8c7de-cf5f-4bf2-9ffc-b38f84432c20",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8bc773-6d30-4d10-99f9-edae8c24b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a970c0d-8583-4365-916a-af05bbcb90c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc63e7-853c-4912-b66a-a966268d6552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a20a4bda-1e4e-42d2-8702-f4aca41b0dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da4d443-fadd-4557-a8ae-5a2992f69210",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de01ae19-9d5e-4043-841c-7e1fd9874669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffdc2be-b67d-443e-bd4e-4e88847e040a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba60862a-61f9-4a49-bb0a-4977724832d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a61ab0-12d1-4823-b351-b3cf2d4027c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52666cd0-97d6-45d3-bb86-b4701ad351ad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b6a336-1a75-4c70-8219-5db87ef999e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e860780-59ab-495a-b5a8-b9e9f1e4816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653cac21-eec6-4197-8da5-db2d5ec54920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4941fb83-a6f9-4314-9b28-7514362b04b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f53e52-eb2a-4939-9035-eba415e60106",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266ec95b-919b-4cec-a789-867f5eaa58ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8960c66d-1021-4ca8-a5d4-e1a61bffb173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35d1d6c-3ce1-4098-a127-c4dc9cfaa64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d6da18-6c44-4011-8068-7c27c8f85a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5439875d-4f46-4e3d-a0dd-014a9900ed8d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b0c571-a9e2-4f21-91db-56f9942b4c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee204892-e098-49cb-8ba6-9e8d7355ba15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128aec87-ccf9-4f29-b846-bf45b5e8c6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9810c77a-b965-47da-874d-36076978b561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c0d949-6990-4f4d-9a9e-426dfe286ab3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a2d64-d1af-4221-9648-37074474ee78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8429bc62-425c-41b5-a802-fdcf452f2dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950db1ca-ed20-40a9-b6f8-857f86837e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b662d3-426a-456a-85f2-8084ea698ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2f8966-c77b-447f-9d46-580c3b6e60f7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856a6316-65b4-467a-8a32-4b778b12f5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8108d3-a375-4687-bd9e-197e5798d1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d56fe5b-5016-4f09-ba14-28daefb553ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da35421-ad5d-4453-8a85-9dd543b4ca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b3ca2d-1a30-44c5-99f9-cce323cdb8f4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515b1b24-fb61-4b67-9ba3-bb19de4f8b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee87d6e4-0cc4-4076-a308-8d6f9787c8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41055acc-5c1f-40cc-a8eb-485d33158978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac209a50-b8d1-4f76-bc0b-018e87e44b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad42417f-2f72-44df-826d-714311d2a27d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02da19ce-9077-4550-b838-e7508d366f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1633d98-6637-4137-9582-2e0f0810056a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b521ff-a909-47cc-b786-873a1f9ef403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "670725fc-9cb0-4128-a854-bc5fcae42420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4532a-3532-4dff-a3cf-ae410887a069",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64573051-3d59-4be7-9ba8-5880f2fa430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b4a561-3311-478b-ae90-d1dc6549bafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34ba51-ac5c-4dec-8bac-8cbe310d0b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50be3b7-472c-4bf4-9915-7fb32b9b3021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f079ee9c-5f5e-42f2-8190-7fcf996e22c7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b9c479-ad04-4acf-853c-25a08572cde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d780e3d9-0473-4ada-9024-f17b664b83ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202a3c66-505b-4d14-b512-b41bf0b0372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e708fe-b25b-4de3-b6d5-48979f51e2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da27716f-735b-43eb-b5b1-b4b92eef451e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd33d028-2b02-4d56-90ac-0b40942cc20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c04fc4-9c4b-4ff9-80bc-4bd5f72731db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e912ce2b-b773-4a0d-acd4-a5c59ef722ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db1aee3-b779-4564-a029-6623e3a9e735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827b59c4-7900-4efd-b46f-1c362cf8061c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19132345-c681-4a3d-8e66-6b1a0f49bbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357ef208-2956-461a-83d0-54737d7235b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ce657-2bf8-47ae-8ed5-0a4a52f29488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f444934-7353-49f0-a55e-7275a00ca3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058a413b-139d-4039-a153-2871972f4528",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4119d5d-351b-4e1e-bcaf-01d9beba3ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16c305b-c10b-4923-ab40-b71deba38401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a5425f-ca83-43ec-8b74-14c081333f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fee5de36-fe41-430f-80c7-4dba1bfa094f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996d23b2-8956-45f5-937f-5496580d2f74",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fffa86d-4df6-4df5-adf9-a9fb9239f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5245741-4fb3-45f4-b657-5d90ed77bf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b8c918-d4bd-4788-967f-53fb638c55e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcfb3e6-d3d2-43b7-a915-71dc1b20bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddac38d-c426-4287-9bbe-8368ed2bfa59",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693867d6-b24d-4f23-afc9-ceda14aa1cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87875089-a318-4075-bab4-f9ebb5883c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa4c803-1bb1-4fa8-a687-7f2b61d830a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68584403-e5a7-463e-a41e-af4707dc4c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529d1cef-f636-430e-8e31-79c5e133dd1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8260cf-271d-4032-a575-0aad2f6c9443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5089f509-3c7d-469e-b5c7-20bdb9a5b967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e096f0f-32ee-4ec6-956d-803ffb6a20a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72091fc1-ed17-45da-9fd8-b9b2ed66752b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9bcb7f-086f-435a-bd94-31916a8c3075",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9641c771-b3a7-4a6d-a4d6-f20f8590c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622f2b24-397c-4ecc-bd2b-404e383a8dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dadac5-3479-4355-aa9f-7242951f71e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a32cc29-fdeb-4759-ac5b-7b178bf01379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66e6638-a17e-4288-b3bc-4c268a1b8d73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc3b79c-7517-4856-aa12-991b39b26cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb50c029-7dc2-4cfe-96bb-079d096b4b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31733eb3-71be-4c9d-a58e-739b2e565caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "14156126-53f0-45c8-9fb1-32875a95d2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839bd583-cb9f-465d-8e22-293af45791a0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53421c63-6814-4c17-b72d-c5fd5234046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfe97c2-c7d0-4e0f-8429-372d17e9a14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b6090d-5095-4587-a511-6820a3981afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "524400be-e959-43ed-a9c6-f0949f9d51d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b4a6c2-147d-48d8-94d8-7c61bed87793",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2021e9-0817-446e-85a9-40f6ab48baba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ecfae0-ce7c-4095-ad00-5c9fe9c78dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b56ee08-7ca2-482e-a568-ded2f5a76ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa81d05e-f15d-4130-adec-44f73fd6bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa57f712-f1bf-4583-bab6-08096810d0b6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863701e2-7524-4ba9-b39f-5b025e033b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53acfc17-2df6-40b6-856f-1773fc95a309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68609e1d-33a4-4930-8e01-77187e465cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6dbaff0-c3b0-416a-b18f-877ad059d61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06918454-3aab-48f9-9b48-308f6c084040",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b2cd14-d2fe-42f1-bbe4-0cc0fc747af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb03024-5f66-4543-8b97-8c753a279872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d037afc8-4bbb-4597-a3f9-8bf4e86f1a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8496445d-f76c-456e-9b28-7f635ec4dbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7ca41-6ecb-4158-abb3-a19bcf6fa126",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8203f4-6986-4ea5-a17c-43a819ade01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157e0063-f40d-4b99-95c9-d3183969c1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f023907f-dfc2-4ba0-9c5a-7c06a58f8b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd00147-63f3-4911-9689-39ea0e3bf119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643f670-c9a4-43cc-a062-543659736247",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcbb5f3-68a9-4f37-a33f-ebee904edc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fad89da-d9a5-49de-80ee-603f969c87c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef2d464-cf63-43da-ba49-bdd2a1a81555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1120721b-a7f3-461c-905b-12e5952cd2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8744f8a6-9879-4854-a3f4-394b490f3022",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b680564-a3b7-47cf-a95b-65ec0023cbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd38b036-cbc6-4094-96fd-f98f7cf4c389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7bdceb-62f3-4536-8424-092ad3d64c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7c782a-db7d-4b83-974e-0f185ccc274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4aaf6f-4ed2-4bb6-93c2-97c0fc5ba12a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987814b2-bec5-4eab-8a18-8a2aefa7e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deff7a32-641f-4702-b178-fb83450d8273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cf513f-c958-4ef6-9a04-f6d178991b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f189d5bb-e0c1-4228-9a2b-254c54fff0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98464cd6-3be1-4fe2-a1fe-bc113e60b111",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4339a21a-419f-429d-9565-3d2a059974d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cf0a90-d0db-4710-b709-b7f2ca9f7965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252642f2-00cf-4754-9fa8-7fcb19440e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d922c1ae-74c9-4b91-99b5-35e42bdf68ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638af3b5-7821-4319-80ba-38ebfcf758bd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b852b9-fe77-43f7-8357-35fc218cb462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b2da3b-12ef-4369-a125-58d2bdd31c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033f3ed3-76c6-429e-9f4d-958f83b08837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6739096f-11d9-4e97-a0e6-4c9d67755360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71eb7d9-bdc6-4fbb-a178-a4327421545a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84836897-2df1-4548-b54a-8e2b0bcd0d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac49a34-9256-4163-b2b7-e2df5af4a904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25d667c-0c8d-4cd6-a8ba-d6b0e2db5743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3074a733-cad8-4d23-b5d4-3165165a9774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea35b84-bf91-41b6-819f-c3e54deec796",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f802c077-4ec6-4d45-b1c7-4e76614b3d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ef8e84-a141-4f18-902c-48ce25a9ef5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5feaafd-6eec-4b85-a243-966dce564620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57321e0c-8859-4684-acc0-a70f57dcddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b71e9-82b7-491e-a231-1ed06caef6fa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd3e947-69b7-4c72-a032-9425c2a1a8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46009ea-6be2-4089-b939-37011cbeebbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03bf7dd-950d-42c1-8939-4775b059d23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8e20c0-7f21-4bc6-8b97-4027ac7470f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a48d38f-ee37-41a0-8dec-d497413e58da",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e447a78a-28a5-44c4-92d7-0b6be14c15a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649a7c3e-ad7f-4e2e-96af-1c9b89c38971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992bb91c-5664-4319-b890-cdb07ed194d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8373910-159d-48a3-ae17-ddb9798c8435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaa3050-1c2b-478c-9ab9-d0387ac76c88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b69e4bd-1421-4ad7-95a4-c10b87b31f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cced4c-c6dd-4b27-b32c-a6181c6412dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ab8117-ffe6-4ded-9a82-4a2a0b7265b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11000966-f85a-4836-a050-70a135b3ad1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45337515-7b3a-40b7-91ae-1b8d5f42cdb4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67993348-a778-4af5-bda8-24790f55730e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d609bf57-457c-4a14-ba59-db42ac51c613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdd342d-7094-4e1f-830e-caca49953015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6007045-f2cd-4f36-89a6-e6fb8898f5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb0e632-77c2-4405-80bf-ea8c3354b593",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773a9822-69e7-4c47-a257-bd5fce20f59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113cda48-f603-4f98-8f1f-9672b220b260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd63792-494d-4e62-ae28-7c3a8a17ee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d28e6af-1691-4679-bbc6-d2c3e5361f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576e510-ab41-49d6-8a73-fa089198ad1a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9987b648-56d0-4817-9c2d-a0bc0e264c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d556e9-1f69-408a-9035-5664e61e58f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e187c6cd-1c8f-4c37-a8b8-7e8a3dc0b595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9eb155-986c-4811-89c6-f10a57ae93ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef001eed-6227-46fc-9f38-ff8981a71968",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5188b2-fb4a-4907-87f9-28dbe5d2a88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eeaabe-f15a-4bcb-b9f3-bdacc915a9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77de97bb-778f-471a-85c5-dc70bba2bac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cd06ad-5baa-45dd-98a0-eda46346a2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9099a62e-2196-4f73-93b5-bf265518e2f5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaa6b13-41f7-46d0-803a-418e34136784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc70eed-cb9a-4faa-957b-6a2473e253ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc131dfd-7ef8-406b-bcc0-3837ffd530c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98610fc-bff4-46e9-a4ac-65e2d44263ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e13c02f-3ce9-48f7-8f4c-5f1f532e029c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11956ef-f9e2-47dc-9da3-48f038a5630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c28b70-d4bf-424c-af2c-ee0a29d61512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65f7c27-f6c6-464b-90c6-09f00c0e153b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6f7016-e5c2-44e9-afee-be0b1ca75ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df28fbe-4c7e-4904-82c2-1005d5378d06",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73e9023-7289-42f6-af6f-b74e0cfccafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903eed76-b05b-4f36-b0c5-f3f627eeec40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcaadc3-8f49-474b-897f-0286114afc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1b0a29-d506-4807-b940-222efac7518c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc115385-4376-4862-93cd-35e83a263c13",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b47ef73-2cb3-40d6-869d-f34b41d069d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32615e87-1c74-4ea5-bffb-5720416eb48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48949f-31db-4a60-ac52-7e377ea6090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8e2edb-c4ca-4091-a1d9-f84b0d1f71ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f83a70-4aae-4f15-8b49-e371a787e771",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30acc104-8534-4797-b8f7-0a61729d683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a399c3-d80b-4cb1-962b-854f5902fa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a863aca-fa2b-4354-a14f-b1a7258210d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "888c927b-4d1f-49dd-ba4c-1dec8e523977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23fd6db-ae64-451f-9b28-181e0bd8a001",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4ba47c-41ee-4095-92dd-70fa613e4c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4f7a2d-d369-4182-80fb-87f7c6ddf7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6919702c-76fe-4467-be12-37b0ebaf692a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcbf049-5492-469e-bec8-92da5bf562c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd1ca7e-a377-4439-b3da-176a51e88e1b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54288269-ff5a-4246-8ba1-b1c165875c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71e5585-e77a-4386-afd0-5977e0cd6236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de81220e-3c29-40c9-848d-5ec11bac2348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc3543f-eb50-4fb4-9d0c-f4a54fbbff60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c3f188-ded4-433b-b94f-3059857a9605",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45b5463-4e43-4c4c-94f0-c718aee530bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4bc32d-cbae-4a70-96eb-634f0847f2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0356782b-3b92-4bd4-82e3-9506281bd712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f2e533-e5b8-4a38-bc05-d21fe34a2aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b6e05c-de15-40b2-b814-d9a6322196b4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcb7836-f54d-4aca-a4a0-f2a99ac910bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1ad63b-3e66-414b-a6ab-cd765b6fa90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0f811f-df00-4c3b-8c30-eff65c15d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6259eb-9633-40ba-820b-63b83bf0a383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87be6f42-1f51-46d4-b245-5174c646c21e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598d67b4-8a9b-40b6-ac76-5cbeb2c8caa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3393a7-3a03-4e20-8d81-0efb87694e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f6095e-a310-4f34-b94d-f305a98cf271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45c8c107-d12a-4895-b6d3-1df44bdf667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cee5e0-1ff4-40d7-8567-a09db1f50901",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a761e-94cf-411a-ac2c-4b578409e9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167c0d58-c64a-4e75-9eea-6368cddcc469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae7a704-4d28-46ff-ac2c-610260f8586f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "45325deb-b6b9-4b17-ba3d-4701f4eddc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df0abad-09f4-4e9e-ba8a-ed4bf16a9163",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a37caf-dd53-4a8a-baf9-af12b2d80ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5b86c1a0-629a-4433-9358-4716392ec114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d296e8-cd87-473f-bafc-226516f119a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b84a7366-764b-41c1-afe5-c5d54ba17a41"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7841980-e72a-4e2c-8fc3-b36c2f75bd35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24b72673-6bed-4d11-8baa-9b05fd7bc756",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102c90c7-ffb4-4a4f-8f4f-928fe58b76ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eced5784-7fe2-422f-994b-a79cfbad1004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14c18f0-d2c3-4bc7-91aa-2964ede55d8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8df90260-fd7a-417f-9726-79db5c9e43af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57ce743d-df00-44a2-8fbb-1616094665c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f083f424-f529-4555-879e-c699d8117bac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eadf24e-34e3-4ff4-9db5-ca22c415cd13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4709efb2-b2e9-42ff-b708-ee991c572a57"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1d8044e-505c-43db-93ce-58bf496a5b01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e4d899a-eea7-4ce9-8cc4-c872a335d373"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea7ed00d-c756-49bf-81c5-f19db0dda9f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "806105e4-5786-413f-8da0-07ffdcad4b9c"
                }
              }
            ]
          },
          {
            "id": "2a978519-28a0-49d8-a2cf-0bde6ceb8758",
            "name": "Positive Testing",
            "item": [
              {
                "id": "244039d8-dd04-45a7-a4d1-865f584c1f10",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cf9e7184-e414-4417-a79b-1a866031fd5c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ee9991-8959-467a-bae7-e1ac57238353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "916afe92-e827-4c34-9888-0054ed6f7adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b364aea-c966-4ab5-934f-fd2dfc2456b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d6dc71-a7b3-48b4-9d91-931812e5c1e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84effc00-72ae-4770-8a72-5ef8fb5a9868",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba1ece56-2c6c-4ea2-a696-1b7a5a39524b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6be924a5-36d4-497f-8489-fb94dca18283"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4057b32-6b41-4302-a2e2-a5a7b0ffacdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31d7ae52-7554-47ce-8720-9f39fdb77c59"
                    }
                  }
                ]
              },
              {
                "id": "69d439f8-7614-4991-aa6a-bb1e2fb2147c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64d42941-6392-4dd4-87f0-744ff44bfc26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ad48413-a08d-406d-a40e-dcd050cb4509"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fc594c9-c7df-45ea-a8a3-a54601ae6baf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5eb73f84-eb5a-4006-8b05-6be70abc4fca"
                    }
                  }
                ]
              },
              {
                "id": "22b0403c-88ce-4595-9603-03556f4fcd56",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12705836-b460-483b-a840-fd84fff6fa87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58bcf7f9-4d94-4bb7-bfb5-84026f8a76bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e94a5999-3cf5-41f6-af3b-b15b6b3b7349",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afbcf34f-e511-43f0-9743-51c0364cdfee"
                    }
                  }
                ]
              },
              {
                "id": "654b017c-0c70-4a02-bdfd-1c52fe6dd982",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c1925e7-3dcf-45de-82e0-2979ba613e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86099230-c76b-46bb-ba00-fb5038e123f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74ccea98-7644-4e79-932a-9a561c44ee81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9240bb41-9dfe-4892-a26c-5f42e6a75edf"
                    }
                  }
                ]
              },
              {
                "id": "4c18c9d7-9c3f-47f8-9c27-65c7aee7f149",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82ba8876-7afd-40af-b8d6-0fb11886c453",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7d631bd-8a3b-4742-a948-f81f66e08869"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7cc463c-a15d-47a9-bb81-87af748140ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4cf72444-d270-41dd-affb-dbddc835571a"
                    }
                  }
                ]
              },
              {
                "id": "65f3dc1d-4f3f-44e3-8ab5-3882ad7b96c6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c12910f-bb1f-474d-9797-e8242e7461b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66f10a1a-ea88-4a73-9d25-e8cb8b76a9df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0db8eb2-f988-426c-8609-ed27f14ec764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e31c0748-ba7f-407c-b13c-b0dba2d3f7e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "029c147e-39f9-4ef1-9bf3-8b618773c1c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5520002c-aba5-43e1-984e-33a14c4cedd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37ccafcf-8388-48a2-ae0f-a3910d762e97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8afd3cca-655b-40c4-8322-650a60096fb2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63fb72bd-b84f-43f0-84e9-6e0a99f14334",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "56f6357c-42ff-4383-9d20-4d65d60bb2f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "770b5d83-3ef6-4b66-81a4-6b974b863260",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fdf4923-be95-485d-824d-1ad37d4a0997"
            }
          }
        ]
      },
      {
        "id": "31ec59fc-5f75-4937-8e5b-46c9e32bd3e9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a1544104-453e-455e-a6c6-5d25494c7275",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b92bc9c6-088c-42fe-bbd7-3ce8918557fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb3039b7-3ce8-46fb-b4bb-a575416fc49a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9f738c-ec55-4d56-b176-279e1cfe3553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45472cd-4859-487a-b3ca-35228d112493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f83282-5086-412f-aa50-4aed9dfa19ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5742f3a-c047-4444-89d0-9c13f0be56d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72304b9-c9fa-4f37-8596-11310996a4b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307248a9-7f7d-42ff-b361-150214349474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b427d044-4410-49dd-8258-b4e6b7464c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87953939-6759-49c2-b8e3-512b1ced9dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "771b411f-49f4-42c4-acac-75cf323705e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b233b2-f4f7-4008-a28a-6438b4584e91",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4dda0-5c32-4a5f-bb1f-13aee1dec6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de65452e-e256-4b55-bb56-c5a4859f420f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dac180-f110-4889-a431-cc1d0a85e214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c363d7-5a32-478f-b9b2-5f5aef817a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e787384-7b79-4350-be01-0a8d5c504ff4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab499bef-5a28-43b8-b996-1b48bdd5b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa29569c-0d5a-4645-8c7e-4c71df33598f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfd649c-5d83-44cf-a0df-309f1c580373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d093f8-30e0-4768-b698-0f957d152f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb87a5b-af10-47f8-b66d-945cbc36678a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678ab770-cc62-4a1c-993c-767e4765a503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb5d9b4-2426-406b-9438-3cb77705cee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c60e0-48c4-40e8-9ddf-69c1dd512aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc846f44-81d2-4a8d-bddf-be28c3651489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260ab73d-5a5c-4569-8fbc-347a5bbdb809",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c751b0-0f75-4f94-9505-484c789f881c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2fe7db-3345-4bd3-994f-56ee2be326c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db841320-e63b-4148-9419-d74293d456f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cecb7c-2e41-4fd9-95d9-49587e11be08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fdd2b3-cc4e-490e-aa37-39aa0f67497a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2d8dac-1e35-4b88-93d8-2036a02c3438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d8d8e6-e2e1-455c-9701-5d70d065356b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477660aa-3ffb-4d13-bf04-b7056bc1341f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e09e8c30-e181-4360-a974-c444471b8795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf8804b-0f4c-439d-b252-f48e975d9e0f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33045f00-8b80-4875-adef-b3c915fe3325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5b6698-6613-466a-a42d-95a6b4e912a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea349a46-c7e0-496e-a5aa-7c0d0402db57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c169f7-ad06-4f5b-b1f7-4834bc42630c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e89efb-cbdc-4dc6-810e-9693c683737a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4617c4e2-e79d-467a-9e66-fc4f50a96565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2712a77f-c52b-492e-9d2f-be6a95d886a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705cb0fb-1dfc-40b3-abf4-453ff30d6c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f2cf70-1d8e-4cad-aa60-a771e11ff0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8528e6b-4256-449d-a8bb-666ef4093f8e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae204596-8c60-4be1-9696-65545cc18023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9759d719-503e-4b17-8d66-eef4abf25656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa942a32-7aa6-4e42-8b83-c3e1fb05aa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65412ebf-2232-4f37-99e3-03c44e93c395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1375f14c-419a-4e4c-b27d-71c19aaad9b7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dc93c6-a87d-4835-a8ac-8ab835d6a595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990061ba-e2d7-4c79-a4a0-0d8357fe212a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29501ca-f0bb-4423-b914-ea27448639a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eacd3979-fc55-4f26-990e-56f86ca174f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a9af49-eaeb-4ded-98da-e10ac9812157",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871f03c7-b795-41af-9bdc-ec0086133ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62388830-0a4f-484f-8926-6d8e832ca3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f95ecc-d9f1-4a71-90af-8519ff41e325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5539ce-bb19-4440-a24b-835e3c55d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366a1bf4-dcbf-40bf-97d6-18efdaee911d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c68d11-b929-48d6-a9fc-4e265232459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e12c5f2-ad68-4f17-beb9-4cc6e85f7e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0616c5-219c-4a1e-a235-2ee52e078619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39548cbe-56f2-4b27-9e5a-55efc25eccac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15f8330-7904-41b9-b122-c1d821b5d7ae",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4673758-12ff-40b1-a350-6c8496a16ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c6fd8a-f060-4a70-8292-a514f1154d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6470b700-d63c-4940-ab4f-dcac1412636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b221ef-5309-4870-8ef5-92df64f60ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6273c5b4-ae08-4774-b46b-4fbab628717a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f42d21-1d6e-4365-9eb1-06016b104a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022c6c74-3291-4f77-a68b-8affbb50956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f981675-e31d-4717-9af4-6c1ff4bb8cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f74e64-4c44-4bc7-a7fb-084663031537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325b313b-0324-44c7-889b-94d0ad3e96b6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936f7211-9cc2-4d7b-ae35-f37770f6a0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b8a2b3-21d2-4aa0-af8c-fda1ba9fc260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173e5df3-7ebf-4b83-ad85-7930d950d9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4d86bc-e6bd-47ce-87e5-d807da071a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435f1957-9169-4b5f-9ae6-6ad11beeba02",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d24575c-d36b-4626-a707-1951305849a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ecdae0-061e-44fb-8949-e17c8637469f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e1b49c-ccb6-42cf-9ce4-c976e7c2b80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a78fb7-518d-46c0-9326-df98eeb4bcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfa2a14-d158-42a6-962d-cba12c2acf78",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0068a7e4-8125-4f4b-80ab-06bb5879984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ec0a8a-589e-4429-b8d1-f9a39a2eb883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ec150a-f635-4214-9c60-31e2eb36aa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d49dfdb-6d1b-4876-b71b-d80bcf16571c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ff3dd7-71a6-40b9-a1f7-2e9856ac5b16",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7b0ebf-61d0-4c0a-93c9-52040af4d6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ec9795-b524-497b-846b-f78c0339e107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08142e64-766f-4860-b904-cf42df269522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9834b52-2e25-4fa7-9db7-b1c641de97c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aa006b-6d90-4de6-acb4-00c4f323c94a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f512312-6975-46ed-b1d7-3894d58932ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c62d5f-9788-4669-af54-47bc1eacd285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22291b17-fbef-4039-a4a6-559c15dd5962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5036be-29f1-435d-b389-b1f1f1cdf63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9011372d-1fa1-4a83-872a-e40564445585",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fce611-d450-4a33-9d93-0355212abb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbee02c2-b574-42f1-bb26-2c44c060773d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450e4606-2f8f-4aa1-acf5-1fd105670842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af5bfb7-ee22-4447-b3a8-d7baaea96e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5be411a-8386-44b4-8b61-7cb465ca3a12",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9d57fa-683d-4d3d-ab03-e0dcb0f83353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01ea3f4-a4e8-4dc1-9f0e-aa00d83dfbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54164f96-4888-41b6-b85d-40620a61f779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92da91ae-3ebe-443f-bc36-985ef3c4ba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9518f00e-b934-4dee-a15e-aa067e3de6af",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b44115-b05f-4f12-9024-3afa2b937bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f040e272-ac52-48bc-a03d-f6e515f38bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab331b7-06f9-47b7-b8d3-2b4c8b879fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7509b13b-8bfc-4b13-bb3a-030809dd6123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6843c013-049e-4889-b72f-fbaefbb41d03",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d4aba-7f35-48c7-9f4f-c1aa56ce9b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33eb367f-fe7d-4aa2-8527-594e37fcd29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba96901f-ef9e-434f-9fe0-f207be96c355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68cb5d7-709c-4187-aab8-21ec2223d349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e961176f-bf86-4976-a3cb-bb743a7ef118",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976b24a7-ae37-4f66-a3c0-57e1f0ae3c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257ad6e4-dd2b-41fb-8610-812d6826ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9739f3-7950-47e3-8acd-eef80269f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5888f6-61fc-41cd-8c27-4dd341e4e930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b50b1a-4979-4a81-8fd0-d8f7652673d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea62d3f8-8c72-47be-a465-6ae4e27585fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36d2548-4abb-46ac-8b67-3396bbd340bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4dc0a2-8c08-43b3-87fc-d70af920b389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a95cfb89-1741-4861-86f7-a7070e522b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2cd676-b290-4d7e-a59f-248018811e67",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7e062a-40ff-45b3-b650-6f8f7c28588b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1145df5-8402-40a4-9c2e-53efa3cd3ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c22e38-2793-4952-85c8-e8f808927295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd82cad-fbd5-499b-be31-fbcf5cdd2155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aea3e75-797e-4307-9d03-c8fb32818637",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dea86b0-ba31-41e8-8e8a-fc7308cc43b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf409133-a023-494b-a2fe-2ce878fbde8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f8c2ef-bf79-47f5-aeba-fa44696db436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2df079-6f7b-42ef-b980-30373e384e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07fe9ad-f9fb-4dcc-80cd-7ac56e4d5782",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd2ff49-4b24-4f6d-bc79-ce7fe2ab56c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca516e75-3743-4232-8e35-79d065014ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df495b05-4351-42ad-9ee9-4422c02946a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "310e4b7d-3ac0-4620-bf70-250a20005504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4c03ea-7162-4906-a4ef-9bb272e7bfe1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83c7da1-3c90-439a-887b-5e70c5529012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07d3842-825c-43a7-8a4f-d30a0e6ddf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f7ac65-5ce1-4c60-92a7-c4d2ba52a582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3590f65a-4861-465c-bf2f-a632b01d8aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9e64b9-9d94-4544-85e3-949b1656e7a8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276e296a-c24e-4227-bb52-b1e5ab6a7caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb530d1-246d-40b1-a4db-731373bc75c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f467a374-8f2d-4e43-bd1f-7fa5fb4a18cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5e987c-9aa7-4261-9cac-4558f7cfdeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936a7d59-b3a4-4d91-9e1d-aef15278b4cc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96257f8-dda8-4edb-a3d6-12894f125592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7578d9-d0ad-4070-b037-00bb76238e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1d9127-a2f1-47a6-8716-8063ff5b1182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4774be2-a0db-4ef9-b6c3-dd93cb86e9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d62f4f-c09b-478b-95d5-729fd8b22e78",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6279b9b5-cab0-4810-b064-b2dfbf6f1f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65749e34-9d4e-4e85-94e6-f5b4c2b0ce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950a6631-2f86-4a8a-8317-1124b5f89ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc0f389-ec76-4bb5-9a76-efabe41dc731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940fb886-e39e-491e-89cc-327bb846c690",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87cf203-d174-489a-b416-2b066b571232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8578945c-49c6-4044-8b06-78f9e6117c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d725bff-6e6f-4baa-a818-71f6f6afc867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc8178a-62ec-457b-90af-06165662b82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6e7ab1-0ce8-4bdd-a1a0-eb67edf6017a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd365083-a0e0-4279-9951-77edaed27324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4ea239-81aa-4803-86fd-2d4e78e3356b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8cf761-0c71-4cab-bc6f-b44d3fa74f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecde986-892c-4ead-a1af-bac588e758f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0cce89-8674-49f7-814a-e1c32f5be32b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20842c70-23a8-4851-b70b-13baeaf072e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c79241-43cb-4dab-850b-3f204f27781c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae58c5a-00c0-4441-8163-5775087e446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78eee7a-0700-4668-a39b-f8cd1ed39d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c11bc7-f8d7-4d71-8122-12311341e8d5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce9bb41-b885-4f9a-9fd5-6f0df823f282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dada579-d292-4dfa-91cb-c5ccdc68f378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e92c55-5187-4ddd-b9ed-c4cedec3678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b361faed-82d3-4d55-927f-bf38f896a505"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6c1434f3-0203-4a9e-9bdb-cf6ebdde2c12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe66f419-97bf-4bd7-8a50-56433d6d5961",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27bbdcb-b6fe-40e8-80dc-d60043b58755",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f6e636-d491-4b63-bfd3-3316170ef2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f14b39-2c10-40d7-996c-7aae807d2b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f82d1474-8c20-4a89-a7b4-5b1f35739c6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d292d7f7-e5b8-41d3-8aeb-df859202a9dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aafcf03-e570-4f5c-9b12-c71480b92a8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c37cfb8-dabe-4bcb-81c6-85fa2288b57f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea362de-8ae5-4440-a991-8b8996b79295"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feb184fd-196d-427f-9f05-b59ce01676a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f91592d5-f236-4b62-80c1-536d9300ebcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f81e1d86-0a87-40f3-853f-bb75a8d718b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4495627-3c1c-4a69-9474-94e255cc7232"
            }
          }
        ]
      },
      {
        "id": "0e245759-b949-496f-8b66-5b0972aa3b3c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7ca18bd-aa47-4a6b-ae75-515f92d3bcc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1550c348-1181-45fd-8656-818379c4fa93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e79a554-9388-4da3-b876-a30f5679c0b8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aacb9c-480b-422c-a870-ba5b6f0082c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cd8ddd-ebd0-4f07-a788-ce6e46c71dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f914ed4-581e-4015-a244-6b8949da0a60",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfc2b4d-1938-4b9e-aaeb-f6983e779e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb162d2-ff99-4711-9bef-f381600c8199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97645513-5071-48da-a4c4-61f967c4d808",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08538d-4020-495b-9ba1-c78a839426c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e543a6a-3f09-4c46-b11b-c55d1a9c7f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6107e3d2-96fd-4c1a-ac87-19c0dc933d40",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3ac54-b2ad-4c1b-b920-0c18123dcada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dcb010-4a70-49f4-a749-4f640e3bc73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f9358-8769-435b-aef4-22192305becf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6328de4-9d3a-4547-941d-4b198322ecec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04621419-247e-45da-a3ab-00d80361f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0837ae14-14f0-4d64-ab09-d6f43b8879d0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46726f4-8f4c-45f4-a0ff-c9a478074d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb062077-dbf6-45ed-b0b6-a36065c481b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67d6650-dc3f-4159-bad3-523ce5bc4bb3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73eda89-62ca-4690-ae26-58ec6339b677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcba818-a90d-4a79-817e-9931da7c03af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930ecd5-5528-4974-a6a8-cc5999a0faa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed225cb9-d9a1-4214-acce-e57e2a497fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa2653c-5e2d-4b0a-8db8-116c09366416",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9946c4-e61d-426e-b751-022c898a71b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b1d5fe-900c-48f4-9480-414bafd5293d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b387513-3868-44bb-a7ae-7c90df92e2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd789e79-1433-467a-b9ee-81566ae12703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46de2127-44e2-41de-a4b0-1f9e63c75d53",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ffb599-0faf-4ce1-9301-892a06adb223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca48cae1-8055-4637-a33a-b6436f08c361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01a0b4e-abed-49af-8f77-a54f94ba50d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e09cf1f-5a1f-4a8f-ac86-4cde446073bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b228c0ba-eba8-40c8-94da-8e4d9807e126",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ed56bd-2f1f-4dbe-9618-dd86b58f048b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a712b618-730e-4da5-a019-e99f5f9f9c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bbbb94-4fc0-4662-b74a-645fb44e5cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727c9a71-0bf8-42cb-87d7-48ec52f0f94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10670f88-1c79-4689-b59e-61e950dc5252",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a803c6-1dd1-45c4-abb3-77eae8f877f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4da423b-e1c7-4ba8-a207-f752f956c5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1698b7-9540-4208-a2af-26d0323a47f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c525978-07c5-4411-a438-03bd6ea6ab68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bad375e-60aa-4897-9744-463882ca928c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fc8160-2b96-4667-ad86-3314866f104c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d37ab23-dba5-495c-8929-7e02d258a47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d429a-6a63-4c99-9967-c0d2c1cfb763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b29204-a8c7-4255-a6fd-3a3d5fcc31c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36ff622-f49e-4a82-93ad-374b09c9b67b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624df8e3-018a-4b6c-8794-4348ca0788ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca5d5a9-88e6-4818-b081-68517a0ca951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf1faa7-bab8-4493-8b4a-1e4048e1893e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f96d8e-5756-48e5-ac05-eaca2e5f6d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ab7ae2-e1fb-4d19-b62d-73be3de40142",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe66c59-fc55-4d92-8547-34d7c132e66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741ae91b-673c-473f-873c-47c505a045d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d82a6d5-d2d2-41ef-8a00-f84d8c98c36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd64847-71c1-4b24-b69c-e62669e5eda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09078d27-0acf-455f-b805-9f45031f372f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33dc7f2-d7b1-4e53-b121-f12bf8732261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb823289-6734-41d0-abc6-86db7785c057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249f232e-7d0a-4462-ae89-f151bd15a5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e21562-588d-4f20-90fc-cc3584df6947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afe21d1-4d64-4f5b-bb28-cb4ac8415ab3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34766b7-a2cc-4039-883a-b903f4798f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdbf659-5b82-4a73-a921-eb5e25ff8025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc3e6df-e3cd-4e1c-948e-73565eff43e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d066412f-40b0-417f-b633-42a99b193ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc9edd8-4055-4323-bc73-bdf3d66822dc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d82ce8-1096-403e-afe8-8ff270544c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66e949a-6986-4b3a-82f0-67513a190e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d307c1-cf55-4033-a538-3a76d9dee88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba87947d-5a99-4601-8dc1-2fb634ba4d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715f9969-83e8-4ac8-aecb-2e19680c6c32",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c868942-2f01-43a4-9988-17093c72b560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656c3a06-bc85-4564-a2a3-2599c090da19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64e63c0-c4a2-4f83-9e69-d4368bc3f13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7a9584-94b1-4ec7-9f76-0371630917df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5f49aa-f339-4cd5-8e1d-decb73470079",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bee244-c026-4215-a489-6c176abce93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ba319e-9431-4b61-b096-cae5da0d46f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e208fc5-c015-4430-af1b-d4e76abb481c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5300ab6-f228-4141-86d0-0ab5141952a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e59bce-b46f-462a-b6b7-691c564b8111",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30732671-2a49-4921-a6e6-eda3d68a4406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae64612-b3f5-4739-9d4e-3858853f732f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010d20b5-5976-47a8-b06e-293b4daada03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee91733-05de-4a48-9993-b1a840941593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb49e64-0ac4-4d17-ab06-e1f0f19bf6a6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a88bc13-9884-4fd6-923c-996c8dd3e338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c157d82d-f0c2-4d57-98e3-e00dad9f1d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f5cea4-698f-4468-8022-a33d27853d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae7742a-d88c-406b-a754-8b7c530fc9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbbb42c-b8fe-4146-92e3-e396cf3b7951",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a3fb36-a731-4f8a-9fda-8b3dd2cf3ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a54df14-9c38-4cf2-ab88-f8fb28c052a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed29b4-0f54-4ed7-a5ac-a0acbd4348a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105124ed-b9b6-4ca7-99a0-d5179576c9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22282f5c-8f5c-49f2-89b8-9b6e72c4d742",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c63057-664e-4aaa-88c3-d20f9a3ae068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008454c8-2297-4ce7-b302-7dbe2d3ec4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c2ff35-b4de-414a-aaf3-2607f9a43c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8eaed8-4db8-4864-b493-0bcb4ce60ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31ab165-6732-404f-a989-78d6dcdf5ad1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0244f91c-db0f-4cf8-a11e-422836032024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616d9c81-06e3-4651-a36b-3343d6b305cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59b8f8c-c288-4860-93f9-b1abcfcc1e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6423479-502d-4786-98a2-22a3ba0fe9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd3f569-0ffa-43f1-abbc-bfa657096bc5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e32006b-c78c-4154-b1ff-8a68657191bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5812c8-9851-463e-9b5a-6de7af8e72ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dbcead-db25-4a3d-9874-16af660b323a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92584003-9710-4b23-a35e-61d44ff9ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573b2a97-5ea8-485a-a319-5a16a0a5e84b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ad4ebe-029e-4577-bd7e-3967d77a1674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba2005df-a317-400b-9a60-f3f2f96be95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd76d4d-db38-474b-be85-902b59ef9204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d78aad4-3433-4a17-9c7a-6bd826e45d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e479f242-8ab4-4684-9ed0-08e364017777",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa7d0c1-1b73-4b35-aa2c-6615496825b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2699cf-7147-489e-8470-929f82ef28a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4b7a2e-c731-4f32-9873-5242785471e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd03371f-bf43-4c2a-83de-c98f563dc3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0d8cb6-c0de-44f3-8516-73862485212c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca1e7d-8199-4f6b-a57c-59365da56271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534f01eb-b657-4612-a328-19682f5efe0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6d2c5c-40a8-4cbd-86a7-3e3d68ea5ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999f2519-7ac5-4f37-b76f-1968c0bc9be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48c1962-3cec-4ca9-9d59-a2d5c3ab09a0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c11e9f-bf5c-400a-9e94-679e60962a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "446e9f28-6fd3-422d-b68b-6c1d1ef86086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2467a23-03ab-43d0-835f-57fb2b3b6a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8844eb4b-db7f-47a3-a27c-00585f4ea1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d73f3e5-5874-40da-b39c-e8064d735e25",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c176b1-745b-443b-b686-206e38d0da72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba69d5ed-26e9-4502-833d-326d1c0a38e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce9973e-b135-486d-81a5-3639ea0ce7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5461bc6b-77d2-4c73-9bef-da5620bd655f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72d1b4a-9aa1-460d-8ee3-faf6f9332dbe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497c220b-0ad6-416f-96ae-d7f287acfffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3c6547-dbac-419f-8220-595599be622f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14628cb-1fb1-49d7-a61d-0440654b64bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de564a41-97dd-4f7a-9cfb-015bf60bdb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14462f7e-f2bc-4092-81db-556d3312fa57",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4085b4ee-b7b3-4e71-80a7-a3cc3492a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda2af7d-d4ff-484b-b241-ede2e87e68a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f142b5dd-5568-43ce-a67e-cc8026540fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e4aa64-aa71-4156-bcc5-0c75732a234f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03921c88-b143-4c02-acbf-b51f86a747b3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764794dc-3662-4708-8ded-825944200102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "896a2444-6169-4571-be88-07d263e0c842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d8cc89-c942-44f9-a5a5-fe5e41c0f1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecd8fbb-0020-4f4a-91a5-4e79a1118273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cabc09e-0088-462b-b8b5-b8a63631bd88",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeda0d4-c0be-480f-bae1-3a802aecc3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc3a150-ddcf-4e93-9b01-da9223b688bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae61d2a0-39b3-419c-8178-c8642d771577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e137a3f9-e129-442b-b841-af0e1ff68d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cf4b3a-db51-435b-b2f2-c68b2a97e571",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3743d173-a733-4fe2-b752-a20e9d743a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293558fa-f284-4be0-b535-7fecbc10dba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f0bf14-c4e7-4512-8f4b-fa79e2e5beea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792525cb-ae83-4858-8704-5352b5ad1499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a108b4d9-c554-4d3c-8f92-c5d646c18021",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36584966-8e20-4afa-bc70-f16f915ad23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fcfb93-eb5b-458a-b3b3-083ddd8b9c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995b3d14-eba1-4a08-9f26-6e5dd486eb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942d3cd0-b54a-4987-91d2-5a93aaaa5dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7459b10c-ce82-435c-9a2a-9afa911238cb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3003ed-ab29-4a53-a60d-633ed39a6999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f3e1db-1825-426c-a2f7-1cd8d3c8b202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ee6348-2d4c-43c6-b2a9-2e59bc3547e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794c6b5d-0001-4597-9e91-e0e05c7c64b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29644ab7-88c2-4879-ae27-31239aabfe2c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9074ac3f-1102-4184-a361-49e274f49c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53361ee9-3c66-48b5-8958-6e42353f30de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffe6db1-609a-40cb-97c2-9a8c44b49b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15996696-e1f6-40d4-b723-a25b1c0b6024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3ffffc-d9d9-4d7c-8c77-6324c9237486",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07a8bf1-902b-4f9a-9861-1b06e20db99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580e9961-c9f6-499b-81be-911a56bfffd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c74ebd9-07b6-47e7-ac20-b94b4bc7c645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a769bd5-19bf-4bca-9c96-998e21cf19e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45a26a6-367e-4169-9bd2-81a89df8ca1e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e953c1d5-ee3e-43ae-9ca5-054c8765ac73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b1f35c-c3b3-4473-800f-2c997f15efe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdd117e-06bb-40e0-bfef-d8b5581c3cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66472d9f-55d2-4b40-9499-bc9e6518a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7846392f-de02-4def-924f-ef88d7678559",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32baa41d-ee1a-47ed-bc93-75d9f3d96154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6075f611-448b-4ebc-8755-8d2961b94fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12577e7c-588a-418a-adb0-aa2ec5f23398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6eae6d-4ce8-4933-9ae2-6ef141068b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c13489e-94dc-4fd9-a416-c18b9ae3539e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a605b56-e2fb-4f73-af82-6104847001c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2525cb-fb54-4258-8212-8ea665bdb0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8867b7fc-33ab-4219-a95c-87ab3244dc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71717351-e7ac-4e5e-ba5a-ecb117c87518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff750ee8-bced-42d1-9746-0d8a2e03d175",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa71bcb7-bbb8-4e61-a4f3-57fffdc567fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4fc18d-48a1-41ec-baf7-c6fd9b75eef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ebbdb1-d1bb-4a57-91d0-604f327429dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb827de-9233-4030-9f8c-aee79891663e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f848cb8-cac7-42dd-b825-f38278d22548",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e4131c-59c0-447e-82d0-de43cb7ad05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb4a5e9-116f-4f1f-9cb0-e257da920957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e13f0f-d090-4147-8458-e882a5b0e158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c614fb-74d2-426c-8147-47ae4082cb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c140a91-b3a0-4b9b-a2e1-5a840f118a3e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad18b983-dd15-4dd8-bc90-daa532e023c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76c264b-2b69-496c-9823-8fe4f933d780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014460ff-0aac-4666-8fed-5d6020738518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100f7bb2-2dab-4e74-9b10-99f9124462f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba70f9e9-8932-45ad-9e93-c57d5f4b1815",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2d3852-977a-4aab-9959-c14f71e47521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676613d7-53f1-427f-afb9-260682e53b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470ec51c-ac80-4723-828c-833f726742ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dbfed6-7a2c-4173-b93e-9340b42269d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6ce857-1561-46f9-a2a5-a8e4d4575342",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6623c119-ed55-4953-be89-2ce3da903d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ee2fb5-177e-45cb-a6e1-505e060282a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ea7b49-5701-47bb-8633-049c50b21a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e99a42-0fb7-4655-9da3-914bcaa9af15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8738d9d-1ece-4efd-b2ee-0bc8234b02b9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c75b5e-1c40-48bf-9b16-2a83705eb458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfccf3b5-d570-4c3c-83a6-40bfc9713990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff758a1-675f-47e6-a5db-341ca748ded0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74de197b-a1ee-492c-9c87-bb52405584f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3830503-8004-44f2-b5b9-1c705438eaf7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac91e30-af9b-4843-b4a0-1d30df191c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b5a211-3d28-4012-8c87-ea3fd5a7f203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073d3b5f-8c7c-4c34-8036-9233b2580798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65d4f6e-6312-4cec-b783-66054bd4e700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f4a699-cdc5-4c18-8b6a-7d0ff3ae2354",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9a7325-c4f4-47f6-89e8-3cdd2b5abd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1e53de-4887-4fb7-9bdb-f27d0c3d4b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82317aca-f285-4c04-9b09-fa56c586876c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9222e7-1604-45dc-b3b2-430f0b0ea246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bc36b4-d66f-40c0-88eb-31a6c83a154b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26e0a28-d678-4ff9-8ac9-f86a27e1381a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b392c2dd-4b07-41c3-a4f9-f76accada86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c852b-7602-40ea-9deb-564dc8e003f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595b09ee-f3eb-418b-908c-e0fcc314e8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc706c14-6c24-4617-a4af-e49c2cc65a61",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8728313-8b07-4ebb-a615-ebed17590202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f7f247-d7ba-45ad-a02d-2b827b12e897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff09c27-c818-49c9-b9d1-8c1bf13725ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e16e69-fb78-4813-927e-9fa6db851c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d0ba02-b553-41f6-8534-95866524e51a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12476143-a3ba-41e3-b7cf-5296890baac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2a0d10-7e9e-4bdf-9b5d-de987ec581d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d6cc93-7d85-48ab-b25a-74a512dfc72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17837bb0-40aa-48e6-bc4a-3b4ac21c1142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4027b42b-0a87-42a9-a816-f07a9330ea82",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b19824-4e55-44b9-82e5-555dcbec015a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59c2b42-e76e-471b-9412-70012fc6e65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877dd787-0cd9-4896-986a-484861b555c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3988670-7e4f-44e2-b2c2-6ffd82b3d88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f364469a-ac52-47c7-a664-acce2fbeb85a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14f1e4e-7da3-4ad7-8bd6-5ccc3ffcefbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680a2e42-4fbc-4548-8427-9436e286247d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19535a86-2096-42c1-ae15-6d07d668cb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297976bb-652e-4ca6-9597-a0b1364f6162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaaa775-9b08-4774-b9ed-db4e3ce33bb7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca45b2-1b92-49bb-8d17-ca11b689d92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b71e701-c2f9-4453-ab32-d391a62abad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4272a68-9ebd-4280-9a2e-75d88bbabdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9287643f-38c2-4be7-a28f-ba01f994161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a308dc9-d03c-4192-83d5-be3a3b32b9d3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3f4e83-046c-4b3c-bbd8-c15a55df71a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55deed5c-3c63-4020-8056-0542c06b6f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54a098a-fe6c-43aa-85dd-55132ed4c9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e8a666-ec17-40b3-aa80-7e1e08392e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45593e0e-f37d-4fae-9163-e0073f605c37",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35726a-101a-4ee1-9b65-b5925dabfbca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3688fa57-2c6b-4dfa-b863-da5bb5e8f626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6ddd59-2aca-445f-a3e7-39b710682978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee10e1c-1faa-4d2c-9a0d-0c598962bd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48987ff-9ecc-4a45-8d6e-d5d4d04716f2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4a3b45-83e7-4ce3-a2e0-73cad112aff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d74e202-0120-4ab9-bb47-26a20aadb8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b74b404-85a1-409a-b568-bdb4bbfa392a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ee0549-a77a-41b2-98e9-f4ea6f5387bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b138ae-5791-4878-899d-706fc2c59a9a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c68266-62b4-427a-acf0-0a32e5faee60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c488d5-b629-47a8-9ddb-3f35dc809dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e8b622-f7da-4ad1-8727-fd8c4ee4fcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd7e080-7f8e-4906-8e87-0eee88273df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b383f97f-5240-4efe-81d7-8d9610dfad1b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867f2724-2a1e-4a48-a70c-6152177d0617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d99fd10-147e-4158-a057-d6fa61c69bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72592186-1d56-41cb-94c2-17c4ec0a35c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08147aaf-8964-4aef-9ce4-0df37e3d3bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48fcde1-83ac-437b-89e4-47a40fb95cfd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee2b481-8cf7-4467-824a-67c6f972af53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a219be6-b8fd-49fc-82c2-0823e15c1bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049458d0-9cc6-4b37-adb6-6e76151c6160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25125030-e361-4214-ab3f-ed490e0fb766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12af79a-f0a6-4f83-b8a7-466c6b5b097c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb705492-cf10-40a7-a78e-06487e168f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18a2234-92fe-4f3b-bf54-82578c4be86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc59ef99-6429-41dc-b40b-5afdf113d5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462b5f90-4467-4bd8-b34b-7afcef9bb47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78482f60-ccbb-4fd6-9601-1fa4f83b2fdf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fff421-d77e-4770-88d8-8487331aaeb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a90c256-49a3-456f-92a3-f471ec08b03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f0de2c-77bc-4e32-89c6-16662cacf3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb0ea09-be94-47b3-87b7-d0788d1ca754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce69c0d-51f7-47b1-bd3d-b3f84ea54e73",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869b4333-d317-4eae-ad17-d7adf252a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af15f5d-10c5-49a7-8c92-70ededa4ef20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d9ca2e-8057-41ae-9707-f891ec1c78a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0419ace3-78de-4022-ac0c-32dc453f73e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22d1986-8546-4c18-a40c-aedd21ec1d6c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180850be-6477-4439-bce0-f970ea32f16b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58859867-c215-414e-ad49-9268eef37bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ad64f5-8c26-4287-b910-198d7461c084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cff306a-0873-4c62-b9b4-a36d54db76c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c349c8-07c5-411c-9a75-02b8478b5428",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c422b2-4eb7-4566-8c42-51c5b6a288e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7614f394-bfa6-45ca-88ec-5183e2a8517c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a441b68a-aaa4-4dec-b714-98b6bd6d10fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5c87f2-cbbc-42d6-bed9-2b70d03178c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d806d6de-dada-4fdc-bb8b-6c36faeaba65",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace14b0b-93ca-4303-a9cd-2c244a9e3399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d9d6b9-ecfe-401a-b128-4e2bb1a3f175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2540af09-96c6-40dc-b356-9f6949585173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100e2a77-009f-494b-b564-25964e693474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf236ed-c304-4df5-a171-197f0ecf6773",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34e8d8e-6534-4419-8d0a-593e69c12f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef967464-bcba-43a6-8fc9-c394b781e125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ffe267-7ea5-45ca-a6fa-82b92710e6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850ae390-92fc-4f69-8bba-270ade35b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e561cbf5-9d3d-405f-b966-2577fda0a4a2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c2207c-8424-4314-a42b-749ec6df0d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144d4296-59ac-4738-b85e-a320a0e6f9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34446629-78ce-4a95-8d25-145ffbd28186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b098225-0efd-419c-8283-482ed8b724bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da0c860-c498-4b8c-a82c-5c1b27fd1fb1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b75bea-a252-4829-8211-8f66de09c549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86592d7f-1ba7-48bb-8e71-89dd9c7454d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c9b1e1-db3a-455c-aae2-37680d05945c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2bf712-ede6-4e82-bd90-b90eb2a53ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d0660-1be5-461a-bd18-d3521fba483a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd2e41d-e2f5-4b3b-bab2-d8e79fdc1475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb94dce-f581-48bc-bb9c-ad56b76ef811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efac59f8-1bae-4781-9559-6feec8190195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c29caaa-6c17-423d-b13a-9c3d0a4375eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c857b94e-ec47-4670-ba16-0862dd8c3d92",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218642e0-06ea-46b2-b1a5-737b5e0fb5ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb0887f-086f-4896-b24b-399e0aad23cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2586d-35db-410b-b64d-a6d6a34be231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34943ec6-d121-4d2b-bad7-21d5b1b6716c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8c3784-b412-4317-a50d-9c3d1d3cd4c2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bb2966-35a4-47f0-bf50-1c680d1de2df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de597295-a983-4e8f-86eb-1a9475887519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f48cbf-9f68-4e41-8d59-79417928eaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e93246-15e8-4df0-b1e6-6846038656a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ced89b9-10e4-48cc-ac1a-b9957c273aeb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b41af8-cc0a-4eec-97e1-0361140476d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91857b3a-1c76-42ff-a5f3-881ebe3631c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeb8c1b-ec6f-47b0-9c64-83010d3f8665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0853356-cbc5-4443-bfd0-d994a944d87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a05ba6-3d68-4612-bc4c-0399d17c445a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc2b776-04a7-4593-a121-dbda72ee65a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ac468e-c167-45c1-9694-995dbcca68e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e96be1-85de-4310-9f90-06fdc70a72aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac398b8-1727-44dc-a0d8-4dbd5cdef4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04690c4-d064-44b6-bf7e-5f18cc6e9a72",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c8639a-f1f9-47c9-a1d2-6847b5d3d497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec95a8a5-ba45-48f6-ad59-8731d54bb9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8307e530-91e3-4d83-be3e-63f938e4102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936ce0b1-b127-41aa-901f-7ac38546052a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905d3c9-e906-42fa-94a7-9e2d0df762d0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac408e8-d450-43bb-9c30-7c26d2bbe351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d354939f-74b7-443b-bff0-8081298aa3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607d302b-a3fd-4105-8556-36a13b042d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f66b582-b93d-48fb-a4d4-ef4c03e7ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e81775-db7c-441a-9b6a-c0785fe41df3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4c7cf1-2489-4dc0-8bf1-3d002d09c602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf80798-8374-4140-a9ea-17994469d74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e5770e-b0f2-4b0c-a6ec-cd7b992efb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64bc7eb1-f4b5-44d2-bf24-201075496c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0d7be-7b48-40f8-9933-4d480d35cff4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbc39ce-31e3-42e5-9f6a-4b8e195b0b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba93847c-3e3e-48d2-b129-7600716487be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdbdf10-e260-4c93-bd8d-857704726f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cabae6-98b0-4d58-8fb1-eb7bb35458a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1328a25-3291-4e07-8a8f-67bcc5fb9b01",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d177d0b-695d-46e1-ab58-01e9e9ce7e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2487991c-2abe-43ca-b5c3-e83d1ca45c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56030c6-0b46-4adc-a0c6-164822ecfa30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5d0610-ec1e-4e83-bc8b-fefa66520649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df0a083-daf2-4aee-bbba-b8aefe3f5bb8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c350f-fb55-414c-bac6-1dc1dfb578f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf2de90-0494-4f7e-a55a-275562524ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e917c4-1124-4ddb-86fb-ee35cb6e69d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4050afa8-56c8-4f72-a390-8a278993ccdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40502a7c-fd73-47a4-857c-697c17fd1ae6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b02fde3-13ac-4d26-b8de-9a411be3f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a41e8e-520c-45ee-b189-31969099ec6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172d53dd-83e6-4de9-9282-948800f37944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fddb53f-7eb6-4e1c-8f28-8dadf84861df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3793b2-2421-4405-8ede-b4ba9d7ef920",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ced3ced-781f-4099-8776-b16480908068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35080c69-4ee8-4bd1-a718-94eeab0b749a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafedd05-dcce-4e64-adbb-ed284e049f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaac031-3af1-4399-83a5-b763b5ae2347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c580051b-c73f-485f-a984-072a0c786867",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b5f453-de05-4e33-ba77-42e4852ea74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa89f484-e3c9-4dfb-bcc2-923a4ee7377a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df7598a-3abf-49bf-b626-8dfff7a6b2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24b72b7-0eab-4d38-a676-30ed859e6b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8e6be2-4a9c-499e-98af-85466b7da663",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0deefdf-b336-4e20-a3c6-eee3312a1b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74716bb0-f6df-4bc9-ad9e-c408fed864ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469bdc94-88f8-448f-8d87-b8661da28d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db8f812-6e4d-4a4a-b132-11eb22f2bb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c50259-bba1-42eb-a49b-8208166ca7f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff374546-3d04-4201-9293-d3e325c783f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8293a55-8e02-483a-ad46-3d95d8655f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e8d2f-c26b-4153-9d03-8fafd8665679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cf51fc-6457-4a28-9a05-51bcafc3f76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa333edb-99ca-46d3-bb50-bd8f8e3a4f29",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5f7f4-dff7-41e6-94bd-a91eb9382c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2adc58-2b86-451c-9561-19b96e989ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2245d2-4a96-46f7-9553-d9099a810911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34f423b-a0ae-48f0-8a46-13549c2b3268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e7278-8102-4ec6-95dd-c97c67aceca6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec52169-2fde-486c-b74f-0996ca9266f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da0ef8c-de77-4274-ac7f-73050738eec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1718044c-923e-4152-a04f-a23fc1d783ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02435ff3-8f5d-437c-abe6-00abbd8a585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31e2bee-98a8-49cf-a822-16e79ec81b89",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff1355e-f6ce-4df5-9669-da7917ac65af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e08a9fc-7a57-4e10-a8de-9cfdc964f032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908511fe-0bf3-41f3-9502-d0b8b0b10df5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f853588-9265-4ae0-b543-e5cfef9f0eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a1d31-1618-471f-a14c-efbbad4be862",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875a4b17-438a-4a43-9970-e3f937d0c543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510630d6-4226-40a9-b137-16d36babda0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7fd3a8-153c-43e2-b479-882adfe4c749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b6218a-a999-4519-aa40-07210db446a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e808eff-cabb-4f19-b8c8-b66ef86f536b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90074a0d-c417-4c18-829b-4ed4bcafaf38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4313f83-c9d5-408b-9b3e-90ce96417395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa8edba-3baf-4767-8560-df27390368a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4b1e8b-b69a-4e91-98fc-0ccdd036b573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85487ba2-2504-49aa-96d8-9d7c1359afc2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afce7db-e512-42f8-8ff9-070fb18961a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e45ac6c-894f-487a-8be9-a61518d7c670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df71808f-2edc-4a53-8cd3-960940718396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4230c83-a7f0-416c-b547-aa8a543d4d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f21472-a84f-41a7-a3d0-63648efcf54e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f30fe-31fe-4fe2-b50a-aa8d0cf821e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b2dcaf-8621-48cd-b652-5a69f4b92764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaa1b93-1791-4e93-879d-a20e840290de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9228be50-7b1c-4bc4-8009-1d12e5d7789e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0652a596-f8c8-41a6-88aa-c56232d4ab1f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef615355-a908-4746-bc15-59a10e62639f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5963edc8-23ed-47a9-bcbf-a6a124931380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781aa52f-4210-442a-8a86-5adbdd69697d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237c8037-b7fc-4049-a801-ba951ef9f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0420150-1642-4300-80fc-e838aef932f2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a004f833-dc1b-4e3e-b6c2-c4fdafac0e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d449505-bf51-455b-8be6-875714b60728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc9320-8c15-47b5-99fb-bd150d901ec8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8a6860-e2d7-4fa9-a3f8-05d2d98998e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28168133-b9d1-41e5-b5a0-39d9f18ef256",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bf527c-93d6-4e0e-ad2e-6383bdf2e717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0354ed49-6b40-40e7-ae47-fa732cb1ddae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46616b5-640a-4346-a36f-3b208d556fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39791b0d-a464-4270-847b-a07696790b67"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "723c29d1-6953-4610-a37d-4cc67c107323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c96a1aec-662f-4329-a3ee-31238edd9d4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ce66e8f-8bcc-487b-9a74-28d5ed8b110f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c012d2f4-f0fc-41b4-bc5c-163362843253"
                    }
                  }
                ]
              },
              {
                "id": "8e943cbf-a2ff-4847-9ce9-fba4b0570f1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff7120aa-e468-4de9-9f74-c4c725a5ff3d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40573ee-64b2-43a1-8d23-afd58827efd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6736ce5a-3830-497b-9787-b541cedb0b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f33a08d-e418-4c7a-836e-faf531c637d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "855e5a0a-549e-41fc-8e7d-ed95c4e79cf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "633f5998-f83b-49e5-97d4-0cd20229cc6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfbfd96c-5ac8-4062-95eb-08c039296171"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d57c2d6-dcc6-47bd-af48-e5a0352cb2b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7a07c64-947c-4ad5-a798-1475d8e0d4f8"
                    }
                  }
                ]
              },
              {
                "id": "db458680-0572-49dc-ae18-ead5e06d77b9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f5e0e72-ec5f-45e8-9776-ae98303768c7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ce7491-bb5e-438e-8ef1-ecd90bcd0532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0b5bca8c-fe78-4d17-95bd-640ac614897b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d6aba-ee7b-43b7-8c38-5f62f313253a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00db1ca7-d096-49ac-9ea5-14e54c89fa5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7ca868af-cb99-4777-aab5-0ba93188f7f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8600dc1-1ad7-4ac3-9266-c237cc71339c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b921ef97-7db3-49c0-b4b5-5a1c315b81d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fef71aec-2f17-4c2a-9edf-1e1e5d110170"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "683ae461-6bc6-44fb-86cd-c6e5ab19a0f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8644b85-5547-4b8e-b0bf-dc9339055083"
                    }
                  }
                ]
              },
              {
                "id": "13fc6ce5-cec8-4ff1-9e7d-127575b0ae5c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "297d812f-45ad-4fd7-a0bf-9928da5fe788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c749c1b-9db3-4eeb-a3aa-01d344068446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be640db8-3351-4c41-a857-e36b17b0fa3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da2f2256-c3c4-4983-a6e7-feb04b3a0350"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da95b4dd-81c0-4eff-b485-a5f050660f1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "654dc55e-ebd0-4306-b277-4b6203492a04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8efa2b1d-e9e2-467c-a719-d4dc6c337ff3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1df29420-2ada-44f3-91fc-d5dbc21cdea8"
            }
          }
        ]
      },
      {
        "id": "78bd78eb-1449-4aef-b8c8-ade37ece9e6c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b24c4550-e9f1-4f11-85ff-75ed82b52cbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32369fff-2c39-43f7-a85f-e9d16e579217",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbfa86ff-0894-43e6-a2f1-156b9dbd1d84",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80be5d8e-650a-4d8a-8680-e45f81c719bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ea2f120e-6380-441a-980c-2bc43658da49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53e59fb-6fc4-4064-974b-2e4cde929202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec4c331f-894c-4bb3-8121-b6bb5712bcff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a20463e-3e3e-449e-96fd-e86385c66fed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0df01ce-5c99-449c-b9c6-ed46ebb5d68e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7bf98d8-4a03-42d1-a99a-b75757a82268",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2095daea-8afc-4ad2-9ad6-ffac64cd479f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb6dc84b-b250-4331-a603-363c72c387a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bfcc92c6-3a80-4e47-ad4e-885c7a76ba08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f044027d-7790-4e90-a11a-12373504cdbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5aa7912b-58d6-49e6-a62a-52c7bf00532b"
            }
          }
        ]
      },
      {
        "id": "0943b662-0060-470e-a514-126519d1417b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7084d906-7615-47d7-819d-0895904a7c19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b38dcd79-6148-4ab9-ad68-29a1005a0b99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dcf24078-76f9-469d-be8d-16f4ba081f62",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2f2611-c938-488f-9c36-66ba00f564cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a5e8a56-be7b-4e5d-a45f-92209abdea8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c0b1d-53dd-427d-820f-33e4ccab90cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "945c9c7b-43b8-4b27-b6a5-63d8f866d425"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21ade138-4d6b-4f2a-a5f3-56b372851eb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4888a4d7-afd1-45eb-b98a-753980beb5f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47651b33-7ffc-4bd7-99e9-c03e0a296819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e936a6ef-0328-4e36-aed7-1612bdb16608"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2df8894d-f9a3-4d39-afa4-6d2f91c05ab8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dfd34c5c-6e0f-4c71-8ae9-d52ee5b9cd17"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc433698-eec6-426f-a228-ebf37df4df19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "034612fc-f7df-4e36-ac5f-a6544b8b49a1"
            }
          }
        ]
      },
      {
        "id": "7190fb42-a283-421c-a90c-a421ecf8677f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5445ca49-ea8e-4738-9c4a-2e2110f31b9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ae38c62-778e-40a2-b2f3-adc24c7c202a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "840524ab-d4fb-4bc1-932d-9ef45f373c79",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc5b68f-7eb7-459f-97f8-c9d9685c3dbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "115867f6-cbc5-4284-b340-cf906b1ca385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727d0fe6-cd7c-469c-9ee5-29a7c7db4966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5225dcde-d37d-45c5-aa90-cda8eb4fa6e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32e91eb0-80a9-44c4-a3fe-173d3ffdad81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be6f3f1-7df4-42b9-9e13-377debc9d142"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1887ee32-ca2c-41d2-8492-f5034319ecbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eb9c06c-7187-403d-902c-b227c8fbc031"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61627184-4556-4757-8a14-c6bbb94c645b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d47f44e-8809-4224-b848-d67ceec7a126"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bc7ed9d-5cc0-4741-aa9d-d49dc6545116",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74676a8e-9a37-4875-9227-f0e471084a15"
            }
          }
        ]
      },
      {
        "id": "e4748667-8c10-4357-a057-f8a8c29f6c00",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fff4f7e-5d4c-4509-8ce4-3a276cb5fe40",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fbf930b-a068-4c36-81ee-db692ef0424c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3cb825a9-0ee8-47e0-b988-c07c2610146d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ea98f1-3901-448e-9173-5ec341745103",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69eb1a95-262a-4072-bac9-e0b4b8068615",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.95238095238096,
      "responseMin": 23,
      "responseMax": 8569,
      "responseSd": 591.3689909411144,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726706629327,
      "completed": 1726706671449
    },
    "executions": [
      {
        "id": "e335021d-d504-4422-88a3-e74e2abfc6e9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5534d980-ecf3-4a29-acb4-f3a686366938",
          "httpRequestId": "49c1e183-4909-47e0-9ce2-73067501a556"
        },
        "item": {
          "id": "e335021d-d504-4422-88a3-e74e2abfc6e9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "744f55e5-4112-4fb5-9ac4-fdc6cfc49d02",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "36056b0d-78b4-4f40-932f-f735f5ee79bd",
        "cursor": {
          "ref": "d1c044b8-1c07-4be6-8bec-1c8869b87069",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "209c2508-8c9a-4776-95e4-54ff81677ac9"
        },
        "item": {
          "id": "36056b0d-78b4-4f40-932f-f735f5ee79bd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "314b461e-af89-482a-a7fa-52f25e211451",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 0
        }
      },
      {
        "id": "bf2faabd-435f-4980-b77c-85c9b1329e5b",
        "cursor": {
          "ref": "90889661-2445-421e-97b9-85134c4f2f79",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6b2de346-9fab-4c1a-9646-2ffd2ef6453c"
        },
        "item": {
          "id": "bf2faabd-435f-4980-b77c-85c9b1329e5b",
          "name": "did_json"
        },
        "response": {
          "id": "8ace5012-ed5c-48d0-8f56-86e563cab207",
          "status": "OK",
          "code": 200,
          "responseTime": 500,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632c6a2-0d4c-47a4-8423-da86bc724c49",
        "cursor": {
          "ref": "210db77a-1bf3-4d52-87dc-fd7de2ebedab",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff2ecb96-4ec1-4ead-9399-773fe47bfea6"
        },
        "item": {
          "id": "b632c6a2-0d4c-47a4-8423-da86bc724c49",
          "name": "did:invalid"
        },
        "response": {
          "id": "0056e084-806a-4238-b999-6cd18ca53177",
          "status": "Not Found",
          "code": 404,
          "responseTime": 272,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b632c6a2-0d4c-47a4-8423-da86bc724c49",
        "cursor": {
          "ref": "210db77a-1bf3-4d52-87dc-fd7de2ebedab",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff2ecb96-4ec1-4ead-9399-773fe47bfea6"
        },
        "item": {
          "id": "b632c6a2-0d4c-47a4-8423-da86bc724c49",
          "name": "did:invalid"
        },
        "response": {
          "id": "0056e084-806a-4238-b999-6cd18ca53177",
          "status": "Not Found",
          "code": 404,
          "responseTime": 272,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e0d246-0a74-4000-b9bf-3e5f8157acca",
        "cursor": {
          "ref": "40b93b03-c880-4dbf-a742-fb7b2bd99d31",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7372b778-2f0e-4b11-83b6-d8392e05b407"
        },
        "item": {
          "id": "14e0d246-0a74-4000-b9bf-3e5f8157acca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa64b17d-3bda-4524-9bb0-bd09693cd9f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c97b320-15c6-4496-a135-a0c8024ee11e",
        "cursor": {
          "ref": "26d7d597-60c4-4ab5-8273-c9b989e57ec5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "446b53de-3bb3-4a67-aded-252cdbf839ec"
        },
        "item": {
          "id": "1c97b320-15c6-4496-a135-a0c8024ee11e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "baf99fb5-215b-4198-b907-9632136cb867",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5742b664-8dd5-4a93-85c3-f279d755d468",
        "cursor": {
          "ref": "99a49444-31bd-448e-a6ac-a2c3043b355b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2535d85b-a24a-4596-b576-ca87ca93c6fb"
        },
        "item": {
          "id": "5742b664-8dd5-4a93-85c3-f279d755d468",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d9eeb9c-3e95-4ec5-a257-671a3ddf0de9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dee0eb-787f-404b-bfbb-e8d3c444fb37",
        "cursor": {
          "ref": "b82459f5-7a47-449c-8c08-d8cdfff046c1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "734bafd9-9fe8-44d2-9a25-8c90f582dd20"
        },
        "item": {
          "id": "62dee0eb-787f-404b-bfbb-e8d3c444fb37",
          "name": "identifiers"
        },
        "response": {
          "id": "ad7c35a9-d55e-42ed-8ed2-ff8586376b5d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b91624-787d-413a-b637-fbf7dc0a64d0",
        "cursor": {
          "ref": "4fecc5e8-3669-48bf-af4e-3a608c796c17",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e91141e8-e4bc-4a31-b472-44251967192b"
        },
        "item": {
          "id": "a6b91624-787d-413a-b637-fbf7dc0a64d0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fbf4c6e1-1535-4440-bddc-a6341ac5805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7142fab-3abb-4738-8a4c-4fe3021885f8",
        "cursor": {
          "ref": "0ac61c31-6a5d-4cc2-aa62-20e8af050150",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6bc6c340-27b2-486f-ab93-39517dd8898e"
        },
        "item": {
          "id": "b7142fab-3abb-4738-8a4c-4fe3021885f8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b6edcf2c-4ad6-4c02-b6f3-7cde3291f296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb737f4b-2fbc-458c-8fb4-0ceb38a96cdf",
        "cursor": {
          "ref": "421df085-99fa-459a-b4d1-228d30cfeead",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "faf2a608-5118-4b14-9edf-0a5048cc4367"
        },
        "item": {
          "id": "cb737f4b-2fbc-458c-8fb4-0ceb38a96cdf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ce259b91-446c-4bc6-b2a8-8683b3cf87d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cef3714-ad7d-48e5-8b55-52ff92012b9d",
        "cursor": {
          "ref": "7e37adb4-f816-4f44-b07c-21a2cdcf217b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e611d5e0-e634-4e82-863b-564629b2cb2a"
        },
        "item": {
          "id": "9cef3714-ad7d-48e5-8b55-52ff92012b9d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0d75636f-4325-431d-bc8f-a9f61f3683e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a294b296-6b1b-4042-8324-04df8815a2d7",
        "cursor": {
          "ref": "979bc2e6-54e5-4f83-b0f6-c5ffd753e446",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6a652f65-cfd6-42ae-818d-636841191fb6"
        },
        "item": {
          "id": "a294b296-6b1b-4042-8324-04df8815a2d7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "41f7a5a4-4b02-4e0d-abbd-988ca709b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36b464d-f337-479e-9aa6-add2997da7d3",
        "cursor": {
          "ref": "43338701-9f9f-4a74-8c97-c106281d23cb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff64f6ec-9156-4a15-affd-6badf581d2e8"
        },
        "item": {
          "id": "a36b464d-f337-479e-9aa6-add2997da7d3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f24f107b-6025-40d4-a9cb-64794d4d61e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536ec03e-8564-42e0-80fd-e7051bc8a517",
        "cursor": {
          "ref": "38cdbb02-e0b6-40e2-a0f7-c07a43627be2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "470cc254-15c0-42fb-8460-03e8cb840a90"
        },
        "item": {
          "id": "536ec03e-8564-42e0-80fd-e7051bc8a517",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4cbf4903-39ca-4031-bc99-f92645d3d80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b0a77d-e99c-4744-bc4b-67240e4a222a",
        "cursor": {
          "ref": "b98ef20d-4d78-4f47-9de5-e38a2859bdf8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "856cef12-223b-4b0e-9dd7-d5a6e43622e3"
        },
        "item": {
          "id": "51b0a77d-e99c-4744-bc4b-67240e4a222a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0899281f-58d5-42f0-a738-b3d34bf00af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b50b9e-87b6-459b-92a1-4988e674c6c5",
        "cursor": {
          "ref": "177c5fa5-8c7c-4176-a07f-ae8f8f96a17a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3d46e95b-f6cc-4d48-9363-517bf8f5a47d"
        },
        "item": {
          "id": "c9b50b9e-87b6-459b-92a1-4988e674c6c5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a50620d1-c756-4a78-9915-c89dc3617db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49900630-3bfb-4134-85a7-083b1406eb59",
        "cursor": {
          "ref": "0327b871-6470-4abe-8d1f-2330730dcd92",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "706b66fc-4fe0-4304-be87-5a220df02049"
        },
        "item": {
          "id": "49900630-3bfb-4134-85a7-083b1406eb59",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90f864dc-3df3-4986-b2c4-9ea33895e251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2813fcea-63c3-4cf5-9d59-c52b8dbab4cc",
        "cursor": {
          "ref": "0155f38b-01ed-442f-9b28-2951d2df2392",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b8de1e78-483b-42e0-b039-d2d52b96df0f"
        },
        "item": {
          "id": "2813fcea-63c3-4cf5-9d59-c52b8dbab4cc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7b1810fb-858c-4852-a955-b231ed5a93be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e91ee28-444b-470d-bcdc-dca0b7b623cf",
        "cursor": {
          "ref": "3984a775-5927-4141-b729-910571897a8a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cedd9d60-ca5d-43ad-8f16-dc44324f2f20"
        },
        "item": {
          "id": "4e91ee28-444b-470d-bcdc-dca0b7b623cf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ee5000b-4bf2-4a36-9a13-c285d5ea6353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bfbcd5-5d3e-48cb-849e-b33a1f61d235",
        "cursor": {
          "ref": "99f5cad6-5c37-482f-808f-d8a3f51f13c3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c1ccb596-ed27-43c1-a558-fb55709709db"
        },
        "item": {
          "id": "51bfbcd5-5d3e-48cb-849e-b33a1f61d235",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f1a121a-3d01-4bc9-900a-1ee20a65c43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62401ce8-4870-436d-8b49-87e98f6cd221",
        "cursor": {
          "ref": "f2a4beeb-dc0b-4d73-b053-d30809389ee7",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "02f7721c-962d-43d7-917b-1537539129e9"
        },
        "item": {
          "id": "62401ce8-4870-436d-8b49-87e98f6cd221",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2fb28a9f-96aa-458d-a61d-fda55cdb1ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983622a6-0b33-4dd7-ae2d-97d771535acc",
        "cursor": {
          "ref": "78558e02-f4a8-4ed2-9144-d6d8ad20bbfc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55603e8b-55c4-4b81-ae33-f6b0e4770acc"
        },
        "item": {
          "id": "983622a6-0b33-4dd7-ae2d-97d771535acc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fdb7232a-317b-4209-98f4-0c39c7665f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34dcae5-e951-4662-93e1-b4acdcdc3c77",
        "cursor": {
          "ref": "564f0370-b0d9-47b1-8cae-991f7444f6da",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a6375ea-3b7b-43f2-afb1-e20fb1f99293"
        },
        "item": {
          "id": "d34dcae5-e951-4662-93e1-b4acdcdc3c77",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "74503597-95e5-4bb3-8487-9bb06f31904d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c654edaf-83b7-4d90-bb5e-fe0a6722ab59",
        "cursor": {
          "ref": "da7a68df-8611-4ffe-a6c2-435b40466efc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5e6451de-17c5-4f1a-bf89-36d5358093ef"
        },
        "item": {
          "id": "c654edaf-83b7-4d90-bb5e-fe0a6722ab59",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "81f42837-cf39-442d-8c81-f594498026d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e3cb30-2101-4e85-8b3c-6ff54447ec9f",
        "cursor": {
          "ref": "08777dad-da13-4612-9be2-e4baf38b6bf7",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d444f661-20ca-4043-940d-bbb803c2e0f7"
        },
        "item": {
          "id": "b0e3cb30-2101-4e85-8b3c-6ff54447ec9f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3d10c964-857f-4c53-bc81-f6d46cd976ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1e4d1-a16d-4a3d-842d-fc393b042e5e",
        "cursor": {
          "ref": "84f9a2e3-564d-41ab-bd4b-28aaaa54fb5c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "20f316c6-551c-45e9-a106-442b4922bd77"
        },
        "item": {
          "id": "8ff1e4d1-a16d-4a3d-842d-fc393b042e5e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4de3f170-aa04-4f50-9e14-192114019cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1102b592-1467-42f9-86ca-0a67a3711207",
        "cursor": {
          "ref": "06e9d287-06f3-467f-b0ec-3d63a13fed7e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f23f8f8a-dddd-4785-abe5-67c542811313"
        },
        "item": {
          "id": "1102b592-1467-42f9-86ca-0a67a3711207",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "12bf045c-3c56-48bb-b903-a2c5e09a6522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4eb242-72d3-4bc5-8759-173e8c9ae75f",
        "cursor": {
          "ref": "8d5803a2-5722-4ab3-b516-145be69d993d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2274d690-2c02-4d9f-b73f-7587864d0485"
        },
        "item": {
          "id": "fc4eb242-72d3-4bc5-8759-173e8c9ae75f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bdfc319b-dc80-4197-991d-d4ee6380f134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0731d9f2-93d0-4e47-994a-42bd490de8ec",
        "cursor": {
          "ref": "35f1f8e4-5073-48c8-9a05-4bc3e459b419",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "519b0f65-c804-45c9-a686-4fe12b5c17e0"
        },
        "item": {
          "id": "0731d9f2-93d0-4e47-994a-42bd490de8ec",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3cc652cc-bde7-4ae1-8bc3-4d72348c4eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19f5f88-163d-4ece-a17d-728559508559",
        "cursor": {
          "ref": "b6de7f9e-dd9d-4f5c-8233-1fe1fcffadeb",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9ff9f82f-5a09-4ab9-aa76-24bcae249acb"
        },
        "item": {
          "id": "f19f5f88-163d-4ece-a17d-728559508559",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "610484b6-fe9b-4fed-a596-8ac2f5599f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a543813-0c84-4b80-9b15-d8d4f5616032",
        "cursor": {
          "ref": "e0029d91-aa5b-43b0-a641-8dfb61bfdb91",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "caf9ba7f-f664-46e6-86a9-1f626baa32cf"
        },
        "item": {
          "id": "2a543813-0c84-4b80-9b15-d8d4f5616032",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "60526ef4-1c46-48dd-a53b-56fbc1982313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e9806f-5e08-4d1d-bf73-d97f159b5376",
        "cursor": {
          "ref": "310257ca-17ed-4f14-9e15-b9e2c8b1f2f0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "466073b0-bce8-4aa7-bbcf-81092e7725f8"
        },
        "item": {
          "id": "d3e9806f-5e08-4d1d-bf73-d97f159b5376",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4e68548f-0c65-491b-af1f-9e180df402e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293255c9-92c2-4da0-bb61-38579bbcb27b",
        "cursor": {
          "ref": "7db3bb5b-7bd7-46f3-9e26-18512bcb7dcc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "18cb529f-47c0-47f4-828a-c3a14e5b88ff"
        },
        "item": {
          "id": "293255c9-92c2-4da0-bb61-38579bbcb27b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26ca7bc3-8b58-44d2-be14-3c25ac3ebf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bad52ea-4f98-47af-a4b8-ed9d0cd10467",
        "cursor": {
          "ref": "f7c04e9c-82b1-407f-8144-f70dfee0885e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "069dbd75-d434-42fe-975a-986e66d2751e"
        },
        "item": {
          "id": "0bad52ea-4f98-47af-a4b8-ed9d0cd10467",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ea3be015-86e7-41e0-a6d2-f3ca0a655ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227c9364-6775-49a7-b8b6-8f6ace16f5cf",
        "cursor": {
          "ref": "3ea49a35-4964-4ac3-8f9c-1177687892b1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fd89f826-de10-490f-9501-90900d7dfd64"
        },
        "item": {
          "id": "227c9364-6775-49a7-b8b6-8f6ace16f5cf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "23f4cd74-87cc-461e-8203-81e9f48d8a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051d2182-a247-45fe-b9b9-3521cb1701b6",
        "cursor": {
          "ref": "c6460f76-fca3-41b6-8a6a-dec1d8f4c671",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fdf8cca8-2749-457d-8d0a-78ce15defa52"
        },
        "item": {
          "id": "051d2182-a247-45fe-b9b9-3521cb1701b6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "061674e1-dab8-41de-87b5-a7a3cc8b0853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f691953-b3c3-4026-ad71-a726aa3548c0",
        "cursor": {
          "ref": "f47c987c-4e88-4bdc-9079-b9e680052f83",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4e0f0d05-38ea-4df6-b56e-0480fcb43a5f"
        },
        "item": {
          "id": "3f691953-b3c3-4026-ad71-a726aa3548c0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8faf84d0-d773-4e8d-a9eb-f439842c46d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678eb64c-0f73-4ad2-ad25-fd9b26187f33",
        "cursor": {
          "ref": "02702576-c72d-4897-846a-00215ece0129",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "64cc0e89-e1b5-477b-bc7e-4079f7cafc41"
        },
        "item": {
          "id": "678eb64c-0f73-4ad2-ad25-fd9b26187f33",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8292ba4c-ef76-422f-b978-1fdddcb2d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a25e55e-b809-4491-b7f4-1d7ea9914069",
        "cursor": {
          "ref": "64ae9e13-ccbb-40aa-90bc-5058614ebbf0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b03db33d-3df3-4859-815e-1cf864dda3ee"
        },
        "item": {
          "id": "7a25e55e-b809-4491-b7f4-1d7ea9914069",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "71352776-d0d3-441c-bb59-19294ee9aa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3df13f2-f1af-4dfb-9fde-ca9200782270",
        "cursor": {
          "ref": "1716d71f-afc0-49d0-ab08-0770f5dac2ea",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1332e3a7-d838-4923-a3ba-6fbae5142be5"
        },
        "item": {
          "id": "a3df13f2-f1af-4dfb-9fde-ca9200782270",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b47a05d9-b417-45e6-9918-026e73840a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486a364d-960e-419b-8852-ae0979d5a66b",
        "cursor": {
          "ref": "125f0642-3d51-4e95-8170-4d3329fc4a95",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3249c718-2a9d-4fbc-a8b7-91231c2fda3b"
        },
        "item": {
          "id": "486a364d-960e-419b-8852-ae0979d5a66b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "74d62a29-4564-4680-944b-61a5fc3ade3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fbc09e-e618-4358-8bd9-ef9b01e4d3bb",
        "cursor": {
          "ref": "3fec9e41-837f-44ce-b222-ed3a70eb9d9e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "731e3e8f-43da-4078-90b6-54c251ef0d51"
        },
        "item": {
          "id": "17fbc09e-e618-4358-8bd9-ef9b01e4d3bb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "791592c9-53f1-4728-9517-48e19fb6f9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10a5764-c6e0-4c26-bdb9-c2b35bb07a83",
        "cursor": {
          "ref": "a415d8a8-4f2b-4300-92f3-251024068fd8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e7f0c47-5a01-4ddd-9124-b4e840f7cf9e"
        },
        "item": {
          "id": "d10a5764-c6e0-4c26-bdb9-c2b35bb07a83",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80ebc393-2c97-4a3c-9169-5ccd6fca59a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afda4c37-1181-4e1b-bd98-dc3cf83d6092",
        "cursor": {
          "ref": "831e6af4-1f04-47f8-ba09-f73fa6f25722",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53234aa7-ee33-4e75-b54f-1232d69319a0"
        },
        "item": {
          "id": "afda4c37-1181-4e1b-bd98-dc3cf83d6092",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b339c7c-6e12-47eb-96bc-83a183953f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96284d8-9ae4-4ca8-aa06-151b99095c97",
        "cursor": {
          "ref": "222f9af2-b026-49cf-8cff-bd7114516567",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d4f4693f-348f-4df3-839a-97b6d4d831ef"
        },
        "item": {
          "id": "b96284d8-9ae4-4ca8-aa06-151b99095c97",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c292cd8f-a993-4873-b238-a86a4e139075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb27b5d-5c12-476f-810d-8ec6d32d9433",
        "cursor": {
          "ref": "08af428c-9b38-4e2e-b202-d0d48b8d1623",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b66fa6ef-d25e-467b-8414-067651e0ad3a"
        },
        "item": {
          "id": "cdb27b5d-5c12-476f-810d-8ec6d32d9433",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8106c37d-38ff-4cd8-a697-8e8c0e10d6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf34074-88a7-48dd-a556-e4c8df723178",
        "cursor": {
          "ref": "9eaa7533-19cc-48ed-81c5-63273b6c1f4d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "50836916-4817-4455-9985-bd0d6cef067e"
        },
        "item": {
          "id": "eaf34074-88a7-48dd-a556-e4c8df723178",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a823bdc0-a864-4642-9956-00b4d153b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff51d2d-f55e-4ae5-9674-749d000063cc",
        "cursor": {
          "ref": "3b6de2a2-e238-4091-9e4f-6443c5be058c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "aefff209-a802-4f5d-8250-cae0b027bd22"
        },
        "item": {
          "id": "8ff51d2d-f55e-4ae5-9674-749d000063cc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "81ee883c-ebab-4feb-95c9-37551d667d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61673eef-a039-4648-bdcc-07782ef2206a",
        "cursor": {
          "ref": "c49b3787-ba6b-484a-b355-38dc2deb4210",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d3570f38-f97f-40ae-b601-c29d32552635"
        },
        "item": {
          "id": "61673eef-a039-4648-bdcc-07782ef2206a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e3202441-59ab-4eb0-ae58-5ff3c8e440f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b8c7de-cf5f-4bf2-9ffc-b38f84432c20",
        "cursor": {
          "ref": "68210b97-4597-4200-8d41-b22a95bde69d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9761f661-8841-4aa4-a60d-2d2b537f4a1e"
        },
        "item": {
          "id": "70b8c7de-cf5f-4bf2-9ffc-b38f84432c20",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d73431d1-d669-4e23-a414-854bc3f7c5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da4d443-fadd-4557-a8ae-5a2992f69210",
        "cursor": {
          "ref": "2ccba96b-d813-4f51-9499-8ab23844bb9a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b80630a0-0ee2-4d65-bb67-3611d1172862"
        },
        "item": {
          "id": "7da4d443-fadd-4557-a8ae-5a2992f69210",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1e00bce2-0f42-4368-8550-830fc6ae38ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52666cd0-97d6-45d3-bb86-b4701ad351ad",
        "cursor": {
          "ref": "b5f17ae0-270b-4dd9-ba4c-b8de4e91270e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "94db70f3-9879-4108-8e09-cb759eadd49e"
        },
        "item": {
          "id": "52666cd0-97d6-45d3-bb86-b4701ad351ad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "54914eb1-0834-483a-a1e2-0ec64dc7fc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f53e52-eb2a-4939-9035-eba415e60106",
        "cursor": {
          "ref": "59b13117-c82b-4c6d-9bbc-c00d2b7582da",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5de779b8-d01c-40b7-a972-afb0e11b2e3c"
        },
        "item": {
          "id": "a0f53e52-eb2a-4939-9035-eba415e60106",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c2de4ac4-40b2-44bf-b54e-655409d7c5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5439875d-4f46-4e3d-a0dd-014a9900ed8d",
        "cursor": {
          "ref": "3116b2ae-965f-49c1-9276-798f2706fa52",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5b4b39f2-4797-477d-995d-f3b8ba5fd54b"
        },
        "item": {
          "id": "5439875d-4f46-4e3d-a0dd-014a9900ed8d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8e1aa80c-c514-4912-8fb6-0a0e3937b0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c0d949-6990-4f4d-9a9e-426dfe286ab3",
        "cursor": {
          "ref": "49df26f9-fa28-4cd9-a632-03e1b05eb266",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8cf4943e-5fce-4dbd-860d-332f59f34ad2"
        },
        "item": {
          "id": "c3c0d949-6990-4f4d-9a9e-426dfe286ab3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6a03cb46-8d8e-4dea-9294-928a7fb7d7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2f8966-c77b-447f-9d46-580c3b6e60f7",
        "cursor": {
          "ref": "7c063063-c5f4-41c0-bc2b-957600563267",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7613d44c-e0d7-4fea-85f8-46fbbe408403"
        },
        "item": {
          "id": "1e2f8966-c77b-447f-9d46-580c3b6e60f7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1a04a106-7e83-4e05-80f4-be97ed5edddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b3ca2d-1a30-44c5-99f9-cce323cdb8f4",
        "cursor": {
          "ref": "54a2f84b-96b0-4f81-8295-1f78a5532c25",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a6a08420-3ecc-4d75-a1b2-5106f4bcd192"
        },
        "item": {
          "id": "78b3ca2d-1a30-44c5-99f9-cce323cdb8f4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1233371d-f5a7-454a-b9fe-1b2887352e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad42417f-2f72-44df-826d-714311d2a27d",
        "cursor": {
          "ref": "c0141660-924a-4a08-8079-e7fba30746fe",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c9e69315-94f5-4e31-85ca-abcdba8980d5"
        },
        "item": {
          "id": "ad42417f-2f72-44df-826d-714311d2a27d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "20782fe5-e5da-472b-9ac2-a8cdfc12fcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4532a-3532-4dff-a3cf-ae410887a069",
        "cursor": {
          "ref": "1f3eb494-6c12-40e5-a69c-0139ca574df9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "59a0691f-6b2e-4e8e-95a5-d0268876fbde"
        },
        "item": {
          "id": "eed4532a-3532-4dff-a3cf-ae410887a069",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9462e1cb-78e5-4822-bf92-1dab5e1a9af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f079ee9c-5f5e-42f2-8190-7fcf996e22c7",
        "cursor": {
          "ref": "3c7f34f9-7a94-43a0-9914-b33524eb26b8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6a167992-475d-49ef-a8f7-5f59833748f6"
        },
        "item": {
          "id": "f079ee9c-5f5e-42f2-8190-7fcf996e22c7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "19204705-c766-44e6-b35c-eae0ac89ed99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da27716f-735b-43eb-b5b1-b4b92eef451e",
        "cursor": {
          "ref": "f881d907-7d6f-4d70-ac12-af45502b3d5a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1bb11329-9ec3-43ff-afa4-5a915bc431c9"
        },
        "item": {
          "id": "da27716f-735b-43eb-b5b1-b4b92eef451e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7bb4ddb4-f752-447c-a602-131017955ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827b59c4-7900-4efd-b46f-1c362cf8061c",
        "cursor": {
          "ref": "496bd554-84c3-4c6e-8829-419d6df4a911",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8402e566-e9bf-443f-8db9-c10d6109f1be"
        },
        "item": {
          "id": "827b59c4-7900-4efd-b46f-1c362cf8061c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9c824160-d65c-41ca-a437-97dbcdb534ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058a413b-139d-4039-a153-2871972f4528",
        "cursor": {
          "ref": "7ab9ebae-a4f0-4bf6-88f8-e62fc688875d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2631e29b-ba3e-47ba-9a76-8bf8618de4e7"
        },
        "item": {
          "id": "058a413b-139d-4039-a153-2871972f4528",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "acbfaab3-7aff-4f82-ace4-96b34e77df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996d23b2-8956-45f5-937f-5496580d2f74",
        "cursor": {
          "ref": "275b7560-5177-4ab2-84e8-7705c228e036",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c397c3d4-1bbf-4cc8-8a13-397656871f02"
        },
        "item": {
          "id": "996d23b2-8956-45f5-937f-5496580d2f74",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "85dbc9b5-54f6-4886-9388-220f7df83bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddac38d-c426-4287-9bbe-8368ed2bfa59",
        "cursor": {
          "ref": "9bc77ddd-9666-4aae-8edd-1cdb36b9b2b8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "148016b2-9b34-4d06-8ff8-dbb8126d1e93"
        },
        "item": {
          "id": "7ddac38d-c426-4287-9bbe-8368ed2bfa59",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b9ded807-fda2-497d-9665-fc5a02c3eab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529d1cef-f636-430e-8e31-79c5e133dd1c",
        "cursor": {
          "ref": "80c29836-7628-4546-80ae-ea10ec2cb0e7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2f9d0ea9-7d4c-479a-8e8d-07cf4a4d1fd2"
        },
        "item": {
          "id": "529d1cef-f636-430e-8e31-79c5e133dd1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "04b80ae5-6cc3-4729-8bcc-f639b2314eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9bcb7f-086f-435a-bd94-31916a8c3075",
        "cursor": {
          "ref": "4346fcda-ef2e-4e2c-8a6e-7bec5ac70f95",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "039f3c2e-65ce-489f-be22-7e564a6d082b"
        },
        "item": {
          "id": "8a9bcb7f-086f-435a-bd94-31916a8c3075",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96e2d581-98b0-4fd3-8e26-bc0ab875a479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66e6638-a17e-4288-b3bc-4c268a1b8d73",
        "cursor": {
          "ref": "a5d6a563-eeb8-4e71-a240-858fc06fa025",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b038e813-1e08-492f-8681-9e75a61a043d"
        },
        "item": {
          "id": "b66e6638-a17e-4288-b3bc-4c268a1b8d73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "051ec706-ce15-4f1f-bb7c-627449dc740e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839bd583-cb9f-465d-8e22-293af45791a0",
        "cursor": {
          "ref": "32745883-9948-4af2-a618-3f4527600360",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da8fc8e0-2f0a-41d5-b28d-018e797c785d"
        },
        "item": {
          "id": "839bd583-cb9f-465d-8e22-293af45791a0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b960db27-a0ef-46c0-9cea-69a2e4fe53a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b4a6c2-147d-48d8-94d8-7c61bed87793",
        "cursor": {
          "ref": "34d66938-b408-494d-8bfd-79acaca5d5c2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "22d89087-6450-4c8d-8373-b6be1cca5a7e"
        },
        "item": {
          "id": "c0b4a6c2-147d-48d8-94d8-7c61bed87793",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c411cb44-03f4-4c5b-aabd-426c3f957c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa57f712-f1bf-4583-bab6-08096810d0b6",
        "cursor": {
          "ref": "ea8027be-a6fc-4c5a-91e1-8afe669d8d21",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bbd00afd-d4a6-46bb-b9aa-a429ed9370ed"
        },
        "item": {
          "id": "fa57f712-f1bf-4583-bab6-08096810d0b6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "28a02468-0ea8-41d3-873c-f4e53412849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06918454-3aab-48f9-9b48-308f6c084040",
        "cursor": {
          "ref": "b06c3568-eff9-45c0-b7b6-8a7bd316e36f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "040ca552-7c80-496b-bd63-efb41509f437"
        },
        "item": {
          "id": "06918454-3aab-48f9-9b48-308f6c084040",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7911c347-6308-464f-adc8-dc7276b5ebf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7ca41-6ecb-4158-abb3-a19bcf6fa126",
        "cursor": {
          "ref": "68054b2f-611d-46bb-bc2b-b4c137161409",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3d4c4639-93ec-4f0b-ae30-57bf54d0314f"
        },
        "item": {
          "id": "89b7ca41-6ecb-4158-abb3-a19bcf6fa126",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5510a5ed-fc5e-44b3-8c26-58688cd6fc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643f670-c9a4-43cc-a062-543659736247",
        "cursor": {
          "ref": "141aa105-d589-42b0-823d-86577ba5be26",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c235a1ee-607c-4d7e-9889-0b8a8d43e87e"
        },
        "item": {
          "id": "2643f670-c9a4-43cc-a062-543659736247",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "66bb5f32-cd98-4ae4-a985-23574750c41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8744f8a6-9879-4854-a3f4-394b490f3022",
        "cursor": {
          "ref": "9362c5a8-0d89-4b23-a4e0-bb38f154b0bc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "852aba84-8519-4b55-9d6f-ed589b3b1497"
        },
        "item": {
          "id": "8744f8a6-9879-4854-a3f4-394b490f3022",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fc673762-5160-4ea8-96dc-9d950623f19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4aaf6f-4ed2-4bb6-93c2-97c0fc5ba12a",
        "cursor": {
          "ref": "2b77d8ec-fe69-4281-8dc3-1323834f3c9c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "186efeab-f059-40aa-95a9-0f269ef940e4"
        },
        "item": {
          "id": "0c4aaf6f-4ed2-4bb6-93c2-97c0fc5ba12a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0d839892-9d77-415a-9e2c-414f06898849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98464cd6-3be1-4fe2-a1fe-bc113e60b111",
        "cursor": {
          "ref": "6592c6de-0736-459f-8009-a94a19a097cb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "819e7cbe-9e5e-46e7-aeba-ca2bd3ef08bc"
        },
        "item": {
          "id": "98464cd6-3be1-4fe2-a1fe-bc113e60b111",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0a770f4d-f94d-492d-9309-048d95f57344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638af3b5-7821-4319-80ba-38ebfcf758bd",
        "cursor": {
          "ref": "2a5f4bcf-9b82-4a2c-9f53-260703299756",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3c179344-bcba-4b71-b12f-2856423732b3"
        },
        "item": {
          "id": "638af3b5-7821-4319-80ba-38ebfcf758bd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ded1435-a71f-4daa-86e9-3d147700a781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71eb7d9-bdc6-4fbb-a178-a4327421545a",
        "cursor": {
          "ref": "1648b764-94e5-4ff0-94c8-5215cddcdbf1",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8dae7a71-dec3-4019-b7d6-cee70b5f881e"
        },
        "item": {
          "id": "d71eb7d9-bdc6-4fbb-a178-a4327421545a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "84ee58fe-64b1-486f-ad3c-ea153ff19ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea35b84-bf91-41b6-819f-c3e54deec796",
        "cursor": {
          "ref": "43cdaabf-fffa-4d78-b7e2-01ebc838ed99",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "522b8716-8d18-4c51-97c8-7a158fe65c32"
        },
        "item": {
          "id": "2ea35b84-bf91-41b6-819f-c3e54deec796",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1ac334c8-6aa2-4f29-a496-f0fb199b889b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b71e9-82b7-491e-a231-1ed06caef6fa",
        "cursor": {
          "ref": "0a071be3-ccc1-4216-84d3-725b112bec4f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6e2230d7-ba52-4950-8702-cd74cc0c9a68"
        },
        "item": {
          "id": "9e6b71e9-82b7-491e-a231-1ed06caef6fa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f97e268c-2328-4221-a528-f3fb0f6eac45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a48d38f-ee37-41a0-8dec-d497413e58da",
        "cursor": {
          "ref": "95127f9f-7fca-4493-a156-c9e045305969",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e0b69f2a-8c1f-4293-9a50-eb0e1061a404"
        },
        "item": {
          "id": "4a48d38f-ee37-41a0-8dec-d497413e58da",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f65df5e2-f52f-424c-8029-c29a0e60fb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaa3050-1c2b-478c-9ab9-d0387ac76c88",
        "cursor": {
          "ref": "e9272cb2-116d-4875-9416-2353a3131e46",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "34d78dc1-4570-40cf-83d6-a9cdffb3874b"
        },
        "item": {
          "id": "fdaa3050-1c2b-478c-9ab9-d0387ac76c88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "071a00f5-9fbe-40fb-9a0e-4f52081d8b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45337515-7b3a-40b7-91ae-1b8d5f42cdb4",
        "cursor": {
          "ref": "26311979-f085-4f91-af91-0f8f9a397b3f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6123b165-4962-4af7-96a2-d20385fbaacd"
        },
        "item": {
          "id": "45337515-7b3a-40b7-91ae-1b8d5f42cdb4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0cd56796-3ddb-4fa7-8c84-fbcecc8ba2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb0e632-77c2-4405-80bf-ea8c3354b593",
        "cursor": {
          "ref": "ca45e486-3d78-42ae-b5fe-4fd958a428c2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f31991b1-9a7d-4e6b-a9ff-e323ff974a3d"
        },
        "item": {
          "id": "abb0e632-77c2-4405-80bf-ea8c3354b593",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "05d37eb5-7584-4f2d-9ab8-a478cdd4d08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576e510-ab41-49d6-8a73-fa089198ad1a",
        "cursor": {
          "ref": "fe0e6c2a-ba7c-412b-bc23-77904305adb5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "20f85420-4592-4676-81f2-0de3bb336e7a"
        },
        "item": {
          "id": "b576e510-ab41-49d6-8a73-fa089198ad1a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "03c0a15e-33cb-411b-bc90-5c9cc6039221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef001eed-6227-46fc-9f38-ff8981a71968",
        "cursor": {
          "ref": "2cc5ab87-a06d-49a0-b3b9-a1b916d1b729",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "35d7b0d5-7410-42e7-9fcc-63fa8c697a7a"
        },
        "item": {
          "id": "ef001eed-6227-46fc-9f38-ff8981a71968",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "716d5bcc-3d92-4f26-9a14-35c72482aedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9099a62e-2196-4f73-93b5-bf265518e2f5",
        "cursor": {
          "ref": "2dc771b0-40aa-42ce-b2cd-7c203ff60f33",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a5fbb816-702c-48b8-b9d0-e5cea36c1d7b"
        },
        "item": {
          "id": "9099a62e-2196-4f73-93b5-bf265518e2f5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "efbea767-a200-45d8-ac78-37ad70a43752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e13c02f-3ce9-48f7-8f4c-5f1f532e029c",
        "cursor": {
          "ref": "30d698fe-a195-4cec-85b4-648887c3a279",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "398c5923-1241-4863-a148-d6906538e5dd"
        },
        "item": {
          "id": "6e13c02f-3ce9-48f7-8f4c-5f1f532e029c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "68ea6c38-4405-4f71-a89f-b965ada20176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df28fbe-4c7e-4904-82c2-1005d5378d06",
        "cursor": {
          "ref": "018795e2-1300-4398-8908-b51d14bb0f89",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a900ad67-4f80-4f20-8540-0750e402d3ad"
        },
        "item": {
          "id": "6df28fbe-4c7e-4904-82c2-1005d5378d06",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d576785-068d-41b2-9d1f-42832ee68494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc115385-4376-4862-93cd-35e83a263c13",
        "cursor": {
          "ref": "20f5db1a-51c5-48fc-b627-418d90b9875f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4209c20f-b1fc-4a2f-99a7-bc2f72599853"
        },
        "item": {
          "id": "fc115385-4376-4862-93cd-35e83a263c13",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "73136c56-0616-4c13-be37-3db0a1309037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f83a70-4aae-4f15-8b49-e371a787e771",
        "cursor": {
          "ref": "d3616a9e-c2e1-4b20-b31a-a53cbcf393af",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e082a3fc-a1cd-4b64-8434-9ca7ced694fe"
        },
        "item": {
          "id": "06f83a70-4aae-4f15-8b49-e371a787e771",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "00702ea0-bb2e-4282-bc2c-f7d586ca6f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23fd6db-ae64-451f-9b28-181e0bd8a001",
        "cursor": {
          "ref": "0143ecd1-2dfa-450a-959c-9920c9e1516e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "381d25cd-137c-402d-a938-a6a353b8ce58"
        },
        "item": {
          "id": "d23fd6db-ae64-451f-9b28-181e0bd8a001",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "29d7877a-06ec-4421-842f-ffb7acb4fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd1ca7e-a377-4439-b3da-176a51e88e1b",
        "cursor": {
          "ref": "2ab3e4df-b45a-4d4c-8517-b2109121b63d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e6a8eb2f-8d3d-4383-92a1-cce1c06b2f4f"
        },
        "item": {
          "id": "ddd1ca7e-a377-4439-b3da-176a51e88e1b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "49e84cac-c720-4962-9e9e-40271b3744c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c3f188-ded4-433b-b94f-3059857a9605",
        "cursor": {
          "ref": "5ad5cf3e-dc0e-43c2-b418-fed2dd4e82af",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b046a4b8-c10c-4bd9-8d4c-5e20677e2c79"
        },
        "item": {
          "id": "f1c3f188-ded4-433b-b94f-3059857a9605",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "83673441-49bd-40a8-b5b4-3dc2d9c043d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b6e05c-de15-40b2-b814-d9a6322196b4",
        "cursor": {
          "ref": "5eb12fd8-6433-45ab-b3d1-d52c559787a5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "029dd4ea-233f-4f8a-b1c7-8e8b02f4d48b"
        },
        "item": {
          "id": "01b6e05c-de15-40b2-b814-d9a6322196b4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6c953dc0-736a-4e22-9b36-06215dcb6943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87be6f42-1f51-46d4-b245-5174c646c21e",
        "cursor": {
          "ref": "6025059b-6e00-4e79-9035-0ac9e5f4272a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6906960c-0395-4012-bfb1-d0e0cab71fff"
        },
        "item": {
          "id": "87be6f42-1f51-46d4-b245-5174c646c21e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f53f621f-3761-4c9e-aaaf-904cdda0e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cee5e0-1ff4-40d7-8567-a09db1f50901",
        "cursor": {
          "ref": "435f14ca-9304-44f2-a8b9-404cfef7eb2a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "021c900f-0869-4cae-96ee-8709c83bcf1d"
        },
        "item": {
          "id": "f8cee5e0-1ff4-40d7-8567-a09db1f50901",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a591e859-0662-46ff-a0a0-75ba0579b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df0abad-09f4-4e9e-ba8a-ed4bf16a9163",
        "cursor": {
          "ref": "f651baf3-526f-4d00-88c5-cd8671e5e7f9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9581709e-b597-415e-988f-1a5e118f58d8"
        },
        "item": {
          "id": "3df0abad-09f4-4e9e-ba8a-ed4bf16a9163",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4a55daf9-e961-4c4c-a5b6-1f9ad288992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b72673-6bed-4d11-8baa-9b05fd7bc756",
        "cursor": {
          "ref": "4b4e91fc-29e3-442c-996b-275354e55c91",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d8f808fc-5069-4af4-8950-d006ee1f09b1"
        },
        "item": {
          "id": "24b72673-6bed-4d11-8baa-9b05fd7bc756",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "192fceb5-4279-4253-af74-a9480f75ff0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9e7184-e414-4417-a79b-1a866031fd5c",
        "cursor": {
          "ref": "9ca5722f-4919-4315-aa45-5c697377f0dc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5deee9d4-632d-42e8-a94c-0ccd55736707"
        },
        "item": {
          "id": "cf9e7184-e414-4417-a79b-1a866031fd5c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8aa694c4-4b7a-4547-a618-e1fb1a0cfddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "84effc00-72ae-4770-8a72-5ef8fb5a9868",
        "cursor": {
          "ref": "3b2c22f1-be7b-4da3-a6be-dc9b8346efb8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2944fb4e-2e01-4584-b95e-7ce39e138238"
        },
        "item": {
          "id": "84effc00-72ae-4770-8a72-5ef8fb5a9868",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6e94c90e-243e-48bd-96c1-4aeca095283d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "69d439f8-7614-4991-aa6a-bb1e2fb2147c",
        "cursor": {
          "ref": "d007370e-791a-4a52-a29b-86f1f23054db",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94bb07c2-f615-451b-981c-df8ceff38f60"
        },
        "item": {
          "id": "69d439f8-7614-4991-aa6a-bb1e2fb2147c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "621a9cb2-ee34-48fb-a7cb-62e0c28f9ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "22b0403c-88ce-4595-9603-03556f4fcd56",
        "cursor": {
          "ref": "a49bfb7b-c2d9-45c9-b2ed-ae117595b3d0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0ece2a16-845b-4b3e-90d6-86ea443656ba"
        },
        "item": {
          "id": "22b0403c-88ce-4595-9603-03556f4fcd56",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "161a65c6-a08c-4a43-862a-009add5d827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "654b017c-0c70-4a02-bdfd-1c52fe6dd982",
        "cursor": {
          "ref": "00f65eca-ccb6-4791-b241-457829e42c3b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b2ce48f6-8db3-4aa5-8410-cd437edf2f82"
        },
        "item": {
          "id": "654b017c-0c70-4a02-bdfd-1c52fe6dd982",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a20c869a-17b8-4509-8a7c-f5c7ec93d47c",
          "status": "Created",
          "code": 201,
          "responseTime": 8569,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c18c9d7-9c3f-47f8-9c27-65c7aee7f149",
        "cursor": {
          "ref": "57434559-64c3-4e1a-93dc-76f093be9524",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9432a2b3-5dea-4bf1-97ea-f6f05b842122"
        },
        "item": {
          "id": "4c18c9d7-9c3f-47f8-9c27-65c7aee7f149",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e9c47a81-e563-449c-b89d-b38848c51b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "65f3dc1d-4f3f-44e3-8ab5-3882ad7b96c6",
        "cursor": {
          "ref": "397b91a2-d97e-4e87-b92c-c9dc6399a1c3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2bba6a27-7194-4f31-b10b-c4e1919b6c59"
        },
        "item": {
          "id": "65f3dc1d-4f3f-44e3-8ab5-3882ad7b96c6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e92e6e11-fb21-40ae-b5b7-6588d0f4cd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fb3039b7-3ce8-46fb-b4bb-a575416fc49a",
        "cursor": {
          "ref": "8b5b628e-0480-413a-b8ab-18f31a9df796",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3f87ad9f-ba24-468d-aeff-b21d6918ace2"
        },
        "item": {
          "id": "fb3039b7-3ce8-46fb-b4bb-a575416fc49a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "454270d0-2dfb-4750-9a8e-6464ba3bb809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72304b9-c9fa-4f37-8596-11310996a4b1",
        "cursor": {
          "ref": "fe928281-e10f-4437-b7e7-abf96bcd6c67",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f88fd1a2-e176-44e3-b757-2cf553cbcd19"
        },
        "item": {
          "id": "e72304b9-c9fa-4f37-8596-11310996a4b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6faf49cb-e6a0-413f-8f24-9d9521a5422e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b233b2-f4f7-4008-a28a-6438b4584e91",
        "cursor": {
          "ref": "c84c831d-3ada-4fdc-b07a-d72e62877bb0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "502f1811-3f2b-43f5-ac06-23cb546ad071"
        },
        "item": {
          "id": "71b233b2-f4f7-4008-a28a-6438b4584e91",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f7ed79dc-636a-4642-9850-a68a4715a7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e787384-7b79-4350-be01-0a8d5c504ff4",
        "cursor": {
          "ref": "07824695-4fa9-4935-889c-cdbdbe2ba425",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b4152f71-30c1-42b3-b07b-f235140e4add"
        },
        "item": {
          "id": "3e787384-7b79-4350-be01-0a8d5c504ff4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "075d5b94-b54e-451c-a29b-20549e128dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb87a5b-af10-47f8-b66d-945cbc36678a",
        "cursor": {
          "ref": "81100529-d4c4-43ff-94d2-5a6c4a23812c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8837b5fc-04eb-4ac6-bd9d-98101ddb9d29"
        },
        "item": {
          "id": "abb87a5b-af10-47f8-b66d-945cbc36678a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8e29f133-a247-4c1c-a6e8-c501c8eac023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260ab73d-5a5c-4569-8fbc-347a5bbdb809",
        "cursor": {
          "ref": "91d068d5-c4c6-4dbb-9a23-c70a80e71e36",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "13dcdbda-f1dd-4ff7-a442-696e150f07be"
        },
        "item": {
          "id": "260ab73d-5a5c-4569-8fbc-347a5bbdb809",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3a4f6a4f-5108-4610-9b62-2b7ad6ad5e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fdd2b3-cc4e-490e-aa37-39aa0f67497a",
        "cursor": {
          "ref": "0fb500a7-3015-4fa7-b8e7-ed247eb47e09",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "68d769ca-ca31-4568-be89-bb18d1825168"
        },
        "item": {
          "id": "93fdd2b3-cc4e-490e-aa37-39aa0f67497a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "653b42d8-9abd-4b50-9a42-82077cb626e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf8804b-0f4c-439d-b252-f48e975d9e0f",
        "cursor": {
          "ref": "48719d94-36b3-41fe-8e87-5af744dbf003",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1b20c0b3-bcfb-4603-99fc-663fd88528fb"
        },
        "item": {
          "id": "3bf8804b-0f4c-439d-b252-f48e975d9e0f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2e6a60b3-9eff-4938-8657-60edb3bd7e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e89efb-cbdc-4dc6-810e-9693c683737a",
        "cursor": {
          "ref": "9517063c-8006-4752-9ebf-dea6ff7b2d7d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ae89525c-959a-4558-911e-870ded7532ec"
        },
        "item": {
          "id": "70e89efb-cbdc-4dc6-810e-9693c683737a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8bac3a55-3e1e-41f8-8e5d-aab8c5abfd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8528e6b-4256-449d-a8bb-666ef4093f8e",
        "cursor": {
          "ref": "d44880c1-b90c-4019-b604-bfde6cc0ca02",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7a4ae7b1-c3dd-470c-b925-2708758f14b9"
        },
        "item": {
          "id": "b8528e6b-4256-449d-a8bb-666ef4093f8e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5326d0e9-c72f-4ba0-bc8b-974593490cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1375f14c-419a-4e4c-b27d-71c19aaad9b7",
        "cursor": {
          "ref": "7d253969-d1d2-42fb-a9bd-d6191d28f11c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7995664c-a634-499c-a4f1-e2bb7d5db12c"
        },
        "item": {
          "id": "1375f14c-419a-4e4c-b27d-71c19aaad9b7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9ae96a5-5c53-4069-ba7d-5a0885c6d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a9af49-eaeb-4ded-98da-e10ac9812157",
        "cursor": {
          "ref": "fd5d0c73-3c60-47f5-9661-fb82c9889979",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "96310582-6f28-4351-bf98-2092b780db9b"
        },
        "item": {
          "id": "a3a9af49-eaeb-4ded-98da-e10ac9812157",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3d60b6c8-4142-4b80-a9a5-357b237d013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366a1bf4-dcbf-40bf-97d6-18efdaee911d",
        "cursor": {
          "ref": "4c955b9a-499e-40a3-8c42-77f9f3298456",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ae2f4511-b410-45b9-b613-1a90e12112b7"
        },
        "item": {
          "id": "366a1bf4-dcbf-40bf-97d6-18efdaee911d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6e6742ce-cc2d-4815-80da-ba3b87488bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15f8330-7904-41b9-b122-c1d821b5d7ae",
        "cursor": {
          "ref": "dd7ac734-f543-4b71-be5b-5ca0773ce2e8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f4ad5e45-9058-4dd7-8ec8-4b2891725d33"
        },
        "item": {
          "id": "a15f8330-7904-41b9-b122-c1d821b5d7ae",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b31f3f4a-7bd2-41b8-a207-05e1508d20af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6273c5b4-ae08-4774-b46b-4fbab628717a",
        "cursor": {
          "ref": "fa6b9a27-d64e-4ee2-9651-e84b52b5b18c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e909aedb-6ef0-479b-9db8-7a7869e4661c"
        },
        "item": {
          "id": "6273c5b4-ae08-4774-b46b-4fbab628717a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a44db8a8-2b26-4b11-8772-7ee28a8b6cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325b313b-0324-44c7-889b-94d0ad3e96b6",
        "cursor": {
          "ref": "c1d87ff2-9467-402b-8e03-045d31e28f2b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "58b272ce-4623-4c86-9723-8ab8416a8c01"
        },
        "item": {
          "id": "325b313b-0324-44c7-889b-94d0ad3e96b6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1014480-516b-4de5-8626-8e054cc8c07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435f1957-9169-4b5f-9ae6-6ad11beeba02",
        "cursor": {
          "ref": "774f6909-7cb1-4c96-bbe0-eb89e2a3be0e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a8304931-c5a9-4c99-97c8-c6c04c75d727"
        },
        "item": {
          "id": "435f1957-9169-4b5f-9ae6-6ad11beeba02",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cac05a0c-4494-4e92-98a4-b09831fea0b8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ccfa2a14-d158-42a6-962d-cba12c2acf78",
        "cursor": {
          "ref": "f225783c-a27b-4e5b-a29a-c00fe4df7e61",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fc6618aa-2fa7-475e-b051-4dbccae7ae18"
        },
        "item": {
          "id": "ccfa2a14-d158-42a6-962d-cba12c2acf78",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c354fd02-2f72-412c-a5fb-7608f15576fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ff3dd7-71a6-40b9-a1f7-2e9856ac5b16",
        "cursor": {
          "ref": "b84274cd-21fc-4645-82e4-20f1b413b847",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aed06621-bbc2-4ee1-9274-6f5f60bd0e6f"
        },
        "item": {
          "id": "83ff3dd7-71a6-40b9-a1f7-2e9856ac5b16",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4a36a9e9-6dc5-4749-a646-931d9162fb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aa006b-6d90-4de6-acb4-00c4f323c94a",
        "cursor": {
          "ref": "80667433-b766-4769-ab76-ab9305020e57",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "43ce685d-8a08-4ec3-98f9-29e52952d823"
        },
        "item": {
          "id": "93aa006b-6d90-4de6-acb4-00c4f323c94a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e059e6fb-3f85-4679-8c13-294f3c15f104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9011372d-1fa1-4a83-872a-e40564445585",
        "cursor": {
          "ref": "10c30259-7fa5-4bc3-854c-6bb7e5cbacb0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "065ebd12-2b95-4783-a261-39e72df0168d"
        },
        "item": {
          "id": "9011372d-1fa1-4a83-872a-e40564445585",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fee7c6b5-b028-4604-9980-4fc2ecc8fb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5be411a-8386-44b4-8b61-7cb465ca3a12",
        "cursor": {
          "ref": "9a342603-cdac-4259-8cf2-35346ec6ec00",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "09af1143-78ba-4fc8-9348-f95773ea88fb"
        },
        "item": {
          "id": "d5be411a-8386-44b4-8b61-7cb465ca3a12",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1671616c-82e6-4d47-837d-bef12de884da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9518f00e-b934-4dee-a15e-aa067e3de6af",
        "cursor": {
          "ref": "dca94fc4-d082-4f8e-a801-3788fdf2f4ab",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ecdbb319-2681-44c4-94fc-8935356f87e7"
        },
        "item": {
          "id": "9518f00e-b934-4dee-a15e-aa067e3de6af",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da84c8d0-00c9-4571-8481-a3dc10d19e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6843c013-049e-4889-b72f-fbaefbb41d03",
        "cursor": {
          "ref": "d7c6cb00-a0d9-407c-a93b-9031f34146b4",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c487e533-90e0-46a4-a79a-12166b30545f"
        },
        "item": {
          "id": "6843c013-049e-4889-b72f-fbaefbb41d03",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d5a07e0a-13a8-42e4-a2b7-9bc4776ab4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e961176f-bf86-4976-a3cb-bb743a7ef118",
        "cursor": {
          "ref": "6e91e813-b840-4ff1-8bbc-0cb4a853d1e0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "73ca1ef4-0be6-4160-8f5f-74abc8043274"
        },
        "item": {
          "id": "e961176f-bf86-4976-a3cb-bb743a7ef118",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8ecac5f9-95c6-4f3c-a643-cf718575f6b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "36b50b1a-4979-4a81-8fd0-d8f7652673d3",
        "cursor": {
          "ref": "c3fad8f1-c2fe-48a4-9159-87166ac0ee12",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d14cc1b-50ed-4a03-8509-d2edd13e6219"
        },
        "item": {
          "id": "36b50b1a-4979-4a81-8fd0-d8f7652673d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38f83f28-542d-444b-b2fe-2a79933a74c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2cd676-b290-4d7e-a59f-248018811e67",
        "cursor": {
          "ref": "cbbf1ac3-7987-49d2-9f87-03e3066a4644",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "88e32605-7570-4a8e-ab61-ea4b4a297d39"
        },
        "item": {
          "id": "5d2cd676-b290-4d7e-a59f-248018811e67",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4fc5f4c-2e15-4bcc-8446-cd2f009bfd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aea3e75-797e-4307-9d03-c8fb32818637",
        "cursor": {
          "ref": "6e3bb263-b9b6-453f-82ae-9107db629c13",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fc1c2982-60c9-4598-8121-f3055feed159"
        },
        "item": {
          "id": "5aea3e75-797e-4307-9d03-c8fb32818637",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6eb33339-fd7b-4ce6-8819-115b18443563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07fe9ad-f9fb-4dcc-80cd-7ac56e4d5782",
        "cursor": {
          "ref": "d7cdd777-28cb-4b9d-aea8-3be7fec5719a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e972d2d3-eb95-4324-9080-70f1ca1a1f21"
        },
        "item": {
          "id": "b07fe9ad-f9fb-4dcc-80cd-7ac56e4d5782",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "504dd10c-aa5c-4041-9bcd-07dd597b826e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4c03ea-7162-4906-a4ef-9bb272e7bfe1",
        "cursor": {
          "ref": "428e03c8-e661-4df6-9c68-ce4d81577973",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85ac59d0-6ddb-4d29-8bd7-68794e487b73"
        },
        "item": {
          "id": "4e4c03ea-7162-4906-a4ef-9bb272e7bfe1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bfc79ea6-1ade-4d7c-8527-0128ac190c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9e64b9-9d94-4544-85e3-949b1656e7a8",
        "cursor": {
          "ref": "3b3d7601-8d6d-4698-9379-251ab31df017",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f676853c-9cf7-40d8-b0d9-5a95fd5cc997"
        },
        "item": {
          "id": "af9e64b9-9d94-4544-85e3-949b1656e7a8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a03ff227-406e-44a4-a345-385cdb25ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936a7d59-b3a4-4d91-9e1d-aef15278b4cc",
        "cursor": {
          "ref": "f7ffdb12-4f00-4885-a147-beb54939a1c9",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f596ff25-75fb-4ce5-ab62-537befd661b7"
        },
        "item": {
          "id": "936a7d59-b3a4-4d91-9e1d-aef15278b4cc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1fb755a4-536d-4557-acd5-8b893ea6e14f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e2d62f4f-c09b-478b-95d5-729fd8b22e78",
        "cursor": {
          "ref": "dc39a724-33d0-4293-b191-5238481da9dd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f439944c-53d5-4f14-8bc7-48ca5c28856b"
        },
        "item": {
          "id": "e2d62f4f-c09b-478b-95d5-729fd8b22e78",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a273ec4e-7cba-40ec-9ac1-305aa923fb93",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "940fb886-e39e-491e-89cc-327bb846c690",
        "cursor": {
          "ref": "223054f4-914d-4f39-b45c-05dd8fedd6f4",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "67458d99-9f78-4177-af52-f163938244b5"
        },
        "item": {
          "id": "940fb886-e39e-491e-89cc-327bb846c690",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "28d180c9-a1b5-4114-ac27-507d78c6a142",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "eb6e7ab1-0ce8-4bdd-a1a0-eb67edf6017a",
        "cursor": {
          "ref": "25fc6e7d-da7e-431c-8961-5d4baf6794f8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6406a753-3d8d-4130-b613-de3a5f7677a6"
        },
        "item": {
          "id": "eb6e7ab1-0ce8-4bdd-a1a0-eb67edf6017a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2dfb2077-2908-4365-b765-5f9e4f334983",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ec0cce89-8674-49f7-814a-e1c32f5be32b",
        "cursor": {
          "ref": "604d9a9b-187e-431e-9d29-212796a68055",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0ac1c37-fc7a-4e9c-92a7-3a7c886d20ba"
        },
        "item": {
          "id": "ec0cce89-8674-49f7-814a-e1c32f5be32b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "69379414-5b63-4ccb-8555-31b9c35cf036",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e0c11bc7-f8d7-4d71-8122-12311341e8d5",
        "cursor": {
          "ref": "c7702d14-1768-49e0-b5d9-5dfe170f3bb2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5d83fe6e-4f7c-46de-91c0-d6db292b1eab"
        },
        "item": {
          "id": "e0c11bc7-f8d7-4d71-8122-12311341e8d5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1b64557e-e58b-49af-bdf3-e15024a66f52",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fe66f419-97bf-4bd7-8a50-56433d6d5961",
        "cursor": {
          "ref": "829f1089-0c3b-4389-b903-a5ab7bb74c7e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c4169a96-49b4-43b7-8dd9-cc10e8acada9"
        },
        "item": {
          "id": "fe66f419-97bf-4bd7-8a50-56433d6d5961",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7559b140-4662-4101-94ab-3395eb363b7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e79a554-9388-4da3-b876-a30f5679c0b8",
        "cursor": {
          "ref": "48c44e16-23c9-4f2d-afe9-f44103c5fabf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "17360c6f-b0e2-42c1-a2d3-0d5748cec2ab"
        },
        "item": {
          "id": "6e79a554-9388-4da3-b876-a30f5679c0b8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "170fe383-393e-41ae-99a6-9257443a82fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f914ed4-581e-4015-a244-6b8949da0a60",
        "cursor": {
          "ref": "316ff5f1-a792-44da-8e73-77f58460ba7e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "662247ff-9a7a-4cac-8924-5925418abd10"
        },
        "item": {
          "id": "9f914ed4-581e-4015-a244-6b8949da0a60",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "de8cddd9-5a5f-4a6e-a4c0-38a4d560ac41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97645513-5071-48da-a4c4-61f967c4d808",
        "cursor": {
          "ref": "73ff9035-879b-4a00-a055-59aafb04e639",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a5ab1eff-2207-4c47-bf7f-a124b65be46c"
        },
        "item": {
          "id": "97645513-5071-48da-a4c4-61f967c4d808",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9df87a4e-a7af-4a2c-8c43-2398bffce291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6107e3d2-96fd-4c1a-ac87-19c0dc933d40",
        "cursor": {
          "ref": "aae8c9ec-5ea3-407d-8c11-875eb7aa1f56",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d8a19ff7-403e-4c05-afb1-e81afc95fdb5"
        },
        "item": {
          "id": "6107e3d2-96fd-4c1a-ac87-19c0dc933d40",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9c6dbbfe-291f-4e5c-9301-8b8b610b13c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f9358-8769-435b-aef4-22192305becf",
        "cursor": {
          "ref": "daf49988-be75-44fc-a032-0bd3365b82ae",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "951aa20c-5b63-49c9-a363-0664c71998a5"
        },
        "item": {
          "id": "112f9358-8769-435b-aef4-22192305becf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "97d5f82b-3711-4efb-b005-88bc619b9a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0837ae14-14f0-4d64-ab09-d6f43b8879d0",
        "cursor": {
          "ref": "8decd9ac-e778-4f04-b787-a29b68bbfeff",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cdb56057-543b-4d6c-a9b6-30f9737e3a05"
        },
        "item": {
          "id": "0837ae14-14f0-4d64-ab09-d6f43b8879d0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "80cea49e-2133-4761-a3eb-3df65c74f841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67d6650-dc3f-4159-bad3-523ce5bc4bb3",
        "cursor": {
          "ref": "09aaf5c4-1024-4f45-b291-cbcc94433a47",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c5bf3562-2625-4c74-91d2-e472f468512f"
        },
        "item": {
          "id": "d67d6650-dc3f-4159-bad3-523ce5bc4bb3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "642d14dd-7fdc-40a9-82ef-0f505cda4350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa2653c-5e2d-4b0a-8db8-116c09366416",
        "cursor": {
          "ref": "c860ab37-65ab-41d8-acb8-ae6781d13955",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "10ddd513-c2bd-4455-924e-fe0e4579784d"
        },
        "item": {
          "id": "ffa2653c-5e2d-4b0a-8db8-116c09366416",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "647a73bf-6d2e-4e6b-b301-b0b12022cd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de2127-44e2-41de-a4b0-1f9e63c75d53",
        "cursor": {
          "ref": "52de512d-753c-4191-af57-c62bb8cef342",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5e23599-54eb-4331-af91-e54784f34b8a"
        },
        "item": {
          "id": "46de2127-44e2-41de-a4b0-1f9e63c75d53",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b03c96c9-8c56-472d-9bf4-8e765b3b4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b228c0ba-eba8-40c8-94da-8e4d9807e126",
        "cursor": {
          "ref": "2b6e58cb-bbb4-4b16-a620-2f2cbf27d5cb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "67c4fcb7-86b1-4def-b1bb-46ef7406b2fd"
        },
        "item": {
          "id": "b228c0ba-eba8-40c8-94da-8e4d9807e126",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b5af45c5-98b5-41fa-82d8-81cead8d560e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10670f88-1c79-4689-b59e-61e950dc5252",
        "cursor": {
          "ref": "048500b3-3564-411c-a3d5-234fd9621dcb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1e06781f-bc06-46ec-be40-29b6494ddd38"
        },
        "item": {
          "id": "10670f88-1c79-4689-b59e-61e950dc5252",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "23c01789-018d-40c8-90b5-dc1604604dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bad375e-60aa-4897-9744-463882ca928c",
        "cursor": {
          "ref": "50d202c9-3fd8-491d-bba5-5b8c48bdcadd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d556e391-1945-436f-83f0-520faa53920f"
        },
        "item": {
          "id": "5bad375e-60aa-4897-9744-463882ca928c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6e34c6f2-d7cd-4bd0-bf30-c330edef855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36ff622-f49e-4a82-93ad-374b09c9b67b",
        "cursor": {
          "ref": "0a1f5412-26ad-4fc1-a896-d9c7c773b93f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "511bfd41-07be-43ea-be87-4fc9f0b67e94"
        },
        "item": {
          "id": "d36ff622-f49e-4a82-93ad-374b09c9b67b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "71bc7e15-0134-4499-9d8f-ea016b70dc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ab7ae2-e1fb-4d19-b62d-73be3de40142",
        "cursor": {
          "ref": "07c442b7-407f-41fd-8fd2-280087ea06ee",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "79a14052-2307-4495-9855-e38bd8a93266"
        },
        "item": {
          "id": "17ab7ae2-e1fb-4d19-b62d-73be3de40142",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3d35f5a5-54a8-4c69-acfa-750e5c749557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09078d27-0acf-455f-b805-9f45031f372f",
        "cursor": {
          "ref": "e0910060-e23a-4ec9-98f6-f05b974dcf05",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c83c463e-5397-404e-aca3-2bff656e72db"
        },
        "item": {
          "id": "09078d27-0acf-455f-b805-9f45031f372f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1d776064-6ffc-4112-8e5c-55345861de9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afe21d1-4d64-4f5b-bb28-cb4ac8415ab3",
        "cursor": {
          "ref": "f9fbce13-8b6b-4131-ada2-dddc4956ecd7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "46811db1-d839-4a13-a4cf-ce47b4f2bbac"
        },
        "item": {
          "id": "6afe21d1-4d64-4f5b-bb28-cb4ac8415ab3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c157afb0-a2cb-4438-8aeb-20f5d991db02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc9edd8-4055-4323-bc73-bdf3d66822dc",
        "cursor": {
          "ref": "ce7dfc90-233b-4132-be03-89f1d6f95d99",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5766f644-25eb-4f1c-abb7-d3dfae009957"
        },
        "item": {
          "id": "cdc9edd8-4055-4323-bc73-bdf3d66822dc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eec0497a-dd10-4031-bc10-75ac7675ffff",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "715f9969-83e8-4ac8-aecb-2e19680c6c32",
        "cursor": {
          "ref": "7665d30e-31a9-49d6-a422-494f619611a5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a57e8122-cbda-49c8-ae06-7ff26ca18ba8"
        },
        "item": {
          "id": "715f9969-83e8-4ac8-aecb-2e19680c6c32",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f4387283-6675-424e-b0a8-3eb386497c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5f49aa-f339-4cd5-8e1d-decb73470079",
        "cursor": {
          "ref": "f6d57b14-367b-429e-be1f-4c4541702f6b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "00801621-a5f5-4fca-b9e0-ec71b9c2e068"
        },
        "item": {
          "id": "6c5f49aa-f339-4cd5-8e1d-decb73470079",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d288cf2a-cec5-486b-b82f-0d7c3ff487d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e59bce-b46f-462a-b6b7-691c564b8111",
        "cursor": {
          "ref": "319f657a-03e5-4c82-bfd8-0331125463c3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d8d7ee6f-fe89-48c6-8d24-f9d80dd18485"
        },
        "item": {
          "id": "07e59bce-b46f-462a-b6b7-691c564b8111",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "71222dff-c344-4007-9b13-d35f49ab9f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb49e64-0ac4-4d17-ab06-e1f0f19bf6a6",
        "cursor": {
          "ref": "a1128991-ea58-48f6-9f13-e1f9bed7c80d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "59dbefe1-4ac6-4867-a32b-30fc5d8a5375"
        },
        "item": {
          "id": "ccb49e64-0ac4-4d17-ab06-e1f0f19bf6a6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1c92c619-09f7-474a-b3e5-eeb6183bd86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbbb42c-b8fe-4146-92e3-e396cf3b7951",
        "cursor": {
          "ref": "aa1c9b33-0324-48cc-9be7-a2cbcc23f5d3",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "21eebee3-5e6a-4cf8-ad27-1ae3653160ab"
        },
        "item": {
          "id": "2dbbb42c-b8fe-4146-92e3-e396cf3b7951",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ab74f5b-f132-45e0-b08e-47db9321a69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22282f5c-8f5c-49f2-89b8-9b6e72c4d742",
        "cursor": {
          "ref": "cb4cf268-8479-4dd7-9e24-66e0434f8ed8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e74e220d-53b6-4e1c-b208-e1f6aff6dfa2"
        },
        "item": {
          "id": "22282f5c-8f5c-49f2-89b8-9b6e72c4d742",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5a4be63-2564-48be-8b5f-f8ff439d7de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31ab165-6732-404f-a989-78d6dcdf5ad1",
        "cursor": {
          "ref": "e6a8af64-1651-48d5-a669-4d5a03da9ff9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0f6d666c-9b59-4ae8-9389-46d51778f67e"
        },
        "item": {
          "id": "c31ab165-6732-404f-a989-78d6dcdf5ad1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7ad6e5a6-abbe-4786-8d8c-6bf6d3820006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd3f569-0ffa-43f1-abbc-bfa657096bc5",
        "cursor": {
          "ref": "22d8d181-e459-4e55-95c8-b5ceab327066",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c54d7cfe-4d24-4653-aa45-67df43eabfa3"
        },
        "item": {
          "id": "0dd3f569-0ffa-43f1-abbc-bfa657096bc5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "70bef0c5-1add-43ae-ab0a-3856c22c56e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573b2a97-5ea8-485a-a319-5a16a0a5e84b",
        "cursor": {
          "ref": "f4702eaf-6591-4b88-af6a-b7fb433a2c32",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "521d230e-d6bd-49d6-80af-8844769b62f3"
        },
        "item": {
          "id": "573b2a97-5ea8-485a-a319-5a16a0a5e84b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e16b6785-caad-462a-8dea-8154303dc0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e479f242-8ab4-4684-9ed0-08e364017777",
        "cursor": {
          "ref": "100b35f7-e19a-4ede-ae58-ce66f3fdc0ba",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8a1de292-9971-4c70-84a1-a2c8bb038cc9"
        },
        "item": {
          "id": "e479f242-8ab4-4684-9ed0-08e364017777",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d0dd03f9-3112-4ded-a9f7-5ce5f6f77956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0d8cb6-c0de-44f3-8516-73862485212c",
        "cursor": {
          "ref": "304d7b28-ebd5-4541-a772-0e3bb40f8b1c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b2153b28-7676-42e8-834a-fb0fddca666f"
        },
        "item": {
          "id": "7e0d8cb6-c0de-44f3-8516-73862485212c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dc6f0616-ab0e-48ef-833e-6b8ffd3d12c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48c1962-3cec-4ca9-9d59-a2d5c3ab09a0",
        "cursor": {
          "ref": "167c2dc4-39cd-4c15-bb6a-d621c39ca8b2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4f523262-66bb-49d6-91b3-cb97a49a741c"
        },
        "item": {
          "id": "d48c1962-3cec-4ca9-9d59-a2d5c3ab09a0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fde932a2-ef20-4195-8f20-847357fcef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d73f3e5-5874-40da-b39c-e8064d735e25",
        "cursor": {
          "ref": "3be3766a-a93f-42bf-adc5-6079d71026bc",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "98bfdd7d-5db2-47b5-b03d-3a7c01b0cafb"
        },
        "item": {
          "id": "5d73f3e5-5874-40da-b39c-e8064d735e25",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "af226936-d793-4450-8fbb-66ee5b74c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72d1b4a-9aa1-460d-8ee3-faf6f9332dbe",
        "cursor": {
          "ref": "c6d3f800-07bd-40e4-889c-e50d9df5f3ca",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "92994b29-2ba2-48d4-8349-3f40d71f2db3"
        },
        "item": {
          "id": "f72d1b4a-9aa1-460d-8ee3-faf6f9332dbe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "babfdd3e-5d29-4e91-bf0a-50aeb92cc0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14462f7e-f2bc-4092-81db-556d3312fa57",
        "cursor": {
          "ref": "e0e2e442-8077-43f1-894f-72870a0824db",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1eb4b9d-5192-4380-9b06-ad04be0fc270"
        },
        "item": {
          "id": "14462f7e-f2bc-4092-81db-556d3312fa57",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd1ab86c-715c-43ff-aca7-3b3c8afaf8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03921c88-b143-4c02-acbf-b51f86a747b3",
        "cursor": {
          "ref": "afe3e71d-0313-49b8-80f5-589346c42cd1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ca4c0a23-357b-426d-b9fd-5cf1ec137578"
        },
        "item": {
          "id": "03921c88-b143-4c02-acbf-b51f86a747b3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9a883da3-4863-46d0-891c-b1d27ed7ee80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cabc09e-0088-462b-b8b5-b8a63631bd88",
        "cursor": {
          "ref": "6691b40e-92ee-4404-8e44-f752257a4bec",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c7ba89e8-3299-49eb-ad02-863007330be3"
        },
        "item": {
          "id": "7cabc09e-0088-462b-b8b5-b8a63631bd88",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ede38ad5-24a6-4ea8-92a4-4910c53556da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cf4b3a-db51-435b-b2f2-c68b2a97e571",
        "cursor": {
          "ref": "394912b7-2379-4b86-a0ce-6180da197d5b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c12a364c-e8fb-4c1c-a2d1-293372ef8004"
        },
        "item": {
          "id": "27cf4b3a-db51-435b-b2f2-c68b2a97e571",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7544c91c-dae3-45c7-a19d-cd700f37faf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a108b4d9-c554-4d3c-8f92-c5d646c18021",
        "cursor": {
          "ref": "68808b12-7a06-4f3c-bf36-72ad6b7b39e2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "62419bbe-4c63-4283-a257-1489d6b77db7"
        },
        "item": {
          "id": "a108b4d9-c554-4d3c-8f92-c5d646c18021",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "452ef07c-36e0-4fc6-84a6-8e35fd40e8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7459b10c-ce82-435c-9a2a-9afa911238cb",
        "cursor": {
          "ref": "b1b110f3-dbd1-49da-87e0-b488466bcf08",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20cab7b3-dec9-460c-befa-f4e03c107bad"
        },
        "item": {
          "id": "7459b10c-ce82-435c-9a2a-9afa911238cb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e5674216-5f39-4c25-b9de-876d49a36005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29644ab7-88c2-4879-ae27-31239aabfe2c",
        "cursor": {
          "ref": "a58e41d2-60be-48ce-8b02-c31093ff244a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c6760997-fe34-4f53-be7d-544b23cdc20f"
        },
        "item": {
          "id": "29644ab7-88c2-4879-ae27-31239aabfe2c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "caf94d21-270a-4429-a299-6ca1e0f66b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3ffffc-d9d9-4d7c-8c77-6324c9237486",
        "cursor": {
          "ref": "5d84faec-2b60-433d-a793-7e4e6930557a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "000da6a1-77a6-45c6-b5e3-fb41e8e7cb2e"
        },
        "item": {
          "id": "7d3ffffc-d9d9-4d7c-8c77-6324c9237486",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "18219fa5-e4ca-481f-a144-3d3e9cfeadfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45a26a6-367e-4169-9bd2-81a89df8ca1e",
        "cursor": {
          "ref": "49e9d773-d51e-4e3f-8306-385d15d459e8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "50b69513-56b5-4881-ba96-4c0728561928"
        },
        "item": {
          "id": "f45a26a6-367e-4169-9bd2-81a89df8ca1e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6d5daf23-0f3d-4a27-8895-c9c639d5f814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7846392f-de02-4def-924f-ef88d7678559",
        "cursor": {
          "ref": "e5f4f41c-d44d-4df9-a83b-c7e18baaa0cb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "09bada5c-75f7-4b57-8c1b-96806d0a4274"
        },
        "item": {
          "id": "7846392f-de02-4def-924f-ef88d7678559",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e98cfb3b-db1f-487c-9127-c5071d1a624f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c13489e-94dc-4fd9-a416-c18b9ae3539e",
        "cursor": {
          "ref": "b182a34c-ec1a-4689-834f-8a5009cd89ff",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9bece9f1-ca6c-4b87-8deb-2bb209e72673"
        },
        "item": {
          "id": "0c13489e-94dc-4fd9-a416-c18b9ae3539e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b1385af9-7b43-486c-90bc-b4e1e44ead67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff750ee8-bced-42d1-9746-0d8a2e03d175",
        "cursor": {
          "ref": "10c89f7d-e770-4ba4-986a-dd7bf6fbee8b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "01e3ceb0-3d2f-4c4e-9380-9afa836039b1"
        },
        "item": {
          "id": "ff750ee8-bced-42d1-9746-0d8a2e03d175",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1388c573-1d1b-4f15-82c5-529911017031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f848cb8-cac7-42dd-b825-f38278d22548",
        "cursor": {
          "ref": "ab1b175a-32f2-47d7-af18-1503ff652adf",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a4ade250-e9c1-4571-8bd9-c082f8084391"
        },
        "item": {
          "id": "5f848cb8-cac7-42dd-b825-f38278d22548",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "387e306b-fb6e-45cd-9b10-ddbb813bc1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c140a91-b3a0-4b9b-a2e1-5a840f118a3e",
        "cursor": {
          "ref": "1b1289ff-ad61-4b68-bc8b-ceb97e122361",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "520e6538-66f9-4ee3-861b-1ba97b417c48"
        },
        "item": {
          "id": "3c140a91-b3a0-4b9b-a2e1-5a840f118a3e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "05e7ce57-5454-4309-8f8e-8c72f19b4b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba70f9e9-8932-45ad-9e93-c57d5f4b1815",
        "cursor": {
          "ref": "1ffefe8f-f49a-422d-95a0-3a11cdad180b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d3019de6-0619-4a5a-b4a9-6d471c808928"
        },
        "item": {
          "id": "ba70f9e9-8932-45ad-9e93-c57d5f4b1815",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "714368f5-f252-49a0-b161-586b822271d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6ce857-1561-46f9-a2a5-a8e4d4575342",
        "cursor": {
          "ref": "0d0227c0-7ab8-45c8-86b5-294e77154b45",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "751186cb-cb91-4e2c-991d-61ad0d01d321"
        },
        "item": {
          "id": "fe6ce857-1561-46f9-a2a5-a8e4d4575342",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4f20f542-e082-404b-a373-9ff665193311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8738d9d-1ece-4efd-b2ee-0bc8234b02b9",
        "cursor": {
          "ref": "299ac33a-3668-458d-a8fa-b1fda77b5876",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a650f748-0061-42ec-90da-64ac47a64124"
        },
        "item": {
          "id": "a8738d9d-1ece-4efd-b2ee-0bc8234b02b9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0a081118-7e23-4c15-b273-b9c257d161cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3830503-8004-44f2-b5b9-1c705438eaf7",
        "cursor": {
          "ref": "6cd2a839-65de-430b-a344-f59491b612c4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7979216e-fd81-40ca-88c4-3d68278fb45f"
        },
        "item": {
          "id": "b3830503-8004-44f2-b5b9-1c705438eaf7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6eb6dee3-5a28-4566-8782-f1c1c049d546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f4a699-cdc5-4c18-8b6a-7d0ff3ae2354",
        "cursor": {
          "ref": "7e728499-8b0a-402f-9dbd-226c88986a5c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1820539-1736-405a-b27e-dc75bf9c70f1"
        },
        "item": {
          "id": "14f4a699-cdc5-4c18-8b6a-7d0ff3ae2354",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8f4c6a09-34a0-4d2a-abec-d1941cb9a68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bc36b4-d66f-40c0-88eb-31a6c83a154b",
        "cursor": {
          "ref": "5c0714ae-f2cd-4d17-9340-39dd8f46ba77",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ea9733f1-533c-46cc-9d62-370d1702f91b"
        },
        "item": {
          "id": "f0bc36b4-d66f-40c0-88eb-31a6c83a154b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8a3dbabc-efc7-4add-b61b-d621cd30dd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc706c14-6c24-4617-a4af-e49c2cc65a61",
        "cursor": {
          "ref": "806c4691-dafa-4acf-befe-84e2d96f7269",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "578ad5a3-3766-4e3e-98bc-dd777584ccff"
        },
        "item": {
          "id": "bc706c14-6c24-4617-a4af-e49c2cc65a61",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0656bc0d-faa9-449c-9d02-a25f77bbcb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d0ba02-b553-41f6-8534-95866524e51a",
        "cursor": {
          "ref": "298f2c02-37cb-4f84-8b13-c3a4dbe280a3",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "597bc099-3733-49c7-a539-bbcb4ab4c840"
        },
        "item": {
          "id": "56d0ba02-b553-41f6-8534-95866524e51a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "243cd90e-5172-42f8-b2c5-dce67e1c4530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4027b42b-0a87-42a9-a816-f07a9330ea82",
        "cursor": {
          "ref": "d82d1db1-e172-48df-b57c-f017152d4ed6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c48c7ae6-9804-4cc5-aadd-95dc3eb2282d"
        },
        "item": {
          "id": "4027b42b-0a87-42a9-a816-f07a9330ea82",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d1ae676d-4132-4d56-92a6-137d405d8d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f364469a-ac52-47c7-a664-acce2fbeb85a",
        "cursor": {
          "ref": "f7964094-9fcb-4ef4-8f13-02219054c099",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "145d0552-a31c-446e-8291-aa705b767a17"
        },
        "item": {
          "id": "f364469a-ac52-47c7-a664-acce2fbeb85a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46aa096f-8c10-453d-b3c8-dca3d75d6528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaaa775-9b08-4774-b9ed-db4e3ce33bb7",
        "cursor": {
          "ref": "e15fecdc-2d1f-4ac4-bf8f-ffa3f5d04f8b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "72fc4bb4-2cde-40ef-b840-3e1a22a7f982"
        },
        "item": {
          "id": "4eaaa775-9b08-4774-b9ed-db4e3ce33bb7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "02e655c0-6f58-4e7e-a5c9-388a8eff2205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a308dc9-d03c-4192-83d5-be3a3b32b9d3",
        "cursor": {
          "ref": "3dca2cbd-b191-4966-b26e-c726e8d31189",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6ac0f57a-fc92-4b32-80b4-68e302d8e11a"
        },
        "item": {
          "id": "1a308dc9-d03c-4192-83d5-be3a3b32b9d3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "049e7829-ec1d-4934-9d1c-0313a3f6e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45593e0e-f37d-4fae-9163-e0073f605c37",
        "cursor": {
          "ref": "5b1fc9af-db8d-4bd7-8574-9f42aee1a6df",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46610ae3-4ba7-4af9-8f54-9f5aa110dc5d"
        },
        "item": {
          "id": "45593e0e-f37d-4fae-9163-e0073f605c37",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f00131ea-dd0f-41b2-a5f6-ca2f7900ff59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48987ff-9ecc-4a45-8d6e-d5d4d04716f2",
        "cursor": {
          "ref": "0fe1c9d9-7609-4d31-a0d8-b6d960978f94",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca640060-fccc-49e2-b734-5319a830fb84"
        },
        "item": {
          "id": "f48987ff-9ecc-4a45-8d6e-d5d4d04716f2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c680fa6a-9558-4dc4-9453-29d95a2e711c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b138ae-5791-4878-899d-706fc2c59a9a",
        "cursor": {
          "ref": "290c8c99-d8ed-4239-b563-0c164154996b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "17e39920-b2e0-4555-aaee-1c116a5c0c0c"
        },
        "item": {
          "id": "94b138ae-5791-4878-899d-706fc2c59a9a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1b623850-f724-4f05-8d64-afd8799b4498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b383f97f-5240-4efe-81d7-8d9610dfad1b",
        "cursor": {
          "ref": "f22e5294-5f19-44c3-82e0-14b528600856",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7d2fb247-d213-41fe-ac50-ab7a59e79023"
        },
        "item": {
          "id": "b383f97f-5240-4efe-81d7-8d9610dfad1b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0f0a05a4-ae21-41f6-bd87-f4a185bae3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48fcde1-83ac-437b-89e4-47a40fb95cfd",
        "cursor": {
          "ref": "887a4c51-9e2d-4d60-9afa-cbc8ad6d98dc",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "67c8a019-2078-42c0-a878-86ab5414b1cd"
        },
        "item": {
          "id": "d48fcde1-83ac-437b-89e4-47a40fb95cfd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a30b1221-79de-467f-9b00-0ff02c0e5e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12af79a-f0a6-4f83-b8a7-466c6b5b097c",
        "cursor": {
          "ref": "d1ca47c1-3aec-4e4d-a90f-d67fc5c8dd3c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8eb238b9-e5bd-41b4-b4c1-22be2e96571f"
        },
        "item": {
          "id": "b12af79a-f0a6-4f83-b8a7-466c6b5b097c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4670dd77-651b-42d4-9ab8-af44198e0b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78482f60-ccbb-4fd6-9601-1fa4f83b2fdf",
        "cursor": {
          "ref": "de72f990-dfbd-4bb6-a708-13055a282a61",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "097534bb-0e68-4038-bb9e-b3d7caeb0e57"
        },
        "item": {
          "id": "78482f60-ccbb-4fd6-9601-1fa4f83b2fdf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2ed98565-524e-45d8-98c7-2b0e522b779c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce69c0d-51f7-47b1-bd3d-b3f84ea54e73",
        "cursor": {
          "ref": "24c5f38e-c286-4216-a036-5444f9b5b687",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "84566ba2-f57c-4b63-aef3-cd84c9f91a51"
        },
        "item": {
          "id": "4ce69c0d-51f7-47b1-bd3d-b3f84ea54e73",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1a9cef1d-8611-4f3f-ab41-6bbf60bdb974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d1986-8546-4c18-a40c-aedd21ec1d6c",
        "cursor": {
          "ref": "2abb39cd-da62-4711-b8fc-b7fe23fdad1b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c4a92ef-ce74-4c99-a9e7-207ef863e33f"
        },
        "item": {
          "id": "a22d1986-8546-4c18-a40c-aedd21ec1d6c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d009d33c-9f51-4c74-8b45-a015c3c28ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c349c8-07c5-411c-9a75-02b8478b5428",
        "cursor": {
          "ref": "9dc9d855-04b7-416c-a4e1-324521a29998",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "137e74f9-e3ae-4d88-b5ac-f043523919bd"
        },
        "item": {
          "id": "18c349c8-07c5-411c-9a75-02b8478b5428",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b9494577-9cd6-476e-8852-99f40914bacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d806d6de-dada-4fdc-bb8b-6c36faeaba65",
        "cursor": {
          "ref": "ed7d4949-3e8c-41e7-8f83-09217ab4b848",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "28a34a0b-4e5f-4c62-ab5d-dff5ac112e58"
        },
        "item": {
          "id": "d806d6de-dada-4fdc-bb8b-6c36faeaba65",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d17f1a74-a150-4fef-8471-fa755d3c4d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf236ed-c304-4df5-a171-197f0ecf6773",
        "cursor": {
          "ref": "88648f37-9b0c-457c-91b4-b040a7b0d408",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5c60b8e7-4679-41cb-a09f-f02b02b0851d"
        },
        "item": {
          "id": "aaf236ed-c304-4df5-a171-197f0ecf6773",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "264d689c-1faa-466e-aee8-78af994235a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e561cbf5-9d3d-405f-b966-2577fda0a4a2",
        "cursor": {
          "ref": "f0318098-fe73-403b-b148-45a10880c15f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99a4107d-4178-42fd-ac70-e74c45d8eb3d"
        },
        "item": {
          "id": "e561cbf5-9d3d-405f-b966-2577fda0a4a2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "daed14c2-0448-4c99-9a64-85555d6c1bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da0c860-c498-4b8c-a82c-5c1b27fd1fb1",
        "cursor": {
          "ref": "48083c02-c3a0-4051-bf71-48a4be050385",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2e2ae0bd-96dd-4fd7-9206-8dbeab6427cd"
        },
        "item": {
          "id": "7da0c860-c498-4b8c-a82c-5c1b27fd1fb1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c5d7ffe9-6a6c-483e-a104-dc476d0a4474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d0660-1be5-461a-bd18-d3521fba483a",
        "cursor": {
          "ref": "d93dfe93-badf-4282-ad98-a3eb71cc8672",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "880e9085-23af-4c1b-a427-4431a5f8ada1"
        },
        "item": {
          "id": "069d0660-1be5-461a-bd18-d3521fba483a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "48e8e27c-6fe2-46e6-8dcb-5cf0fee0d359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c857b94e-ec47-4670-ba16-0862dd8c3d92",
        "cursor": {
          "ref": "3ce47171-8357-4594-9f9d-a0ce3f25d414",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e4789774-c06c-427b-8a03-947080540fba"
        },
        "item": {
          "id": "c857b94e-ec47-4670-ba16-0862dd8c3d92",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6882f71f-0ba1-43b6-ab96-53d937adb83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8c3784-b412-4317-a50d-9c3d1d3cd4c2",
        "cursor": {
          "ref": "7f4cdc6a-27f2-4077-83a3-dcdacecfe0c2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2d448223-553b-41d0-9b67-2de6566d57e1"
        },
        "item": {
          "id": "ca8c3784-b412-4317-a50d-9c3d1d3cd4c2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "088793ab-a396-4904-96cf-0f553b754935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ced89b9-10e4-48cc-ac1a-b9957c273aeb",
        "cursor": {
          "ref": "267f3e6d-4944-45e8-acaa-e01f00d9f986",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3a947da2-71f5-4b3d-b06c-f7e3df3141f1"
        },
        "item": {
          "id": "9ced89b9-10e4-48cc-ac1a-b9957c273aeb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f3b197db-b193-4edd-8392-05cab8e41ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a05ba6-3d68-4612-bc4c-0399d17c445a",
        "cursor": {
          "ref": "e081c5a9-7a30-4f5a-a966-91409b4dae06",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c0c1de80-d506-46fe-b949-752bc62acc8f"
        },
        "item": {
          "id": "55a05ba6-3d68-4612-bc4c-0399d17c445a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a4ce6007-8e7c-4f73-ad14-ca2cc0f71024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04690c4-d064-44b6-bf7e-5f18cc6e9a72",
        "cursor": {
          "ref": "665c0e9b-fc35-4cb9-814b-c404bcd8a7de",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0eba8ab9-50b8-4d84-8fd3-c469d55c630f"
        },
        "item": {
          "id": "e04690c4-d064-44b6-bf7e-5f18cc6e9a72",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dd1ea868-aa3e-4ba6-a898-255f5584e1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905d3c9-e906-42fa-94a7-9e2d0df762d0",
        "cursor": {
          "ref": "e712f60e-416a-4fbb-9ee4-69e7a4ac93ce",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6175513a-36db-4639-91fd-f11735fee3f5"
        },
        "item": {
          "id": "7905d3c9-e906-42fa-94a7-9e2d0df762d0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a45ffe9e-0c91-4883-ac02-a6583c634e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e81775-db7c-441a-9b6a-c0785fe41df3",
        "cursor": {
          "ref": "c884721f-7b00-4015-86ab-ca1436efb616",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1d4e6db5-751a-471e-af0b-b222da0f4e09"
        },
        "item": {
          "id": "74e81775-db7c-441a-9b6a-c0785fe41df3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "146be839-5272-4ac1-b79a-5a3b871e70a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0d7be-7b48-40f8-9933-4d480d35cff4",
        "cursor": {
          "ref": "25b4fbb6-f61e-4911-b5f5-aa956e1ac7f8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7bce50bb-57ec-496a-890f-707898b7784b"
        },
        "item": {
          "id": "a3f0d7be-7b48-40f8-9933-4d480d35cff4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9ebf27f6-9e27-41a2-99c8-6d00a8b9c9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1328a25-3291-4e07-8a8f-67bcc5fb9b01",
        "cursor": {
          "ref": "0fe2070b-4da8-4747-b349-6d28f81f5cc7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2c07bdf8-d969-4e25-9520-e4bdb6aec11f"
        },
        "item": {
          "id": "b1328a25-3291-4e07-8a8f-67bcc5fb9b01",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cfa2c08d-d147-40ce-9da4-79f9bf036d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df0a083-daf2-4aee-bbba-b8aefe3f5bb8",
        "cursor": {
          "ref": "47d12a12-4037-4366-991b-889501c18734",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d3c79be3-b1d4-4358-bcb8-11cbbabc56c5"
        },
        "item": {
          "id": "8df0a083-daf2-4aee-bbba-b8aefe3f5bb8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7e8c0334-5731-480f-81b5-93d7f5560a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40502a7c-fd73-47a4-857c-697c17fd1ae6",
        "cursor": {
          "ref": "bc8dc815-e91d-46ef-97db-bf956c385642",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b4ae5114-c940-4a7d-b476-cb8954562227"
        },
        "item": {
          "id": "40502a7c-fd73-47a4-857c-697c17fd1ae6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2134f7dd-ae3a-419a-aee6-4652c711c086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3793b2-2421-4405-8ede-b4ba9d7ef920",
        "cursor": {
          "ref": "59fbd562-5ffc-4781-ad47-b2910a961317",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f1babc66-7a0c-4f43-8e6c-a0497cf139a1"
        },
        "item": {
          "id": "8c3793b2-2421-4405-8ede-b4ba9d7ef920",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8db56bfe-232e-4c7d-9c6c-7fb66909bbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c580051b-c73f-485f-a984-072a0c786867",
        "cursor": {
          "ref": "99887778-253d-4bc8-9280-5b6a22b24b7e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1ea18aeb-35a1-46b9-b8a7-8da3485aa8d8"
        },
        "item": {
          "id": "c580051b-c73f-485f-a984-072a0c786867",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8f64b711-f042-41f2-ac66-bc91a0da6694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8e6be2-4a9c-499e-98af-85466b7da663",
        "cursor": {
          "ref": "91cefc23-ed5b-4de1-9aa9-6b50238b16f7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3636f5bd-b645-4ebf-b99b-0649442b16ef"
        },
        "item": {
          "id": "4b8e6be2-4a9c-499e-98af-85466b7da663",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "65323e96-a350-46ff-a7ae-25f1241c5517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c50259-bba1-42eb-a49b-8208166ca7f9",
        "cursor": {
          "ref": "2575a73f-3627-4cc1-a3a1-8c9ab3ddbc92",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "be3cbc9e-7589-4daf-a665-471e9a852623"
        },
        "item": {
          "id": "91c50259-bba1-42eb-a49b-8208166ca7f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d23b4400-e39f-4440-a5ce-fb8d2cf22b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa333edb-99ca-46d3-bb50-bd8f8e3a4f29",
        "cursor": {
          "ref": "1b3ebd9e-4fb8-49f6-9a62-43489d15f328",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d2391e10-ed47-406a-b82b-ce07b28cbea4"
        },
        "item": {
          "id": "aa333edb-99ca-46d3-bb50-bd8f8e3a4f29",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fee32b0f-efa7-448b-b049-dc994e4c672e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e7278-8102-4ec6-95dd-c97c67aceca6",
        "cursor": {
          "ref": "65a5372a-8103-4f4c-afd6-414066932de3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c519e45f-a11b-4c16-bc4f-84f0dd6c7886"
        },
        "item": {
          "id": "d41e7278-8102-4ec6-95dd-c97c67aceca6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b4615acd-d0b0-4641-b60c-f43e7a22871d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31e2bee-98a8-49cf-a822-16e79ec81b89",
        "cursor": {
          "ref": "63fb64dd-3ddc-41ed-ab09-615640cda704",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b625fea-5cd0-4bff-8663-a761be01befa"
        },
        "item": {
          "id": "e31e2bee-98a8-49cf-a822-16e79ec81b89",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "148e2bb2-0bbe-477c-8b1b-d24a1d4f28a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a1d31-1618-471f-a14c-efbbad4be862",
        "cursor": {
          "ref": "94b1be5d-5078-4483-9cee-9c3111067e34",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "793286dc-00a2-4a1d-a3b2-a6481945c40d"
        },
        "item": {
          "id": "d64a1d31-1618-471f-a14c-efbbad4be862",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "04624587-1aa4-4d05-914e-8672efafce16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e808eff-cabb-4f19-b8c8-b66ef86f536b",
        "cursor": {
          "ref": "115c552f-0815-4418-a4ee-e855ea3a9de3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "81d15614-30bb-4fb1-b631-d067769a35c6"
        },
        "item": {
          "id": "4e808eff-cabb-4f19-b8c8-b66ef86f536b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5bb05456-342f-4f94-b430-6d97a4c53ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85487ba2-2504-49aa-96d8-9d7c1359afc2",
        "cursor": {
          "ref": "93d2e3fb-05d8-47ce-8164-66b4c1ad49d2",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "94f82cb3-d64a-46f0-bc87-0453b9848f5f"
        },
        "item": {
          "id": "85487ba2-2504-49aa-96d8-9d7c1359afc2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cde17c61-6e5f-448a-9a97-3554b98b9d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f21472-a84f-41a7-a3d0-63648efcf54e",
        "cursor": {
          "ref": "4371ae20-7d79-4a3d-b70b-1244e74376e7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "765fe9f6-5e05-4c9a-bcea-1ebb2a7cdeaf"
        },
        "item": {
          "id": "f4f21472-a84f-41a7-a3d0-63648efcf54e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cadce65c-e2c7-4962-9a12-51e2203bd998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0652a596-f8c8-41a6-88aa-c56232d4ab1f",
        "cursor": {
          "ref": "dd7662ee-f169-4944-a6b1-c8fa4d1adb1a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e428b3b2-2dc6-47a9-aa77-33a09090f11d"
        },
        "item": {
          "id": "0652a596-f8c8-41a6-88aa-c56232d4ab1f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f72c16e6-b723-4a7a-9c4f-deaa2530cc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0420150-1642-4300-80fc-e838aef932f2",
        "cursor": {
          "ref": "e7cdae0c-d005-4685-b3ab-8c75af4c1a64",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d1dd3385-7d2c-4958-a2f0-63b67b40c411"
        },
        "item": {
          "id": "b0420150-1642-4300-80fc-e838aef932f2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "17dcb77f-7684-4cad-b95c-462be36f19fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28168133-b9d1-41e5-b5a0-39d9f18ef256",
        "cursor": {
          "ref": "c44f8a96-99c3-4395-81d8-ace648304a99",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c46562be-1e44-4589-b5d8-e8dd9695b12f"
        },
        "item": {
          "id": "28168133-b9d1-41e5-b5a0-39d9f18ef256",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1d5123aa-9ffe-4096-ab25-1ab2e0c4e272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7120aa-e468-4de9-9f74-c4c725a5ff3d",
        "cursor": {
          "ref": "ca6b4048-91a9-44dd-909c-fa7e886c6552",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "89f668a6-bd66-47f3-9022-c6a479626e90"
        },
        "item": {
          "id": "ff7120aa-e468-4de9-9f74-c4c725a5ff3d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c9dd397e-1267-44bd-a079-d24b2a15c004",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5e0e72-ec5f-45e8-9776-ae98303768c7",
        "cursor": {
          "ref": "241c0ba7-55fd-4d21-9772-a10d85f71f05",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54a5594c-0ce7-4efc-ab21-9d80e5927c0f"
        },
        "item": {
          "id": "3f5e0e72-ec5f-45e8-9776-ae98303768c7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b9d829e0-c2f4-48d8-9dc2-44927a480d90",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8600dc1-1ad7-4ac3-9266-c237cc71339c",
        "cursor": {
          "ref": "c126abad-9b9f-46ba-8084-90b984e6d748",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7128b88c-b453-4b03-896d-9afe7e5e779d"
        },
        "item": {
          "id": "a8600dc1-1ad7-4ac3-9266-c237cc71339c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a2040896-dabb-4edb-8c46-f5d08d63d142",
          "status": "OK",
          "code": 200,
          "responseTime": 3426,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fc6ce5-cec8-4ff1-9e7d-127575b0ae5c",
        "cursor": {
          "ref": "59988b18-0d82-468e-8131-71f99546b318",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3d6cc4ca-17a5-4b8a-8e9c-5d1effbb8b60"
        },
        "item": {
          "id": "13fc6ce5-cec8-4ff1-9e7d-127575b0ae5c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a9b7d41c-738b-498f-87c3-708fd549cd1a",
          "status": "OK",
          "code": 200,
          "responseTime": 2274,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa86ff-0894-43e6-a2f1-156b9dbd1d84",
        "cursor": {
          "ref": "c512aacb-ebd7-4dcf-a542-f35e82028d47",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dc98213-2ba3-46ee-ab8f-12a5d7c06446"
        },
        "item": {
          "id": "fbfa86ff-0894-43e6-a2f1-156b9dbd1d84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9d7f4a19-f9bc-4998-888f-fdbb0a29be89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfa86ff-0894-43e6-a2f1-156b9dbd1d84",
        "cursor": {
          "ref": "c512aacb-ebd7-4dcf-a542-f35e82028d47",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dc98213-2ba3-46ee-ab8f-12a5d7c06446"
        },
        "item": {
          "id": "fbfa86ff-0894-43e6-a2f1-156b9dbd1d84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9d7f4a19-f9bc-4998-888f-fdbb0a29be89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf24078-76f9-469d-be8d-16f4ba081f62",
        "cursor": {
          "ref": "431b3494-15c6-495d-bfc3-27e19b7ccce2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "92cb1282-6e93-4687-b90b-de5dc536108a"
        },
        "item": {
          "id": "dcf24078-76f9-469d-be8d-16f4ba081f62",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6a9415fb-f95b-40bc-b0df-b12f3eb66595",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840524ab-d4fb-4bc1-932d-9ef45f373c79",
        "cursor": {
          "ref": "6c938858-000e-4957-b688-1cf4518e1af4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d029feab-b884-4747-9526-95700af1d493"
        },
        "item": {
          "id": "840524ab-d4fb-4bc1-932d-9ef45f373c79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "101ab969-2ecc-4732-943f-a983736ce10e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}