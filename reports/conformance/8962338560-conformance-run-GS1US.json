{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dcf9c3d3-6cd4-41fd-a19c-c4c4a6e3196f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d052fc64-fcf0-4095-99c2-897831b4cc88",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abb000d2-5bf7-4ccb-bf0c-a21f4db3f82d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b11c9099-3b7e-4807-9c2a-42bbd9e16b66"
                }
              }
            ]
          },
          {
            "id": "dc7c4fc8-6d27-455c-954a-e200adeef6f3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60be40dd-703f-4341-a7f4-516a66fa8f58",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "68c452b0-1f19-4fb2-9208-62978771d569"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7f644f24-c9e7-4048-acec-4ad540cce0b0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d451792a-fdb3-4c9b-a41e-e8338a3c6ef1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ee594d1-9f09-443c-ad85-3d8a8372bf24",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc9d4be1-83be-48b5-8493-8e7588a26ebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "620466f0-262a-47e3-ba70-c8f52af41319"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eed5772-f071-4cc8-b12a-b3aaa50d4c6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9a11383-ad70-4cae-9b2a-fd6af112092d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e497a570-3759-4905-9cd1-673d7808e490",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b0dd00f-4961-44ba-a77f-7333b7043967"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83d9c5fd-a3e9-44f4-a5bb-affd699169d2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "178e9e0f-0371-4203-80f3-c03909ef1060"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bb54ac7-bc0e-4735-a23d-532a0a56dfa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fb3e023-b45f-4fdc-8519-d44aa3e83709"
            }
          }
        ]
      },
      {
        "id": "9b88988f-c540-4fbf-a0a4-7744215ec99c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3ded4548-b463-46dc-8b6e-53e3b67b4315",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a1432a5-9fe9-4aac-880b-ab5cbe77fb18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebce1cea-f60a-462e-b90f-7e17801573e1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c8c22d-3e90-49c8-88b3-2fa4930b965f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a23423a-0649-4830-82c1-2e8024930970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07ace8-a5f0-49e1-9f61-d5e7391b82e6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a402a05a-2c22-48f5-9e20-c687ac2ea9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0fc4e20-03d3-4a49-9973-a78add4d7c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181524f8-1ca4-4024-b8e7-9ee1c3ffc745",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1984b-047d-433c-9827-0f64454c0625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7475a56-c2c9-42f4-860c-020950722fa8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "580fea9b-b82c-4eb0-aa28-ecd17d36fcb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e051000-5afc-4c5d-9de5-3a0b1c7b1eb9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6ce728-dbd9-4786-aca0-78bf776b6cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bc17463-c502-4f6c-aba8-e3ce315127ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baaa794-3f91-4c6f-9dd5-7d4a59853f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a30b341-8b4f-4e80-9d69-9c8d76910730"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f13837a-a4f7-49ca-abbb-5c4b6924e9a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f19c2f10-b04c-49e8-aac7-80b76373096a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ea0f230-8d42-4e5a-8ba8-70161cd1bc6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2ccc4957-366b-48fd-a6d3-6f6564d58a1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "837196c5-11d3-4e33-8eea-18cbe59747ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a1220517-357c-4815-8587-e691977d36f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0652bb14-bd13-424b-bc7a-3c890d6a36f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66908b22-25a7-4d5a-9842-dbaf555465e0"
            }
          }
        ]
      },
      {
        "id": "6d8e1288-d862-44c5-83eb-07d2bfabb9f3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d368ac0d-2ffe-460b-9eaf-c83132628d7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "190101bc-adab-4797-b3f1-6cff56bedde9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f660def2-8743-4e98-85cb-f15e671f5127",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1ee7c4-ee5d-4734-8cd8-59f121cc9c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5356b4-b761-425e-9154-45c2fa2bca2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf064c9-71a5-45f8-a327-3b11b5a313e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "535d02ed-2392-44c0-8439-6710b8871d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd214423-8711-4013-b443-040eb99d70e2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ed053f-4786-42cc-aacf-7cc1c8f59cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6360d79-fc25-4531-a8d1-e4f062ca6b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2355d34f-3b30-4189-8c76-5dd92713573b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fde451e-cdc0-49a0-a3c9-fcb0305fc38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257cc0c1-6b17-4dfb-8d7f-74059802f2e7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf41cb5-b4d0-4240-803b-ccbf98157fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31e4443-ff76-4f87-9f78-b31f1ea3b127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96adbb79-b240-4dc1-9e09-5e8c29dddc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6488072-f33e-4e67-aa74-357782128cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095e3a41-f671-4a70-8d08-b190bf04d88a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa6b5dc-8e98-4bb5-96db-152027a37353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0464eda3-eead-4038-950f-074dbae6618d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0705fdd-29bf-4a01-bc38-03b6419c45e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5dc4984-5099-46a3-ad2c-e9af88999840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875edb3b-7f93-44ac-8ba5-430a650e448b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388bfa82-3ec6-4f4b-887c-058f3fa06561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a362ff-c22d-43f6-83dd-e94b9b322037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811d9716-4d97-4294-8dbc-81e699277ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ad8a5ce-ad84-4096-ab73-1b3f56088b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf94f12-e567-48e6-aacf-ff3fe7649d4f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a6354-e417-4036-822c-72f44ffb7f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b761fb52-b3ea-41e7-844a-e5150f5efe15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b60a18a-2a80-46ab-8df9-0d882f0317c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7a9148-765e-4bc0-981f-b79bd1ca46c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68d3ac3-186f-4430-ab38-5637af0b299c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3347f84c-89eb-4183-af70-692931186b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33eca2b-eae1-4c90-8d95-36d922327e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2df31f-7a7f-46e8-8e05-1163d8530ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac50fd18-db64-452f-8616-6d9f308d606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7677417d-143e-46d8-b7cd-a7627d197d92",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11e801a-29be-4627-a3ad-ef65ab3c1d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb11b6b1-aa35-48d4-bc8d-73744fabbacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfb2cbc-2a68-4ee1-ae2a-fc4601202850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e74cbddd-1b27-4dfc-83e2-958992667e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2b7263-8c8c-4cfd-8d72-f64b9202eb81",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c305587-dc22-45b3-87f6-68669ffe130e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9822b0e-7b69-46d7-bae5-775777c7fc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554f3496-42a0-42cd-8a8f-e77b847d607a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17d4a896-ab75-46fe-ace9-e8893a697e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21c7d21-122b-4efd-8373-ee37fb055039",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985f0058-087c-4409-af4a-25c77fdaba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a99c40d-a244-4ade-b7d6-89be1300ac95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5252f42-f223-414c-a2a3-33ec76344d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a9cff90-0104-41bd-a7e8-aa1982fca781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acd2f46-b3a7-4590-99df-d4556fd70a72",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8e70a3-0b4c-4a5b-8268-8a3d9fdb1591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be52cda-927a-4bc1-99a3-918e1338cfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84163a1-e3b1-49e2-9766-84bad9477bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2899b62-5889-476a-b9c0-679b05dde88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eb4d76-a031-4c7e-9d2c-1a2fcd3210c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af32b85c-7151-4d80-96f7-29acc57eed0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c4c55d-de62-46a4-81bf-77f6d15f7a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b0b76e-261e-49f7-aed8-f20e519b6c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9cadc21-2c36-4af1-b05b-3da80460bc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913ac66-e404-4615-838e-14590387ca81",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9496b36b-cd43-4778-bcb6-5835199426a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc23dc6-a4ca-4c5b-b16f-955f503231d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0c4105-e615-489e-afb9-c5ded696e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa341c4f-661e-4e31-9d33-55870160a714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5205fd8-9053-417a-ae57-862270b34914",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623fa6c9-ce86-406a-837f-182a01cfb358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58576bef-3fc0-4140-a047-166c833c624a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6de40f-5cc8-4128-bec2-9571e4889814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30cb1cb1-2179-47ce-bf92-dddd45408e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f4244c-77eb-496c-81ea-a0898ede4916",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44c9687-db99-416a-bd11-f2925dd37e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3830be3c-8b96-4c5d-8c9d-3fdc7a4f0b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4068f1b-2dcd-4275-afc5-0d60615ebeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "557f8dbf-862d-4066-8d3d-68c938b4f7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdca9c27-73a7-40b7-b05a-9061b683bb3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee516a94-3209-46e8-8091-21cf324e521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712f6656-f5a4-4cfe-b10f-0e890e072a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbafb4cd-5e7d-4d52-be97-d65c243cb856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129465ed-8820-4453-84a8-795d0f5a30bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84116a9d-60f5-48ca-9285-8c14426a84a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d2529e-c8d3-42ea-94d0-a0970e5c8e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7aad073-f6b1-452a-bdef-a686ee7e6935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8230a3-61a1-49aa-95eb-bff91bbf7bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5f165e2-2aae-4514-ad80-05d24d93e173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead450d7-8f86-453a-8a4a-ca5ff855fe0c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf49552-a3d0-43a6-b337-d61eb86ce688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e264837-5248-4f68-87e7-d8806d5a479c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0597299-24b1-4615-9668-79acd2051765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b22e43d6-4c3f-4b86-8600-96528b059e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac22117-f94e-4250-8a05-714061ff8f58",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b3a1ee-040f-4884-aa89-48bdaa407f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea1fe18-0d73-4e0c-840a-5fcd2afe1b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2543e6-c2a7-4b5e-a2ee-26685d28ba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa02ee1-540d-4e8a-8efe-9e8d49b4a773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0dcf8f-65d3-4511-ba70-0a7ddbe1959e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dfd5aa-abb8-4134-a44b-f9485865b0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada97d68-7b9c-4f5b-9669-52cf630908b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005f3dc3-4b09-4e34-a4d0-7af5db96197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd285ca-a85b-4106-8b64-146f46f9135c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61735f68-afde-4715-8adc-9ad0ee3e9dc8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6777e120-6b3e-4e4e-a8b0-c000c460d2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7d6fa2-57a7-47ae-9959-c0e523a08c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24694474-2c66-490d-82c9-ed183e90a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ce639a-830b-4b38-9367-866fa41a5ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70674807-df0a-4385-b56c-a2367971cb5a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849fb666-9c3b-4a3c-a65f-fc472f6cabd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57485cb-2c45-4db1-b178-edbf44286abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a9a8ae-fabe-4e5a-b99b-21ba21ff6c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd7e61e-4b60-419e-bcbb-c3948a2875c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9752be6b-2a33-420a-90c9-b9d78ca4e87b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386c58c0-c80f-4a45-9b05-83edce977f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02dc73a-95ef-4ab5-ad1e-821fb1a37346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf0ed6c-110b-493d-b764-8dc35b21c916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44f85ee9-0f24-49c0-854a-4214ea4a64c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb473c98-52d1-4499-b0fb-3e9405c0d68d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb372dff-f259-4547-932c-ab95a1326002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf465ad0-fce7-4375-a6ad-80eea04fbfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7289662a-0809-42c7-8148-ce020d670b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ab9e8e-29dd-4613-974a-d13317a8e20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60eed892-cdc1-4da1-9622-c738eb8f7761",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9dd042-79ee-4661-a314-dd611a52e5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee605597-8465-48e0-abc0-18cf1bebd2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7160f623-ca4b-4fe2-8bb6-8e9bdea1c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b402d404-d9f0-4ecc-b7fe-ab7ab32f9e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6423d4-f095-4484-8cdc-b6001785c7a4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070a9335-6c0f-48a1-9133-1395550473eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c4db37-8741-4a03-befd-1ee326971563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e3dda6-a43a-42d0-9076-1381904d1b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc594c2a-4bc7-4a98-a543-58a094b0b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabf7e32-24c5-48cb-9755-e21fffad9e69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc8e757-4fd7-44ee-a0ae-4feefd4795c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e27e2bb-7d07-4fc6-a9a1-ca32739224c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278e2890-2d02-4440-bbcf-ac738a8b7f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e121448-60a2-4606-8747-d9fbd4b11402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edb1a0e-30e6-465c-b22a-4cb6632b6c59",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d6f02a-1f2a-4d40-9c96-9f236f17032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889b2dff-3751-4453-b3f0-bea57af859fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eaf574-1206-4b2d-b233-8a2e6e3d9a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d562480d-dbf7-4499-b19f-037b800dcac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7027e0d-9bf9-40a7-ba8f-8f541d840256",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acae1021-9a57-4607-9c8a-d1260e77baf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6f8aba-b37d-4424-b0cf-b7d5f2f2e398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf947f9e-f436-41ce-b946-302ef7508044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cba023d-eb25-48d0-9cdb-54f705d1f166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce96cb6a-9727-4363-a02d-5d811eecd48a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e3b1ac-0d31-4615-b4fc-d1fa3ddd03ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85180d79-1d97-4eaa-9df8-4dd07e5d9e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7334ee39-f6b8-463c-8eea-21d4268d1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d9e77c-9f55-47d2-90a1-021962a2a15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e17fde-33aa-41d8-82b6-5f3792ca3a78",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f1c82e-a2e9-4287-98be-8aee74d70ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf4cc9c-9e5a-41a7-9422-496b69e3a6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21311e15-0fb7-4d66-ac7a-b5d102630b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab226b6-e9be-483f-82f0-d4e774309183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d55a663-b261-4c45-a7ab-cc765699d057",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed84f6-5871-4c85-a23d-8befa5009c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76efda93-bd70-46e9-b81d-c3c7053cf542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc86c4a8-ed81-4294-8c42-73fbc1824cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8513d65c-cc4e-40a9-bfa9-e5173c4b4637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3d5c58-a51a-49c9-8251-acb3bd78c9e8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ddc7bf-ff0d-4d9b-9195-ecb3874830dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757c2de2-01b1-4cc0-a14e-8b2d61ca93c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811827a2-ffeb-4fac-8938-1e9013894fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93d5983-9b26-4428-b1fa-407258093201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef66dd2-d1a4-474a-b8e5-ce87d0fe675f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aaab91-0105-4b84-826b-3b908cc61657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc879d8-7e47-42e6-9644-f8ea5a4cde18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd1b227-a349-4abe-9911-af80b8715dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2664de5-e3f5-408f-814b-80d6a742f52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e16975-87a8-4a6a-aa09-af192c19baa2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99faf1d-17c9-400a-bcf1-0cd7eb408f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a44b06-bd27-4296-a735-6ddcf09f1fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d0e0d5-ba69-42de-9169-11f014a84240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbc7b89-a1c9-4272-a300-e620d0794282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bbbb56-741f-47c9-ae8b-eed2de0687e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd751da-783a-4032-8f29-073b27c59e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6864f288-0c59-46e4-adfb-26e9b32ea5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149a0623-7ff2-48f6-bbad-f5a2d2b7534e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af588241-9941-41c6-89e9-8a709b7f414e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aceb5c-3b37-4f0d-9695-d2af65e556de",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b01145b-1257-4afe-90cb-c931b101fff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55626bfe-8d12-493d-98dc-4b5bf3f3cac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77ff603-6a86-4559-96e5-e3b08a93acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e62121b5-e35e-4ce3-9e38-d54516ddc3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf8d24b-c7b1-4bce-a15b-9988574f9716",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0206945-9dc7-4224-90f2-f481d99d99fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408eaa6a-5965-462b-9910-cc32b980e4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c83620-4658-4c3d-8c66-901512def697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8eca1ef-7db0-4ad5-bc5c-e01a5c6936dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b909a50b-3772-4c08-a056-4e64f2277c07",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75acc1fc-94eb-497c-9711-962d38b76011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df40dfc4-7e06-43b7-90f2-549d8a0d444d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8261151-4a7d-4491-b894-d5afa274bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f97360-91c7-4fbb-b9c0-0b4066de48e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc030de-fa06-4497-a0fe-69ed2c7dd089",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aecdcae-9180-4854-bdd0-e72bc8a5f6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77254a3-15c3-4595-9253-d5ee183b156b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2828533f-756b-49b6-9ce4-59f08034ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4781acf-331e-4535-b0ab-3fe96df1a762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be2f70d-da16-48df-9104-4a8d9cef00fd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fb96bc-49d8-4969-834a-9dc79898e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8056b368-e743-406d-bb0b-42d7d3271944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922c4911-d7e6-448d-a18e-73c671c3516e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "013e4659-ab1b-43f0-a4c4-8db2595fb022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a9e9d-59e1-4c27-9ed9-37a861069cdb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0598413d-8a0b-462b-b765-2f296249f0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5cae03-cc6f-4754-b64d-d27fea55bce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8ddf2-ebdb-4711-802b-4016ce8fcb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "963b1220-1462-4093-96f1-a0224d9bcebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2d7672-60d2-4285-ac0e-3c4610449685",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1242709f-0205-44dd-b123-030fbbe4635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79069141-14bc-4468-9492-11abd903a464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7275e9f-8495-44a2-b829-e6a7c0eb6973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b82414-22d4-4f93-b98f-968c0f7306c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44e9b49-4fa3-4b61-ac69-902be9f9e374",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3050090c-b592-4f32-839c-cb0de578442d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdb2025-a536-4610-8657-72975f64b700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2e1693-8452-407d-9169-91f8ec25337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "804491c0-dff5-4fd7-abc0-a5b0f7aa5f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7f1d1e-3986-4b86-a0c3-3b136aa9a6e2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921486a6-7fbc-4561-a960-37ccc22dde6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c328d9-3ac8-4356-a474-0ef848eb70f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c0aef1-d97c-43b3-a77e-8d11e04e2d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df158c62-824b-44eb-acd5-7441623266ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcfc768-df54-4788-b91b-4a7f86a3f4b8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9f2a77-27bf-4821-a4cf-cb74c800820f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bed12d-9a85-4a55-9e1c-1d2544308e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fdf98d-39eb-4407-88b3-d5c51d8d82b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4fdf3b-a725-47d7-ba41-5fdfc28e0ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4faecce-665c-4d92-84ce-6807aeb041fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ce4326-1e64-4994-b02e-4a474aeaf43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ff3069-8be4-4b84-9ed0-0e3524e21eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313f3813-1bfc-4256-8d80-69c7c0e8c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd72676-81a0-4db8-a6c9-6ddf25b1c448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09910ee-1faf-4024-ba60-eb8fda31fe8f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e33f9f1-3249-4f85-bc32-1435e10e9153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfb2796-9220-402d-90e8-626561de0c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6f62f6-e0c1-442e-861c-eca13b095985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b21a4c-5ba9-48ba-a151-bae97d425475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0451f53-ab66-48f7-a903-e6df3fddd92a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91efe72f-5269-4c98-a55c-756c65466bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107645b5-4040-4ae9-9ec5-e596f53726a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2547a763-7ee2-43af-a89b-c20ed25283b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b246ef0-7b7b-4c86-8cd7-ca724effa69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55836644-4487-4ec8-a905-918dd9c5b1a2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cbe824-48d0-41ad-94f0-36acd7f1c20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1830a837-1e20-47af-8a75-f8b16d7409ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b053f1a-9e54-4b8d-a631-fa61d8c761f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03166e42-a1b3-4480-b0ae-1e2457d34790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0a127d-e244-424f-bdff-ff3cc58adaac",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd147c9-ea37-40bd-b0c9-b1e9c5122157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2542cb3f-3b40-49e3-8a00-c031b8c137fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53f0ce9-49dd-4919-8be1-29eb969ebc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d00def-1ce3-4633-ad1f-ef653ba8a5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e36434-c9b0-4429-9d2d-b5dbb907b447",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a417da6c-c958-4110-b619-d29141dcd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684a21e3-64f2-4fed-ae9c-14762b4cbeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49dbb30-2f14-4d37-b95d-ca35446842c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4daa4a14-6ff2-4062-b94d-9763ed1e0dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495365cb-cc4d-4137-8b70-0aab4209d5db",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c936c37-f36b-4c57-94ad-bc46a9e70d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db246fc-0c27-4f0a-bf4f-aac326425795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e709e5-2dc9-4e70-a5ca-4f2fdcb3a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e07a6e6-eada-4534-ba87-eb64e00b23ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabd6cec-975c-440e-a400-397984c189d1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2caf4651-4c55-4757-8f10-2818d5f30f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9580b662-d80c-4b16-88db-0994ed02700c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b0df60-fc3f-404e-b487-505567fd1e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7ecb0d-fc2c-4b0e-94c1-bf6b852a100a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3926e50f-7e9f-4118-9f84-14cd268ec3b1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a400aa7e-d2fd-4583-a22b-4bd943f6da5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed10b99-cc0d-4963-b515-f36a91adb0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1c96e-3160-40a1-a223-2586aff7b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "881bcddf-a953-4d07-a077-d6abbcaee574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abfcb01-a5bc-4b1f-8eed-427d9f27bfc3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d876937-0131-4984-9db6-2ca720f6fa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fa318e-878a-43bd-a629-ed4554c87aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ee17cb-bf36-42ad-9ef4-2e03d9df8e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "76b4d598-eff2-4d44-aa96-6473a92bda15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5faccd1-5a5d-4629-9d5c-bb272dede8c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dc48b2-3044-4ea8-ae78-6531d67f849e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16d365b-aa2f-4618-a947-0910d3f73aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c18729-5bfd-408a-9a21-4afa2a5c3ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c349c242-92fa-4305-a56f-d3a82178bc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b84383-5aef-4c30-a4a7-bdd400b11cf7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0be676-07ee-46aa-afb0-c2af99573fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacb4a75-bb76-4b2b-998d-539b079fadda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070a1609-d4fa-4869-b940-6db4eb6b6cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd04d5dc-e155-42cd-87ff-2d27eda36020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86ecd6e-247d-4705-af9e-3de453886662",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6ee830-58a9-4d4c-9f04-debf07563f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faa34b6-30fd-4715-afb8-4e90a6542463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66de26b-adaf-4157-852f-452c105b4a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a5b785-6ae5-42aa-a5c4-77847540fd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d4da30-9082-4318-8045-11db9c402b7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d933cf8-9bd2-42a4-b918-21c2f32722b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eabdb28-2487-4071-8041-06b67649cf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46899674-f31c-4153-83c3-49122b0e6d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0133f9-6d0b-45d5-85b7-94f961e5943b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44593477-fe1e-4445-afc6-4314c34fe629",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0505f10e-d620-4480-a004-88f08f8ae6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdff6b46-0e0f-4cd7-875a-4190cbed4b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e73b6b-0100-47b9-be89-59084c3cda55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "83f25437-0687-44cb-9047-a6602b2035f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd206d6-152b-49c0-8532-437552254a61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139724d3-cb9c-421a-a84b-bdd791f33e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2e6056-2543-4be0-bc8e-a7b28917567b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda868ba-bcc6-4b8b-84a8-9a58d8685aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87155b3-0f21-4655-a017-28713227ab65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6317856c-6b0e-490c-9b3a-91628306f587",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3405a56-9282-4c46-acbd-f903a25cec2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ac73dd-28cf-4e69-ab3f-b1b33721fb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40717ed-142b-46eb-b3ff-583fe360215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0a232c-1ccd-42bf-be8d-2a97bd9097d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d95cd15-ce11-4a52-97c0-7204dbfb36bf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbad5a2-8a7c-4925-8c6c-0c75785e05f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f65bccc-1f8d-4060-8640-bce0ce4c0b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611ba2fc-5953-4b9a-b2d0-45b3c87d1692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e430724-e5a3-49e6-a358-03541bb72576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564efa88-a662-43fa-a90b-0fdbaccd9f8f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ed58e-5895-439c-934c-88ebf2dfaaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745b020f-3500-4e20-9ca1-ce9356e3b8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c75ebb-ac93-4090-9418-bbeeddf3bc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83c06a27-f7e7-4329-b629-b09e10cbf780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d57b60f-92d8-46b3-9411-8067ece3df6b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c733e409-dbf4-4fdc-8585-55b74574f1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda2b429-bfad-4885-ae85-6abb78f511a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6507d582-586f-4d6e-87b2-7684d1892266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87879901-b31c-4438-8861-c00f54bad77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c23e0ae-8737-4fea-a1c1-4fdcd3d4e493",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1c39b4-dd28-441e-9478-d7b001f7563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe945243-8c10-42c3-acd3-49aaac6d5af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc49f13-b3f5-44e7-8258-3da3023ab5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "165c7611-8cc8-4cf4-8e59-f3f6eb326038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29cabb6-31dd-4897-9ace-137efc66e5bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438e4a1b-2990-415a-a61d-8d270bffa531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9de091-8f3d-473a-b9ff-a2d751a166d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be950abf-73ed-473f-9273-d49f9448550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7fe45d-3855-4525-af38-a4720b23b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132c52a6-e6ea-438d-81ed-1d1498b11f06",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17307d16-a961-4195-ab08-8d7adf4f1571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a271f07-2a00-47b8-b600-b75cd9089c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d01b2c-52aa-4d64-95a7-e1c03789ec26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aba4b996-21fa-4da0-994d-7db6f864abfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215083c4-a835-4918-90f6-b680a348a055",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a0fa34-86d2-42b5-8e83-94bb58e8b1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94a11aa-9b4f-412e-aa9b-11ea45e9424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aff581-b205-488c-9236-b1362cf61459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef38af00-e900-4fee-8fd8-f786869ec59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b489d8-a368-4246-b40c-ce6b059c3b60",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011686c9-71b4-46e6-a4b6-ed9cbbb3b675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d69b7a-be1d-4bda-affa-1b6fd70d13a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c010570b-8d79-4d62-b870-21bbdf077a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47670a2-1da5-40bc-a4be-3d834159a1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906370b7-e258-41ee-8977-26ef17a4cf11",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07deda02-9666-4e66-864e-0f653790deb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cea460e-01ed-4d61-9571-7de769378d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29208f35-3587-4567-8554-7ebcdf9143d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49904bcc-8708-4827-999f-6d9f30dc36cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca742561-20a7-4ddb-b965-340da24d761d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94fdc24-442e-4fea-9e48-7b938f9ce77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f41ab55c-438f-4756-973f-566a2ea4e9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3cea68-cdf5-4a45-9684-4f66bf2e0346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9832a50-1bce-48c9-a2b3-70751b42ec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919c47a4-579a-4289-b6b6-ba446751293e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371daf8-cd52-4ee1-be97-2359e539f66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38144b4-e73d-409d-8f25-4651ee064508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03fc705-20d6-4276-9bad-d15dcf970fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4f0d89-f48e-4046-9765-ce3f4bc38c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c317546-6c4c-4d1c-814b-e4f5da166d19",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738b204-4ec2-49ff-865c-545d81231367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3350efa8-77a6-4d13-b438-0274c5d60382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76ba310-215d-46f5-9715-f59bfc3429ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f163dc-1a5d-48f1-8c2d-5de0e8cc2d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b794216c-c9e0-4eed-a785-59339a65ed84",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0cfe07-a533-408a-9dd0-423dbfe3affc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266663dd-315f-49bf-aa10-65b1a8a99812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c2c883-4eae-4ebe-8cb0-702b5ab38517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3594f861-898e-4bf3-a517-d147faedc819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02d9eb7-4c38-4bfd-b586-03b474b09505",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462c6147-c6ce-4737-bb87-de856c20e090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7166dcbb-37e9-41ea-a239-cf2a8526b51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be17bb2-450e-4ff1-b084-da04930b4aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e2b821-bd24-4aaf-b8bc-eaaff56a25a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d395b7e-1f32-45e4-98c9-48abd1ed6925",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5842cf-c5ef-46f4-b098-f7ba0068e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050fd76b-8358-4611-a403-8ac9425adb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de290424-f836-4a72-9029-5482739a754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5cd442-77dc-4c5b-a5af-5f5dd93cae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f910ef94-c99e-402a-a730-a50a77ee4e70",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1c5dc7-7b50-45c5-8d66-bf3c9a857460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595479f2-b7b6-4c0d-b8ba-79abb4b0f7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ca05f7-968f-47a4-8d82-ba5fe84b611c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "496bf278-0f56-45ee-b4b5-3ba76d66d35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b115aa96-1867-4daf-8347-11ba2a71dec4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2e0dc9-f27a-4a64-88c2-98afa372116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c64aa00-8af4-494a-ac4e-0f331c4abe5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bef123-28c4-4905-8427-b9f4deec0153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17a2af5f-f342-460a-a987-e9bd31b6296f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304fe508-f3c3-4ddd-8b63-a475fabfa73d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c425887b-15a3-4430-aee4-6a63b9564876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1633c61d-24ef-486d-b9d3-a7ec07988ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246ad4ee-2c2c-4ef3-8f7e-026839a6efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b0814b-a1d4-4ac7-ac3e-6e84e7810c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75d2049-b49b-4853-99aa-7c0368eda9c7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d27c9b-0244-4087-9b56-f23bcfc5c524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2449919-d1de-4081-96e6-12cb7d591d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e7aeef-e474-4df9-b71a-7a3ae9f3788e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "110c399a-ad58-4513-8cb4-a4dd27b69fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda20ce5-eed5-4eca-a973-5aa38777c75c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f6152-d138-48c2-847d-8f39b50e68ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb52dd15-7e5f-4acb-b972-d9c70a614f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6aeae4-afe3-4325-8ada-d8b363f1722f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19eca520-5e6c-41d2-8f64-be5c4e2ffb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b321d35-3dd5-4331-b7fb-1ba1a97047cd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1867b21-a96f-4a84-b007-4e9154fb66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dead2d58-1fd2-44f0-ba0c-7f083a5d9700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734f9777-137c-4a36-9956-9c092abee859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4b2465-89af-4c38-9ecd-bb0c5732a6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c0439-7ba9-4e7d-85ab-9f4e07186c47",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f068fce0-abfb-43f4-88d6-58998aa577fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fc213c-0599-4615-a53f-6e88fad3b49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c7924-1e80-49d3-a307-9a33255a336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83f819ac-41dd-46b5-955b-d0d4e77243d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00ab04e-42cd-4958-a2a4-fd688414ad36",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ea7a80-0225-4e22-9a6a-2a2f36478cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030db2c1-de73-4582-8803-c3c5ec2006c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49b8255-6da3-40eb-b266-76daef614a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6b4dc6-8f0f-46b3-8bc6-60a021f7d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b0058b-fa7c-4d81-ab98-0299d13ba67c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3731ae-b7db-4d85-a889-052d1e0e1266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173e69b5-a709-42be-88dd-95e26b62677b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df23289-c6bf-4058-8790-5aaf9af7ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd7be33-cee6-47e9-89db-3e0f254841bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cbca7f-e415-4b1e-ade8-6411dda43c05",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f658232c-572a-4865-8908-76be3f1f21d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c107cd0-39de-4eca-bfda-8dcb7b441e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f956de-f554-4701-b986-339134ead0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4200067-88ac-4088-b159-f5cc7d8069b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b2739e-1270-4b52-90b2-ab2f1956a976",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b7db5c-9d03-494c-9aac-d2c4f8b9ab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f4229c-4c0c-467e-acc9-1a9a8d31a1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7b5d67-5cb6-484f-8d76-7285de9805f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "944d85cf-1a7e-417e-8bda-f94a0b0472e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f591e2c3-2599-4f2c-834f-de58574551e0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045fddde-2a2b-4ba2-a507-1bf5e5eb54d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a5f48e-a052-49a6-a696-0aff42c821b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a439ff-cc69-4514-8d4e-8c5f9cfd85f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ef1728-3055-4ad6-a41c-456c021d99d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30c58e5-3f8e-40b2-b868-35763409d854",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417f4fd8-9d97-4725-bcd0-c712cfe1edcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a97b65-4aa6-457a-b331-82c00a972cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c405b114-9363-4e54-9661-b074c1a1c9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5601fe5b-6660-4792-99cd-0227486af7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e384c45-8fe1-43ab-9af0-9ff968a1fadf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6578093-6baa-4b4a-8ded-e22261756d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4eaf31b9-2c56-4853-987f-aae955dd916c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b8d4dd-7e57-41b5-b1a6-acf4237b1fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "065af07b-fb5a-45eb-ad46-f0555fafc71f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e16f676b-530c-430b-b6bb-cf2a81f1bf40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fce16fe-e0de-479b-a6a1-f37075425427",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a75e992-b699-42c3-a0cd-caa6eb4db0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "002a0793-c5c3-4dc8-aa19-bf328770a1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a228913-de2d-479d-84ac-b19e37d17195",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bdaeb5c-1ded-4578-a241-3c3b9910b0b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9fe97b-b585-4cc4-a103-09148951b246",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30d396bb-87a7-4746-b543-f9966a0b2916"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab5f19a1-d601-4570-bc71-9ac70ba14b51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d25e5459-9034-4704-8787-c4324c7e027a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18c6fd56-e056-4ef9-9b0d-8e2cc499dc8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59b8f90f-0a9c-4919-b699-1b7117db8bdf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b61c99a-5900-4d44-8ebb-fe80ce2c12c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34383b67-9528-4ce9-a661-12c642755243"
                }
              }
            ]
          },
          {
            "id": "a4204402-0d16-4a5c-9092-213a7b754f23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb60746e-99e5-4a86-a516-5f5aa1253f70",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c20ae329-e1f9-4fd9-8c28-74b31e742d05",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22156f9-73ac-4d8b-81cc-c30eccb3456d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a245edf3-14a9-4a64-b906-71edbb0266c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9c2277-c32a-453f-830b-c632b09862f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d79fab4-7aed-410d-be09-844c68f66112"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a64a545-6fd2-445f-8255-b5cafadabdb5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a27cc269-2b32-4444-85ab-0c5a9ca06b19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ba499eb-1f86-45a9-99ee-d0d02b609cdf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5257f8af-ec07-4269-b93f-968a70c6f483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83a6bd12-e55c-4a58-a381-75694605e953"
                    }
                  }
                ]
              },
              {
                "id": "47dc4886-9a81-4370-99b1-8a92bc170811",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de506ed0-9b01-4a3b-a720-21bdd1873aa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d9faf4e-a113-4ba3-84f6-dc3a1bfb9232"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e8cc93-d9a7-4114-801f-a69dc11a8570",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfa84d27-a021-4f8c-b250-1206d54f6d42"
                    }
                  }
                ]
              },
              {
                "id": "b303a4da-1fe9-4015-a45f-e26981580ab6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d343ffbe-b485-4a55-9228-5834758a6dc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f08c97f-3d41-4f4f-a850-d710bb6f086d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08cbfac9-bccb-4750-a2b8-c8dca6730c7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e55b3f7-77c0-4a1b-819a-200f4fa52b5e"
                    }
                  }
                ]
              },
              {
                "id": "23a5c12d-3f8d-483a-8e70-d54fe42363ac",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93d869cf-338a-4d7a-9a6b-9c57b9b71356",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a62d3a8-48cc-41a2-b019-b4c79bddfbb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015bef71-c3b8-4818-9c04-4c342efa28fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "83aeb40e-f0e8-4e5c-a245-00f4a47393f3"
                    }
                  }
                ]
              },
              {
                "id": "92174c33-a128-4b48-a143-43dc7fc2486a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bf70afb-9496-461b-b883-8b3475248b81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72f65f66-a993-46f6-a0dd-2080421c6085"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd690399-0faf-4822-849d-3b31627cac9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "40a0f59b-cec6-49dc-9015-0dc6f262f4f1"
                    }
                  }
                ]
              },
              {
                "id": "36d94d20-2a84-40ee-bdf6-a2030599a0ba",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9399cb-6b46-45a7-b3ee-09d6cd3551f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ffb1b6a-f2a3-4c72-a72d-5ec8dba9e710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fee60073-23aa-402e-aab5-dc5509215bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "089151e8-25f8-4b48-872c-1b28c7b28cda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d26ab4a1-c0db-472a-9f97-45a7571c895d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19b09769-aebc-4cbe-b1aa-85c271b1fbe9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79a3ffc0-7832-4050-9f23-da8703392e2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3048accc-6440-4208-94af-ef0b49970c56"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cae90677-40ae-4aa8-9c2b-762c935063a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1e94c15f-dcb7-4588-ba54-e6519356e1fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b36bbfb6-fd66-4479-b1ea-9a0ff5539f29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b32104f1-424e-410c-b8af-604b9c48d440"
            }
          }
        ]
      },
      {
        "id": "92354ea5-6b37-4546-9e2c-79409d474484",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d130db08-b919-41cf-990a-a92fa599687e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c90cbdd1-51d5-4084-a96a-c1ae94cc006b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b8ab821-097b-4921-b78e-a3b29d3332d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7545edc0-e1b1-403b-80e4-8387f3ae534f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598f0a17-2e71-47de-9a3d-9e4c45bf6854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffbaf3c-e885-4db6-b603-d861a20e3445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3c0ad7-e655-4b79-836b-1ee744f91490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85475b7b-6fe8-4219-a077-3d4acb723db2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd31c4d-aa55-49dd-9a61-51ee748f80be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490ec950-f027-45c0-94c9-e1d679ac5319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1638faa-cad1-448a-bcce-c328af40352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "701359ef-0a0f-4b1b-a0cd-7b43fe5677ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b80ced4-b829-45b6-9e45-5ea4eb79ad48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19e2f4f-44be-4603-bf56-43b481431c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3da188d-efc5-4901-8bf4-93a4292d9d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28718dbb-f6e9-4d8a-93d4-622d75265a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c7885e-8201-468a-85dd-d3b844173306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db9c229-7607-4a94-97b4-21a77a773ceb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c975570-3394-4ae1-ad8f-be82f42ae0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20916fb0-90e9-4518-8dbb-bdbf32f3def7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5434755e-c88b-4340-96ad-c4469568ed1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bb942a-a944-460b-a0f3-f5d991d0c64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580bac9b-5eca-4252-bd6b-835d4b09b6bd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858371ba-e350-432d-9576-1dcb9216ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053feb89-3d36-4ad6-b9c9-c933d62a25f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457aa5b3-75b9-4811-b745-8faabc58eb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b116cf-ab0f-4316-9b8a-881ca1a33f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1135fac1-8370-4abe-a114-809ec30c04c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c7a8f6-3060-445b-b3bd-23a48d289017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0e0ce6-927d-43ca-ba4c-3fdc27ebc1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23528214-5065-4e48-aa3e-df16b4a45ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6770b21f-66df-4e3e-abb9-f685784e1ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3293f775-e82d-40cd-9b29-e390899ac606",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e45293d-eeb2-4027-b850-876abfd51bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e6b643-7422-4ddf-9543-2c6079c96cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f9fa42-7876-4e4a-a561-2bd81c7ba25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c32af52-00e1-4473-b1c0-eea8791c476e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b727be-87c2-4c02-be1f-00ec2309cf6f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c55d6b7-c112-4624-8e05-d593c9c6f762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2b5f76-ba95-497b-8cfb-a5e9dc5e0fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5545f704-5f44-4de2-be53-8aa1a4b23ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ce1af4-5c34-4a44-bbec-99612c2eefb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc052e2-6f1a-43d8-a6c5-71fc6df3630c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff3132c-d8c8-4c00-8c31-e8e6853bde8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6daf139-2302-4f02-a870-02259ea526d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01afe12c-8b45-446f-b1f8-245e6e121179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86864482-5f8a-4899-8ced-abab27f755bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b242c2-0d5f-41fe-91aa-28dfe5c05ae4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4990605c-6f48-4421-a1f3-a5417f31af81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a961d8-f185-4360-b04f-fff20094af21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2901e4f-1bee-458d-a7a0-b8e788a50542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0604987-63fe-4ef8-96b6-1a18f8b53d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1777b8b7-c7fb-4245-8432-06ae95306a20",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d09e3ff-8c17-4e87-85ed-828c873e77fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3c0cac-be9d-4f7d-b9a1-b6670fb78181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616085c6-1696-46f6-aff1-115d69102ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3a398f-fdde-4fed-8588-b8441b227647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cdedf5-d3c6-48f9-9cd8-a59d36dd4506",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24426010-5f37-46ce-8633-163cac0d461c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9399f2f1-5824-4b8a-b7ec-3d5c7b36d0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960788f2-0d1f-4358-9674-05301fef0493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7b4119-b169-40ca-8229-d9f24a04d8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a063013f-5f16-467d-a04f-21fa42fdcbe3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ac1e9-bff9-4b7b-9499-b7ee53d7b324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629fedf9-d6cc-4c0c-ada4-4c9c4ff14d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1342834e-17bb-4729-a0c2-c45f6578110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdc82f9-ea3c-46c4-a8c1-d26396c2f2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16bfc25-d10c-4e7f-bbfa-1bfa25252054",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f601678c-355f-4d7f-b216-6b771d9b7908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e91ee53-083a-4c99-92e6-7656e36ccd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629a7b4b-609e-46df-9084-44feef823443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f49215-ff80-4831-92b3-6b17a456311c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463beeb7-f90a-48c2-93ee-67abfb74a073",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d01fea-c7ea-4b31-8c70-185e44272fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666ad305-55c4-4eb6-992e-bd6caa3247b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e27bfdd-f4b6-44a5-a3fe-296a17ab04ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee70d0d0-9093-4b01-a120-783bc78055f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6703c1d3-8531-4bb0-9ccb-5589f21bcff8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d9bd04-99f6-4ffa-a84e-266c7eab76d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edf01b9-b01a-4bda-a8f7-1c8d9e59fdf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53417076-986f-4044-9315-c5ebae503837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad38204-cbda-4e65-8c6c-54f32a2b7eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89733c8-2a4a-4837-8194-8e31603d7f05",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f56533-c395-49fa-aca3-4ab9adbc9723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15dcb44-4254-4ae7-b857-7565e59560d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fe2646-3902-47f4-8471-9ee7cf6f18fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d4d8cb-edb1-4525-a1bd-61594eb2b92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99db0c0-6b61-455b-8aa1-39fe5eb0fe4f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82001f8b-a377-442a-b25f-2ce4eca23025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e9a549-703d-4035-9b9d-0ddcef19642d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671d8597-598c-4375-b147-a478dc1a35cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dd9234-bc38-4cb0-9f3c-dda71661753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5a594a-3611-45fb-8bb0-f9318fc4d244",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930f1635-4ba5-4fc6-a5e2-7e97840be8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc6e5d4-6ce5-4a1a-8e69-963c819309d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22282c86-71a3-4f39-8723-71cad0108a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1704b8a-bc0c-4884-96e7-dc0deec093aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4520974-7fea-4aec-88bd-1573e4d6c93f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99aeed4f-1f8e-49c4-b425-314d23701358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9900c529-9c56-4469-a512-74d4558b9b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af161752-b4f9-4293-97b0-725c8d27b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8197f3-1631-42bf-a6b5-2d081f37e56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3e12b7-de83-448a-a4ae-810515947c10",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9126c72-d775-4b41-b03a-4d050b39a03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc259f1b-addd-4dc1-b40f-57d71a54802e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8e60b-df07-4b86-b294-416e436fc121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecddcf66-7a55-4933-97f2-f46d5dc75ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dec4b5a-ae6d-4dd1-ae75-291e57c1b100",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3068d1ad-68f9-4419-b765-7fb4fa4bd897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fa42a7-0e88-4a08-8729-7767a885f3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43126f8-4a8c-4963-890c-f294afa97d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "072a62f0-da24-4e2a-8912-c1b7c472ab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c487c6-36c4-488b-8b0d-094b37b27354",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a458e9a9-ea28-4b6f-8d7d-f8bd10365395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1146b8-91f8-45a0-9cd7-3e36bac87d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a561996-f268-4eff-985c-1ce7bc33ece9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54efa703-17f3-43c3-acb6-367808f2854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260306a5-77e6-4786-9965-a7bb5ec47746",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df826284-ea7f-414c-af3d-3c2e8b482ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ffc036-25a4-4010-8fc9-f308ba3c3f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b1fb8e-caf1-4a77-9d6a-783b208343c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38547f51-6c4f-48c9-96c1-a633e99599e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b006f005-b541-4237-aa8d-1d2a3b551033",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea67ae3b-d351-496d-90d2-d48790803ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5fd343-94fe-49c3-8236-1aac2a747ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61875b9-8397-4aa6-8c5f-14f4f609b162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "268c724b-f8b4-4ec0-bdb0-2ab9cc1746b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0148bae-4b6c-4588-b5ca-f0837fa53b4a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ed4ce7-384f-4136-8ffa-9f047d8ea15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7f7de9-a8b6-414b-931e-451d53d24ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b52145-9640-4e18-8139-69d316b04fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a1cd80-6c18-4294-aa98-c5840f641062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080ba044-d6d0-415a-ab85-5b4483b848cd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6181bc7f-146c-4fc7-ba54-5344428d906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a536112-e067-4894-8802-83689fad4205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae44e92-464c-453e-ab4e-c08a40a115f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff3bbaa-0e07-4a94-9bd0-98d33ad061ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25cb952-881f-4611-8673-2b1f6d66907d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5528f641-7ba5-45b1-8382-04b576e5a56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386f9a37-8956-46f2-b815-2195221c145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a42b3-615a-4c55-9805-242d8242071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b04ba9-1ece-454e-b6a1-b0a8579655f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7aa798-3ff8-439d-b20b-1ffdd6ee88c8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be9c6ed-bb52-41f7-815f-0ee5ce7104d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1013f6f-511b-4f8a-b40f-4ffb37cf8ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c1cf1a-610e-41b8-a1d2-7f8305c9b85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5c4b53-157c-4320-a9d4-3bbe92372bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8400d7d3-0a05-4347-aa7e-4772ba304128",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1436d02d-663a-41be-bcfc-bbe54b9b91df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c036af93-869c-40f3-9343-88dd3a24f9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16776e0a-9bcf-4bff-82ae-e44c903c6894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce13bd7-0a8e-4a74-8b35-9ef99ffeb8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46046ba3-2183-42e0-9be9-80c37daef530",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc208e7-7fe6-4650-af97-a30c3f373d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca7ee13-8ad7-406c-aa59-d82f16265076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa1397a-157c-4c15-b372-592cca07408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b1a189-0cc8-4a79-ace5-2b8e453f8d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f118a908-d89b-4b3f-b1e8-d4652ea95493",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9351e8a-d573-46b4-9fe3-6f60fc9a9465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6565c1c-7b1d-4985-aa90-2bd129e18502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a4ae38-d9c4-43e5-8f10-da78ca68bad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9756cba6-042e-43b3-bea4-b55d3d2f5a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3cf81b-c009-453a-b682-68b2d7eb1ff9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be96ccaf-594c-4c09-9ff0-a16dac202924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ce9cd4-a199-446c-b89a-356758eb4e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4c2751-c6d0-44cd-8a6d-e8f13967d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b2abe3-2670-49b5-818c-29a10799b666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2809208-3cbb-4ddf-a124-109b14d16e85",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c95db1-f19c-4180-8038-dcbf890e8628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab7bc23-f528-4717-bb07-d5289f5a315e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9eaa0e-3b18-400a-a59c-edbdb5a33b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0134db7-adf9-48e7-8271-3b02fe207347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa38898b-d64c-4644-b522-dc1dfe5c74a1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac66a78-80ad-483e-a69f-d6adccf76a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370b8601-73dd-45ed-b923-ee7a4f28a1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cd3071-c94a-4853-a6cc-abed1250e6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f56978-742e-48fc-9220-4ecea2b7572f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599261c4-9abd-4cd3-9f49-c75bf29892aa",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b61516-2c0f-49d8-9b5e-00385b00a570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3721a17-912e-42b2-8f65-291287914764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187c8194-1b01-4565-88f0-8baed586fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5f59be-e2e6-4957-ac37-692e6c9ac9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba8412c-f404-4a27-b387-6ca9fce36a4a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9aedb-daa7-4326-b0e8-d7184454f099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb8c5bc-3a8f-4bc6-afa0-116f893eab0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bb28ad-6d7d-48db-8512-24ea7d879342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0398c275-8490-4fe1-9fb6-3c1e58bd0580"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7aeadfb-56ad-4099-8b97-a03c4f61862d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4e155f2-f301-43e8-9a98-5faecbd1b9af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c768b09-9011-4ff8-87a1-52d8b1232ee0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04ccf5f2-ea08-4ced-9c47-50076b0ac338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfbbdc3-1521-4668-afcb-c379f2f6b536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "714ee5c3-4893-46f7-bbc5-f8e6cf729fd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00248fd4-9614-47af-a43e-b046efa63b2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39c4b7ec-631b-4016-adac-ccf5e054120b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed963cdd-5d8d-4051-9ed1-f562d3cb4690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63041fa2-f087-418f-9ac4-e7a853bf6894"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "638faf0b-a46e-4bc8-894d-3059286955d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff847bed-4746-4335-84f5-ade7fb36f798"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d31a0359-522c-4305-ad43-754ed5583b61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fe0e964-36e5-4a42-b789-36a38f17764d"
            }
          }
        ]
      },
      {
        "id": "8bdfa33d-8c07-47cb-b380-9fd5a6c3d4ef",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dc247735-3143-4cfb-9a3d-17fa2777460d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca6d5c18-a21c-42a8-bfca-e1896961aa25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "741a1901-f01a-4421-89b8-d77e28e92002",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116d2697-b9e3-4eed-867a-7b707eed7c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6224d8a1-55f2-412c-a645-e3e2893d6ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c5ae7d-e831-4bcb-9148-54b9a4933a28",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082b4500-38cf-49bb-933b-b39f1453eb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e303dffa-b90a-43a7-b7f1-8dabd0e9b430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7295d8ac-a732-4794-a129-51645bb96061",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d68a7c8-8075-4e3f-9eea-51c71ebec74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7446f487-a521-4e5e-9d8c-c514acab7a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a584ac-46ff-44c5-81b1-0464e36bfd63",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386faf30-743e-47ef-97d0-d13752c86423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dd3d24-0115-453e-8d5e-73fcecb8227f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b767b0-bcb5-433e-bf2c-14e5720759a5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6934e2-3805-4c04-bcac-30fc331a1874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191499b2-210b-4a91-816a-0ad176a2f99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dcd543-15af-45d4-a566-c75cc66f0857",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21d5d36-600e-41ad-82b3-58eb10e4272c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef62841f-0f21-4097-a469-9032c46e709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2260519-057f-4a12-aafe-b6f2fccd5734",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fb6a09-cbc6-449b-add5-4e9608c0ce6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e278aa-fa83-4b24-9a59-76cb155785df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94812e59-a3e3-446f-9168-0db3fd7175f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17857789-1fd9-4bf5-91a5-294138bf34a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6a3f85-33e1-4ad3-a4af-4f8fe81c193e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231d8b1e-35f4-4f87-8452-52257e3d112b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a520f70e-1ad9-4132-b7eb-dbed0fca2c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c42428-f0fd-4827-b365-0a4a56df9adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81eeacb-cd3b-4c31-8ff5-80f1d641a0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f721c296-bdcf-430b-a14e-77379c48a1de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f20c4f-4399-4878-8ea2-21f81a638f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3bc5132-ee25-40f3-9546-ba8dc85c9b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8914f357-24b0-466b-b8c3-b3c1e017faef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf3136b-fa02-4067-a78a-4478fe920d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a6fc40-50b1-48db-87e3-b8054e52c1ee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b91b6e-8be8-4781-9143-3679c1cf317f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ae4a3d-e7fe-4655-a92f-d5aa64a2a3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3241dce-e112-4e0b-bc28-d3abd0ae4847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226c680b-b51b-4bf0-8d20-8445f77c5362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb9bd58-bc8a-4aac-ba3b-451c05551c3b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e19eea-76e4-45b9-a19a-a0cfca431162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd92bf8-4ba6-4749-942e-9c6a7010a697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f96417-cd68-480e-8b73-9784d71b5331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cce488a-77ba-490e-8d01-e4c061dc1508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cf3be0-4355-404c-aa07-9f41a9104c1f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbc7c6a-f8ee-4366-9d82-cdf083d98422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c422fe4c-1624-4c3d-9b91-0989ae3f6cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54dccac-af12-465f-af31-d705b398ca75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf86391-9742-496d-ad8a-19788b9e004e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3683a807-6c85-497a-8b6c-cdd44391151c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5387647-5906-41e6-b397-40927a50a59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa1c9af-d3d9-44cc-aaa8-d09ff60473f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b89ac4-e869-4d93-9474-83122a590965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7268d2-5ca4-40f8-b6a0-e2b16e55ab2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a3caff-54bc-4a23-8ff6-ddc3ae742ce9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea82248f-5f66-476a-ba30-3873fadd4412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f8b382-4b48-4a5a-bb44-fb69c49bd9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0985a85f-2299-49e8-8a58-79e572c919da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c5bb4d-47fb-4cee-833c-66f59886df74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ec1d30-1cfd-4216-bf32-4d5f93fb9882",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825119de-97b1-46f2-aed6-d31f76aa3204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f31b3d-9232-4038-a787-ceb3f2110464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe54472-c671-4223-b0a9-18a894fd262e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdc4077-2803-4a3c-9e14-87f39eb1904f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb04a67-afe8-43e0-9646-5b3a5ebda52a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b48b0f-5fed-4330-ae07-a7131d2faf7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6a6698-2bea-4ccb-889e-bc61e22e317f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365c8e85-1677-42cc-bd26-13839704ae0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1008ec-4f70-482a-bc7c-ab755365a49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4e8b07-d90e-46b8-9611-cd122c99a4e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33891a4-6e32-4a63-853b-45e560e8e345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16924fe-b560-4208-a0b8-5a4e7f5deee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e5d81a-165c-4679-84cc-9ff37d963b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c37142-db05-4c2c-b46a-e9399dd2c5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eeb8e1-c7d6-49ea-8f2d-527b48f4870d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feefc96-07e0-4765-8d84-0a0b4aa94f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb337073-d95f-4ce1-a7b6-a38af302dd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab085722-e408-42da-b31f-f1ffef29a608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35bf50b-2c0e-418a-9210-fa4b5aecedaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668cbebd-8954-4132-ae12-098c99ce43d9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5d5cda-5e2c-4d17-810a-e08c6edcf3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24064c57-d9b7-4fae-88d4-53852681ecda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da64fbf-0dac-49f4-a601-391cb0f02e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5ce65b-a5c1-4ac1-984e-bb4221342194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a9c092-1a07-44fe-95c5-6cabe6072354",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d25519-ecb8-4c59-b8a9-36e24bdaabb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a7ea5c-1ac3-463d-a49f-66e32db54611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e83d60-c103-4fe4-9f88-594196aab8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2913f9a-e4fd-499b-ae85-0ea67e72a0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c020b4-7ffd-4b10-9161-e5b8586e0ca4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4060b2-e269-4458-9f02-2205d7b7ea76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163bfef8-7f9d-4960-b549-4c8981ed73b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec76f3a0-bc75-48ed-afa9-8c8ece0d66c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad7b583-c354-4401-a665-80e4d56712f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7479f8-d25e-4378-b6e4-4d6f24bb36e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eaa919-fa5c-4cfa-87a2-ca1da6ab4916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ad4f76-d1b9-459f-b471-ee3fa7172ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfa1e19-3c2f-4944-bcdb-9f9a1b88f33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc3e006-d976-4ac5-a370-694c5921c8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc51f92-ed3b-4118-99fb-2a019a14d5d9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56006565-6eaa-4a44-9a62-64ecebd39c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723b1f83-5151-4c09-b192-27bb16f68b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcf63de-d35b-44cd-89d9-8ef52bbde065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e33e7e-8df9-448b-91ae-6e4c8d83bf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3c635d-25ce-4b7e-9f2c-9dd94948a9ec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286beb2a-2706-47a6-979e-ab3e6f886c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590b297b-0779-42e8-b021-56dc9842c5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725835cd-e58e-4145-8f9d-84a5f25b5c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7213a922-0ab7-4e70-8083-d400147025ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979b2246-5d4e-4970-ab5e-76bc91a15fe3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cedfb17-5ffb-44df-9a64-a6b557507809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5616702e-b815-4459-8cad-4dc79a11f302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336d758e-a9ef-40c8-9bd1-b5b012509d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010c1dc2-2dfb-4ca2-8625-1b2a7e5f0455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b517b12d-44e9-42f1-a394-5ab7b4640413",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adac7eb-857f-4525-b103-2d629cab482d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3211104-e7b7-4203-8758-88b60a45f037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6221ab78-644f-4b4d-bee6-71c76397c82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb04288-3aa5-4b57-ab4b-dbc249dbef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893c0246-d01c-4f2f-af07-0965cb2c6208",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90352228-8d2e-43b0-b7c5-a915d7b82291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a62f7f73-d3a4-44fd-9de8-78b75996fbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acb9b87-4dca-4ff2-9065-81c88c0e5c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0adb3bf-1ed2-467f-81a4-73580e9a7e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b318e80-0d0a-4815-a02d-86ada677d8b2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40420bc5-eb9c-4094-b72e-672d0cb6baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74338e5-3106-4944-a419-94f50d4bd4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab97750b-0485-479c-9576-9ca5ba856b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b7ff56-945e-427a-a709-514b3cd937c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67462bc-527f-409d-a3f5-4da9473f12b2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9ab619-9f6b-45ae-8cbc-f9e4a3983db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463fd89e-e666-4f19-881e-f7756066febd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10a655e-4f18-4aed-a9fb-8a7ac6badb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2336e23-82f7-4156-9a9f-0dbba106367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c3996c-db12-4e75-8069-5e8f7ea4bebd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c0cfe7-3392-440f-8584-36027395323a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a605be-6eec-452b-9722-d384ff2fbea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b7202b-f87b-4178-8b0b-522528d007b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33e3ea4-c4ce-480c-a193-194996c3fe81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be534c4d-c02d-4a5e-9fb6-99fa2dde90e0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc07858-0de3-4c3d-9c4d-f67ee7fb67be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "454abebf-94cd-4d91-b2a8-4305bebc3365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff26f06-bec6-4271-8822-42d2412f56c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83f76a2-1675-4911-a56e-25b2d910062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23eb00a-2171-4a54-81db-f178edc9681e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414b332e-8b5c-4e48-af77-537ec97baf4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40d95c2-43ce-4d39-8a2d-be1c5d71a9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f03a67-0cdf-4b44-811f-3e8b1c2688f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69516010-915d-496b-b1bc-fe767cab0201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f41d4f-d069-494b-a7ee-fa9e759a857c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095b822f-88d3-4298-8a2b-4fd6865c6257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea2eba1-3c00-4b73-a7f4-5c451c9d8ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa83f12-60c9-4f3f-a451-06e591fbcfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e155b8-d235-4c7e-bb38-54eaf9e67c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208d507b-165a-4078-bb64-70af1021ac6d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8be0543-5330-423c-ae3c-7b6b48642bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2490b9d7-dd4d-4973-a396-20df3a7b6978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6b9262-a90a-4260-86a4-f09d4245f297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688c984d-8a40-40c3-8275-a574065b7d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46581d9d-6c57-4474-8579-dfecd531d522",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78503dfb-b62d-4102-9a28-aae6071e8cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46315a9-e40d-44b8-8f9b-23fd159ffa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29aa54c-adfc-473e-8066-1505ee0d5bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b30d12-6383-4e68-96aa-1b6a416183ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea3ec18-ff37-4d12-a44e-ea4ffaf4ba41",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf67714c-1aee-46a8-bd9b-2b39b85efe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21e031d-c5eb-4442-81e2-f6109dd290dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e29a0f-8d9d-4c82-a5af-a5576a77d5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340c6944-9320-432a-9a59-8ef6713420ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab913f3e-2084-4309-a778-3f63e1347011",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58630006-7848-4a43-b86c-52b54f1c1ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b85917-8020-42d5-beac-5fa9b84d87f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cdf356-67b1-42f2-b85d-ee617fa38916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57b4fef-3225-40a8-84c1-047f36999532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d43f182-a8bc-472e-8dee-38fcf8fc83f6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3037918d-a9dc-4bc0-aee8-223f92659944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0681dabb-e4fd-441f-8243-332d1559564d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0beaad-b177-41a4-af01-767c29b61d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1122b35-3d93-4586-b94f-87992b18fd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6ec93b-5af2-4d96-bb16-953ae37077e7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da32764-b312-4960-92bd-046f83709c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94154d81-81f4-43d8-9558-6ccee89f4931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68170952-023c-435d-acb9-9cae0b3cc7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa5b0c7-f610-4a1a-ae4d-69f3cc7661ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a42656-629f-42cb-a912-3726318332bf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2cc65b-ae71-4b57-86c3-14b998e84e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddf0eed-7784-4ac8-a102-6b0c5b83e94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6784d5d-c327-4ecb-a4db-0a41f81a5150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c0cb1b-dffd-4f21-9352-5562715a6fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e4a51f-fab7-4177-bd84-d1a633de621e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be103bc2-15fa-4872-b591-61db9cff01e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88c54e3-6bbe-4c77-802f-d723582f9ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f48cbaa-5b72-4847-ad3d-fcb62f9b3397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87809941-a8ac-4804-9516-c3c6e5467820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42863ba-b72d-45f7-91a8-c35229d5fa04",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da32ab-7cd0-469e-9b16-1df6ca5f7b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff46cdff-381c-4231-8ab8-ad5a8026f6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6ad21e-88d9-47cc-bf53-253efecaf1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d081316f-0e13-4132-8734-0f263d271256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db0029c-fbeb-4671-8435-b677fb6bd211",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d305036f-a9ad-48ef-add7-e772a85f228e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fdab40-d87e-4337-898b-00e0f4a5cd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63726ae-aaf9-432d-a84e-79a8fbb95e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6eb7f1-beea-45db-91ff-dd336306649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebc986d-9e6c-45fb-bfa6-255fbf05daef",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60188d8-5459-4e7e-b126-8cfe628af232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6c52d9-2e54-4d77-ae31-362aaf97f9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d8581c-7eb0-493c-b9b0-61a2973d1c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b411f0-317e-4f6d-9979-ce425d873c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39713309-9493-4f64-aab7-757c204244ef",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02699ea9-40cc-46df-af87-576a9efab0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e5af90-2e67-4cb0-9352-11ae1c88e2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5bfa9b-80ac-4d71-be1c-e6b80494ff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558397ed-8774-49cf-9a67-ebb550fbf25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d633195-cc54-422b-b835-71d91ccf3bc1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1c362a-6a8a-498b-bae8-d3d95b264d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6d59bd-5a7b-4457-bb13-0692812c24a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210698ab-c276-4d4d-819b-654c4bbeb1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5888589-2ff5-4aef-ac6f-94c4cd0f2ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1cd89c-4ccb-4588-bd00-ba5a86058e49",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8951311d-00d8-4505-a398-f3addcbb3e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d6b457-ecf7-4b91-a4e4-34babe222429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a308333-3ac4-4f14-a039-971b9c292c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bee9a3-e03e-463c-bcce-2286947cf413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c9f59c-c11b-420b-97e0-df2775a3bd0b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06f45fc-d322-4392-b478-447affef4b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f76070-bba8-4ace-a02d-e17890b0cfc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fa28cf-3c42-4106-9ae4-90a1e8587820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d834db95-5207-4419-8f18-145ef0fe99de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91548837-b223-4bca-97cc-d9dfca33c709",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228d79f-99dc-4d7f-b928-501c3ea20ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05f22d2-c250-426e-89ca-376a01271211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d75cd4-7468-4d94-8268-d1ec5ff5c243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fa4313-bfc3-46cc-a1ba-922d724f0dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f636fde-ac58-4fb8-89ba-eee9bb170c1c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4847e2e6-6538-4fb6-b90d-d40c95027e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e7a2cb-eded-4276-a7e4-96fcfcd098a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382f3eb-f4aa-45d9-8484-ccfcc776d179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cb603a-79a5-4645-944e-d12019affa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7942e09b-b2e2-4464-a878-1517b877d31b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0c55be-42df-4423-a0f5-002c9630688d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459dd758-3390-44bb-9d85-4b53f810a424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683babf5-a0da-4e6b-85b2-1f50571f5a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d77909a-342a-45d3-9fd4-cbd2410a2111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2445aff-a207-4975-bff8-b542ecd8c690",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49605f54-a6c4-4ca0-a415-aedd25f041a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928f39fb-f472-4536-acec-a2faa5bf829f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720d557d-7d3d-4808-a098-d045d293adb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2a1634-0d46-4d2c-b26c-8f58f9432b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0761c34d-5f9d-4aa5-9bf4-a7b9854d83f5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72385e1-9b99-4d65-ac9d-4fe2c72ab04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f44931-e821-49ca-8fcf-eb1073b53b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0828eb48-d4bb-40cd-91a5-61e435ba0501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a2325c-d166-41a5-ad37-fdd7c95ffd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25aa3a4-a21b-46b7-b90e-6c3b3a16cf0d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c69b2a0-61ff-44ae-bc72-aa08e3a2c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef968ce9-f448-441b-a94f-883cd1841ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c8eb6f-af2f-4900-b57c-b41a4db4a2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e1a814-a544-46cf-8e78-85f0c20cf29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9d0081-26c1-472a-8a69-a0614288d145",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6542a51a-91b6-4e2b-9d02-27ba5b291dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadd6279-fee7-47e8-9928-165d290068f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6955a78b-fc8c-4c35-a36b-94ad1ae3838b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82643fab-5d79-4bf4-b50d-6bce4d56dc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e1b368-f663-488c-8484-fef93edd85fd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44457f8-55e0-48e7-acf4-6fb8556afe31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8525ad9-597c-425d-99db-fa2a8b0a1669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14707dba-162d-442a-9888-78fbf2751d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c319e3bf-c2da-41dc-b4e6-67f192b6ecee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ded50e1-4930-445e-a906-1c63b15c08e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809c54fc-2e9b-4758-a9c7-ea9250083fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ad2251-cab6-44b7-86f2-c1ae55431465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006b0a0f-f2cf-45e9-855c-1b5a08a50abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d199364-afa1-4032-a3b0-170fdc5f21a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e173593-d8a2-47b9-9525-710871bc4292",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692b3387-7aa6-4f5f-8739-d34ef91c8d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca69fb7-2f65-4d4d-abd7-f2fd54063db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bea901-2676-424b-aa12-b6e91e0e3b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1feee51-1e0a-40f1-bd20-26d0341cb8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689fdd8d-0870-451d-bce4-0e9c7948d2c7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f8fffc-f65d-467e-980c-907233f86b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edeec2a-c085-43d1-a0ce-73399efdf784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dccbc8f-80fc-4902-9075-a621c833009b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a662dd1-6654-4da3-a301-04126d1abc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730840d5-fba7-401e-82cb-ef57b8de5181",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d306e52-6609-4d26-a549-94f72d4c3632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f84cb5-d183-4f15-98ed-56be74e113a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85c0d3d-41e8-4499-bdeb-a6dff1f64383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f767afc-2d62-4ceb-a159-5ce36166b98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6896f53d-3773-4433-906e-b73efbaffb86",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d09020-faa0-4f65-a60c-e2440dd8f521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485f827-a821-4403-b0f3-92754628f1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b44b75-223c-4853-84f2-50403bc9cdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58281ee-903d-4083-ac96-f38962448ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f950ab-87c3-48e3-b210-ff00b041bd01",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5241d09a-6483-4482-8473-101b11a1e102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c954cb55-572c-446e-9c5b-82d2868ab19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c345f84e-8175-49a8-b2a1-78f005e01c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e90779c-e9e0-446e-b655-c1541a31cf2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3ee452-7cea-4ebe-973b-ed49355116a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7d1867-279b-496f-95e4-f444386210bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398d23bd-1169-41e8-9600-654ad88b43de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afa0d01-7c53-44bf-88ff-ee5fe6b09b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b22c668-4dbb-48e8-ae4a-3b0504ddc7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc5997d-ef8a-4352-9679-461947497072",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55187d1e-6714-49c5-a2de-5aae2414edb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc128472-f933-4ba1-a00d-2e78ae2c3c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f62dd9d-0243-4d81-9766-8b2ac9d37057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286a5cba-f154-4d2f-835b-abe08dd2ad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb2a4e6-1dae-411b-b5d9-ffec3dda7ab3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47a3dcf-8a3f-4504-b92b-08b52e1ff0a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283f288a-23de-41ec-bb1d-c39a52197f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ffcf4a-fe0b-4b2b-9c0b-b104fd89466b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ec4033-cf69-420e-9db5-15aa05e2827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa29459-ea40-4844-a5e6-faf4e4609c1c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b570b98d-c19f-4529-a34d-447d1c73098d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f24ba6a-c3d4-4335-9c10-9a168eb93db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09d8839-7301-47b8-acd0-dc69849bba99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2677db7a-cf06-479d-9a16-747a11e2570f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcedacf-15b9-4cce-bfbb-6357666a20d5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8330c72a-958d-43e5-985e-58f01597a3c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa72bb2-6cb1-4d9f-9cb1-5ad8fbb71f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6bc892-5376-45dd-8e03-a2313c0a21f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a837e840-6c14-408a-8494-bc875abeabbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee78cae8-d0ef-4336-8553-3c7810ebf9ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaa4f84-2a3f-4bdd-8ab2-989154f80214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890790bf-eca5-4321-99fd-07f1625b5296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc92252-03fa-4a57-a9cd-2341b2d2e76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e5a118-a19d-420a-a2e3-80aa5464887e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6745e18e-3064-4cf1-8268-4d443084f485",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de3d127-b377-4096-bac0-fda64090f224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6986bd57-e958-49a3-ae27-966279dfa553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac21e80e-dc05-4c51-a13c-833a88d9541c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202f0bbb-fbcd-4656-88f9-08ce694f252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb16d06-2c98-4c2f-9744-dca1348e8983",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e183031-49f6-45e7-aef4-b949196b60fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a307e5-f65e-4e37-9309-87f9221a7e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402ca893-0295-49cd-b0f0-8b06f55caccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c11cfff-036f-4677-92c5-0643bcbfc9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8c367b-8dda-4e44-bd4e-d813ae9fa944",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c04725-bb57-4e89-a26e-94db6f87cfba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8143eb17-85dc-4548-8ed5-7114a5ae6a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab80aee1-dbc5-4b69-8a65-6b101270347b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e497cbc7-78d1-4614-a32d-c4a8cc5db139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e85c11-e50a-4d77-ace8-557201a5621e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad35446-5b5d-43b5-9633-d6feacd14bef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd39511a-ccb9-4827-a3b8-d6e01797c1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd2fb1-469d-4249-b317-0cfdf4dacb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4268816f-58cc-44fa-b160-7d22f2166530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a026a3-9c3b-4f81-9a19-441a5299f49a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8197285d-0efa-4595-bcce-1dffa50f8be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9681988-894e-4698-b2a8-27ce051d8f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64188ec-6cce-4fbe-8027-4a3c15a31b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95728530-8cd6-4340-aa66-fdeec6ef74f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ec9c1e-4e3d-4a75-bd85-b768a253a8b2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54024b6-4eb6-48de-8674-7c1eabbfed8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4070767c-4ddd-4722-ae18-6e3b0aa09e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cc8f69-010a-41b1-8d6c-854f7cddb539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488a89a6-f4d3-4f0d-bb23-976c7debd866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d192da1b-415c-4312-ab8a-658b71b939e7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d918f2b7-07a5-4345-bc22-6e6b6fd0aaed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5341f3b8-53de-4b12-b88f-c016f3a27c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5698c2f8-8853-4174-aa93-60cae9697c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c49a89d-6589-495e-8aa7-788d81dfb4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f22c77-3f5d-44e3-9912-ef810e066782",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc466ed-f021-4618-bb9d-1d8530c91ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32cc022d-db57-40c2-be66-f83ce595ac9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30ee444-4a8d-4eda-b6ca-62cb9cb565c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f7eead-4664-49b8-8a63-d8319e31b596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb290e47-2597-4c69-93ae-a4695df31750",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4499bc49-b0b2-48c1-8c60-ce7041dbf0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08711e71-7228-41ee-92cc-467832bd9d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3e03ad-618b-441b-bb3c-869c4250a89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad82819-ce7a-49fc-898a-7d8ca0ead2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e371df3e-bed2-4d1a-92d9-92ed256b516e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73dc6ae-cbd1-475a-bfcc-48bc3968375d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b5b2ef-6390-45cc-93e2-0b7e9ec8f8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0826532-11ef-4eac-b259-64e292bb41e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5ac90a-2be1-407e-8bd0-d8a37667f4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f10dff-1ebc-4f22-8923-1ea552f1c684",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa09c68-82d8-45f9-aafd-563e354334bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c079e73-3f39-4050-bb74-6991b29f4819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169b7a03-b43c-45f5-9199-08a476eb9303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f0ba1-be0b-4550-8839-f0bade038438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e30dee-4e69-446b-af2e-7f2aa8303dfc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aff1cbd-75f2-4d79-8295-10d97b0c0981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13e9bef-ca88-43c2-8caa-7ba712f07a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1ba167-35c4-4357-a463-88f4c32eb607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b603457-5924-4819-80a0-82ac22876bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e392b509-e697-4681-8dd9-069f55e9cc19",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3c4c12-f2cf-4eda-9ff0-d7c77ea552ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "854900f9-1888-483a-ac14-6be7a3ec40d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf94db-463a-4daa-9f8a-16e41192d8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a03dcf-6d03-4854-89c4-c0fa80c4aa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7f3aa-98f0-497c-978c-706da3dd8615",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ac4304-0d93-4bf7-a6f7-192a18d7b0a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d53ee7c-ef29-452a-972c-ee18e865b6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19eacdec-ee6e-4977-8dbe-46f61909ce29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab40cf4e-87a4-4eee-baa5-f63bb15efdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0a8d9f-1a94-48dc-aaca-dbb4ac2f3342",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead543a0-fbce-4f69-9ee2-2910ed40ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f278c27d-5a62-4c12-862a-a8048393407e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fa5795-4a5e-4585-9fec-dbc813a4511b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf5806d-34b8-4561-a06b-b6b1bad75101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e321193-a369-45f5-966b-e19f80b40c15",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5c3700-d933-4261-b9a5-cb8f20323ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a868e0e-2fa6-4c2f-b34d-a70ab2883ce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe014039-ac90-490a-bc38-5c06776071b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5633d5c1-a8e1-4f78-b471-10be01a76fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de92357-8c6d-4d30-9252-2011d82cb402",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b32d1c3-21e8-47c2-b0f7-2d7f759401cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea27258b-6b6c-4b34-91cc-36e3ad760450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd31011-fb01-4633-bdbf-0aa342525656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d045969-b36b-4350-bdc9-c6c219567e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bce1287-6ec0-4c7e-bcab-bf5f4b66ed00",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462d9014-6268-4261-b264-67176dbc47c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bde595b-26fc-42c5-a67e-260cc3c50716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a0ef52-2038-4b1d-9c2b-283d6e5d94d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6998c9a-786f-4ccd-97c2-9835f57eb55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7767da-d220-405e-a1e6-eb0863449a0b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a219a1d9-e5d0-4b94-8c35-5e1adae4de72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1910c427-2ce7-402b-896c-381bd7ae88f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cd9be9-424d-4ffe-be22-1b6e8636fe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1027e8-9002-45b9-a2cc-1ea828da21ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21be4b66-57a4-4dae-82b0-c5481c849af4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8f8b38-5c57-4cd4-9117-727d0436ea83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0d7678-e4c5-4212-92da-c0b8a488f856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a1f8e9-7ed1-4e94-a0c4-d024f78255ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b7e788-bbe5-4a5b-90ad-62448af3304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256519c6-3715-40fa-b073-1076a147f61a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec3be96-859d-446d-b9e6-df9ba1c94da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7c07f5-92aa-4baf-af17-797deaab01db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c2d491-2063-4e4e-b17f-540a315d38fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890222fe-7ccb-4084-8737-4433721b4d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ee8bee-3027-4735-8b22-7b07dceb0c54",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5999f000-47ff-497b-afe1-1697a2837b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4d8e826-01b9-4a5e-8452-ad4f30300532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96297b6e-658a-479a-8b01-174e29b4e60b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c97d76-c220-4b41-b8c2-9770401c2bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b049e649-e894-47f7-aa01-c50adb5c90aa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223f3e47-5330-442f-b44d-16c4a269f368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78bdf711-4abf-400e-b9c5-f709241e10ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a409afa7-932c-4a9a-ab56-7c6e6d913bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716d627d-6701-44dd-9dfd-983dabf05cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf046ec7-3ad4-414b-be1d-f261d51c4319",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc2959d-7a27-41a2-a951-69c0e98dcc08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895a6edf-7cc6-4fe1-abf7-4a28b687e157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11c2985-8521-4797-911a-042089355992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7184f8a-6c88-4613-9696-baabb8e2c4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30095f94-d393-4422-a03b-af7624bf9ca4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f451e1b-cb81-4085-b05e-87ca4215ffa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c49f62-ba33-4dfc-af0f-a9e1a552477d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964e05e8-bd68-40f2-b085-eed87a1e7b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dc0803-f32f-4040-a362-b5530cb78e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f47273c-9908-4e70-8744-1d467b086f7f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc59c61-4328-4ffc-9b89-d51dc48fe51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed6637d-4b89-4c6c-8fbb-fe17b87eb112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd086458-7836-4a59-8681-1624eb7db53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3070d8b3-f158-411f-98bb-f97fef849cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1761be-bf52-4525-8d70-bf38e4f92719",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0e5b36-2fc3-4c46-8d7b-fa07ab587370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb65765-6a1d-4cc6-b636-3da3f72335bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5ac3a8-606c-49cf-9dc3-12ef5b3be3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081737aa-14e3-42ae-9818-4c183a9c1b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34db8c0-ed38-4a41-9c73-5d8c8b7e9331",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be6a32b-62fe-48fd-be52-6324d0efc193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470d8a24-0bca-42e3-afee-67d6eaebd1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47475e80-2918-4107-8984-d20b43fecb89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5707a8-e202-4056-bc98-cf0463643c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68065a12-6c69-45f5-9ee1-f993966a03f5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f459d5-2508-42c6-a40b-2d6e5d4185a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8791dc22-557d-4e6e-ad09-746b0ea6ab4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baac19a-e9cd-4cca-b73d-fb6ed9f44955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6ea6c8-f056-4445-b3a4-21615fae4c76"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1f72dbb-9cd2-4a5b-bafe-aeb87590e2c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ee9adc2-d2d5-45ba-8203-0d91a46c36d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10a48614-4f5b-428e-ad59-d55916076e1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0392df1-8a18-4114-ba6a-9f30ea7a79cc"
                    }
                  }
                ]
              },
              {
                "id": "5b6f7e1f-2d0b-4ef9-b19a-65ab3cd72973",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ba3d9ac-8e48-497b-b83d-2884bc7850ce",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376feb89-5244-482f-ae17-af32d0200c2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c4b50d81-f63a-4ac7-b649-17dde7a0e272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f32a2e-0a96-4d6c-b910-54785b894c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c0f9a74-8fdf-40cd-b889-c32bb4ea4c28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8d5db1e-8f07-41f8-affe-75589c8da71e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf0d2035-2fcd-4db5-b6fd-d0f8cea523c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e789529-9aea-40bf-9871-1916b2026ec8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "336217e6-2064-4772-8cf2-b99c3bfda3e8"
                    }
                  }
                ]
              },
              {
                "id": "e1b1aac5-47c2-47fc-ae28-a59094aec1fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2f8030c4-4104-4f14-8bb1-d59f0a786b03",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0d1010-bf1d-4d79-896a-817eec56340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4a75eabc-8565-487e-a817-0f0da2f0905b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630a2cbc-1374-4ca7-96cf-eb5c6cfe6944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a304c2-0163-4825-ba30-b28a23cf94e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e5cbc097-9206-4b48-8b9d-452965ae22fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0656dba7-a568-4a21-8a51-6d3b4cc6f3f0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3702e84b-3f48-4911-835b-3bf867b64a3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "447aae86-fcda-4adb-b1b1-b7c81ae2012b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a01fd774-370e-4a11-9ee9-c531a629e899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5333dec-a141-479f-b143-7f0869034bc3"
                    }
                  }
                ]
              },
              {
                "id": "163313ad-8a8a-47d7-9dcb-3d8af3cea8df",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a4600cf-ebcd-48ca-abbb-52f29657e403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b88bd9ca-3cf2-4d37-9b2d-92bc58338656"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4832978d-c86c-48f5-9728-6b416b9e1da8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "371a607a-0891-4a7d-84d3-cb94e42edc8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02573ea7-a742-49b4-abae-602577b0734a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2329f51f-acc1-48a2-88db-03827b00d96a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d001457a-87bd-408f-bad1-4a137a25e5de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35128b32-03d6-42e4-82c2-fe0e162679e7"
            }
          }
        ]
      },
      {
        "id": "d38570b1-ec5e-4360-ae6d-b175ec9241f0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bd06829d-b603-4216-8ed1-c23ebe52c381",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b234b55-e1ff-4367-8335-22496c25e192",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6a08f6-907d-44d5-829b-c4b43febc017",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29f8599-21a4-4548-89da-7c67fc357149",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4587aee8-03d8-413a-9b38-53832d1a7d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e0a345-541d-414e-b15d-3d4003475411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3937eadf-455e-4b4e-ab1b-e31959b730b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5c2d2ec-3a06-45b4-bd1f-a06f4480b673",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b01f8fd7-942a-472a-9e52-fba555f63076"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "850ff138-bb74-49cc-a321-601ff5bf8db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85377a2b-e06c-414b-8b3b-f3ce00bc7f2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad06d4f1-8eb2-4cf0-950e-9f526645cc48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a0e7b204-2a02-422c-8a92-178b4be33dfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23e546d5-0577-4610-920a-32a1161c4da9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc9f4453-ffe2-4fab-8683-672e862af8b3"
            }
          }
        ]
      },
      {
        "id": "29cf9426-0ce1-441d-b4cf-1b45b2e2a817",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "618073ed-0992-40f5-9053-a904bdedb3ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e8f0dff-9fb9-457c-9e0d-4deaa37061d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1b6656a-cd79-40a3-b478-a5bc10be34f8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6283887e-3409-407f-8148-ad83bee54b7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e9f9640-1de5-4e88-b521-a93c6caf6985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfeab29-e9c0-4609-8288-d1e8aeb8a015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0e9ec4e-38e2-4fd7-8063-528f75f8c418"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0751c38f-7ac9-42be-8f91-3208753aeac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3a332f9-8916-4259-b743-4a293f8a09c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c5321a0-568e-4191-a50a-a9129e3b7b5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fefab8b-b80d-40fc-9452-744108de64c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7a8c149-a739-4dba-a607-b2b6750d96b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a866727a-952c-4293-aa5a-188d218dc658"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52be9d62-0c80-4033-a535-46c58d5f1428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0087eebe-a8e5-4023-a27a-69aaf0877156"
            }
          }
        ]
      },
      {
        "id": "7c8b48c7-93bd-474b-88c2-92b5337101fd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "845b3427-e369-42b2-8973-944712e8062c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56dc115c-0875-4a74-a882-0ec3948af7b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05be62ba-2d27-4304-b2f9-54a88dfd88d8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec898d6-2c96-45cb-b157-0ab02cfd36e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88c45047-789b-43a0-9d85-82a8c3f7c4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8c4d1c-ce4b-48b9-8e20-e4a8a736e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04fa9580-9aff-4779-abf9-f5a6da92fd49"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e9078c4-4ffc-4411-9ded-f1fbf09b5b62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "747ec053-4ea8-4f2f-957e-c107c557e88d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0956704b-8edd-4296-b01c-7cfbcdd207c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1f3024d-a67f-4d0c-aecb-6d051c3147c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "726f400e-c7c7-4b0a-a9c5-5d4b18a31f37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf759322-c631-40d3-accd-60e0a3f83fd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c272c2df-577b-40af-8c3e-62a13bbd4550",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af69ce26-1806-4615-9d87-4f50030873f7"
            }
          }
        ]
      },
      {
        "id": "ff2efa74-9357-4db4-9dce-4d7a27e0d010",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f66e7a86-1558-4e42-9c17-59e19765bf34",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d0fd096-e38d-4600-b5ce-0177d0fd4a83",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d082b2b1-a2d2-4cfa-8fb3-bb63d812438c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9de76eba-bb24-4031-9788-269e95350e61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c2b39b4-ee32-46bf-acc7-06593444e8ca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.11507936507934,
      "responseMin": 3,
      "responseMax": 8395,
      "responseSd": 754.4335509430149,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714955804945,
      "completed": 1714955841373
    },
    "executions": [
      {
        "id": "d052fc64-fcf0-4095-99c2-897831b4cc88",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1fe996e7-4e00-48dc-8170-733ed4264d0c",
          "httpRequestId": "091bfb38-999e-4a9a-8bc6-8f03716db3b6"
        },
        "item": {
          "id": "d052fc64-fcf0-4095-99c2-897831b4cc88",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bfe4e59b-539a-456f-8ef2-c42bfa8f5bce",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "dc7c4fc8-6d27-455c-954a-e200adeef6f3",
        "cursor": {
          "ref": "a2b219d5-96ae-4720-b1f3-deae99395213",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ad8e5f9c-c94d-47a5-83fc-ccadd3bcb604"
        },
        "item": {
          "id": "dc7c4fc8-6d27-455c-954a-e200adeef6f3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8a6902d9-84bf-408a-8000-16857514d5f8",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0ee594d1-9f09-443c-ad85-3d8a8372bf24",
        "cursor": {
          "ref": "7c1d7e9e-2c73-4110-b95d-50e9ac336978",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "45d01db9-d64f-4e8b-a568-9d75be5d1a3b"
        },
        "item": {
          "id": "0ee594d1-9f09-443c-ad85-3d8a8372bf24",
          "name": "did_json"
        },
        "response": {
          "id": "16aa27ab-7e2d-4ad5-b1ea-8267981ca063",
          "status": "OK",
          "code": 200,
          "responseTime": 236,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebce1cea-f60a-462e-b90f-7e17801573e1",
        "cursor": {
          "ref": "436e654a-12dc-49a0-9bd6-ee03faf20b30",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bff7a3d7-51e8-46d5-a655-4503160507e1"
        },
        "item": {
          "id": "ebce1cea-f60a-462e-b90f-7e17801573e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "313b66fc-2a07-4c6e-8236-be311a361ccf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 282,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebce1cea-f60a-462e-b90f-7e17801573e1",
        "cursor": {
          "ref": "436e654a-12dc-49a0-9bd6-ee03faf20b30",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bff7a3d7-51e8-46d5-a655-4503160507e1"
        },
        "item": {
          "id": "ebce1cea-f60a-462e-b90f-7e17801573e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "313b66fc-2a07-4c6e-8236-be311a361ccf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 282,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07ace8-a5f0-49e1-9f61-d5e7391b82e6",
        "cursor": {
          "ref": "99cd4c22-efd1-4fe0-b44f-835ec4423593",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "924d3b52-cf52-4020-83b2-4d49312313c7"
        },
        "item": {
          "id": "0b07ace8-a5f0-49e1-9f61-d5e7391b82e6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b9a89167-b7dc-4542-bc49-aa58779dbe1d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181524f8-1ca4-4024-b8e7-9ee1c3ffc745",
        "cursor": {
          "ref": "5205e449-8679-4812-92e1-db6948ea5e1e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee1bf7fd-eb3d-4b45-8bdf-623986198fd0"
        },
        "item": {
          "id": "181524f8-1ca4-4024-b8e7-9ee1c3ffc745",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "86468cc5-c3bf-4287-9073-303aa3ebd100",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e051000-5afc-4c5d-9de5-3a0b1c7b1eb9",
        "cursor": {
          "ref": "6c353f77-f2a0-4639-8056-3c077f48d4ab",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a7441f2-689c-4876-a55c-285cad9568a9"
        },
        "item": {
          "id": "6e051000-5afc-4c5d-9de5-3a0b1c7b1eb9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "243f0716-9b3f-4552-9140-2a84dbd82bef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19c2f10-b04c-49e8-aac7-80b76373096a",
        "cursor": {
          "ref": "a906e20c-e9e3-4c1f-81f0-ee941fdc8d7b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "654d3153-9766-4430-9e9c-068f15072c75"
        },
        "item": {
          "id": "f19c2f10-b04c-49e8-aac7-80b76373096a",
          "name": "identifiers"
        },
        "response": {
          "id": "ff435ebd-35ab-4a3c-83c1-364bcd46abde",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f660def2-8743-4e98-85cb-f15e671f5127",
        "cursor": {
          "ref": "ecd429c6-db3a-4b31-9819-b3ea17d4438c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d9612718-a850-4bc6-98ac-433ece63ed57"
        },
        "item": {
          "id": "f660def2-8743-4e98-85cb-f15e671f5127",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a9b998d-3f27-42d5-a141-6ccf3869bb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd214423-8711-4013-b443-040eb99d70e2",
        "cursor": {
          "ref": "e1da9e2e-80d9-4781-be31-378d6f5cab7b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e3fcb41-f503-4d4b-9f90-b4c8d38d0ed7"
        },
        "item": {
          "id": "dd214423-8711-4013-b443-040eb99d70e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5c5428db-fd99-4195-ba59-113f21b6aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257cc0c1-6b17-4dfb-8d7f-74059802f2e7",
        "cursor": {
          "ref": "996e05bd-2249-41e6-8e54-a7ddcbd64ac4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7add2ba2-a7e9-4374-a489-806aebe5b9ab"
        },
        "item": {
          "id": "257cc0c1-6b17-4dfb-8d7f-74059802f2e7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e35ebff-683a-49b9-baf9-2d593534d9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095e3a41-f671-4a70-8d08-b190bf04d88a",
        "cursor": {
          "ref": "267248a8-adb0-45bd-a92e-64e926405e10",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e64cf1df-92f8-464c-8d67-5fb48ace67d0"
        },
        "item": {
          "id": "095e3a41-f671-4a70-8d08-b190bf04d88a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a7324334-7888-438f-990c-ea554475cb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875edb3b-7f93-44ac-8ba5-430a650e448b",
        "cursor": {
          "ref": "1567c807-7019-45c8-aa0a-d0a8370c6f55",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "41198469-3ef3-4c7f-8f97-f9a29c98c784"
        },
        "item": {
          "id": "875edb3b-7f93-44ac-8ba5-430a650e448b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3531356a-dd31-437e-bffa-610d69b0b2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf94f12-e567-48e6-aacf-ff3fe7649d4f",
        "cursor": {
          "ref": "b63f5878-b61c-4494-a5ff-9781e809ed37",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8e819263-f2b0-44f7-bd05-66c0cdc560d3"
        },
        "item": {
          "id": "abf94f12-e567-48e6-aacf-ff3fe7649d4f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6e78b2a6-d7a6-438d-8974-02a24a67b5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68d3ac3-186f-4430-ab38-5637af0b299c",
        "cursor": {
          "ref": "607f72ac-2e90-43bb-b882-27443f2cf994",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d683d768-55a4-44a1-82d1-1e15e2be1991"
        },
        "item": {
          "id": "a68d3ac3-186f-4430-ab38-5637af0b299c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b4709bbf-2bdc-41b4-ab91-785a9a64abba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7677417d-143e-46d8-b7cd-a7627d197d92",
        "cursor": {
          "ref": "6b61d932-3c17-4620-a233-721c9cd6d0c9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "89a8c35f-b9a0-4387-b4fc-4da344b06137"
        },
        "item": {
          "id": "7677417d-143e-46d8-b7cd-a7627d197d92",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "508c7854-4f1d-43f1-a9c2-d1c2f22754bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2b7263-8c8c-4cfd-8d72-f64b9202eb81",
        "cursor": {
          "ref": "e68ba0a1-6147-4b6b-b6ff-100574ae6aa4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cbc6072c-f246-4ceb-8d09-e13b1f4a9485"
        },
        "item": {
          "id": "9c2b7263-8c8c-4cfd-8d72-f64b9202eb81",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ad288fd1-daf2-4d2b-bd79-216f53a48909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21c7d21-122b-4efd-8373-ee37fb055039",
        "cursor": {
          "ref": "f86e0634-5b7d-4296-b354-03fd35f406ba",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d4144321-f31b-4921-9a2b-a649070609a8"
        },
        "item": {
          "id": "d21c7d21-122b-4efd-8373-ee37fb055039",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cd75bd58-e8d8-40da-af00-f037b783f019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acd2f46-b3a7-4590-99df-d4556fd70a72",
        "cursor": {
          "ref": "c4c462d0-a4db-433f-a9ec-fdaa4b87c8fe",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "db344d3d-8054-4b3d-8e5f-96be12e3d485"
        },
        "item": {
          "id": "1acd2f46-b3a7-4590-99df-d4556fd70a72",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "783a7992-de19-4ba1-b61e-0b49b4f6ea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eb4d76-a031-4c7e-9d2c-1a2fcd3210c0",
        "cursor": {
          "ref": "7090e298-40d4-4e7a-bf5f-4ba4fee9df0e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f778e401-aff8-4114-b1c6-d2eb3c52666d"
        },
        "item": {
          "id": "74eb4d76-a031-4c7e-9d2c-1a2fcd3210c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2acb47cc-91ee-46a2-9714-3fe905b66906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913ac66-e404-4615-838e-14590387ca81",
        "cursor": {
          "ref": "6a970554-c37e-420d-8cc5-e50d021420be",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dd6a4ff8-1d53-4a7b-8fd5-446b0e3223b3"
        },
        "item": {
          "id": "5913ac66-e404-4615-838e-14590387ca81",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9a0850af-d1e2-4648-a084-3d14d605e291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5205fd8-9053-417a-ae57-862270b34914",
        "cursor": {
          "ref": "5117a85a-a3ae-4e43-89f1-5f6a6d5e1fcb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "372d9e10-f97f-4460-9244-9658ee537a4f"
        },
        "item": {
          "id": "e5205fd8-9053-417a-ae57-862270b34914",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "706e684b-c03f-46a4-9a9c-894379c5c560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f4244c-77eb-496c-81ea-a0898ede4916",
        "cursor": {
          "ref": "0a9ddcb9-871f-4168-a4a8-174ae8815be5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f20c6361-be75-4f52-a894-ad6e2f39b6b5"
        },
        "item": {
          "id": "c6f4244c-77eb-496c-81ea-a0898ede4916",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "52813259-2ce9-4c95-83d9-96a226d55e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdca9c27-73a7-40b7-b05a-9061b683bb3b",
        "cursor": {
          "ref": "d2dd3726-2cb1-4a90-aae6-7e085250e64d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1bb7b556-46cc-42a9-a2d0-e7c358996f25"
        },
        "item": {
          "id": "cdca9c27-73a7-40b7-b05a-9061b683bb3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba0fae01-1014-4e4e-b297-afeec745ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84116a9d-60f5-48ca-9285-8c14426a84a3",
        "cursor": {
          "ref": "b07015f9-3509-4a3d-a7da-71c4e6d16b05",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bb7f12e1-a892-472d-b8e5-9d90c40e9475"
        },
        "item": {
          "id": "84116a9d-60f5-48ca-9285-8c14426a84a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c89d7611-f291-441c-becb-543fce6bc04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead450d7-8f86-453a-8a4a-ca5ff855fe0c",
        "cursor": {
          "ref": "0f255355-cb79-4efa-8b0e-e8542f2b0d8a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1369e96f-e196-46fa-8c3b-cdf57fd81b65"
        },
        "item": {
          "id": "ead450d7-8f86-453a-8a4a-ca5ff855fe0c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a328f1c6-b375-4a69-8b56-56e4c507100d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac22117-f94e-4250-8a05-714061ff8f58",
        "cursor": {
          "ref": "99892043-e21a-4d09-ba89-3aa678f3be4e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8fb6a87d-3385-4e3d-9877-52c68f0d8e1e"
        },
        "item": {
          "id": "2ac22117-f94e-4250-8a05-714061ff8f58",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e4dbbd2f-302b-4961-b7e4-6fa5894b604f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0dcf8f-65d3-4511-ba70-0a7ddbe1959e",
        "cursor": {
          "ref": "29537740-55a0-4b97-9262-92c94f04e143",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d77e36fc-5b78-4eca-93b8-e3ffd81ccd47"
        },
        "item": {
          "id": "df0dcf8f-65d3-4511-ba70-0a7ddbe1959e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dbe35af2-c3ae-402c-9539-4b48f66f34ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61735f68-afde-4715-8adc-9ad0ee3e9dc8",
        "cursor": {
          "ref": "7dd559d3-4d4f-47dc-b5e4-6319fd55d4f9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dbf63623-b39e-49da-97fc-2926004fd9fa"
        },
        "item": {
          "id": "61735f68-afde-4715-8adc-9ad0ee3e9dc8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8633b9a9-4636-474d-8ef4-d791443a1446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70674807-df0a-4385-b56c-a2367971cb5a",
        "cursor": {
          "ref": "23ea93fa-1389-460d-a188-8941c238f4a2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b70784bc-141f-4fe4-be75-9f8e00f4e004"
        },
        "item": {
          "id": "70674807-df0a-4385-b56c-a2367971cb5a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "72d8d1cf-e5ba-412a-862d-5892fb392d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9752be6b-2a33-420a-90c9-b9d78ca4e87b",
        "cursor": {
          "ref": "a0e609c1-6b3d-49bc-923c-e1d94e179abb",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0c04b8b5-09f4-4338-9dee-1066c7068c21"
        },
        "item": {
          "id": "9752be6b-2a33-420a-90c9-b9d78ca4e87b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6167d363-e5d3-4892-bb2b-c72794bdb990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb473c98-52d1-4499-b0fb-3e9405c0d68d",
        "cursor": {
          "ref": "c28de9c7-0752-415a-b5ff-16b2e456474c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "159d42e3-a086-42ba-99cb-ed4c7ce7e35b"
        },
        "item": {
          "id": "bb473c98-52d1-4499-b0fb-3e9405c0d68d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2892f05d-381c-4a26-90d2-ec1a268bb741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eed892-cdc1-4da1-9622-c738eb8f7761",
        "cursor": {
          "ref": "62feaedb-c404-434a-b2f6-0755e5e49471",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "904eff5d-7f4b-4978-a4e2-b1d21d049d7f"
        },
        "item": {
          "id": "60eed892-cdc1-4da1-9622-c738eb8f7761",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df63eb12-61bd-4c03-9113-45d63ff0a029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6423d4-f095-4484-8cdc-b6001785c7a4",
        "cursor": {
          "ref": "18d8d712-5262-439f-bff6-06ca6f9d788e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "658a701c-3337-479d-aad3-b3f15c9acdef"
        },
        "item": {
          "id": "ba6423d4-f095-4484-8cdc-b6001785c7a4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4a139578-c05e-4ad4-b69d-0c2470c5b969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabf7e32-24c5-48cb-9755-e21fffad9e69",
        "cursor": {
          "ref": "6b6f17b9-b852-424b-bd19-16ef49396fab",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "965d9559-feda-4bcb-8500-a92f96bc33e5"
        },
        "item": {
          "id": "cabf7e32-24c5-48cb-9755-e21fffad9e69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "058d9dd5-d1ee-4914-8fb0-22ddd7de0b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edb1a0e-30e6-465c-b22a-4cb6632b6c59",
        "cursor": {
          "ref": "80959e74-58aa-4950-84a9-df5f671895f7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "49e841a5-4775-4f52-b2c3-0b7631541d45"
        },
        "item": {
          "id": "3edb1a0e-30e6-465c-b22a-4cb6632b6c59",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "caca82ce-5d92-41a0-81f8-96fc9d98663d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7027e0d-9bf9-40a7-ba8f-8f541d840256",
        "cursor": {
          "ref": "39d26a25-ebf2-4804-bc9f-a71973f526fd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eb145be6-a377-4dcf-a5a1-0e481bb31a3c"
        },
        "item": {
          "id": "e7027e0d-9bf9-40a7-ba8f-8f541d840256",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b3f45ee3-05f0-448c-983d-a00394f789fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce96cb6a-9727-4363-a02d-5d811eecd48a",
        "cursor": {
          "ref": "5ea47469-f21d-4f19-bcab-6838a0357613",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3f779692-3043-4611-9292-3172fcb7c60c"
        },
        "item": {
          "id": "ce96cb6a-9727-4363-a02d-5d811eecd48a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "00b5e6ea-b991-4e02-b72c-40711d08abc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e17fde-33aa-41d8-82b6-5f3792ca3a78",
        "cursor": {
          "ref": "47840d76-89f5-4675-9e66-3de84ff8bbc3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3fd92117-d538-44c8-9c7e-08a55c1e4164"
        },
        "item": {
          "id": "a7e17fde-33aa-41d8-82b6-5f3792ca3a78",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "592dc971-d317-4ab9-b838-32244892cd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d55a663-b261-4c45-a7ab-cc765699d057",
        "cursor": {
          "ref": "6b7b25a4-2dde-4f2b-b29c-e745e711d0c0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b243a9a3-4c98-485d-97c1-21380bdca44a"
        },
        "item": {
          "id": "0d55a663-b261-4c45-a7ab-cc765699d057",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "99187024-4877-4894-a153-ad643a362b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3d5c58-a51a-49c9-8251-acb3bd78c9e8",
        "cursor": {
          "ref": "234012e6-1725-4627-b95d-a4407c1ba008",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "52bfcb72-a7aa-41ad-a1d4-57bcf6ecee95"
        },
        "item": {
          "id": "2b3d5c58-a51a-49c9-8251-acb3bd78c9e8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4bded045-78f8-4a73-8927-bfea011e70c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef66dd2-d1a4-474a-b8e5-ce87d0fe675f",
        "cursor": {
          "ref": "dd99d090-7886-4e1d-bf7f-35e9fbbb0b89",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "98b5da43-2a2c-4398-8c7c-7757b793a35b"
        },
        "item": {
          "id": "7ef66dd2-d1a4-474a-b8e5-ce87d0fe675f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "32fab4f2-c158-4c8c-9dbe-83ba8974c68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e16975-87a8-4a6a-aa09-af192c19baa2",
        "cursor": {
          "ref": "91b7e94d-248a-4a90-9505-4fbee753b55f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "141f8e56-0888-4c4a-b88e-cf521ad439c1"
        },
        "item": {
          "id": "65e16975-87a8-4a6a-aa09-af192c19baa2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e8a4645c-782c-4de2-91bf-6771bdd6cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bbbb56-741f-47c9-ae8b-eed2de0687e0",
        "cursor": {
          "ref": "6f469ba0-60b9-4a0a-b858-e33549d7b018",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7eefe264-71b4-4e20-8746-7c8399f296ea"
        },
        "item": {
          "id": "e5bbbb56-741f-47c9-ae8b-eed2de0687e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e22a3399-cf3c-4d34-8aea-f40988a4be5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aceb5c-3b37-4f0d-9695-d2af65e556de",
        "cursor": {
          "ref": "01fd88db-421f-415f-95f8-9e59dfb5f820",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "251d742a-09e3-4782-930c-c1a444644734"
        },
        "item": {
          "id": "f4aceb5c-3b37-4f0d-9695-d2af65e556de",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ec9d495a-441d-4ec6-bf86-48571ebb236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf8d24b-c7b1-4bce-a15b-9988574f9716",
        "cursor": {
          "ref": "184508bc-f1a1-4541-9ce4-c35b2ca534dd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bb6ea031-36d4-41e2-9378-8f743d42cb25"
        },
        "item": {
          "id": "fbf8d24b-c7b1-4bce-a15b-9988574f9716",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "985e2981-7eaa-4899-8808-d7957a08ee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b909a50b-3772-4c08-a056-4e64f2277c07",
        "cursor": {
          "ref": "b7181836-91c7-4509-88ba-d1b7c90a3077",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "611973a3-b30b-4a7e-b88e-26983870e0b5"
        },
        "item": {
          "id": "b909a50b-3772-4c08-a056-4e64f2277c07",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c0029e0f-cb3a-4f07-bcca-77bdc0df8c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc030de-fa06-4497-a0fe-69ed2c7dd089",
        "cursor": {
          "ref": "6038620d-d610-462f-82c2-0e4c20fd3190",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8841f1f3-983d-471c-a598-16922e951faf"
        },
        "item": {
          "id": "4cc030de-fa06-4497-a0fe-69ed2c7dd089",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6e79aea6-39eb-4ec0-b605-7cf24810b2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be2f70d-da16-48df-9104-4a8d9cef00fd",
        "cursor": {
          "ref": "5fa60d5d-e2ad-4fbc-97cf-d7d686d6ef66",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c9631662-01a9-45a2-a992-40723dedfa78"
        },
        "item": {
          "id": "9be2f70d-da16-48df-9104-4a8d9cef00fd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fcd66499-ed61-4a8e-99c3-d46f5abdf1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a9e9d-59e1-4c27-9ed9-37a861069cdb",
        "cursor": {
          "ref": "38ac99d4-fba9-4a36-9c76-2b5d66d59d42",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "79855840-596f-4500-bd73-fbe78fef76b8"
        },
        "item": {
          "id": "b36a9e9d-59e1-4c27-9ed9-37a861069cdb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4f2c1a74-79ec-433c-b5f2-680cd0359df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d7672-60d2-4285-ac0e-3c4610449685",
        "cursor": {
          "ref": "094dc9a3-4fcd-4b49-a975-734d325df03d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "90095b04-e8e3-414d-96e4-324cc999964b"
        },
        "item": {
          "id": "7c2d7672-60d2-4285-ac0e-3c4610449685",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1a739f9b-f938-46a3-8ac7-d271369c4941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44e9b49-4fa3-4b61-ac69-902be9f9e374",
        "cursor": {
          "ref": "f4506f65-88a5-4357-b49f-0e21a66f0b8c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "923630fe-ad2e-4354-a84d-c30fcca26260"
        },
        "item": {
          "id": "b44e9b49-4fa3-4b61-ac69-902be9f9e374",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c48678bc-b9b4-4819-9aa3-51edbc92a10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7f1d1e-3986-4b86-a0c3-3b136aa9a6e2",
        "cursor": {
          "ref": "3e27a3b7-4396-4102-a632-0f1296b3e482",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ae9b3106-188f-4846-8dd3-5e1aae26dcb4"
        },
        "item": {
          "id": "aa7f1d1e-3986-4b86-a0c3-3b136aa9a6e2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b11b46cd-5453-4096-8c8b-4e1df25baa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcfc768-df54-4788-b91b-4a7f86a3f4b8",
        "cursor": {
          "ref": "5b06d1a7-bc41-49bd-a77a-ff92434c5cf3",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a1d655e4-fcb6-4a2f-afa5-114e74a49cf0"
        },
        "item": {
          "id": "ffcfc768-df54-4788-b91b-4a7f86a3f4b8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5018ed19-966a-4673-b49d-09ed4856d662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4faecce-665c-4d92-84ce-6807aeb041fe",
        "cursor": {
          "ref": "3932573f-937b-4805-a309-e9d727e18421",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7c5f2e97-652b-4e16-afe7-0f1b20577d47"
        },
        "item": {
          "id": "a4faecce-665c-4d92-84ce-6807aeb041fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "520c3746-d61d-4791-a618-c24844946bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09910ee-1faf-4024-ba60-eb8fda31fe8f",
        "cursor": {
          "ref": "52162099-74e2-4380-8a79-ae18f1f51e78",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95e6fffc-e6bb-41b7-a5ae-636f1dbf4a61"
        },
        "item": {
          "id": "d09910ee-1faf-4024-ba60-eb8fda31fe8f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c1781243-a985-49f0-b3fd-e55e3fdc13e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0451f53-ab66-48f7-a903-e6df3fddd92a",
        "cursor": {
          "ref": "09b0377f-81c6-4ffd-9188-9cf78dd5aba9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f8dbc30f-0668-4a93-b921-bf0ce6a3987f"
        },
        "item": {
          "id": "a0451f53-ab66-48f7-a903-e6df3fddd92a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26549460-1043-422b-822d-286bf42eea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55836644-4487-4ec8-a905-918dd9c5b1a2",
        "cursor": {
          "ref": "64de0db9-faba-4d01-b0ec-ddce7d8be81c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "83e72626-ca14-4181-bf02-505da0dbc2a1"
        },
        "item": {
          "id": "55836644-4487-4ec8-a905-918dd9c5b1a2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "15e82d22-bd2a-48f7-8add-5b25c43996ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0a127d-e244-424f-bdff-ff3cc58adaac",
        "cursor": {
          "ref": "9f31bec4-8e4f-4270-baa6-f5fb8f9aa247",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "47d2cec2-1767-4da6-b1f0-dd42917610ba"
        },
        "item": {
          "id": "4b0a127d-e244-424f-bdff-ff3cc58adaac",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2d8611db-f0bb-427f-bd67-67739e72240b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e36434-c9b0-4429-9d2d-b5dbb907b447",
        "cursor": {
          "ref": "50f6a58d-7d2f-4af6-a75c-ca6758a6613d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4adb9d9d-f10e-4e37-80c8-2ad0c24caf77"
        },
        "item": {
          "id": "65e36434-c9b0-4429-9d2d-b5dbb907b447",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a5a3fd87-9a4f-4fd0-b00c-86b4c910a730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495365cb-cc4d-4137-8b70-0aab4209d5db",
        "cursor": {
          "ref": "9c9adef2-b509-4e8a-ae6c-93794fa556c6",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5a6281b5-929c-42c7-9fd7-ed1c7e9c97fa"
        },
        "item": {
          "id": "495365cb-cc4d-4137-8b70-0aab4209d5db",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5ab920dc-444c-42f1-bc16-03332a53ecfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabd6cec-975c-440e-a400-397984c189d1",
        "cursor": {
          "ref": "a6c7bd8f-b0b5-4883-914d-02ac2e788393",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "188d25f7-d29d-40a8-a271-786e9ecdefef"
        },
        "item": {
          "id": "cabd6cec-975c-440e-a400-397984c189d1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4f81c5de-38b4-4f22-abdb-7c3b1786d16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3926e50f-7e9f-4118-9f84-14cd268ec3b1",
        "cursor": {
          "ref": "98d81443-7e6c-470f-b6a5-ef132b9d071a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d10ef41-12eb-4e47-8f51-14450bcd2964"
        },
        "item": {
          "id": "3926e50f-7e9f-4118-9f84-14cd268ec3b1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "361357a5-4bc2-4ca4-a94f-b9a32af420d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abfcb01-a5bc-4b1f-8eed-427d9f27bfc3",
        "cursor": {
          "ref": "619e53ff-247b-4436-b2de-c588c14fd769",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4d1225ae-faf9-4626-900f-3d8bc04e6f62"
        },
        "item": {
          "id": "1abfcb01-a5bc-4b1f-8eed-427d9f27bfc3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9f2d0376-623b-4270-aabf-8f8c994cb518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5faccd1-5a5d-4629-9d5c-bb272dede8c9",
        "cursor": {
          "ref": "568de1fc-c5d9-4535-8aae-99f35a30f5bb",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "53b63f03-d8fa-4c96-86f3-e2159484781f"
        },
        "item": {
          "id": "a5faccd1-5a5d-4629-9d5c-bb272dede8c9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cf216789-c365-47af-8710-fb6cf4e8c265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b84383-5aef-4c30-a4a7-bdd400b11cf7",
        "cursor": {
          "ref": "914219c2-08e7-4e1e-8236-1015657f79e2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1af9df7a-9a46-48af-89fb-e039f2ff519f"
        },
        "item": {
          "id": "10b84383-5aef-4c30-a4a7-bdd400b11cf7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a3263fa4-210c-42c7-8fdb-6bebb880b962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86ecd6e-247d-4705-af9e-3de453886662",
        "cursor": {
          "ref": "7158619b-ed7e-4957-86bb-7dc4304cfdda",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "66930d1b-d7dc-406b-a41f-434429b68e4f"
        },
        "item": {
          "id": "d86ecd6e-247d-4705-af9e-3de453886662",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "38d0797c-5372-400e-88dc-b04debf95779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d4da30-9082-4318-8045-11db9c402b7b",
        "cursor": {
          "ref": "741b18af-138f-40b3-8624-4e6bf7e7569b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fcab88a9-cb54-4594-bdbb-c0603912c2d2"
        },
        "item": {
          "id": "b2d4da30-9082-4318-8045-11db9c402b7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3649c9f2-c538-47c3-90a5-21e37ebbae0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44593477-fe1e-4445-afc6-4314c34fe629",
        "cursor": {
          "ref": "9760866c-9123-4076-abdd-d5cf8b0e3996",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d895b05d-936b-40eb-9379-cd74e0962227"
        },
        "item": {
          "id": "44593477-fe1e-4445-afc6-4314c34fe629",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bfb48a6b-8bd0-4151-8fa1-e85fa5a09bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd206d6-152b-49c0-8532-437552254a61",
        "cursor": {
          "ref": "a029c33f-0565-40dd-874e-bff4c855a151",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "752d5013-b04c-4dec-8d3f-e4ccf56530f9"
        },
        "item": {
          "id": "8fd206d6-152b-49c0-8532-437552254a61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4cf7f958-5e72-4f3b-a25e-8d2f93eabeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6317856c-6b0e-490c-9b3a-91628306f587",
        "cursor": {
          "ref": "05566b8e-64ef-4bfb-bc2e-207646215949",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "620ae0fa-cdff-4ff6-a126-555f16e01858"
        },
        "item": {
          "id": "6317856c-6b0e-490c-9b3a-91628306f587",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b9d68d6f-41ab-46e6-9015-3f3c9a3793f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d95cd15-ce11-4a52-97c0-7204dbfb36bf",
        "cursor": {
          "ref": "4f6c9313-a50a-4731-a30c-8acc17ae5452",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9e6d8f86-13c8-4722-ace4-698081807435"
        },
        "item": {
          "id": "5d95cd15-ce11-4a52-97c0-7204dbfb36bf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5f679dfc-0df7-4947-8271-614e6cdb3b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564efa88-a662-43fa-a90b-0fdbaccd9f8f",
        "cursor": {
          "ref": "e43cee4b-28e2-4d4a-a7df-62c6d76513bb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4568753b-aa5e-4ac8-87ac-6ca54f11480d"
        },
        "item": {
          "id": "564efa88-a662-43fa-a90b-0fdbaccd9f8f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b7f04c45-c684-4a2b-b1a7-d8038705004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d57b60f-92d8-46b3-9411-8067ece3df6b",
        "cursor": {
          "ref": "c4bf50e5-d74d-43d3-8927-49a9c634f484",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f80652e4-7c4b-4e26-8f47-3452c90ee9ab"
        },
        "item": {
          "id": "3d57b60f-92d8-46b3-9411-8067ece3df6b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9cf6ee0e-5c32-45fb-aad8-4676c249ff02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c23e0ae-8737-4fea-a1c1-4fdcd3d4e493",
        "cursor": {
          "ref": "5f28c606-2ba3-48df-8efd-5c22a3e445c5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ebe537ad-3daf-449c-ad0d-4b1576dc6f0d"
        },
        "item": {
          "id": "6c23e0ae-8737-4fea-a1c1-4fdcd3d4e493",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7ff65421-98bc-4ba0-9ef1-7d9701c6894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29cabb6-31dd-4897-9ace-137efc66e5bf",
        "cursor": {
          "ref": "04862dfb-cb02-430e-a48e-62a8d8f0752c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5fbfe18e-792d-4592-85da-4cff5cb4e588"
        },
        "item": {
          "id": "b29cabb6-31dd-4897-9ace-137efc66e5bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "35b2b705-cb76-4d1c-809e-1f8feb7a1e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132c52a6-e6ea-438d-81ed-1d1498b11f06",
        "cursor": {
          "ref": "c1c217c1-0258-4589-b703-8c2cc967a99a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c433d6ac-76c9-4206-9117-b9cae6fcb7ba"
        },
        "item": {
          "id": "132c52a6-e6ea-438d-81ed-1d1498b11f06",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "47ef63c8-f81e-4cad-91d3-4a3f9fc5322a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215083c4-a835-4918-90f6-b680a348a055",
        "cursor": {
          "ref": "cc48c679-d154-4f0b-ac02-615beb501af3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a219355e-daae-4ac3-9abb-e087cbe0c970"
        },
        "item": {
          "id": "215083c4-a835-4918-90f6-b680a348a055",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c4dadad6-e689-4630-a922-377f73373034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b489d8-a368-4246-b40c-ce6b059c3b60",
        "cursor": {
          "ref": "ff5c5577-b0a8-4171-ab4a-96eeb670d7b0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fcbf29e3-27d5-44f8-821b-81ebe2aaaac9"
        },
        "item": {
          "id": "07b489d8-a368-4246-b40c-ce6b059c3b60",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "db8fe098-4118-4659-8f7f-644672e046c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906370b7-e258-41ee-8977-26ef17a4cf11",
        "cursor": {
          "ref": "142439aa-8c0f-4dd2-a819-1af41532c23d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b4310b58-0b4e-45a3-b1b1-b3e5cc069ca2"
        },
        "item": {
          "id": "906370b7-e258-41ee-8977-26ef17a4cf11",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cd30493b-d1de-4550-8f93-6867798b812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca742561-20a7-4ddb-b965-340da24d761d",
        "cursor": {
          "ref": "1ac2a0fe-7b6b-487d-adfe-a6b1a3f73282",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "84c66104-eb05-441a-84d0-b258b780410e"
        },
        "item": {
          "id": "ca742561-20a7-4ddb-b965-340da24d761d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b2f4e061-3332-41ce-8121-217b7f7fd44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919c47a4-579a-4289-b6b6-ba446751293e",
        "cursor": {
          "ref": "4208dcae-9277-431c-80b1-ef9c8334afde",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "760318f0-4915-44ca-a1e6-5fb69c398151"
        },
        "item": {
          "id": "919c47a4-579a-4289-b6b6-ba446751293e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bdb85e3d-ee5b-4e1c-a2ac-c3ad74e49b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c317546-6c4c-4d1c-814b-e4f5da166d19",
        "cursor": {
          "ref": "09f0d63d-97cb-497d-a0b0-9146ef1185b7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e9db6f3c-f7dc-4a26-9c80-537856147454"
        },
        "item": {
          "id": "9c317546-6c4c-4d1c-814b-e4f5da166d19",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3757adfd-6696-43a1-be96-276a7273085b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b794216c-c9e0-4eed-a785-59339a65ed84",
        "cursor": {
          "ref": "d3eff9e2-1bec-4ec7-b76f-f56c3690651f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "730dc585-be8c-4367-bbd6-90964793bc18"
        },
        "item": {
          "id": "b794216c-c9e0-4eed-a785-59339a65ed84",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ebf15ef0-5742-4d83-8cc3-3c7d122e6a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02d9eb7-4c38-4bfd-b586-03b474b09505",
        "cursor": {
          "ref": "1bb5693c-ba19-4cbf-b3e6-e9b119150000",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "68708ff4-471d-4b67-9ea1-9e71aef9360f"
        },
        "item": {
          "id": "a02d9eb7-4c38-4bfd-b586-03b474b09505",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5147f5df-a233-42c4-af37-c46d85dd54a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d395b7e-1f32-45e4-98c9-48abd1ed6925",
        "cursor": {
          "ref": "e6684d2c-05cc-4c91-a512-393ba41cd5fc",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54c6c76f-d0e9-4167-91c4-be280338cfdc"
        },
        "item": {
          "id": "7d395b7e-1f32-45e4-98c9-48abd1ed6925",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f4134ac4-56a8-42ea-80c0-8661925d0c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f910ef94-c99e-402a-a730-a50a77ee4e70",
        "cursor": {
          "ref": "960c0102-b9a6-4739-9770-c8b179888a26",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e6ca9656-eb0a-4448-af49-a1e236cc4fb4"
        },
        "item": {
          "id": "f910ef94-c99e-402a-a730-a50a77ee4e70",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f5ad7b51-05b1-4de5-b450-bc7daa273ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115aa96-1867-4daf-8347-11ba2a71dec4",
        "cursor": {
          "ref": "3127ec1c-77ff-4de2-94c9-328e0535e05d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57ad0a25-6d96-42af-b28e-bb80f58a2aae"
        },
        "item": {
          "id": "b115aa96-1867-4daf-8347-11ba2a71dec4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d42d3c7e-933e-4955-85db-54948c284ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304fe508-f3c3-4ddd-8b63-a475fabfa73d",
        "cursor": {
          "ref": "00cfb460-d4f9-4042-8fee-2facb3e29bdc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d85624bc-e3fe-42a9-97e5-61678349f1ac"
        },
        "item": {
          "id": "304fe508-f3c3-4ddd-8b63-a475fabfa73d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f83afe75-85be-463e-822e-aea4819466c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75d2049-b49b-4853-99aa-7c0368eda9c7",
        "cursor": {
          "ref": "d5abc68c-7206-42f5-86b6-7afd7fae6045",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cfd726b0-7d19-4587-94b7-3a51ac542d8c"
        },
        "item": {
          "id": "e75d2049-b49b-4853-99aa-7c0368eda9c7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "49cb7ed8-e90e-4a98-bc96-df08bfcf2d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda20ce5-eed5-4eca-a973-5aa38777c75c",
        "cursor": {
          "ref": "9a2cc02d-24fa-4edc-9fd4-5037caf94c8a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3c21dc73-5949-45b5-9c6f-7a915304a10c"
        },
        "item": {
          "id": "bda20ce5-eed5-4eca-a973-5aa38777c75c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "71688eeb-5dca-49ff-bc4b-ca7643dbcd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b321d35-3dd5-4331-b7fb-1ba1a97047cd",
        "cursor": {
          "ref": "3b6bfbcc-74ff-4cfe-940b-d97c35559e25",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2b733b0f-8ad0-4edd-a90e-03ac4bd68ed0"
        },
        "item": {
          "id": "5b321d35-3dd5-4331-b7fb-1ba1a97047cd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5dc2e330-d50f-44e5-aa27-846a0258b12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c0439-7ba9-4e7d-85ab-9f4e07186c47",
        "cursor": {
          "ref": "41b5e29e-f8fb-48ee-95d9-c61d64ef31b3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23c4a2fd-300e-42c7-8076-a8f2289c2ecc"
        },
        "item": {
          "id": "807c0439-7ba9-4e7d-85ab-9f4e07186c47",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "23a6781e-2d1b-4b60-a3e1-b8fc32d15a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00ab04e-42cd-4958-a2a4-fd688414ad36",
        "cursor": {
          "ref": "3e449ddc-5df2-499a-9e5a-2332b8c78d1b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8cd58533-8bb2-4708-88fb-572cb27c5f72"
        },
        "item": {
          "id": "d00ab04e-42cd-4958-a2a4-fd688414ad36",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1668aaa9-4826-4165-a15e-dd3a0cec1535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b0058b-fa7c-4d81-ab98-0299d13ba67c",
        "cursor": {
          "ref": "ef577a80-6a19-469e-be00-fa0c18a07b4b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c0b5a6b4-e8a8-4334-aa46-8eb67f564c61"
        },
        "item": {
          "id": "68b0058b-fa7c-4d81-ab98-0299d13ba67c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5acc9940-bf5e-4263-8f88-201d085cdfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cbca7f-e415-4b1e-ade8-6411dda43c05",
        "cursor": {
          "ref": "1cecbc8a-33cd-4e59-aefb-9dfbec22e74e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "70eb6555-fad5-4577-a6f6-954b21a5d195"
        },
        "item": {
          "id": "b8cbca7f-e415-4b1e-ade8-6411dda43c05",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "09999cc2-ec91-40c7-b5b3-c7074098a077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b2739e-1270-4b52-90b2-ab2f1956a976",
        "cursor": {
          "ref": "6742aee3-f01b-44c0-b520-4de8612307e8",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fd983e2e-bdb4-447a-bd87-74e6a2c57275"
        },
        "item": {
          "id": "02b2739e-1270-4b52-90b2-ab2f1956a976",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d29a5ff6-6e56-4a85-b816-f50efdf03738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f591e2c3-2599-4f2c-834f-de58574551e0",
        "cursor": {
          "ref": "28981762-d0d9-4192-b0a7-05c8a9d53d65",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e5dae94-35c3-4051-ba57-41986873d173"
        },
        "item": {
          "id": "f591e2c3-2599-4f2c-834f-de58574551e0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eca5a06a-3043-4d40-b848-94ba37ebb706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30c58e5-3f8e-40b2-b868-35763409d854",
        "cursor": {
          "ref": "1d925a14-5b6c-43e1-b08a-6b77f71bae09",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b6ecb1a1-e602-4800-a9a9-5594cf87ec27"
        },
        "item": {
          "id": "f30c58e5-3f8e-40b2-b868-35763409d854",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "15b0836d-481f-4c11-8eb9-e3073795cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e384c45-8fe1-43ab-9af0-9ff968a1fadf",
        "cursor": {
          "ref": "c0041b4d-de42-4600-97de-45f2dfa66b20",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b5f211d0-eb3e-4447-adad-ea210e19e54b"
        },
        "item": {
          "id": "7e384c45-8fe1-43ab-9af0-9ff968a1fadf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ce666357-f015-4977-9be6-7a65b6f65fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fce16fe-e0de-479b-a6a1-f37075425427",
        "cursor": {
          "ref": "30ac5f0a-076d-4da1-ac11-80f7929242ee",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "babb879a-c25d-4743-96aa-73102eaf2ed2"
        },
        "item": {
          "id": "2fce16fe-e0de-479b-a6a1-f37075425427",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dbe8b7fb-64ca-468d-9d50-cd630633ba66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20ae329-e1f9-4fd9-8c28-74b31e742d05",
        "cursor": {
          "ref": "4ccf6f10-e3c8-4d17-a745-18435f9130a1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "091393ed-1626-4952-a14d-9567c6802944"
        },
        "item": {
          "id": "c20ae329-e1f9-4fd9-8c28-74b31e742d05",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "32d73202-c4c4-4294-8174-bf559eccc3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5a64a545-6fd2-445f-8255-b5cafadabdb5",
        "cursor": {
          "ref": "cf7146f9-a680-412b-aa05-9fd0bf925ae7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2240a196-7d3c-49bf-ae40-dd2e51e3c389"
        },
        "item": {
          "id": "5a64a545-6fd2-445f-8255-b5cafadabdb5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "171db4af-0242-49f7-a285-14c96f66238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "47dc4886-9a81-4370-99b1-8a92bc170811",
        "cursor": {
          "ref": "67c96af6-4439-48aa-a964-e75a3e1ea756",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a40f661e-ee23-468b-adaa-33a475171562"
        },
        "item": {
          "id": "47dc4886-9a81-4370-99b1-8a92bc170811",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f71efee4-b0d7-46ac-8965-1d1848831af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b303a4da-1fe9-4015-a45f-e26981580ab6",
        "cursor": {
          "ref": "177120c8-98fc-4b39-ade6-2d5a901d067a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fc9420f4-39fe-4655-96e0-01d7403aa66c"
        },
        "item": {
          "id": "b303a4da-1fe9-4015-a45f-e26981580ab6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae72e1c3-9930-4e09-b6c0-5454bdde52e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "23a5c12d-3f8d-483a-8e70-d54fe42363ac",
        "cursor": {
          "ref": "a1c82075-5ae7-4076-af18-9874abe57047",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "03d27a4c-1b28-4000-81cd-f7ac03e04c51"
        },
        "item": {
          "id": "23a5c12d-3f8d-483a-8e70-d54fe42363ac",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "22903a76-1a9e-41ac-9769-a5f02e8ce88d",
          "status": "Created",
          "code": 201,
          "responseTime": 8395,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92174c33-a128-4b48-a143-43dc7fc2486a",
        "cursor": {
          "ref": "a9033865-64ff-435b-bdd1-68197c983015",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ff03695d-1deb-4fa2-acda-0b6c7a1056ec"
        },
        "item": {
          "id": "92174c33-a128-4b48-a143-43dc7fc2486a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "76b4e0da-192b-46a4-a3e5-f45cf3a38d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "36d94d20-2a84-40ee-bdf6-a2030599a0ba",
        "cursor": {
          "ref": "95c2905f-b564-48b1-9bf9-59ccda483408",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c4e1d75e-15de-46b3-8cb5-751a409d84d5"
        },
        "item": {
          "id": "36d94d20-2a84-40ee-bdf6-a2030599a0ba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d0f1e2da-3da0-4327-811f-889b22480142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4b8ab821-097b-4921-b78e-a3b29d3332d0",
        "cursor": {
          "ref": "af71ee07-7b07-49ca-a4a8-78331904fc99",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2992da6a-1b9d-4dd0-93ca-8b4e4d1db32a"
        },
        "item": {
          "id": "4b8ab821-097b-4921-b78e-a3b29d3332d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6add8235-7a7c-425c-89d7-d73e2f6f42ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85475b7b-6fe8-4219-a077-3d4acb723db2",
        "cursor": {
          "ref": "6b9fd4c3-8742-4382-88e7-6991cb8a5327",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7665a856-285d-457a-912f-96af91a2d49e"
        },
        "item": {
          "id": "85475b7b-6fe8-4219-a077-3d4acb723db2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "86ac5d2f-d613-47e0-8df3-81f61018eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b80ced4-b829-45b6-9e45-5ea4eb79ad48",
        "cursor": {
          "ref": "f8f7fba3-6664-4188-abbc-8f7939d821b7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a915b4cf-0c42-4616-a698-77486fa0f0cc"
        },
        "item": {
          "id": "8b80ced4-b829-45b6-9e45-5ea4eb79ad48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0724abe8-14b4-4712-8ae6-a5c7d280ad9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db9c229-7607-4a94-97b4-21a77a773ceb",
        "cursor": {
          "ref": "b358ad4c-5c51-4e09-9111-bbb1cf1d299b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf11df3f-4dc1-4a38-bd50-fa22f494cab4"
        },
        "item": {
          "id": "2db9c229-7607-4a94-97b4-21a77a773ceb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71da57a5-bbff-46ac-8e85-3965befef4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580bac9b-5eca-4252-bd6b-835d4b09b6bd",
        "cursor": {
          "ref": "6ff327f8-1078-4a79-8fee-8d06af6b2bb3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1027865b-50b3-42fd-a69e-615147169ce4"
        },
        "item": {
          "id": "580bac9b-5eca-4252-bd6b-835d4b09b6bd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6366a439-63e4-444f-8074-053b7ba02651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1135fac1-8370-4abe-a114-809ec30c04c5",
        "cursor": {
          "ref": "0749c4cb-09d3-4759-b307-ffc18ec2bb7c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33234c20-5fa0-4371-ad22-2efae23804a1"
        },
        "item": {
          "id": "1135fac1-8370-4abe-a114-809ec30c04c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6cca366a-2caf-4bec-9aaa-e9b67574489e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3293f775-e82d-40cd-9b29-e390899ac606",
        "cursor": {
          "ref": "0acac951-42cb-4376-8352-37cc26fa5eb9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "af73c45c-3c82-4d1c-8825-3d939c6563d1"
        },
        "item": {
          "id": "3293f775-e82d-40cd-9b29-e390899ac606",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3b1b0f21-cb3f-4627-b615-60f39a18709a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b727be-87c2-4c02-be1f-00ec2309cf6f",
        "cursor": {
          "ref": "d6dabd33-7c16-4105-b5a9-29d41d4f478c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f881d24e-98bc-4804-84fc-ad3a05dacf77"
        },
        "item": {
          "id": "c9b727be-87c2-4c02-be1f-00ec2309cf6f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "048eefcb-d42c-44fa-8806-10d0075b427d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc052e2-6f1a-43d8-a6c5-71fc6df3630c",
        "cursor": {
          "ref": "fb556c7b-cc50-46d1-ad5e-a2be377b5830",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "75e3c63f-3815-49e9-bf00-3e5db9c96d94"
        },
        "item": {
          "id": "ffc052e2-6f1a-43d8-a6c5-71fc6df3630c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0e5dc65f-f2c1-40da-b568-94918ed76b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b242c2-0d5f-41fe-91aa-28dfe5c05ae4",
        "cursor": {
          "ref": "c587584a-349a-4a16-a2fa-1c5b511affe5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bafc4a93-8f7b-47b0-b5f2-8219b1727fc6"
        },
        "item": {
          "id": "19b242c2-0d5f-41fe-91aa-28dfe5c05ae4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1335dc42-4c1a-4806-9915-0cf405158e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1777b8b7-c7fb-4245-8432-06ae95306a20",
        "cursor": {
          "ref": "2c5af5b0-86d4-4d16-8f4a-976f592c7cab",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d3b3f4ee-f6cc-422e-9537-b2da458cc43a"
        },
        "item": {
          "id": "1777b8b7-c7fb-4245-8432-06ae95306a20",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa69cbab-e014-4d7a-8e02-b33046a6a72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cdedf5-d3c6-48f9-9cd8-a59d36dd4506",
        "cursor": {
          "ref": "c8b462b4-bdb5-46d5-a965-a30e75c92685",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4eb3a294-1b3f-41d8-8ac3-82ef5a1088e9"
        },
        "item": {
          "id": "28cdedf5-d3c6-48f9-9cd8-a59d36dd4506",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "68a2a75f-abbc-49d8-b04b-2aa70a2ae2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a063013f-5f16-467d-a04f-21fa42fdcbe3",
        "cursor": {
          "ref": "86480414-ec0d-4488-bce1-a295ba3b44ed",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dce59df3-9e38-4e13-9c48-29991a9ec7de"
        },
        "item": {
          "id": "a063013f-5f16-467d-a04f-21fa42fdcbe3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d06373c6-af39-4900-846b-7cff1227e0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16bfc25-d10c-4e7f-bbfa-1bfa25252054",
        "cursor": {
          "ref": "8bba948d-aa1c-4919-8c70-dfc67c9da9c1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a59323ab-5cc0-49e4-a68b-667cfb663f3d"
        },
        "item": {
          "id": "c16bfc25-d10c-4e7f-bbfa-1bfa25252054",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6a99c9d4-e1ab-493d-a813-f60c80fb4990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463beeb7-f90a-48c2-93ee-67abfb74a073",
        "cursor": {
          "ref": "9aebbff3-81b0-4511-b3a3-2d25f867aab6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fa4b013-feea-4db1-98bc-17483ca16503"
        },
        "item": {
          "id": "463beeb7-f90a-48c2-93ee-67abfb74a073",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1bae2dee-784e-49cb-9e3f-88feb67b8371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6703c1d3-8531-4bb0-9ccb-5589f21bcff8",
        "cursor": {
          "ref": "b5ec1b77-cf2c-4ad7-a033-b4f955d2b44e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "de9f3be0-8223-4305-ba8b-c7dc6fa40663"
        },
        "item": {
          "id": "6703c1d3-8531-4bb0-9ccb-5589f21bcff8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d21a823-f4ed-4398-b296-04bc7ecbf917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89733c8-2a4a-4837-8194-8e31603d7f05",
        "cursor": {
          "ref": "c57a2895-cf59-4758-b182-fb1e151629d7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e750a9c6-ebf5-414b-94bc-3549d03831a7"
        },
        "item": {
          "id": "e89733c8-2a4a-4837-8194-8e31603d7f05",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1bb49e4e-1ceb-4fcf-b89e-5b5894ebcecb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 249,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c99db0c0-6b61-455b-8aa1-39fe5eb0fe4f",
        "cursor": {
          "ref": "b7a70b54-a3ec-4855-af43-3fca5d21e637",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9dd6b8d-a0c5-4d46-981f-0e2b20dab84f"
        },
        "item": {
          "id": "c99db0c0-6b61-455b-8aa1-39fe5eb0fe4f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b849057a-5263-4a20-93f6-f6a7c08408aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5a594a-3611-45fb-8bb0-f9318fc4d244",
        "cursor": {
          "ref": "b329b2b6-5772-43b6-998a-4e0c1df0d059",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7998af75-97d0-4b8d-a2fd-0b6dce06c905"
        },
        "item": {
          "id": "6a5a594a-3611-45fb-8bb0-f9318fc4d244",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c6dedd5b-a210-4592-abb7-9b625a5eedca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4520974-7fea-4aec-88bd-1573e4d6c93f",
        "cursor": {
          "ref": "da93cf89-d329-4288-a949-5476848db825",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a421e658-95e6-4969-948e-962c878122a2"
        },
        "item": {
          "id": "f4520974-7fea-4aec-88bd-1573e4d6c93f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2be26156-ec09-45ba-9596-0f85242e583b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3e12b7-de83-448a-a4ae-810515947c10",
        "cursor": {
          "ref": "78fd362a-4844-483c-8a61-fe238c0ea6e9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dbb5bfec-eb0a-4834-b549-739343248ccb"
        },
        "item": {
          "id": "5e3e12b7-de83-448a-a4ae-810515947c10",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ae78297d-2c85-4865-8609-db5c506fca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dec4b5a-ae6d-4dd1-ae75-291e57c1b100",
        "cursor": {
          "ref": "48e331e8-9161-4024-8b41-09a2ea2ce1ca",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4c33e18c-5cbc-4006-af61-9afe6b9710bb"
        },
        "item": {
          "id": "8dec4b5a-ae6d-4dd1-ae75-291e57c1b100",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f3b29c06-88e7-40f3-bfd6-1068849c9eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c487c6-36c4-488b-8b0d-094b37b27354",
        "cursor": {
          "ref": "980a3a8a-ade8-46c0-b280-c84e0b5fc5e0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "994c4bea-d61c-4091-8dea-78a1bc067b3b"
        },
        "item": {
          "id": "88c487c6-36c4-488b-8b0d-094b37b27354",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4afad28e-6aec-4af5-bdec-0883f34b0bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260306a5-77e6-4786-9965-a7bb5ec47746",
        "cursor": {
          "ref": "cd759a9a-ae9b-4813-9b31-b2d7516d8096",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5edfb3c0-0e47-4be2-a528-862d5f1624c3"
        },
        "item": {
          "id": "260306a5-77e6-4786-9965-a7bb5ec47746",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a953931c-5175-4d6c-9faf-98c299a997e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b006f005-b541-4237-aa8d-1d2a3b551033",
        "cursor": {
          "ref": "cf7b89d5-a2ed-4193-9a1f-cd18c06f0194",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b9315815-50d9-4ce8-8960-605c193c6324"
        },
        "item": {
          "id": "b006f005-b541-4237-aa8d-1d2a3b551033",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19c19ffe-fb93-482b-96fd-a99af8030190",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e0148bae-4b6c-4588-b5ca-f0837fa53b4a",
        "cursor": {
          "ref": "df530882-5aa4-4f09-82bd-a602482e3066",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c5b3b956-fea0-4b21-992c-4799f6e6f311"
        },
        "item": {
          "id": "e0148bae-4b6c-4588-b5ca-f0837fa53b4a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0229b488-7f5d-45ef-a146-cac0be01358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080ba044-d6d0-415a-ab85-5b4483b848cd",
        "cursor": {
          "ref": "0f8cc22a-eaf8-4a00-a0be-0c810f8607f8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3f8ff57-3f9b-4760-b797-877d921cc0b9"
        },
        "item": {
          "id": "080ba044-d6d0-415a-ab85-5b4483b848cd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e5a13a00-163d-41e0-abe1-9bf493a8f318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25cb952-881f-4611-8673-2b1f6d66907d",
        "cursor": {
          "ref": "4a4d8574-d845-487e-b74f-eac5a28303a1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b2972bd8-c424-4ed4-9ea6-195a2f2b63b0"
        },
        "item": {
          "id": "a25cb952-881f-4611-8673-2b1f6d66907d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d153f3da-75d3-472f-bdec-419f8fdef31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7aa798-3ff8-439d-b20b-1ffdd6ee88c8",
        "cursor": {
          "ref": "8913ab61-7296-42a3-ae87-8aa0fb8ca250",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5bc7c849-30a9-44fe-a23b-ca5dd739d669"
        },
        "item": {
          "id": "1c7aa798-3ff8-439d-b20b-1ffdd6ee88c8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3f6a7a7e-9211-4d11-ab03-ac254d5ba29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8400d7d3-0a05-4347-aa7e-4772ba304128",
        "cursor": {
          "ref": "9dd8bca2-d28e-44ce-8210-8c295d765786",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a00b02f-138a-4393-b85b-e15074f5e870"
        },
        "item": {
          "id": "8400d7d3-0a05-4347-aa7e-4772ba304128",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2914f6e4-4e8b-4ece-b0ee-167d2c7d880f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46046ba3-2183-42e0-9be9-80c37daef530",
        "cursor": {
          "ref": "815c8638-5587-418d-8fef-6d92bc922017",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0d134f2e-2c10-4158-aeed-33861e2f90b7"
        },
        "item": {
          "id": "46046ba3-2183-42e0-9be9-80c37daef530",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "08900afb-c2b4-4a22-a667-eb24f6d9ffee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f118a908-d89b-4b3f-b1e8-d4652ea95493",
        "cursor": {
          "ref": "3b9716fa-f6e7-4489-9e24-02004b5e3575",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c9c52847-b12e-4474-a467-1bc2fdde6c1f"
        },
        "item": {
          "id": "f118a908-d89b-4b3f-b1e8-d4652ea95493",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4c2c1873-79d0-4b1d-a724-2eac08fa427d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2a3cf81b-c009-453a-b682-68b2d7eb1ff9",
        "cursor": {
          "ref": "8629ac91-ef05-4838-a287-d80926c6cb44",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eb6325fe-a917-4749-9049-a29829d3a66f"
        },
        "item": {
          "id": "2a3cf81b-c009-453a-b682-68b2d7eb1ff9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "10636fc3-e557-4b2e-a487-057e142a3357",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "d2809208-3cbb-4ddf-a124-109b14d16e85",
        "cursor": {
          "ref": "15bf33a3-b32f-4e4f-ac34-7ae9be08d942",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "08f048af-852d-4fbd-b291-73f061e51b69"
        },
        "item": {
          "id": "d2809208-3cbb-4ddf-a124-109b14d16e85",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "18579c35-fedd-4590-bea2-9d4943b70391",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "fa38898b-d64c-4644-b522-dc1dfe5c74a1",
        "cursor": {
          "ref": "969a2554-b827-4191-b2d2-5ce5581eb6fc",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2caae8ee-e8e1-4192-84b0-909ba3c02a6c"
        },
        "item": {
          "id": "fa38898b-d64c-4644-b522-dc1dfe5c74a1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6ce0e0af-afd8-4c6b-85c0-99aa844e261f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "599261c4-9abd-4cd3-9f49-c75bf29892aa",
        "cursor": {
          "ref": "f7787108-674f-4f70-bd24-83a7bf56ac7c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1fcc7634-5db8-4a10-8eb0-342ce6da64fd"
        },
        "item": {
          "id": "599261c4-9abd-4cd3-9f49-c75bf29892aa",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "55fe3e20-f88a-45fa-a1ae-9cf6ed97058d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 11,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "cba8412c-f404-4a27-b387-6ca9fce36a4a",
        "cursor": {
          "ref": "f7c6bbe8-df5d-41f5-b586-2d1a58587435",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cee8463d-ec90-4120-bd4e-068fa73d57ed"
        },
        "item": {
          "id": "cba8412c-f404-4a27-b387-6ca9fce36a4a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9158f1a8-55d6-435e-af4c-8e44ac2cef11",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b4e155f2-f301-43e8-9a98-5faecbd1b9af",
        "cursor": {
          "ref": "9ba65f59-a0bc-4e12-8c71-f6f0cfc1a624",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c4a416ae-af9d-4438-b8b1-b7ecb4ad01db"
        },
        "item": {
          "id": "b4e155f2-f301-43e8-9a98-5faecbd1b9af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a72f4f44-ac11-48bc-bcc1-83c1e3f04018",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741a1901-f01a-4421-89b8-d77e28e92002",
        "cursor": {
          "ref": "345bc377-7e40-4f5c-9745-d03e5ecb1d65",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "773a37c4-95e2-43dc-b0e1-ff5256eddbbd"
        },
        "item": {
          "id": "741a1901-f01a-4421-89b8-d77e28e92002",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c5c1e419-0173-4d34-b3fb-ff2c981100c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c5ae7d-e831-4bcb-9148-54b9a4933a28",
        "cursor": {
          "ref": "1efa9a92-c347-468c-948b-a17ac07d590c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d6c40d42-987c-4014-8b76-a5007be4a50b"
        },
        "item": {
          "id": "43c5ae7d-e831-4bcb-9148-54b9a4933a28",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "91850fcd-677a-4cb9-b36d-3a0287c45039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7295d8ac-a732-4794-a129-51645bb96061",
        "cursor": {
          "ref": "8ec34700-450c-48fd-a32d-d971da2f3474",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f88d0690-035d-4827-8274-2c57b60004a2"
        },
        "item": {
          "id": "7295d8ac-a732-4794-a129-51645bb96061",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d23152b4-7cc8-4146-b1ff-2adcaea0591f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a584ac-46ff-44c5-81b1-0464e36bfd63",
        "cursor": {
          "ref": "0dfe7f9d-a995-4863-8162-8277cbc9ea75",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6448f2b5-85fe-4549-b16c-e2f8b1a30c8d"
        },
        "item": {
          "id": "f6a584ac-46ff-44c5-81b1-0464e36bfd63",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "20086395-f885-445d-8d03-e0e938700d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b767b0-bcb5-433e-bf2c-14e5720759a5",
        "cursor": {
          "ref": "c3b7ebca-6341-400d-af92-c3579c5f6c3d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2128f908-ff3b-49fa-be64-9d3d16753d00"
        },
        "item": {
          "id": "53b767b0-bcb5-433e-bf2c-14e5720759a5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fda1b4e2-367e-4347-b3d9-bbb75e82af63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dcd543-15af-45d4-a566-c75cc66f0857",
        "cursor": {
          "ref": "8f5d9cb3-6a6a-47d4-9a42-df21c6893bdd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ee79809-dfcd-4429-91e9-02aad7fc66e6"
        },
        "item": {
          "id": "02dcd543-15af-45d4-a566-c75cc66f0857",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "51f25587-c1e2-4780-aa1d-e6dcae2adbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2260519-057f-4a12-aafe-b6f2fccd5734",
        "cursor": {
          "ref": "2c2283b6-4c5c-4460-9069-749862e31329",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b04486cd-c30d-46f3-8165-0b94d65ff1d5"
        },
        "item": {
          "id": "d2260519-057f-4a12-aafe-b6f2fccd5734",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f6b2ce2-6164-4421-9bc7-109ad0469f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6a3f85-33e1-4ad3-a4af-4f8fe81c193e",
        "cursor": {
          "ref": "86d74516-15a7-4eff-802e-b0cc702a9290",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a016161d-1970-42fa-9eaf-d41aaccb55ed"
        },
        "item": {
          "id": "ad6a3f85-33e1-4ad3-a4af-4f8fe81c193e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d34818c4-90ae-4607-96dd-f90e1880de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f721c296-bdcf-430b-a14e-77379c48a1de",
        "cursor": {
          "ref": "4566ed83-9fda-449e-a3c2-1c333c40463e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5bca2e7-7795-4d74-a4d0-01c44d5aef76"
        },
        "item": {
          "id": "f721c296-bdcf-430b-a14e-77379c48a1de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "68379126-54b5-4323-a431-de3565f148a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a6fc40-50b1-48db-87e3-b8054e52c1ee",
        "cursor": {
          "ref": "527f59b4-0ffd-4723-a5fd-7b21df42c688",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "eedad24c-1697-418e-a33a-26710e6b8759"
        },
        "item": {
          "id": "59a6fc40-50b1-48db-87e3-b8054e52c1ee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d8c02c1-6eb2-4bf4-ad13-13f953f0924c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb9bd58-bc8a-4aac-ba3b-451c05551c3b",
        "cursor": {
          "ref": "08491acb-4985-4adb-8727-98895bf47b25",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2b642bf5-41b3-4dbb-ac0d-b18c8584a787"
        },
        "item": {
          "id": "fbb9bd58-bc8a-4aac-ba3b-451c05551c3b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "04b316f0-d3a7-4742-9be8-014bf42657f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cf3be0-4355-404c-aa07-9f41a9104c1f",
        "cursor": {
          "ref": "ba6013aa-675d-4b9a-aeb7-74d853f99d9e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e50e4b22-5f39-44ca-bcfa-a35150437d51"
        },
        "item": {
          "id": "b9cf3be0-4355-404c-aa07-9f41a9104c1f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2874b3da-e2e6-4cc9-bdfc-1b5d692171c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3683a807-6c85-497a-8b6c-cdd44391151c",
        "cursor": {
          "ref": "ae9fbfca-7cc9-4599-bf8e-0acdf369107a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b25a65ca-f570-4dab-96af-114906f8e2ac"
        },
        "item": {
          "id": "3683a807-6c85-497a-8b6c-cdd44391151c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e7e2e660-2051-4e24-b4b7-1e4561a54374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a3caff-54bc-4a23-8ff6-ddc3ae742ce9",
        "cursor": {
          "ref": "21fca7b2-a9a5-44e1-9b01-9224e70218bd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d174c94c-b32c-4641-a058-f776d218a30f"
        },
        "item": {
          "id": "b1a3caff-54bc-4a23-8ff6-ddc3ae742ce9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b45687ab-fc8d-404a-ba6c-cc9254158c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ec1d30-1cfd-4216-bf32-4d5f93fb9882",
        "cursor": {
          "ref": "f811865f-61af-404f-98d1-03991a8791f0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ee2cacbd-1f46-4f35-b1f8-b86ead18ccf0"
        },
        "item": {
          "id": "01ec1d30-1cfd-4216-bf32-4d5f93fb9882",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a1337fb9-04d9-43db-ba7b-848f66bedcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb04a67-afe8-43e0-9646-5b3a5ebda52a",
        "cursor": {
          "ref": "87d97afc-dc85-4fa3-ae9b-90d759f7ae5a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b7ba8850-ef85-4ecf-9b93-a0817ca1afd1"
        },
        "item": {
          "id": "bcb04a67-afe8-43e0-9646-5b3a5ebda52a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5edd04da-fb99-43ea-a54e-428b43c2bc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4e8b07-d90e-46b8-9611-cd122c99a4e4",
        "cursor": {
          "ref": "b5b87644-598f-4f02-af30-55293b072414",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fe04f291-318f-42fb-99a1-a112fee454f4"
        },
        "item": {
          "id": "df4e8b07-d90e-46b8-9611-cd122c99a4e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "280cdf6e-328e-4a25-992d-305ffa703e65",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "50eeb8e1-c7d6-49ea-8f2d-527b48f4870d",
        "cursor": {
          "ref": "36208f25-3eae-4a6a-92aa-3fc6c26ae571",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2af037b3-319a-438f-ac70-285b4768ad9f"
        },
        "item": {
          "id": "50eeb8e1-c7d6-49ea-8f2d-527b48f4870d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cf9de6d1-b13e-44f6-8f0e-e63def55427c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668cbebd-8954-4132-ae12-098c99ce43d9",
        "cursor": {
          "ref": "07f60a91-8050-4cf8-8028-5b5e00b88b1a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "24ca6da4-abe9-4f8b-92d6-cd9aabfe706d"
        },
        "item": {
          "id": "668cbebd-8954-4132-ae12-098c99ce43d9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1ec36f02-0af2-4d3d-9d22-788860a24680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a9c092-1a07-44fe-95c5-6cabe6072354",
        "cursor": {
          "ref": "00333a9c-05af-4093-b7df-499f2483bcc9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "809a5c8c-6696-4fce-94a9-2be280a0dc1a"
        },
        "item": {
          "id": "87a9c092-1a07-44fe-95c5-6cabe6072354",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc7cf216-8151-43f7-9681-a624f50ed3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c020b4-7ffd-4b10-9161-e5b8586e0ca4",
        "cursor": {
          "ref": "a56f7b04-4e8a-46ba-b3ae-280b9d29a38c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d5b98ce0-3a6a-49c1-a446-581eb489e680"
        },
        "item": {
          "id": "d2c020b4-7ffd-4b10-9161-e5b8586e0ca4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1fb9a303-ed6a-46f0-a7da-30da11899b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7479f8-d25e-4378-b6e4-4d6f24bb36e1",
        "cursor": {
          "ref": "69142247-1d49-43fd-ac88-aa0cf9e2c34f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2540f492-3b64-4c0c-b2a6-9403c2ed9a1f"
        },
        "item": {
          "id": "6c7479f8-d25e-4378-b6e4-4d6f24bb36e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "90aadf04-df7c-4f6f-9bf5-46f0bce4a10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc51f92-ed3b-4118-99fb-2a019a14d5d9",
        "cursor": {
          "ref": "69a81c2b-aecb-4880-b6fe-8336fe3e8609",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "08b7a168-19a4-4726-8a7c-da7a2f6d3a3a"
        },
        "item": {
          "id": "ecc51f92-ed3b-4118-99fb-2a019a14d5d9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8f3d4cb0-3d35-4cc0-b75b-32ce1373e0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3c635d-25ce-4b7e-9f2c-9dd94948a9ec",
        "cursor": {
          "ref": "74489381-15b9-4383-bea5-31df672e53fc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d227a4f-9031-4b96-890f-3c1892b6fd2a"
        },
        "item": {
          "id": "ef3c635d-25ce-4b7e-9f2c-9dd94948a9ec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94e7fe92-9245-4d97-9b3c-b0760ba1000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979b2246-5d4e-4970-ab5e-76bc91a15fe3",
        "cursor": {
          "ref": "260e786c-fb49-4f29-a439-1f386e31bb97",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "da84371e-2096-46a5-a4ec-c84cc91f1ebd"
        },
        "item": {
          "id": "979b2246-5d4e-4970-ab5e-76bc91a15fe3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "894cbf9d-98c8-46d1-b39e-c25531347bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b517b12d-44e9-42f1-a394-5ab7b4640413",
        "cursor": {
          "ref": "f31af131-e8ef-4768-aea5-fd15ede32ecf",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9a089f65-c569-4f91-837a-be4226a43f68"
        },
        "item": {
          "id": "b517b12d-44e9-42f1-a394-5ab7b4640413",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1efe8c9a-9ab6-43de-b998-237b3790df20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893c0246-d01c-4f2f-af07-0965cb2c6208",
        "cursor": {
          "ref": "542c66db-8f43-4b0f-88ac-a85b2547b890",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d5ea47b2-eefe-44e1-b88f-a441304c8c63"
        },
        "item": {
          "id": "893c0246-d01c-4f2f-af07-0965cb2c6208",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba716b89-ef96-4295-a8e7-e4813bd31979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b318e80-0d0a-4815-a02d-86ada677d8b2",
        "cursor": {
          "ref": "c55506a1-729b-4c47-8613-37c0f9005ce0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ffc75d58-6cc4-4a8c-95f9-39ce32ef1810"
        },
        "item": {
          "id": "9b318e80-0d0a-4815-a02d-86ada677d8b2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98852dbf-c65a-4ab3-9eee-cd4dfe6895dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67462bc-527f-409d-a3f5-4da9473f12b2",
        "cursor": {
          "ref": "c38496e2-28e1-4a35-8c5a-ad090bbb239a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c6d16d19-fdd9-412d-868e-7bb7ddd2120a"
        },
        "item": {
          "id": "f67462bc-527f-409d-a3f5-4da9473f12b2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "694e799d-2f14-4e78-9eb5-c8e519820d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c3996c-db12-4e75-8069-5e8f7ea4bebd",
        "cursor": {
          "ref": "9dcd4150-22a8-4d51-b412-df11d32cff6f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0f81fa4-c858-4cc7-9ca4-7e31851517b4"
        },
        "item": {
          "id": "60c3996c-db12-4e75-8069-5e8f7ea4bebd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1c7cabb9-3e7b-49fa-92dc-b296a370ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be534c4d-c02d-4a5e-9fb6-99fa2dde90e0",
        "cursor": {
          "ref": "d69e068f-869d-4f0a-b3d2-3ce348754cd5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "60ee0db7-217f-43e2-a9e1-2e157acd5c76"
        },
        "item": {
          "id": "be534c4d-c02d-4a5e-9fb6-99fa2dde90e0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4af9baf6-e63d-4a6a-afbd-43c9ce1a3420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23eb00a-2171-4a54-81db-f178edc9681e",
        "cursor": {
          "ref": "0be4e797-35e7-4192-80a6-17c90aa4a83b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "412a1003-ec40-4ed8-bce3-af8400879e63"
        },
        "item": {
          "id": "a23eb00a-2171-4a54-81db-f178edc9681e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "21a45a00-6128-4e58-a9f9-ac99463005e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f41d4f-d069-494b-a7ee-fa9e759a857c",
        "cursor": {
          "ref": "f30dc81e-fb63-480d-9b1b-9fc6a26fdafa",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "222cc2db-29bc-42f9-8b89-d1479ec0a2da"
        },
        "item": {
          "id": "02f41d4f-d069-494b-a7ee-fa9e759a857c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "010db02c-be85-4bcf-8c66-03ce763d2d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208d507b-165a-4078-bb64-70af1021ac6d",
        "cursor": {
          "ref": "9b654077-ad45-4328-a8fc-b7ca77a0cc23",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c82493cf-4893-4dd1-9919-40c271730e24"
        },
        "item": {
          "id": "208d507b-165a-4078-bb64-70af1021ac6d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d30b93d-36d9-48d5-958d-7e60e2b6bc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46581d9d-6c57-4474-8579-dfecd531d522",
        "cursor": {
          "ref": "e9eec1df-d1bf-4fd0-9ca3-f383e6f97636",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f1287e4d-3edd-4b80-ac8a-a2b89d70cdbd"
        },
        "item": {
          "id": "46581d9d-6c57-4474-8579-dfecd531d522",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3504ddd7-cc8f-4abf-bdfd-7b76f7f6cdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea3ec18-ff37-4d12-a44e-ea4ffaf4ba41",
        "cursor": {
          "ref": "33592777-aaae-41d1-bc14-a95bb78d89ce",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b31faed0-e247-49e6-9279-858f814b911c"
        },
        "item": {
          "id": "7ea3ec18-ff37-4d12-a44e-ea4ffaf4ba41",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "88dd23ed-e873-4460-b429-7c57ab1f2635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab913f3e-2084-4309-a778-3f63e1347011",
        "cursor": {
          "ref": "6761b691-b895-4825-9b22-c54299c43d24",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ecea84fd-60f2-4c2f-b9e2-3821e0b77bfd"
        },
        "item": {
          "id": "ab913f3e-2084-4309-a778-3f63e1347011",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a24d9381-a44a-4864-8b5d-29b8025fde63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d43f182-a8bc-472e-8dee-38fcf8fc83f6",
        "cursor": {
          "ref": "3a8067e1-bf39-42c3-b257-5bd908639eb5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dc273ed2-0568-457f-925e-5ad65d508309"
        },
        "item": {
          "id": "5d43f182-a8bc-472e-8dee-38fcf8fc83f6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "432fdf93-14e1-44da-991e-692c9353d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6ec93b-5af2-4d96-bb16-953ae37077e7",
        "cursor": {
          "ref": "33d13c35-dbe1-4c92-96d1-ec3c618e7de0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d1e242f3-36d5-4154-86bc-9bc51a0b0c12"
        },
        "item": {
          "id": "5b6ec93b-5af2-4d96-bb16-953ae37077e7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2184330c-e88a-4b61-aab5-0e5b14e67148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a42656-629f-42cb-a912-3726318332bf",
        "cursor": {
          "ref": "a66c4f3f-de3d-4ddb-aa62-eb5296a3ec00",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e729a6cc-840c-4bb3-9ed6-36d1bff58980"
        },
        "item": {
          "id": "90a42656-629f-42cb-a912-3726318332bf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba2d378b-d36d-462d-b543-c809fd753e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e4a51f-fab7-4177-bd84-d1a633de621e",
        "cursor": {
          "ref": "de7c1fb2-d439-4d9a-8a6c-a97839b46c28",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d9f80f53-0653-4625-891c-2bd3731455fe"
        },
        "item": {
          "id": "06e4a51f-fab7-4177-bd84-d1a633de621e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fe0a1d08-7730-45a9-a44e-ad533d4e8f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42863ba-b72d-45f7-91a8-c35229d5fa04",
        "cursor": {
          "ref": "dfcc2018-b424-4228-ba18-4399563b3a5d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "617e6462-4554-4f1b-a791-27cae50f8c18"
        },
        "item": {
          "id": "e42863ba-b72d-45f7-91a8-c35229d5fa04",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6c44b73c-8be5-4632-ad0b-fb6f49e9682f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db0029c-fbeb-4671-8435-b677fb6bd211",
        "cursor": {
          "ref": "1796902e-e9df-4852-8ee8-a80bda3c850e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "20ea8a2e-a7cd-4d0d-b758-9586d961afa8"
        },
        "item": {
          "id": "4db0029c-fbeb-4671-8435-b677fb6bd211",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "880485ec-c6d5-41a6-9a39-bab5c38bd80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebc986d-9e6c-45fb-bfa6-255fbf05daef",
        "cursor": {
          "ref": "86a9bb39-a545-48cf-bca8-7c5fddaa3c45",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f15f1bff-6e99-4cde-b45f-067a0f054d2a"
        },
        "item": {
          "id": "2ebc986d-9e6c-45fb-bfa6-255fbf05daef",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "258d0528-4e03-4b36-9cb5-0d96923263a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39713309-9493-4f64-aab7-757c204244ef",
        "cursor": {
          "ref": "653d9748-fa09-417d-bd7a-467b42d2f6e4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "553de051-df5b-4b80-8514-cf3b4578a999"
        },
        "item": {
          "id": "39713309-9493-4f64-aab7-757c204244ef",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8c974972-da2b-42df-a39d-084b12d875a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d633195-cc54-422b-b835-71d91ccf3bc1",
        "cursor": {
          "ref": "a082e1bf-6233-42df-98e7-b7e1ed938be6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55cc9f26-eaab-4dcd-9c6d-ae2a505da1e9"
        },
        "item": {
          "id": "5d633195-cc54-422b-b835-71d91ccf3bc1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7c374c10-1f02-4af3-9e0e-a5c6fe2fa6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1cd89c-4ccb-4588-bd00-ba5a86058e49",
        "cursor": {
          "ref": "25487e61-82ff-4380-a14c-31290775998e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7fca37f9-e055-4e4c-a5dd-3e5569c73304"
        },
        "item": {
          "id": "8a1cd89c-4ccb-4588-bd00-ba5a86058e49",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e7955a32-1a95-4160-9064-9bc90aad5b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c9f59c-c11b-420b-97e0-df2775a3bd0b",
        "cursor": {
          "ref": "80a196b0-adbb-4b63-9645-846d415bd181",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "856138d4-636c-4245-a994-598bf2276405"
        },
        "item": {
          "id": "39c9f59c-c11b-420b-97e0-df2775a3bd0b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ea23ea82-a1c3-4753-9591-e90dde683b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91548837-b223-4bca-97cc-d9dfca33c709",
        "cursor": {
          "ref": "eed7d492-a831-43e5-a194-2d94efa56535",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "39ce60c0-cab9-484f-aa6a-06c15de19313"
        },
        "item": {
          "id": "91548837-b223-4bca-97cc-d9dfca33c709",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd3b161a-16d1-4e72-8aa5-3b1b41ae017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f636fde-ac58-4fb8-89ba-eee9bb170c1c",
        "cursor": {
          "ref": "d705d2d9-9570-4432-b1de-24939bb55046",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "88431540-e99b-436d-8bb7-704a282a9bbc"
        },
        "item": {
          "id": "8f636fde-ac58-4fb8-89ba-eee9bb170c1c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3116667b-9bbb-4a12-a68b-0a77be0449af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7942e09b-b2e2-4464-a878-1517b877d31b",
        "cursor": {
          "ref": "0e197106-67c4-4899-ac75-f8272aa20f1e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "00fe54ae-185c-491e-9951-66ad9fde3321"
        },
        "item": {
          "id": "7942e09b-b2e2-4464-a878-1517b877d31b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8c6570c3-b4e2-45e3-a8c3-b8a5a1e53038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2445aff-a207-4975-bff8-b542ecd8c690",
        "cursor": {
          "ref": "e2801a26-46a4-495a-9ba8-e072c381b1d8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "248f60d7-2140-4ed2-b216-37f067e2ebff"
        },
        "item": {
          "id": "c2445aff-a207-4975-bff8-b542ecd8c690",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "758377e1-e1c4-47a2-871b-f0d2e22bc47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0761c34d-5f9d-4aa5-9bf4-a7b9854d83f5",
        "cursor": {
          "ref": "33af456c-53f4-418b-933c-f6289bddc1d9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9afb9bc8-f52f-4e16-98a4-c86573fd6a3c"
        },
        "item": {
          "id": "0761c34d-5f9d-4aa5-9bf4-a7b9854d83f5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e10cf1bf-6746-418a-bd0e-736701524186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25aa3a4-a21b-46b7-b90e-6c3b3a16cf0d",
        "cursor": {
          "ref": "8c121d39-9a52-4724-bfb1-b4b5b553de79",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "536e98a3-04bd-46f0-9cad-ed3dbcc584a0"
        },
        "item": {
          "id": "f25aa3a4-a21b-46b7-b90e-6c3b3a16cf0d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f6e34d3-5796-4140-9515-d30419da8f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9d0081-26c1-472a-8a69-a0614288d145",
        "cursor": {
          "ref": "b986dbaf-21e2-4714-a762-7eb694f644a7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "13a47b0b-fda4-47d3-b7e9-4cf09aaf94bc"
        },
        "item": {
          "id": "4d9d0081-26c1-472a-8a69-a0614288d145",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec10ca31-06a7-40d3-b37c-f006b1599d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e1b368-f663-488c-8484-fef93edd85fd",
        "cursor": {
          "ref": "042912f3-e79f-4119-b0db-c6a2a52fedde",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "111c4487-3e41-4037-bc71-0b6b870a8a4b"
        },
        "item": {
          "id": "42e1b368-f663-488c-8484-fef93edd85fd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2d7c98dd-1dcc-4ebb-841b-06e846692eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ded50e1-4930-445e-a906-1c63b15c08e1",
        "cursor": {
          "ref": "d4553d9a-21c7-4a66-8a23-266357adcd97",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b7d26f25-89af-4164-8658-e6875f409901"
        },
        "item": {
          "id": "6ded50e1-4930-445e-a906-1c63b15c08e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "daf70d24-6ac7-4c83-a72a-6d46410873a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e173593-d8a2-47b9-9525-710871bc4292",
        "cursor": {
          "ref": "80a00272-b762-4b72-b735-f876eb2ceb6a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "de263339-877c-439c-bab5-9517ea37a0bd"
        },
        "item": {
          "id": "6e173593-d8a2-47b9-9525-710871bc4292",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "267ae757-1d79-4115-b180-94ce2838eb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689fdd8d-0870-451d-bce4-0e9c7948d2c7",
        "cursor": {
          "ref": "cc296703-86cc-4166-b913-c1e29236c15f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "492534ad-d1a1-4f47-8323-69ffe6d32b46"
        },
        "item": {
          "id": "689fdd8d-0870-451d-bce4-0e9c7948d2c7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f45a27ec-7207-4160-ac37-ea72d68c3b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730840d5-fba7-401e-82cb-ef57b8de5181",
        "cursor": {
          "ref": "4473ae14-b2f9-46b3-93df-35ce33263f02",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "118dd3ab-857c-4a1a-95e2-e1f3e2c4735f"
        },
        "item": {
          "id": "730840d5-fba7-401e-82cb-ef57b8de5181",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "49a59198-b396-4e3e-b8d3-bafe9a7c66dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6896f53d-3773-4433-906e-b73efbaffb86",
        "cursor": {
          "ref": "d2ab80c3-586c-4116-8f53-42aa79dee020",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c79971e3-745f-4c7c-ace1-5debbff37a90"
        },
        "item": {
          "id": "6896f53d-3773-4433-906e-b73efbaffb86",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8644fbc6-b272-43ee-90ee-415018806d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f950ab-87c3-48e3-b210-ff00b041bd01",
        "cursor": {
          "ref": "e615969b-0873-4ae5-a81e-947050e39d49",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b61b3348-7427-4d0d-8e08-c6c28a69c9b4"
        },
        "item": {
          "id": "18f950ab-87c3-48e3-b210-ff00b041bd01",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "31bbe191-1f3d-46b3-9c14-d343b142a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3ee452-7cea-4ebe-973b-ed49355116a2",
        "cursor": {
          "ref": "98e016a2-90d9-4cc1-8dc5-fae51a5ce661",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "29e85d4a-6957-4438-9efa-d1ed95d83a32"
        },
        "item": {
          "id": "5f3ee452-7cea-4ebe-973b-ed49355116a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ea26ba82-46ab-4aeb-93cb-371593495a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc5997d-ef8a-4352-9679-461947497072",
        "cursor": {
          "ref": "f109d6e3-1660-4b13-8751-96edb5f4b78a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6dcc7cdc-6e98-4c90-bdd2-bf6f6825e1d6"
        },
        "item": {
          "id": "2bc5997d-ef8a-4352-9679-461947497072",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a8e5b706-8650-426b-be08-238ec441c458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb2a4e6-1dae-411b-b5d9-ffec3dda7ab3",
        "cursor": {
          "ref": "22913453-01a8-4a13-8990-a98783bdd96e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b0df388e-4031-4cb1-b2bd-d2db06340fc2"
        },
        "item": {
          "id": "ccb2a4e6-1dae-411b-b5d9-ffec3dda7ab3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dc522551-21ec-476b-8a9d-debb042d6311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa29459-ea40-4844-a5e6-faf4e4609c1c",
        "cursor": {
          "ref": "e568af7a-3ac9-4323-bea2-0491068d0ed0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fb421b83-756f-4d85-a35c-80b3e38570a2"
        },
        "item": {
          "id": "efa29459-ea40-4844-a5e6-faf4e4609c1c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4014ec6b-7ebe-40aa-846d-ed0870c6c40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcedacf-15b9-4cce-bfbb-6357666a20d5",
        "cursor": {
          "ref": "4bb8b3f9-745f-43da-98d5-8f2e0990f02e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5687cd56-3240-41fb-aaae-4342c32fb340"
        },
        "item": {
          "id": "1bcedacf-15b9-4cce-bfbb-6357666a20d5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f8dbf8e-9ca9-4f57-8719-4130c216bb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee78cae8-d0ef-4336-8553-3c7810ebf9ec",
        "cursor": {
          "ref": "d41cba5b-6d15-4c90-8d7c-30eac6ca212a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "666b2f47-4eab-4d14-8d6e-b96ef8a26cca"
        },
        "item": {
          "id": "ee78cae8-d0ef-4336-8553-3c7810ebf9ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b0a2b94d-0aaf-4441-8ba8-9421c672bcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6745e18e-3064-4cf1-8268-4d443084f485",
        "cursor": {
          "ref": "f09fb1e8-a656-4b3d-a3fe-fa8591ad2113",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c235d441-2da5-461a-bc8d-0eb6d43926a8"
        },
        "item": {
          "id": "6745e18e-3064-4cf1-8268-4d443084f485",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b8638735-9d5e-4252-a8bb-4ea79795ed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb16d06-2c98-4c2f-9744-dca1348e8983",
        "cursor": {
          "ref": "22647ed1-3524-4846-af30-531f6d21c431",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ef7b93de-675d-4b8f-91bd-b10c9207ba0d"
        },
        "item": {
          "id": "8fb16d06-2c98-4c2f-9744-dca1348e8983",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "43b9cca0-94bb-4274-ae4c-f3c288db13ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8c367b-8dda-4e44-bd4e-d813ae9fa944",
        "cursor": {
          "ref": "3320a932-7741-419b-8b8b-f9159d8c85c6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8dc310e5-5f87-48af-b757-add952039f5e"
        },
        "item": {
          "id": "af8c367b-8dda-4e44-bd4e-d813ae9fa944",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d9cd12c7-c11c-4d6f-8266-df3d19516240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e85c11-e50a-4d77-ace8-557201a5621e",
        "cursor": {
          "ref": "3b423b7a-2ab8-4748-9ca1-fbd4599433b3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2388d16f-66e7-484e-83c9-2a61594af5b2"
        },
        "item": {
          "id": "56e85c11-e50a-4d77-ace8-557201a5621e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0ffc4d68-1152-4303-b17f-413353b3c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a026a3-9c3b-4f81-9a19-441a5299f49a",
        "cursor": {
          "ref": "85395f97-592c-4cf1-8819-54b87d52b92f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dba302aa-ce48-402a-a026-7398f4b9e543"
        },
        "item": {
          "id": "a0a026a3-9c3b-4f81-9a19-441a5299f49a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb1cf8e5-8f76-4925-b30d-2348ee5f19d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ec9c1e-4e3d-4a75-bd85-b768a253a8b2",
        "cursor": {
          "ref": "097a03c9-957d-408a-a0e6-8e6a7a75773c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "25261e79-1b34-4e7f-a13e-2717a74e1740"
        },
        "item": {
          "id": "40ec9c1e-4e3d-4a75-bd85-b768a253a8b2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f1ffc2eb-520a-42f0-b833-7b7904299863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192da1b-415c-4312-ab8a-658b71b939e7",
        "cursor": {
          "ref": "baf1d7bc-cfd9-4848-8444-0c19f00352ce",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "21097e2c-a554-44c0-89d3-303ef21f875d"
        },
        "item": {
          "id": "d192da1b-415c-4312-ab8a-658b71b939e7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5b2b1a72-6a3e-4011-a955-866b19bad82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f22c77-3f5d-44e3-9912-ef810e066782",
        "cursor": {
          "ref": "6b0bc26a-107b-41fa-9efa-c3752ea7cdd9",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ed92f5b1-64e9-4fc0-806b-62f6f3a8a4bb"
        },
        "item": {
          "id": "c2f22c77-3f5d-44e3-9912-ef810e066782",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8a647866-97e5-43f9-8950-a896550d48ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb290e47-2597-4c69-93ae-a4695df31750",
        "cursor": {
          "ref": "dc33a925-3097-444a-a374-082740e00ccf",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9ac05b0c-75ff-43ce-880f-e26544dc93c3"
        },
        "item": {
          "id": "fb290e47-2597-4c69-93ae-a4695df31750",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c1619d3-a849-46bb-83ba-8de0b48d9c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e371df3e-bed2-4d1a-92d9-92ed256b516e",
        "cursor": {
          "ref": "849f8e21-40ea-42f3-8f7f-adf0c48e6493",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c51ac308-8cf5-421d-a546-11d92e68efa7"
        },
        "item": {
          "id": "e371df3e-bed2-4d1a-92d9-92ed256b516e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "900e5324-6e1f-43b3-bcf5-40a085a0fe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f10dff-1ebc-4f22-8923-1ea552f1c684",
        "cursor": {
          "ref": "d0aca1ab-c9d7-4aad-a7cc-99421d354ded",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fbd93cc7-8e55-41f8-b39a-cedb4a39c4b8"
        },
        "item": {
          "id": "e7f10dff-1ebc-4f22-8923-1ea552f1c684",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9cb494d6-45aa-45a3-8a47-cf2c447839ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e30dee-4e69-446b-af2e-7f2aa8303dfc",
        "cursor": {
          "ref": "b823bd40-bc68-4ac1-b713-3e3b3a7d459d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "55e53a16-197c-4b74-8e0f-2f8f4d923d14"
        },
        "item": {
          "id": "08e30dee-4e69-446b-af2e-7f2aa8303dfc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "caddde39-e6a9-4427-a4b6-48c238e113ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e392b509-e697-4681-8dd9-069f55e9cc19",
        "cursor": {
          "ref": "50b40e19-d0ae-4625-b252-d511e0f7893b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ccc995ff-0c2c-464a-b0c7-9dc92caa9e41"
        },
        "item": {
          "id": "e392b509-e697-4681-8dd9-069f55e9cc19",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "19c5f744-1ddb-40a2-8d9f-413a8a8392d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7f3aa-98f0-497c-978c-706da3dd8615",
        "cursor": {
          "ref": "955354d1-442d-4bd0-b862-7e35ab9e28c2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1d282756-feda-4df7-91f3-7b0d7a65430a"
        },
        "item": {
          "id": "b9e7f3aa-98f0-497c-978c-706da3dd8615",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ac38b7fd-76eb-4c48-b7fb-ac6e80bb485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0a8d9f-1a94-48dc-aaca-dbb4ac2f3342",
        "cursor": {
          "ref": "65d0371f-d306-4530-b870-cfd875004f8d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b1b1bb0d-899c-45ba-871d-a5850c553fbd"
        },
        "item": {
          "id": "ff0a8d9f-1a94-48dc-aaca-dbb4ac2f3342",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "66015670-7b8d-49d5-bfba-16fb9490c925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e321193-a369-45f5-966b-e19f80b40c15",
        "cursor": {
          "ref": "e3a0cd76-10f0-4bfc-845a-41e51889f7d7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c6ce1f21-a665-4296-b901-92a453d4674a"
        },
        "item": {
          "id": "4e321193-a369-45f5-966b-e19f80b40c15",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "75128a9c-2554-42d5-8265-245a84a5589a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de92357-8c6d-4d30-9252-2011d82cb402",
        "cursor": {
          "ref": "a5b7f807-7c11-45b5-aa70-8ef94ffc470e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ca4f7ddc-8af3-4202-872c-6fc670a8209d"
        },
        "item": {
          "id": "7de92357-8c6d-4d30-9252-2011d82cb402",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca0c286a-27f1-403d-81b4-4c59e927690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bce1287-6ec0-4c7e-bcab-bf5f4b66ed00",
        "cursor": {
          "ref": "9bb846cc-1ee9-463f-a03b-2754d3f2555d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0a9a99cb-bb2a-4490-a9e1-8b681db18e6e"
        },
        "item": {
          "id": "0bce1287-6ec0-4c7e-bcab-bf5f4b66ed00",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "24b8576d-51a6-4b16-8828-87ac14aec756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7767da-d220-405e-a1e6-eb0863449a0b",
        "cursor": {
          "ref": "4f736ec2-eacb-4d43-85f6-fde6b7d667ff",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bfcb8cda-705b-4f33-96c7-ebea8563d087"
        },
        "item": {
          "id": "9a7767da-d220-405e-a1e6-eb0863449a0b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "df333bbe-c009-49fa-ad79-9c60ccf6288c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21be4b66-57a4-4dae-82b0-c5481c849af4",
        "cursor": {
          "ref": "b9fc3f29-e84b-46fa-9ebe-3f6e16c01f7e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f481f4c3-8b68-4fe4-a338-caf9b8a0f6eb"
        },
        "item": {
          "id": "21be4b66-57a4-4dae-82b0-c5481c849af4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e56c5d3-685f-48e5-b184-808d8c0af0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256519c6-3715-40fa-b073-1076a147f61a",
        "cursor": {
          "ref": "09ea9cb3-25e7-41b2-85ac-30a065a1f84a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "be98aac3-97c7-4eb9-aa9f-9a8a974a717f"
        },
        "item": {
          "id": "256519c6-3715-40fa-b073-1076a147f61a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ad8b773-3655-4c99-a1b6-a845b77d0930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ee8bee-3027-4735-8b22-7b07dceb0c54",
        "cursor": {
          "ref": "2895a295-a5a5-4521-98e0-b4f70124027b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7c0d1afd-e149-4d0e-83db-32977eb3d221"
        },
        "item": {
          "id": "c3ee8bee-3027-4735-8b22-7b07dceb0c54",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "573bb789-eb4f-4ed4-a8e5-b0921180d22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b049e649-e894-47f7-aa01-c50adb5c90aa",
        "cursor": {
          "ref": "1fb1f22f-bcdb-4177-afff-8fe9b7a76060",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f4fc7e8c-6aaf-4b1e-93de-da5eaa24a3eb"
        },
        "item": {
          "id": "b049e649-e894-47f7-aa01-c50adb5c90aa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "32b02994-4ddd-49fc-9903-aab5d90417f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf046ec7-3ad4-414b-be1d-f261d51c4319",
        "cursor": {
          "ref": "d59b29a9-c5cc-41f7-808f-54597f1638ba",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "84aeaaad-465a-4cbd-b683-5c67d541150f"
        },
        "item": {
          "id": "bf046ec7-3ad4-414b-be1d-f261d51c4319",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "145930dd-a44d-4b5d-96a7-faa86f2201a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30095f94-d393-4422-a03b-af7624bf9ca4",
        "cursor": {
          "ref": "40f86f1a-fd3b-4743-879b-6f823a1fdd54",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7535813b-5502-477f-bd56-6905d9c222a3"
        },
        "item": {
          "id": "30095f94-d393-4422-a03b-af7624bf9ca4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fa9ea991-559c-44f7-83f1-e1441ba7cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f47273c-9908-4e70-8744-1d467b086f7f",
        "cursor": {
          "ref": "79e37c79-a043-4e9e-828b-134e5ab4eac2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "17a100f1-471b-4f31-aa11-ff7a85c307bd"
        },
        "item": {
          "id": "4f47273c-9908-4e70-8744-1d467b086f7f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5ac88be1-725a-433b-8fad-4061a0f9a456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1761be-bf52-4525-8d70-bf38e4f92719",
        "cursor": {
          "ref": "4ef82efc-9b0a-4994-8dab-3e2bee1d3208",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c8220673-9cd3-4948-a0cb-e5fb1c0c47a2"
        },
        "item": {
          "id": "df1761be-bf52-4525-8d70-bf38e4f92719",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f83a72aa-6457-458f-b051-18c5772587bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34db8c0-ed38-4a41-9c73-5d8c8b7e9331",
        "cursor": {
          "ref": "f27c8d95-127d-465d-bd31-55a90295f947",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8ef960df-8ac1-45fb-9735-72b9418bdf00"
        },
        "item": {
          "id": "e34db8c0-ed38-4a41-9c73-5d8c8b7e9331",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a85adee5-7ae2-48a8-81e8-fdaaa6a9e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68065a12-6c69-45f5-9ee1-f993966a03f5",
        "cursor": {
          "ref": "815056f4-73f5-4ca7-b0dc-d9c5a6e3f794",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5ee78362-fb1e-4c4b-b573-c74af45957ee"
        },
        "item": {
          "id": "68065a12-6c69-45f5-9ee1-f993966a03f5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6f1fec5f-e448-4d83-888d-df92e486ba44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba3d9ac-8e48-497b-b83d-2884bc7850ce",
        "cursor": {
          "ref": "e1f2618e-9d69-4530-822e-d9d0e212d2c2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c0630a0-aa88-47be-bdae-7221f3681266"
        },
        "item": {
          "id": "7ba3d9ac-8e48-497b-b83d-2884bc7850ce",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e92a1a33-832b-4bce-8bc9-f5b9ca4b8299",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8030c4-4104-4f14-8bb1-d59f0a786b03",
        "cursor": {
          "ref": "05528a26-5fb6-4bc6-acf9-605afa4014f6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6cdf124-9f24-455b-b7d8-06dacc98a6af"
        },
        "item": {
          "id": "2f8030c4-4104-4f14-8bb1-d59f0a786b03",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0730d0d4-6eec-4f08-81fa-e720343f7149",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0656dba7-a568-4a21-8a51-6d3b4cc6f3f0",
        "cursor": {
          "ref": "61e2a0e8-5930-4551-936d-dbd450d1dc76",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4d75d95e-9f03-4eab-8bd2-f3beacf75cb5"
        },
        "item": {
          "id": "0656dba7-a568-4a21-8a51-6d3b4cc6f3f0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9857a847-d2ce-47f3-97ee-13f41b87b101",
          "status": "OK",
          "code": 200,
          "responseTime": 5223,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "163313ad-8a8a-47d7-9dcb-3d8af3cea8df",
        "cursor": {
          "ref": "164d4b90-c572-44e1-89d6-9a372ddbba97",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ae46da1d-23d2-4643-aceb-c942764d7d03"
        },
        "item": {
          "id": "163313ad-8a8a-47d7-9dcb-3d8af3cea8df",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b8e2123a-be5f-4d52-8d3c-e36a176a6278",
          "status": "OK",
          "code": 200,
          "responseTime": 6853,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6a08f6-907d-44d5-829b-c4b43febc017",
        "cursor": {
          "ref": "98b9d755-d209-4b4e-8618-8edc6b8ed295",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4c59127-0057-4185-8605-3f60dc4c2dc4"
        },
        "item": {
          "id": "1c6a08f6-907d-44d5-829b-c4b43febc017",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fbbc971e-c10a-4b8d-b703-3a20b7ccc38b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6a08f6-907d-44d5-829b-c4b43febc017",
        "cursor": {
          "ref": "98b9d755-d209-4b4e-8618-8edc6b8ed295",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4c59127-0057-4185-8605-3f60dc4c2dc4"
        },
        "item": {
          "id": "1c6a08f6-907d-44d5-829b-c4b43febc017",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fbbc971e-c10a-4b8d-b703-3a20b7ccc38b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b6656a-cd79-40a3-b478-a5bc10be34f8",
        "cursor": {
          "ref": "c1f78981-77cf-4b6b-b510-a57ef018237f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bb6756da-be3b-4957-8a44-0cf204283c9a"
        },
        "item": {
          "id": "e1b6656a-cd79-40a3-b478-a5bc10be34f8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4b4f1b54-961b-42f9-a31f-0bf67adcb313",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05be62ba-2d27-4304-b2f9-54a88dfd88d8",
        "cursor": {
          "ref": "3a49fec9-88ca-4efd-9b01-d93c2dd1352c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2b665b4f-f2d0-4aaa-b147-c52466b08450"
        },
        "item": {
          "id": "05be62ba-2d27-4304-b2f9-54a88dfd88d8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "611fe7f7-5e93-4788-b131-e909e4e5c2c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}